{"version":3,"file":"parseSourceAndMetadata.worker.worker.js","mappings":"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AE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,KAKnqB,SAASC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AAiBvtB,QAAQzI,EAAGxF,OACjD07B,MAAMJ,iBAAiB91B,EAE1B,ECzBH,MAAMo2B,EAAgB,IAAIrvB,IAAI,CAC5B,IACA,MACA,OACA,UACA,QACA,UACA,QACA,YACA,QACA,OACA,SACA,SACA,SACA,OACA,SACA,SAKIsvB,EAAa/P,EACjB,CACEgQ,0BACE,iFACFC,2BACE,yKACFC,mBAAoB,qCACpBC,oBACE,0DACFC,6BACE,sEACFC,8BACE,gDACFC,gCACE,sGACFC,wBACE,oGACFC,6BACE,+KACFC,wBACE,mGACFC,uCACE,uGACFC,wCACE,gFACFC,uCACE,qEACFC,wCACE,iHACFC,sBACE,2HACFC,+BACE,0EACFC,0CACE,8GACFC,0BAA2B,2CAC3BC,oCACE,yKACFC,mBACE,8EACFC,uBACE,2EACFC,gBAAiB,gDACjBC,oCACE,0FACFC,wBACE,0GACFC,oBACE,mEACFC,kBACE,0DACFC,uBACE,iFACFC,0BAA2B,2CAC3BC,eAAgB,0CAChBC,4BACE,0DACFC,6BACE,oGACFC,0BAA2B,2CAC3BC,qBACE,6DACFC,mBAAoB,qDACpBC,sBACE,oHACFC,kBACE,uEACFC,kCACE,uEACFC,uBAAwB,+BACxBC,6BACE,yDACFC,mCACE,wDACFC,qBACE,mEACFC,6BACE,mDACFC,kCACE,oEACFC,gDACE,oHACFC,6BACE,0DACFC,oCACE,oEACFC,wBAAyB,8BAEhBnT,EAAWE,aAcxB,SAASkT,EAAkBx5B,GACzB,MAA2B,SAApBA,EAAKy5B,YAA6C,WAApBz5B,EAAKy5B,UAC3C,CAED,SAASC,EAAqBz3B,GAC5B,OACGA,EAAMsI,OAAS8nB,EAAG13B,QAAUsH,EAAMsI,KAAKuM,UAA4B,SAAhB7U,EAAMjI,KAE7D,CAED,MAAM2/B,GAAoB,CACxBC,MAAO,qBACPC,IAAK,qBACLtvB,KAAM,cACNuvB,UAAW,oBAgBPC,GAAoB,yBCpLpBC,GAAuC,CAC3CC,KAAM,IACNC,IAAK,IACLC,KAAM,IACNC,GAAI,IACJC,GAAI,IACJC,KAAM,IACNC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNjgB,MAAO,IACPkgB,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,QAAS,IACTC,KAAM,IACNC,IAAK,IACLC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,QAAS,IACTC,GAAI,IACJC,IAAK,IACLC,MAAO,IACPC,IAAK,IACLC,QAAS,IACTC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPprB,MAAO,IACPqrB,QAAS,IACTC,KAAM,IACNC,IAAK,IACLC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,QAAS,IACTC,GAAI,IACJC,IAAK,IACLC,OAAQ,IACRC,MAAO,IACPC,IAAK,IACLC,QAAS,IACTC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,MAAO,IACPC,SAAU,IACVC,MAAO,IACPC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,OAAQ,IACRC,KAAM,IACNC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,QAAS,IACTC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,GAAI,IACJC,KAAM,IACNC,IAAK,IACLC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,IAAK,IACLC,IAAK,IACLC,GAAI,IACJC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,OAAQ,IACRC,IAAK,IACLC,KAAM,IACNC,MAAO,IACPC,GAAI,IACJC,MAAO,IACPC,GAAI,IACJC,GAAI,IACJC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,MAAO,KC7OHC,GAAa,gBACbC,GAAiB,QAGjBC,GAAYrjB,EAChB,CACEsjB,iBACE,+DACFC,yBACE,mDACFC,0BAA2B,iDAC3BC,6BACE,2GACFC,oBACE,iEACFC,uBAAwB,6BACxBC,6BACE,oGAEOjkB,EAAWE,aA+BxB,SAASgkB,GAAWC,GAClB,QAAOA,IACa,uBAAhBA,EAAOhgC,MACW,uBAAhBggC,EAAOhgC,KAEd,CAID,SAASigC,GACPD,GAEA,GAAoB,kBAAhBA,EAAOhgC,KACT,OAAOggC,EAAO5vC,KAGhB,GAAoB,sBAAhB4vC,EAAOhgC,KACT,OAAOggC,EAAOE,UAAU9vC,KAAO,IAAM4vC,EAAO5vC,KAAKA,KAGnD,GAAoB,wBAAhB4vC,EAAOhgC,KACT,OACEigC,GAAoBD,EAAOA,QAC3B,IACAC,GAAoBD,EAAOG,UAK/B,MAAM,IAAIhwC,MAAM,6BAA+B6vC,EAAOhgC,KACvD,CAvDDogC,EAAGC,OAAS,IAAIpZ,EAAW,QAAQ,GACnCmZ,EAAGE,OAAS,IAAIrZ,EAAW,SAAS,GACpCmZ,EAAGG,OAAS,IAAItZ,EAAW,kBAAkB,GAAM,GAEnDa,EAAG0Y,QAAU,IAAIptB,EAAU,WAC3B0U,EAAG2Y,QAAU,IAAIrtB,EAAU,UAAW,CAAEH,YAAY,IACpD6U,EAAG4Y,YAAc,IAAIttB,EAAU,cAAe,CAAEF,YAAY,IAC5D4U,EAAG6Y,UAAY,IAAIvtB,EAAU,aAE7B0U,EAAG4Y,YAAY/sB,cAAgB,WAC7BrL,KAAK5Q,MAAMqwB,QAAQhvB,KAAKqnC,EAAGG,QAC3Bj4B,KAAK5Q,MAAMqwB,QAAQhvB,KAAKqnC,EAAGC,QAC3B/3B,KAAK5Q,MAAMswB,aAAc,CAH3B,EAMAF,EAAG6Y,UAAUhtB,cAAgB,SAAUwU,GACrC,MAAMF,EAAM3f,KAAK5Q,MAAMqwB,QAAQvc,MAC1Byc,IAAQmY,EAAGC,QAAUlY,IAAaL,EAAG5Q,OAAU+Q,IAAQmY,EAAGE,QAC7Dh4B,KAAK5Q,MAAMqwB,QAAQvc,MACnBlD,KAAK5Q,MAAMswB,YAAc1f,KAAK4f,eAAiBkY,EAAGG,QAElDj4B,KAAK5Q,MAAMswB,aAAc,CAN7B,EC3CA,MAAM4Y,WAAwBhX,EAAMnhB,eAAAjO,GAAA,SAAAA,GAAA,KAClCwZ,MAAkB,GADgB,KAIlC6sB,MAAkB,GAJgB,KAOlCC,WAAuB,GAPW,KAUlCC,QAAoB,GAVc,KAgBlCC,mBAA+B,EAhBG,EAsBrB,MAAMC,WAA+BjX,EAClDe,YAAY9zB,GACV,OAAO,IAAI2pC,GAAgB3pC,EAC5B,CAEDi0B,YAAY96B,EAAc+6B,EAA2BrF,GACnD,MAAMnwB,EAAQ2S,KAAKwiB,eACnB,GLDsC,KKClCK,EAGF,OAFA7iB,KAAK+iB,mBAAmB11B,EAAOvF,QAC/BuF,EAAMqrC,mBAAmBjoC,KAAK3I,GAIhC07B,MAAMZ,eAAe/nB,WLnBiB,EKqBlCgoB,ILtBkC,EKuB9BA,IAEJ7iB,KAAK8iB,0BAA0Bz1B,EAAOvF,EAAM+6B,EAAarF,GACzDxd,KAAK+iB,mBAAmB11B,EAAOvF,IAEjCuF,EAAMqe,MAAMjb,KAAK3I,ILjBmB,IKmBlC+6B,GAAkCx1B,EAAMkrC,MAAM9nC,KAAK3I,GLlBjB,IKmBlC+6B,GAAwCx1B,EAAMmrC,WAAW/nC,KAAK3I,GLrB5B,IKsBlC+6B,GAAgCx1B,EAAMorC,QAAQhoC,KAAK3I,EACxD,CAEDo7B,oBACE71B,EACAvF,EACA+6B,GAEA,OAAIx1B,EAAMkrC,MAAMxiC,QAAQjO,IAAS,IL7BK,IK8BhC+6B,OL7BgC,IKgCfA,IACFx1B,EAAMmrC,WAAWziC,QAAQjO,IAAS,ELnCjB,IKwClC+6B,GAAkCx1B,EAAMorC,QAAQ1iC,QAAQjO,IAAS,EAC/DuF,EAAMm0B,QAAQzrB,QAAQjO,IAAS,MLnDC,EKqDxB+6B,MLpDwB,EK0DlCA,GAAgCx1B,EAAMqe,MAAM3V,QAAQjO,IAAS,IAI1D07B,MAAMN,uBAAuBroB,UACrC,CAEDuoB,iBAAiB91B,IAEkC,IAA/C0S,KAAK2hB,WAAW,GAAGjW,MAAM3V,QAAQzI,EAAGxF,QACwB,IAA5DkY,KAAK2hB,WAAW,GAAG+W,mBAAmB3iC,QAAQzI,EAAGxF,OAEjD07B,MAAMJ,iBAAiB91B,EAE1B,ECpEY,MAAMsrC,GAA2Bz4B,cAAA,KAC9C04B,OAA2B,EADmB,CAE9CnW,MAAM/zB,GACJqR,KAAK64B,OAAOpoC,KAAK9B,EAClB,CAEDg0B,OACE3iB,KAAK64B,OAAO31B,KACb,CAED41B,eACE,OAAO94B,KAAK64B,OAAO74B,KAAK64B,OAAOltC,OAAS,EACzC,CAEGotC,eACF,OA/CY,EA+CJ/4B,KAAK84B,gBAAgC,CAC9C,CAEGE,eACF,OApDY,EAoDJh5B,KAAK84B,gBAAgC,CAC9C,CAEGG,gBACF,OAtDa,EAsDLj5B,KAAK84B,gBAAiC,CAC/C,CAEGI,YACF,OAzDS,EAyDDl5B,KAAK84B,gBAA6B,CAC3C,EAGI,SAASK,GACdC,EACAC,GAEA,OAAQD,EAnEM,EAmEkB,IAAMC,EApExB,EAoEoD,EACnE,CCzBD,SAASC,GAAWr0B,GAClB,GAAS,MAALA,EAEF,MAAM,IAAIpd,MAAO,cAAaod,YAEhC,OAAOA,CACR,CAED,SAASs0B,GAAOt0B,GACd,IAAKA,EACH,MAAM,IAAIpd,MAAM,cAEnB,CAUD,MAAM2xC,GAAW5lB,EACf,CACE6lB,gCACE,2EACFC,kCACE,8DACFC,gCAAiC,2CACjCC,sBAAuB,oDACvBC,uBACE,qDACFC,6BACE,8DACFC,gBAAiB,sCACjBC,gCACE,oDACFC,iCACE,4DACFC,+BAAgC,uCAChCC,kBAAmB,4BACnBC,wBAAyB,6BACzBC,mBAAoB,sCACpBC,oBAAqB,uCACrBC,kCACE,+DACFC,yBAA0B,6CAC1BC,sBAAuB,mDACvBC,0BACE,wDACFC,+BACE,iEACFC,yBACE,uDACFC,0BACE,2DACFC,wBACE,sDACFC,4BACE,gDACFC,sBAAuB,4CACvBC,wBACE,0DACFC,iCACE,2DACFC,kCACE,6DACFC,yCACE,mFACFC,2BACE,wDACFC,sBACE,6GACFC,kBACE,iFACFC,0BACE,wDACFC,+BACE,iEACFC,2BACE,oFACFC,sCACE,sDACFC,kCACE,+CACFC,+BACE,yDACFC,8BACE,gDACFC,0BACE,oHACFC,uCACE,mFACFC,4BACE,wEACFC,mBACE,+EACFC,yBAA0B,yCAC1BC,8BACE,8CACFC,8BACE,sDACFC,iCACE,oEACFC,kCACE,6FAEOhpB,EAAWE,aAmCxB,SAAS+oB,GAAmBlhC,GAC1B,MACe,YAAbA,GAAuC,WAAbA,GAAsC,cAAbA,CAEtD,CCvLDkkB,EAAGzqB,YAAc,IAAI+V,EAAU,KAAM,CAAEF,YAAY,IAyCnD,MAAM6xB,GAAoB7oB,EACxB,CACE8oB,oBAAqB,6BAEZnpB,EAAWE,aC5CjB,SAAS5B,GAAUxb,EAAqBvO,GAC7C,OAAOuO,EAAQvB,MAAKid,GACdplB,MAAMC,QAAQmlB,GACTA,EAAO,KAAOjqB,EAEdiqB,IAAWjqB,GAGvB,CAEM,SAASgqB,GACdzb,EACAvO,EACA60C,GAEA,MAAM5qB,EAAS1b,EAAQumC,MAAK7qB,GACtBplB,MAAMC,QAAQmlB,GACTA,EAAO,KAAOjqB,EAEdiqB,IAAWjqB,IAItB,OAAIiqB,GAAUplB,MAAMC,QAAQmlB,GACnBA,EAAO,GAAG4qB,GAGZ,IACR,CAED,MAAME,GAAqB,CAAC,UAAW,QAAS,UAC1CC,GAAgC,CAAC,OAAQ,OA4GlCC,GAAgD,CAC3DC,OC7IcC,GACd,cAAcA,EACZC,0BAAyB,QAAExuC,EAAF,MAAWC,IAClC,IAAIwuC,EAAQ,KACZ,IACEA,EAAQ,IAAIlnC,OAAOvH,EAASC,EAD9B,CAEE,MAAOiK,GAAI,CAIb,MAAMzL,EAAO6S,KAAKo9B,mBAAmBD,GAGrC,OAFAhwC,EAAKgwC,MAAQ,CAAEzuC,UAASC,SAEjBxB,CACR,CAEDkwC,yBAAyBl2C,GAEvB,IAAIm2C,EACJ,IAEEA,EAASC,OAAOp2C,EAFlB,CAGE,MAAAq2C,GACAF,EAAS,IACV,CACD,MAAMnwC,EAAO6S,KAAKo9B,mBAAmBE,GAGrC,OAFAnwC,EAAKye,OAAS1f,OAAOiB,EAAKhG,OAASA,GAE5BgG,CACR,CAEDswC,0BAA0Bt2C,GAGxB,MACMgG,EAAO6S,KAAKo9B,mBADF,MAIhB,OAFAjwC,EAAK0e,QAAU3f,OAAOiB,EAAKhG,OAASA,GAE7BgG,CACR,CAEDiwC,mBAAmBj2C,GACjB,OAAO6Y,KAAK09B,aAAav2C,EAAO,UACjC,CAEDw2C,gBAAgBC,GACd,MAAMC,EAAmBD,EAAUz2C,MAE7BsM,EAAOuM,KAAK89B,YAAYF,EAAU31C,MAAO21C,EAAUj0C,IAAI1B,OACvDkI,EAAa6P,KAAK89B,YACtBD,EAAiB51C,MACjB41C,EAAiBl0C,IAAI1B,OAcvB,OAXAkI,EAAWhJ,MAAQ02C,EAAiBE,MAAMC,gBAC1C7tC,EAAWpB,IAAM8uC,EAAiBE,MAAMhvC,IAExC0E,EAAKtD,WAAa6P,KAAKi+B,aACrB9tC,EACA,UACA0tC,EAAiB/yC,IACjB+yC,EAAiBl0C,IAAImB,KAEvB2I,EAAKmqC,UAAYC,EAAiBE,MAAMhvC,IAAI3C,MAAM,GAAI,GAE/C4T,KAAKi+B,aACVxqC,EACA,sBACAmqC,EAAU9yC,IACV8yC,EAAUj0C,IAAImB,IAEjB,CAMDozC,aACE/wC,EACAisC,GAEA5V,MAAM0a,aAAa/wC,EAAMisC,GACzBjsC,EAAKgD,YAAa,CACnB,CAEDguC,iBAAiBhxC,GACH,MAARA,GAAgB6S,KAAKvS,iBAAiBN,GACxC6S,KAAKm+B,iBAAmBhxC,EAA8BhG,OAEtDq8B,MAAM2a,iBAAiBhxC,EAE1B,CAEDixC,6BAA6B/uC,GAC3B,OAASA,EAA2DlI,MACjEiJ,MACJ,CAEDiuC,iBAAiB5qC,GAA4B,IAAA6qC,EAC3C,MACgB,wBAAd7qC,EAAKiE,MACoB,YAAzBjE,EAAKtD,WAAWuH,MACiB,iBAA1BjE,EAAKtD,WAAWhJ,SACvB,OAAAm3C,EAAC7qC,EAAKtD,WAAW4tC,QAAhBO,EAAuBC,cAE3B,CAEDC,gBAAgB/qC,GACd,MAAMmqC,EAAYpa,MAAMgb,gBAAgB/qC,GAClCtM,EAAQsM,EAAKtD,WAAWhJ,MAO9B,OAFA6Y,KAAKy+B,SAASb,EAAUz2C,MAAO,kBAAmBA,GAE3Cy2C,CACR,CAEDc,eACEvxC,KACG+E,GAEHsxB,MAAMkb,eAAevxC,KAAS+E,GAE9B,MAAMysC,EAAsBxxC,EAAKyxC,WAAWvyC,KAAIwyC,GAC9C7+B,KAAK29B,gBAAgBkB,KAEvB1xC,EAAKmD,KAAOquC,EAAoBlqC,OAAOtH,EAAKmD,aAErCnD,EAAKyxC,UACb,CAEDE,gBACEC,EACA1vC,EACAgqC,EACAD,EACA4F,EACAC,GAEAj/B,KAAKk/B,YACH7vC,EACAgqC,EACAD,EACA4F,EACAC,EACA,eACA,GAEE5vC,EAAO8vC,iBAET9vC,EAAOlI,MAAMg4C,eAAiB9vC,EAAO8vC,sBAC9B9vC,EAAO8vC,gBAEhBJ,EAAUzuC,KAAKG,KAAKpB,EACrB,CAED+vC,cAAcC,GACZ,OAAQr/B,KAAK5Q,MAAMsI,MACjB,KAAK8nB,EAAG7T,IACR,KAAK6T,EAAG70B,OACN,OAAOqV,KAAKo9B,mBAAmBp9B,KAAK5Q,MAAMjI,OAE5C,KAAKq4B,EAAG1T,OACN,OAAO9L,KAAKk9B,yBAAyBl9B,KAAK5Q,MAAMjI,OAElD,KAAKq4B,EAAG5T,OACN,OAAO5L,KAAKq9B,yBAAyBr9B,KAAK5Q,MAAMjI,OAElD,KAAKq4B,EAAG3T,QACN,OAAO7L,KAAKy9B,0BAA0Bz9B,KAAK5Q,MAAMjI,OAEnD,KAAKq4B,EAAGhP,MACN,OAAOxQ,KAAKo9B,mBAAmB,MAEjC,KAAK5d,EAAG/O,MACN,OAAOzQ,KAAKo9B,oBAAmB,GAEjC,KAAK5d,EAAG9O,OACN,OAAO1Q,KAAKo9B,oBAAmB,GAEjC,QACE,OAAO5Z,MAAM4b,cAAcC,GAEhC,CAEDC,yBAAyBptC,GACvB,MAAM/E,EAAOq2B,MAAM8b,yBAAyBptC,GAC5C,MACgB,gBAAd/E,EAAKuK,MACLsI,KAAK8R,gBAAgB,SAAU,iBAExB9R,KAAKu/B,sCAAsCpyC,GAE7CA,CACR,CAEDoyC,sCACEpyC,GAEA,MAAMrF,EAAO07B,MAAMgc,iBAAiBryC,GAKpC,cAHOA,EAAKG,GACZH,EAAKrF,KAAOA,EACZqF,EAAKuK,KAAO,oBACLvK,CACR,CAEDsyC,cAActyC,GACZ,OAAK6S,KAAK8R,gBAAgB,SAAU,iBAGf,sBAAd3kB,EAAKuK,KAFH8rB,MAAMic,cAActyC,EAG9B,CAEDqyC,iBAAiBryC,GACf,OAAK6S,KAAK8R,gBAAgB,SAAU,iBAG7B3kB,EAAKrF,KAFH07B,MAAMgc,iBAAiBryC,EAGjC,CAEDuwC,aACEv2C,EACAuQ,EACAgoC,EACAz0C,GAEA,MAAMkC,EAAOq2B,MAAMka,aAAav2C,EAAOuQ,EAAMgoC,EAAUz0C,GAIvD,OAHAkC,EAAK4B,IAAM5B,EAAK4wC,MAAMhvC,WACf5B,EAAK4wC,MAEL5wC,CACR,CAEDwyC,kBACExyC,EACAyyC,EACAC,GAAqB,GAErBrc,MAAMmc,kBAAkBxyC,EAAMyyC,EAAiBC,GAC/C1yC,EAAKgD,WAAgC,mBAAnBhD,EAAKmD,KAAKoH,IAC7B,CAEDwnC,YACE/xC,EACAksC,EACAD,EACA4F,EACA9c,EACAxqB,EACAooC,GAAwB,GAExB,IAAIC,EAAW//B,KAAKggC,YAoBpB,OAnBAD,EAASpyC,KAAOR,EAAKQ,KACrBoyC,EAAWvc,MAAM0b,YACfa,EACA1G,EACAD,EACA4F,EACA9c,EACAxqB,EACAooC,GAEFC,EAASroC,KAAO,4BACTqoC,EAASpyC,KAEhBR,EAAKhG,MAAQ44C,EACA,uBAATroC,IAEFvK,EAAKS,UAAW,GAElB8J,EAAO,mBACAsI,KAAKigC,WAAW9yC,EAAMuK,EAC9B,CAEDwoC,sBAAsBhuC,GACpB,MAAMiuC,EAAgB3c,MAAM0c,sBAAsBhuC,GAIlD,OAHI8N,KAAK8R,gBAAgB,SAAU,mBACjCquB,EAAazoC,KAAO,sBAEdyoC,CACT,CAEDC,6BAA6BluC,GAC3B,MAAMiuC,EAAgB3c,MAAM4c,6BAA6BluC,GAKzD,OAJI8N,KAAK8R,gBAAgB,SAAU,mBACjCquB,EAAazoC,KAAO,qBACpByoC,EAAavyC,UAAW,GAElBuyC,CACT,CAEDE,kBACE1L,EACA0E,EACAD,EACAkH,EACAC,GAEA,MAAMpzC,EAA0Bq2B,MAAM6c,kBACpC1L,EACA0E,EACAD,EACAkH,EACAC,GASF,OANIpzC,IACFA,EAAKuK,KAAO,WAC8B,WAApCvK,EAA2BQ,OAAmBR,EAAKQ,KAAO,QAChER,EAAKqzC,WAAY,GAGXrzC,CACT,CAEDszC,oBACE9L,EACA+K,EACAz0C,EACAq1C,EACAjB,GAEA,MAAMlyC,EAA0Bq2B,MAAMid,oBACpC9L,EACA+K,EACAz0C,EACAq1C,EACAjB,GAQF,OALIlyC,IACFA,EAAKQ,KAAO,OACZR,EAAKuK,KAAO,YAGNvK,CACT,CAEDuzC,aAAavzC,EAAcwzC,GAAiB,GAC1C,OAAY,MAARxzC,GAAgB6S,KAAKvS,iBAAiBN,IACxC6S,KAAK0gC,aAAavzC,EAAKhG,MAAOw5C,GAEvBxzC,GAGFq2B,MAAMkd,aAAavzC,EAAMwzC,EACjC,CAEDC,iCAAiCjM,KAAiBziC,GAC9B,QAAdyiC,EAAKhnC,MAAgC,QAAdgnC,EAAKhnC,KAC9BqS,KAAKge,MAAM2W,EAAK1rC,IAAIhB,MAAOk7B,EAAO/J,oBACzBub,EAAKtlC,OACd2Q,KAAKge,MAAM2W,EAAK1rC,IAAIhB,MAAOk7B,EAAO9J,kBAElCmK,MAAMod,iCAAiCjM,KAASziC,EAEnD,CAED2uC,qBACE1zC,EACA2zC,GAO0C,IAAAC,GAL1Cvd,MAAMqd,qBAAqB1zC,EAAM2zC,GAER,WAArB3zC,EAAKkD,OAAOqH,QACZvK,EAAyCuK,KAAO,mBAChDvK,EAAyCnC,OAASmC,EAAK0N,UAAU,GAC/DmF,KAAK6R,UAAU,sBACf1kB,EAAyC6zC,WAA3C,OAAAD,EACE5zC,EAAK0N,UAAU,IADjBkmC,EACuB,aAGlB5zC,EAAK0N,iBAEL1N,EAAKkD,QAGd,OAAOlD,CACR,CAED8zC,sBACE9zC,GAOkB,qBAAdA,EAAKuK,MAIT8rB,MAAMyd,sBAAsB9zC,EAC7B,CAED+zC,YAAY/zC,GAGV,OAFAq2B,MAAM0d,YAAY/zC,GAEVA,EAAKuK,MACX,IAAK,uBACHvK,EAAKg0C,SAAW,KAChB,MAEF,IAAK,yBAE0B,IAA3Bh0C,EAAKoN,WAAW5O,QACY,6BAA5BwB,EAAKoN,WAAW,GAAG7C,OAEnBvK,EAAKuK,KAAO,uBACZvK,EAAKg0C,SAAWh0C,EAAKoN,WAAW,GAAG4mC,gBAC5Bh0C,EAAKoN,YAMlB,OAAOpN,CACR,CAEDi0C,eACEC,EACA3B,EACAz0C,EACAq2C,EACAlyC,GAEA,MAAMjC,EAAOq2B,MAAM4d,eACjBC,EACA3B,EACAz0C,EACAq2C,EACAlyC,GAGF,GAAIA,EAAMmyC,qBAQR,GALgB,6BAAdp0C,EAAKuK,MACS,2BAAdvK,EAAKuK,OAELvK,EAAKuK,KAAOvK,EAAKuK,KAAK2P,UAAU,IAE9BjY,EAAMoC,KAAM,CACd,MAAMgwC,EAAQxhC,KAAKyhC,gBAAgBt0C,GAEnC,OADAq0C,EAAMrxC,WAAahD,EACZ6S,KAAKigC,WAAWuB,EAAO,kBAC/B,MAEa,qBAAdr0C,EAAKuK,MACS,mBAAdvK,EAAKuK,OAELvK,EAAK2zC,UAAW,GAGlB,OAAO3zC,CACR,CAEDu0C,yBAAyBv0C,GAIvB,MAHkB,oBAAdA,EAAKuK,OACPvK,EAAOA,EAAKgD,YAEPqzB,MAAMke,yBAAyBv0C,EACvC,CAEDw0C,gBAAgBx0C,GACd,MAAqB,oBAAdA,EAAKuK,IACb,CAEDjK,iBAAiBN,GACf,MAAqB,aAAdA,EAAKuK,MAAqC,SAAdvK,EAAKQ,OAAoBR,EAAKkC,MAClE,CAED3B,eAAeP,GACb,OAAOA,EAAKkC,QAAwB,QAAdlC,EAAKQ,MAAgC,QAAdR,EAAKQ,IACnD,GD/UHi0C,ILnDc3E,GACd,cAAcA,EAGZ4E,eACE,IAAIliB,EAAM,GACNmiB,EAAa9hC,KAAK5Q,MAAMouB,IAC5B,OAAS,CACP,GAAIxd,KAAK5Q,MAAMouB,KAAOxd,KAAKrU,OACzB,MAAMqU,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOgvC,GAAUM,wBAG/C,MAAMwK,EAAK/hC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KAE5C,OAAQukB,GACN,QACA,SACE,OAAI/hC,KAAK5Q,MAAMouB,MAAQxd,KAAK5Q,MAAMnH,MACrB,KAAP85C,GAA6B/hC,KAAK5Q,MAAMswB,eACxC1f,KAAK5Q,MAAMouB,IACNxd,KAAKiiC,YAAYziB,EAAG4Y,cAEtB5U,MAAM0e,iBAAiBH,IAEhCpiB,GAAO3f,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,KACxCxd,KAAKiiC,YAAYziB,EAAG2Y,QAASxY,IAEtC,QACEA,GAAO3f,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,KAC/CmC,GAAO3f,KAAKmiC,gBACZL,EAAa9hC,KAAK5Q,MAAMouB,IACxB,MAgBF,QACMtM,EAAU6wB,IACZpiB,GAAO3f,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,KAC/CmC,GAAO3f,KAAKoiC,gBAAe,GAC3BN,EAAa9hC,KAAK5Q,MAAMouB,OAEtBxd,KAAK5Q,MAAMouB,IAGpB,CACF,CAED4kB,eAAeC,GACb,MAAMN,EAAK/hC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KAC5C,IAAImC,EAcJ,QAbE3f,KAAK5Q,MAAMouB,IAEJ,KAAPukB,GACA,KAAA/hC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,QAE/Bxd,KAAK5Q,MAAMouB,IACbmC,EAAM0iB,EAAgB,KAAO,QAE7B1iB,EAAMzzB,OAAO0V,aAAamgC,KAE1B/hC,KAAK5Q,MAAMkzC,QACbtiC,KAAK5Q,MAAM0uB,UAAY9d,KAAK5Q,MAAMouB,IAE3BmC,CACR,CAED4iB,cAAcC,GACZ,IAAI7iB,EAAM,GACNmiB,IAAe9hC,KAAK5Q,MAAMouB,IAC9B,OAAS,CACP,GAAIxd,KAAK5Q,MAAMouB,KAAOxd,KAAKrU,OACzB,MAAMqU,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOzG,oBAG5C,MAAMqlB,EAAK/hC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KAC5C,GAAIukB,IAAOS,EAAO,MACP,KAAPT,GACFpiB,GAAO3f,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,KAC/CmC,GAAO3f,KAAKmiC,gBACZL,EAAa9hC,KAAK5Q,MAAMouB,KACftM,EAAU6wB,IACnBpiB,GAAO3f,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,KAC/CmC,GAAO3f,KAAKoiC,gBAAe,GAC3BN,EAAa9hC,KAAK5Q,MAAMouB,OAEtBxd,KAAK5Q,MAAMouB,GAEhB,CAED,OADAmC,GAAO3f,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,OACxCxd,KAAKiiC,YAAYziB,EAAG70B,OAAQg1B,EACpC,CAEDwiB,gBACE,IAEIM,EAFAlvC,EAAM,GACNmvC,EAAQ,EAERX,EAAK/hC,KAAK6d,MAAM7d,KAAK5Q,MAAMouB,KAE/B,MAAMkiB,IAAa1/B,KAAK5Q,MAAMouB,IAC9B,KAAOxd,KAAK5Q,MAAMouB,IAAMxd,KAAKrU,QAAU+2C,IAAU,IAAI,CAEnD,GADAX,EAAK/hC,KAAK6d,MAAM7d,KAAK5Q,MAAMouB,OAChB,MAAPukB,EAAY,CACC,MAAXxuC,EAAI,GACS,MAAXA,EAAI,IACNA,EAAMA,EAAIovC,OAAO,GACb5L,GAAWt/B,KAAKlE,KAClBkvC,EAASv2C,OAAO02C,cAAc/gC,SAAStO,EAAK,QAG9CA,EAAMA,EAAIovC,OAAO,GACb3L,GAAev/B,KAAKlE,KACtBkvC,EAASv2C,OAAO02C,cAAc/gC,SAAStO,EAAK,OAIhDkvC,EAASI,GAActvC,GAEzB,KACD,CACDA,GAAOwuC,CACR,CACD,OAAKU,IACHziC,KAAK5Q,MAAMouB,IAAMkiB,EACV,IAGV,CASDoD,cACE,IAAIf,EACJ,MAAM95C,EAAQ+X,KAAK5Q,MAAMouB,IACzB,GACEukB,EAAK/hC,KAAK6d,MAAMmkB,aAAahiC,KAAK5Q,MAAMouB,WACjCmD,EAAiBohB,IAAc,KAAPA,GACjC,OAAO/hC,KAAKiiC,YACVziB,EAAG0Y,QACHl4B,KAAK6d,MAAMzxB,MAAMnE,EAAO+X,KAAK5Q,MAAMouB,KAEtC,CAIDulB,qBACE,MAAM51C,EAAO6S,KAAKggC,YASlB,OARIhgC,KAAKqC,MAAMmd,EAAG0Y,SAChB/qC,EAAKrF,KAAOkY,KAAK5Q,MAAMjI,MACd6Y,KAAK5Q,MAAMsI,KAAKuM,QACzB9W,EAAKrF,KAAOkY,KAAK5Q,MAAMsI,KAAKuM,QAE5BjE,KAAKgjC,aAEPhjC,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,gBAC9B,CAID+1C,yBACE,MAAMxD,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SACtBnD,EAAOkY,KAAK+iC,qBAClB,IAAK/iC,KAAKmjC,IAAI3jB,EAAGzS,OAAQ,OAAOjlB,EAEhC,MAAMqF,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAGxC,OAFAkC,EAAKyqC,UAAY9vC,EACjBqF,EAAKrF,KAAOkY,KAAK+iC,qBACV/iC,KAAKigC,WAAW9yC,EAAM,oBAC9B,CAKDi2C,sBAIE,MAAM1D,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAC5B,IAAIkC,EAAO6S,KAAKkjC,yBAChB,GAAkB,sBAAd/1C,EAAKuK,KACP,OAAOvK,EAET,KAAO6S,KAAKmjC,IAAI3jB,EAAGvS,MAAM,CACvB,MAAMo2B,EAAUrjC,KAAK89B,YAAY4B,EAAUz0C,GAC3Co4C,EAAQ3L,OAASvqC,EACjBk2C,EAAQxL,SAAW73B,KAAK+iC,qBACxB51C,EAAO6S,KAAKigC,WAAWoD,EAAS,sBACjC,CACD,OAAOl2C,CACR,CAIDm2C,yBACE,IAAIn2C,EACJ,OAAQ6S,KAAK5Q,MAAMsI,MACjB,KAAK8nB,EAAGlT,OAON,OANAnf,EAAO6S,KAAKggC,YACZhgC,KAAKijC,OACL91C,EAAO6S,KAAKujC,4BAA4Bp2C,GACX,uBAAzBA,EAAKgD,WAAWuH,MAClBsI,KAAKge,MAAM7wB,EAAKlF,MAAOgvC,GAAUC,kBAE5B/pC,EAET,KAAKqyB,EAAG4Y,YACR,KAAK5Y,EAAG70B,OACN,OAAOqV,KAAKo/B,gBAEd,QACE,MAAMp/B,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOgvC,GAAUK,qBAElD,CAMDkM,0BACE,MAAMr2C,EAAO6S,KAAK89B,YAChB99B,KAAK5Q,MAAMuuB,WACX3d,KAAK5Q,MAAMwuB,eAEb,OAAO5d,KAAKi+B,aACV9wC,EACA,qBACA6S,KAAK5Q,MAAMnH,MACX+X,KAAK5Q,MAAMnE,SAEd,CAIDw4C,oBAAoBt2C,GAKlB,OAJA6S,KAAKijC,OACL91C,EAAKgD,WAAa6P,KAAK0jC,kBACvB1jC,KAAK2jC,OAAOnkB,EAAG/S,QAERzM,KAAKigC,WAAW9yC,EAAM,iBAC9B,CAIDo2C,4BACEp2C,GAEA,GAAI6S,KAAKqC,MAAMmd,EAAG/S,QAChBtf,EAAKgD,WAAa6P,KAAKwjC,8BAClB,CACL,MAAMrzC,EAAa6P,KAAK0jC,kBAcxBv2C,EAAKgD,WAAaA,CACnB,CAGD,OAFA6P,KAAK2jC,OAAOnkB,EAAG/S,QAERzM,KAAKigC,WAAW9yC,EAAM,yBAC9B,CAIDy2C,oBACE,MAAMz2C,EAAO6S,KAAKggC,YAClB,OAAIhgC,KAAKmjC,IAAI3jB,EAAGlT,SACdtM,KAAK2jC,OAAOnkB,EAAGnS,UACflgB,EAAK02C,SAAW7jC,KAAK8jC,0BACrB9jC,KAAK2jC,OAAOnkB,EAAG/S,QACRzM,KAAKigC,WAAW9yC,EAAM,wBAE/BA,EAAKrF,KAAOkY,KAAKkjC,yBACjB/1C,EAAKhG,MAAQ6Y,KAAKmjC,IAAI3jB,EAAG7R,IAAM3N,KAAKsjC,yBAA2B,KACxDtjC,KAAKigC,WAAW9yC,EAAM,gBAC9B,CAID42C,yBACErE,EACAz0C,GAEA,MAAMkC,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GACxC,OAAI+U,KAAKqC,MAAMmd,EAAG6Y,YAChBr4B,KAAK2jC,OAAOnkB,EAAG6Y,WACRr4B,KAAKigC,WAAW9yC,EAAM,wBAE/BA,EAAKrF,KAAOkY,KAAKojC,sBACVpjC,KAAKgkC,gCAAgC72C,GAC7C,CAED62C,gCACE72C,GAEA,MAAM6zC,EAA+B,GACrC,MAAQhhC,KAAKqC,MAAMmd,EAAG5Q,SAAW5O,KAAKqC,MAAMmd,EAAG6Y,YAC7C2I,EAAWvwC,KAAKuP,KAAK4jC,qBAKvB,OAHAz2C,EAAK6zC,WAAaA,EAClB7zC,EAAK82C,YAAcjkC,KAAKmjC,IAAI3jB,EAAG5Q,OAC/B5O,KAAK2jC,OAAOnkB,EAAG6Y,WACRr4B,KAAKigC,WAAW9yC,EAAM,oBAC9B,CAID+2C,yBACExE,EACAz0C,GAEA,MAAMkC,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GACxC,OAAI+U,KAAKqC,MAAMmd,EAAG6Y,YAChBr4B,KAAK2jC,OAAOnkB,EAAG6Y,WACRr4B,KAAKigC,WAAW9yC,EAAM,wBAE/BA,EAAKrF,KAAOkY,KAAKojC,sBACjBpjC,KAAK2jC,OAAOnkB,EAAG6Y,WACRr4B,KAAKigC,WAAW9yC,EAAM,qBAC9B,CAKDg3C,kBAAkBzE,EAAkBz0C,GAClC,MAAMkC,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAClCm5C,EAAW,GACXC,EAAiBrkC,KAAK+jC,yBAAyBrE,EAAUz0C,GAC/D,IAAIq5C,EAAiB,KAErB,IAAKD,EAAeJ,YAAa,CAC/BM,EAAU,OACR,OAAQvkC,KAAK5Q,MAAMsI,MACjB,KAAK8nB,EAAG4Y,YAIN,GAHAsH,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SACtB+U,KAAKijC,OACDjjC,KAAKmjC,IAAI3jB,EAAG5Q,OAAQ,CACtB01B,EAAiBtkC,KAAKkkC,yBACpBxE,EACAz0C,GAEF,MAAMs5C,CACP,CACDH,EAAS3zC,KAAKuP,KAAKmkC,kBAAkBzE,EAAUz0C,IAC/C,MAEF,KAAKu0B,EAAG2Y,QACNiM,EAAS3zC,KAAKuP,KAAKo/B,iBACnB,MAEF,KAAK5f,EAAGlT,OAAQ,CACd,MAAMnf,EAAO6S,KAAKggC,YAClBhgC,KAAKijC,OACDjjC,KAAKqC,MAAMmd,EAAGnS,UAChB+2B,EAAS3zC,KAAKuP,KAAKyjC,oBAAoBt2C,IAEvCi3C,EAAS3zC,KAAKuP,KAAKujC,4BAA4Bp2C,IAGjD,KACD,CAED,QACE,MAAM6S,KAAKgjC,aAIbvL,GAAW4M,KAAoB5M,GAAW6M,GAC5CtkC,KAAKge,MAEHsmB,EAAer8C,MACfgvC,GAAUG,4BAEFK,GAAW4M,IAAmB5M,GAAW6M,GACnDtkC,KAAKge,MAEHsmB,EAAer8C,MACfgvC,GAAUE,yBACVQ,GAAoB0M,EAAev8C,OAE3B2vC,GAAW4M,IAAoB5M,GAAW6M,IAGlD3M,GAAoB2M,EAAex8C,QACnC6vC,GAAoB0M,EAAev8C,OAEnCkY,KAAKge,MAEHsmB,EAAer8C,MACfgvC,GAAUE,yBACVQ,GAAoB0M,EAAev8C,MAI1C,CAUD,GARI2vC,GAAW4M,IACbl3C,EAAKq3C,gBAAkBH,EACvBl3C,EAAKs3C,gBAAkBH,IAEvBn3C,EAAKk3C,eAAiBA,EACtBl3C,EAAKm3C,eAAiBA,GAExBn3C,EAAKi3C,SAAWA,EACZpkC,KAAK0kC,aAAa,KACpB,MAAM1kC,KAAKge,MACThe,KAAK5Q,MAAMnH,MACXgvC,GAAUO,8BAId,OAAOC,GAAW4M,GACdrkC,KAAKigC,WAAW9yC,EAAM,eACtB6S,KAAKigC,WAAW9yC,EAAM,aAC3B,CAIDw3C,kBACE,MAAMjF,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAE5B,OADA+U,KAAKijC,OACEjjC,KAAKmkC,kBAAkBzE,EAAUz0C,EACzC,CAMDm0C,cAAcC,GACZ,OAAIr/B,KAAKqC,MAAMmd,EAAG2Y,SACTn4B,KAAK09B,aAAa19B,KAAK5Q,MAAMjI,MAAO,WAClC6Y,KAAKqC,MAAMmd,EAAG4Y,aAChBp4B,KAAK2kC,kBAEZ3kC,KAAK0kC,aAAa,MAClB,KAAA1kC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,MAIjCxd,KAAKiiC,YAAYziB,EAAG4Y,aACbp4B,KAAK2kC,mBAELnhB,MAAM4b,cAAcC,EAE9B,CAED6C,iBAAiB5uC,GACf,GAAI0M,KAAK5Q,MAAMw1C,eAAgB,OAAOphB,MAAM0e,iBAAiB5uC,GAE7D,MAAMmsB,EAAUzf,KAAK4f,aAErB,GAAIH,IAAYqY,EAAGG,OACjB,OAAOj4B,KAAK6hC,eAGd,GAAIpiB,IAAYqY,EAAGC,QAAUtY,IAAYqY,EAAGE,OAAQ,CAClD,GAAItX,EAAkBptB,GACpB,OAAO0M,KAAK8iC,cAGd,GAAa,KAATxvC,EAEF,QADE0M,KAAK5Q,MAAMouB,IACNxd,KAAKiiC,YAAYziB,EAAG6Y,WAG7B,IACY,KAAT/kC,GAA6C,KAATA,IACrCmsB,IAAYqY,EAAGC,OAEf,OAAO/3B,KAAKuiC,cAAcjvC,EAE7B,CAED,OACW,KAATA,GACA0M,KAAK5Q,MAAMswB,aACX,KAAA1f,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,MAErCxd,KAAK5Q,MAAMouB,IACNxd,KAAKiiC,YAAYziB,EAAG4Y,cAGtB5U,MAAM0e,iBAAiB5uC,EAC/B,CAED+X,cAAcwU,GACZ,GAAI7f,KAAKqC,MAAMmd,EAAGlT,QAAS,CACzB,MAAMsT,EAAa5f,KAAK4f,aACpBA,IAAekY,EAAGC,OACpB/3B,KAAK5Q,MAAMqwB,QAAQhvB,KAAKqnC,EAAG9Y,iBAClBY,IAAekY,EAAGG,OAC3Bj4B,KAAK5Q,MAAMqwB,QAAQhvB,KAAKqnC,EAAG5Y,eAE3BsE,MAAMnY,cAAcwU,GAEtB7f,KAAK5Q,MAAMswB,aAAc,CAT3B,KAUO,KAAI1f,KAAKqC,MAAMmd,EAAG5Q,QAAUiR,IAAaL,EAAG4Y,YAKjD,OAAO5U,MAAMnY,cAAcwU,GAJ3B7f,KAAK5Q,MAAMqwB,QAAQ9zB,QAAU,EAC7BqU,KAAK5Q,MAAMqwB,QAAQhvB,KAAKqnC,EAAGE,QAC3Bh4B,KAAK5Q,MAAMswB,aAAc,CAG1B,CACF,GKheHmlB,KP8Cc5H,GACd,cAAcA,EAAW98B,eAAAjO,GAAA,SAAAA,GAAA,KAIvB4yC,gBAA8C91C,CAJvB,CAMvB+1C,kBACE,OAAOxhB,CACR,CAEDyhB,mBACE,OAAOhlC,KAAK8R,gBAAgB,OAAQ,QAA8B,SAApB9R,KAAK8kC,UACpD,CAEDG,mBACE,QAASjlC,KAAK8R,gBAAgB,OAAQ,QACvC,CAEDmwB,YAAYvqC,EAAiBiO,GAU3B,OAREjO,IAAS8nB,EAAG70B,QACZ+M,IAAS8nB,EAAG1S,MACZpV,IAAS8nB,EAAG9R,2BAEY1e,IAApBgR,KAAK8kC,aACP9kC,KAAK8kC,WAAa,MAGfthB,MAAMye,YAAYvqC,EAAMiO,EAChC,CAEDuM,WAAWC,GACT,QAAwBnjB,IAApBgR,KAAK8kC,WAA0B,CAEjC,MAAM5iC,EAAUglB,GAAkBtkB,KAAKuP,EAAQhrB,OAC/C,GAAK+a,EAEE,GAAmB,SAAfA,EAAQ,GACjBlC,KAAK8kC,WAAa,WACb,IAAmB,WAAf5iC,EAAQ,GAGjB,MAAM,IAAIra,MAAM,0BAFhBmY,KAAK8kC,WAAa,QAGnB,CACF,CACD,OAAOthB,MAAMtR,WAAWC,EACzB,CAED+yB,yBAAyBC,GACvB,MAAMC,EAAYplC,KAAK5Q,MAAMi2C,OAC7BrlC,KAAK5Q,MAAMi2C,QAAS,EACpBrlC,KAAK2jC,OAAOwB,GAAO3lB,EAAGzS,OAEtB,MAAMrV,EAAOsI,KAAKslC,gBAElB,OADAtlC,KAAK5Q,MAAMi2C,OAASD,EACb1tC,CACR,CAED6tC,qBACE,MAAMp4C,EAAO6S,KAAKggC,YACZwF,EAAYxlC,KAAK5Q,MAAMnH,MAO7B,OANA+X,KAAKijC,OACLjjC,KAAKylC,iBAAiB,UAElBzlC,KAAK5Q,MAAMquB,aAAe+nB,EAAY,GACxCxlC,KAAKge,MAAMwnB,EAAW7hB,EAAWwC,oCAE/BnmB,KAAKmjC,IAAI3jB,EAAG7S,SACdxf,EAAKhG,MAAQ6Y,KAAK0jC,kBAClB1jC,KAAK2jC,OAAOnkB,EAAG5S,QACR5M,KAAKigC,WAAW9yC,EAAM,sBAEtB6S,KAAKigC,WAAW9yC,EAAM,oBAEhC,CAEDu4C,uCACE,MAAMN,EAAYplC,KAAK5Q,MAAMi2C,OAC7BrlC,KAAK5Q,MAAMi2C,QAAS,EACpBrlC,KAAK2jC,OAAOnkB,EAAGzS,OACf,IAAIrV,EAAO,KACPiuC,EAAY,KAWhB,OAVI3lC,KAAKqC,MAAMmd,EAAG9Q,SAChB1O,KAAK5Q,MAAMi2C,OAASD,EACpBO,EAAY3lC,KAAKulC,uBAEjB7tC,EAAOsI,KAAKslC,gBACZtlC,KAAK5Q,MAAMi2C,OAASD,EAChBplC,KAAKqC,MAAMmd,EAAG9Q,UAChBi3B,EAAY3lC,KAAKulC,uBAGd,CAAC7tC,EAAMiuC,EACf,CAEDC,sBAAsBz4C,GAGpB,OAFA6S,KAAKijC,OACLjjC,KAAK6lC,sBAAsB14C,GAAkB,GACtC6S,KAAKigC,WAAW9yC,EAAM,eAC9B,CAED24C,yBACE34C,GAEA6S,KAAKijC,OAEL,MAAM31C,EAAMH,EAAKG,GAAK0S,KAAK+lC,kBAErBC,EAAWhmC,KAAKggC,YAChBiG,EAAgBjmC,KAAKggC,YAEvBhgC,KAAK0kC,aAAa,KACpBsB,EAAS7G,eAAiBn/B,KAAKkmC,oCAE/BF,EAAS7G,eAAiB,KAG5Bn/B,KAAK2jC,OAAOnkB,EAAG7S,QACf,MAAM3J,EAAMhD,KAAKmmC,8BAyBjB,OAxBAH,EAAS51C,OAAS4S,EAAI5S,OACtB41C,EAASI,KAAOpjC,EAAIojC,KACpBJ,EAAShmC,KAAOgD,EAAIkN,MACpBlQ,KAAK2jC,OAAOnkB,EAAG5S,SAIbo5B,EAASK,WAETl5C,EAAKw4C,WACH3lC,KAAK0lC,uCAETO,EAAcK,eAAiBtmC,KAAKigC,WAClC+F,EACA,0BAGF14C,EAAGg5C,eAAiBtmC,KAAKigC,WAAWgG,EAAe,kBAEnDjmC,KAAKumC,iBAAiBj5C,GACtB0S,KAAKwmC,YAELxmC,KAAK3S,MAAMu1B,YAAYz1B,EAAKG,GAAGxF,KFnRD2+C,KEmR6Bt5C,EAAKG,GAAGrF,OAE5D+X,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAEDu5C,iBACEv5C,EACAw5C,GAEA,GAAI3mC,KAAKqC,MAAMmd,EAAGpP,QAChB,OAAOpQ,KAAK4lC,sBAAsBz4C,GAC7B,GAAI6S,KAAKqC,MAAMmd,EAAGjQ,WACvB,OAAOvP,KAAK8lC,yBAAyB34C,GAChC,GAAI6S,KAAKqC,MAAMmd,EAAG3P,MACvB,OAAO7P,KAAK4mC,yBAAyBz5C,GAChC,GAAI6S,KAAK6mC,cAAc,UAC5B,OAAI7mC,KAAKqC,MAAMmd,EAAGvS,KACTjN,KAAK8mC,8BAA8B35C,IAEtCw5C,GACF3mC,KAAKge,MAAMhe,KAAK5Q,MAAMquB,aAAckG,EAAWyB,qBAE1CplB,KAAK+mC,uBAAuB55C,IAEhC,GAAI6S,KAAKgnC,aAAa,QAC3B,OAAOhnC,KAAKinC,0BAA0B95C,GACjC,GAAI6S,KAAKgnC,aAAa,UAC3B,OAAOhnC,KAAKknC,2BAA2B/5C,GAClC,GAAI6S,KAAKgnC,aAAa,aAC3B,OAAOhnC,KAAKmnC,0BAA0Bh6C,GACjC,GAAI6S,KAAKqC,MAAMmd,EAAGlP,SACvB,OAAOtQ,KAAKonC,kCAAkCj6C,EAAMw5C,GAEpD,MAAM3mC,KAAKgjC,YAEd,CAED4D,yBACEz5C,GAQA,OANA6S,KAAKijC,OACL91C,EAAKG,GAAK0S,KAAKqnC,oCACc,GAE7BrnC,KAAK3S,MAAMu1B,YAAYz1B,EAAKG,GAAGxF,KF7UHw/C,EE6UmBn6C,EAAKG,GAAGrF,OACvD+X,KAAKwmC,YACExmC,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAED45C,uBAAuB55C,GACrB6S,KAAK3S,MAAMq1B,MFlYiB,GEoYxB1iB,KAAKqC,MAAMmd,EAAG70B,QAChBwC,EAAKG,GAAK0S,KAAKo/B,gBAEfjyC,EAAKG,GAAK0S,KAAK+lC,kBAGjB,MAAMwB,EAAYp6C,EAAKmD,KAAO0P,KAAKggC,YAC7B1vC,EAAQi3C,EAASj3C,KAAO,GAE9B,IADA0P,KAAK2jC,OAAOnkB,EAAGlT,SACPtM,KAAKqC,MAAMmd,EAAG/S,SAAS,CAC7B,IAAI86B,EAAWvnC,KAAKggC,YAEhBhgC,KAAKqC,MAAMmd,EAAGjP,UAChBvQ,KAAKijC,OACAjjC,KAAKgnC,aAAa,SAAYhnC,KAAKqC,MAAMmd,EAAG3O,UAC/C7Q,KAAKge,MACHhe,KAAK5Q,MAAMquB,aACXkG,EAAWuB,qCAGfllB,KAAKwnC,YAAYD,KAEjBvnC,KAAKylC,iBACH,UACA9hB,EAAW8C,qCAGb8gB,EAAWvnC,KAAK0mC,iBAAiBa,GAAU,IAG7Cj3C,EAAKG,KAAK82C,EACX,CAEDvnC,KAAK3S,MAAMs1B,OAEX3iB,KAAK2jC,OAAOnkB,EAAG/S,QAEfzM,KAAKigC,WAAWsH,EAAU,kBAE1B,IAAI55C,EAAO,KACP85C,GAAkB,EA6BtB,OA5BAn3C,EAAK6E,SAAQuyC,KAnSnB,SAAwBA,GACtB,MACuB,gCAArBA,EAAYhwC,MACU,6BAArBgwC,EAAYhwC,QACTgwC,EAAYtuC,aACsB,cAAjCsuC,EAAYtuC,YAAY1B,MACU,yBAAjCgwC,EAAYtuC,YAAY1B,KAEjC,CA4RWiwC,CAAeD,GAQa,yBAArBA,EAAYhwC,OACjB+vC,GACFznC,KAAKge,MACH0pB,EAAYz/C,MACZ07B,EAAWM,+BAGF,OAATt2B,GACFqS,KAAKge,MACH0pB,EAAYz/C,MACZ07B,EAAWE,4BAGfl2B,EAAO,WACP85C,GAAkB,IArBL,aAAT95C,GACFqS,KAAKge,MACH0pB,EAAYz/C,MACZ07B,EAAWE,4BAGfl2B,EAAO,KAgBR,IAGHR,EAAKQ,KAAOA,GAAQ,WACbqS,KAAKigC,WAAW9yC,EAAM,gBAC9B,CAEDi6C,kCACEj6C,EACAw5C,GAIA,GAFA3mC,KAAK2jC,OAAOnkB,EAAGlP,SAEXtQ,KAAKmjC,IAAI3jB,EAAG3rB,UAYd,OAXImM,KAAKqC,MAAMmd,EAAGjQ,YAAcvP,KAAKqC,MAAMmd,EAAGpP,QAG5CjjB,EAAKiM,YAAc4G,KAAK0mC,iBAAiB1mC,KAAKggC,cAG9C7yC,EAAKiM,YAAc4G,KAAKslC,gBACxBtlC,KAAKwmC,aAEPr5C,EAAK1E,SAAU,EAERuX,KAAKigC,WAAW9yC,EAAM,4BAE7B,GACE6S,KAAKqC,MAAMmd,EAAG1P,SACd9P,KAAK4nC,UACH5nC,KAAKgnC,aAAa,SAAWhnC,KAAKgnC,aAAa,gBAC9CL,EACH,CACA,MAAM57B,EAAQ/K,KAAK5Q,MAAMjI,MACnB0gD,EAAa/gB,GAAkB/b,GAErC,MAAM/K,KAAKge,MACThe,KAAK5Q,MAAMnH,MACX07B,EAAW6C,6BACXzb,EACA88B,EAEH,CAED,GACE7nC,KAAKqC,MAAMmd,EAAG3P,OACd7P,KAAKqC,MAAMmd,EAAGjQ,YACdvP,KAAKqC,MAAMmd,EAAGpP,SACdpQ,KAAKgnC,aAAa,UAKlB,OAHA75C,EAAKiM,YAAc4G,KAAK0mC,iBAAiB1mC,KAAKggC,aAC9C7yC,EAAK1E,SAAU,EAERuX,KAAKigC,WAAW9yC,EAAM,4BACxB,GACL6S,KAAKqC,MAAMmd,EAAG7Q,OACd3O,KAAKqC,MAAMmd,EAAGlT,SACdtM,KAAKgnC,aAAa,cAClBhnC,KAAKgnC,aAAa,SAClBhnC,KAAKgnC,aAAa,UAelB,MAZkB,4BADlB75C,EAAO6S,KAAKkhC,YAAY/zC,IACfuK,OAGPvK,EAAKuK,KAAO,oBAEZvK,EAAK1E,SAAU,SACR0E,EAAK26C,YAId36C,EAAKuK,KAAO,UAAYvK,EAAKuK,KAEtBvK,EAIX,MAAM6S,KAAKgjC,YACZ,CAED8D,8BACE35C,GAOA,OALA6S,KAAKijC,OACLjjC,KAAKylC,iBAAiB,WACtBt4C,EAAKm5C,eAAiBtmC,KAAK+nC,0BAC3B/nC,KAAKwmC,YAEExmC,KAAKigC,WAAW9yC,EAAM,uBAC9B,CAED85C,0BACE95C,GAMA,OAJA6S,KAAKijC,OACLjjC,KAAKgoC,mBAAmB76C,GAExBA,EAAKuK,KAAO,mBACLvK,CACR,CAED+5C,2BACE/5C,GAMA,OAJA6S,KAAKijC,OACLjjC,KAAKioC,oBAAoB96C,GAAM,GAE/BA,EAAKuK,KAAO,oBACLvK,CACR,CAEDg6C,0BACEh6C,GAIA,OAFA6S,KAAKijC,OACLjjC,KAAK6lC,sBAAsB14C,GACpB6S,KAAKigC,WAAW9yC,EAAM,mBAC9B,CAID04C,sBACE14C,EACA+6C,GAAoB,GAuBpB,GArBA/6C,EAAKG,GAAK0S,KAAKmoC,+BACED,GACG,GAGpBloC,KAAK3S,MAAMu1B,YACTz1B,EAAKG,GAAGxF,KACRogD,EF1hB0BZ,GAFAA,EE6hB1Bn6C,EAAKG,GAAGrF,OAGN+X,KAAK0kC,aAAa,KACpBv3C,EAAKgyC,eAAiBn/B,KAAKkmC,oCAE3B/4C,EAAKgyC,eAAiB,KAGxBhyC,EAAKi7C,QAAU,GACfj7C,EAAKk7C,WAAa,GAClBl7C,EAAKm7C,OAAS,GAEVtoC,KAAKmjC,IAAI3jB,EAAGnP,UACd,GACEljB,EAAKi7C,QAAQ33C,KAAKuP,KAAKuoC,oCACfL,GAAWloC,KAAKmjC,IAAI3jB,EAAG3S,QAGnC,GAAI7M,KAAKgnC,aAAa,UAAW,CAC/BhnC,KAAKijC,OACL,GACE91C,EAAKm7C,OAAO73C,KAAKuP,KAAKuoC,mCACfvoC,KAAKmjC,IAAI3jB,EAAG3S,OACtB,CAED,GAAI7M,KAAKgnC,aAAa,cAAe,CACnChnC,KAAKijC,OACL,GACE91C,EAAKk7C,WAAW53C,KAAKuP,KAAKuoC,mCACnBvoC,KAAKmjC,IAAI3jB,EAAG3S,OACtB,CAED1f,EAAKmD,KAAO0P,KAAKwoC,oBAAoB,CACnCC,YAAaP,EACbQ,YAAY,EACZC,aAAa,EACbC,WAAYV,EACZW,cAAc,GAEjB,CAEDN,4BACE,MAAMp7C,EAAO6S,KAAKggC,YASlB,OAPA7yC,EAAKG,GAAK0S,KAAK8oC,mCACX9oC,KAAK0kC,aAAa,KACpBv3C,EAAKgyC,eAAiBn/B,KAAK+oC,sCAE3B57C,EAAKgyC,eAAiB,KAGjBn/B,KAAKigC,WAAW9yC,EAAM,mBAC9B,CAED67C,mBAAmB77C,GAEjB,OADA6S,KAAK6lC,sBAAsB14C,GACpB6S,KAAKigC,WAAW9yC,EAAM,uBAC9B,CAED87C,mBAAmBloB,GACJ,MAATA,GACF/gB,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAO07B,EAAWuC,6BAE3C,CAEDgjB,kBAAkBnoB,EAAc91B,EAAkBmO,GAC3CsqB,EAAc96B,IAAIm4B,IAEvB/gB,KAAKge,MACH/yB,EACAmO,EACIuqB,EAAWG,mBACXH,EAAWsC,uBACflF,EAEH,CAEDonB,8BACEgB,EACA/vC,GAGA,OADA4G,KAAKkpC,kBAAkBlpC,KAAK5Q,MAAMjI,MAAO6Y,KAAK5Q,MAAMnH,MAAOmR,GACpD4G,KAAK+lC,gBAAgBoD,EAC7B,CAIDnB,mBAAmB76C,GAgBjB,OAfAA,EAAKG,GAAK0S,KAAKmoC,+BACC,GACI,GAEpBnoC,KAAK3S,MAAMu1B,YAAYz1B,EAAKG,GAAGxF,KF1nBHw/C,EE0nBuBn6C,EAAKG,GAAGrF,OAEvD+X,KAAK0kC,aAAa,KACpBv3C,EAAKgyC,eAAiBn/B,KAAKkmC,oCAE3B/4C,EAAKgyC,eAAiB,KAGxBhyC,EAAKi8C,MAAQppC,KAAKklC,yBAAyB1lB,EAAG7R,IAC9C3N,KAAKwmC,YAEExmC,KAAKigC,WAAW9yC,EAAM,YAC9B,CAED86C,oBACE96C,EACAk8C,GA2BA,OAzBArpC,KAAKylC,iBAAiB,QACtBt4C,EAAKG,GAAK0S,KAAKmoC,+BACC,GACI,GAEpBnoC,KAAK3S,MAAMu1B,YAAYz1B,EAAKG,GAAGxF,KFjpBHw/C,EEipBuBn6C,EAAKG,GAAGrF,OAEvD+X,KAAK0kC,aAAa,KACpBv3C,EAAKgyC,eAAiBn/B,KAAKkmC,oCAE3B/4C,EAAKgyC,eAAiB,KAIxBhyC,EAAKm8C,UAAY,KACbtpC,KAAKqC,MAAMmd,EAAGzS,SAChB5f,EAAKm8C,UAAYtpC,KAAKklC,yBAAyB1lB,EAAGzS,QAGpD5f,EAAKo8C,SAAW,KACXF,IACHl8C,EAAKo8C,SAAWvpC,KAAKklC,yBAAyB1lB,EAAG7R,KAEnD3N,KAAKwmC,YAEExmC,KAAKigC,WAAW9yC,EAAM,aAC9B,CAIDq8C,uBAAuBC,GAA2B,GAChD,MAAMC,EAAY1pC,KAAK5Q,MAAMnH,MAEvBkF,EAAO6S,KAAKggC,YAEZ2J,EAAW3pC,KAAK4pC,oBAEhBC,EAAQ7pC,KAAKqnC,qCAcnB,OAbAl6C,EAAKrF,KAAO+hD,EAAM/hD,KAClBqF,EAAKw8C,SAAWA,EAChBx8C,EAAK28C,MAAQD,EAAMvD,eAEftmC,KAAKqC,MAAMmd,EAAG7R,KAChB3N,KAAKmjC,IAAI3jB,EAAG7R,IACZxgB,EAAK1E,QAAUuX,KAAKslC,iBAEhBmE,GACFzpC,KAAKge,MAAM0rB,EAAW/lB,EAAWwB,yBAI9BnlB,KAAKigC,WAAW9yC,EAAM,gBAC9B,CAED+4C,oCACE,MAAMd,EAAYplC,KAAK5Q,MAAMi2C,OACvBl4C,EAAO6S,KAAKggC,YAClB7yC,EAAKiD,OAAS,GAEd4P,KAAK5Q,MAAMi2C,QAAS,EAGhBrlC,KAAK0kC,aAAa,MAAQ1kC,KAAKqC,MAAMmd,EAAG4Y,aAC1Cp4B,KAAKijC,OAELjjC,KAAKgjC,aAGP,IAAI+G,GAAkB,EAEtB,EAAG,CACD,MAAMC,EAAgBhqC,KAAKwpC,uBAAuBO,GAElD58C,EAAKiD,OAAOK,KAAKu5C,GAEbA,EAAcvhD,UAChBshD,GAAkB,GAGf/pC,KAAK0kC,aAAa,MACrB1kC,KAAK2jC,OAAOnkB,EAAG3S,MAVnB,QAYU7M,KAAK0kC,aAAa,MAK5B,OAJA1kC,KAAKiqC,iBAAiB,KAEtBjqC,KAAK5Q,MAAMi2C,OAASD,EAEbplC,KAAKigC,WAAW9yC,EAAM,2BAC9B,CAED47C,sCACE,MAAM57C,EAAO6S,KAAKggC,YACZoF,EAAYplC,KAAK5Q,MAAMi2C,OAC7Bl4C,EAAKiD,OAAS,GAEd4P,KAAK5Q,MAAMi2C,QAAS,EAEpBrlC,KAAKiqC,iBAAiB,KACtB,MAAMC,EAAwBlqC,KAAK5Q,MAAM+6C,mBAEzC,IADAnqC,KAAK5Q,MAAM+6C,oBAAqB,GACxBnqC,KAAK0kC,aAAa,MACxBv3C,EAAKiD,OAAOK,KAAKuP,KAAKslC,iBACjBtlC,KAAK0kC,aAAa,MACrB1kC,KAAK2jC,OAAOnkB,EAAG3S,OAQnB,OALA7M,KAAK5Q,MAAM+6C,mBAAqBD,EAChClqC,KAAKiqC,iBAAiB,KAEtBjqC,KAAK5Q,MAAMi2C,OAASD,EAEbplC,KAAKigC,WAAW9yC,EAAM,6BAC9B,CAEDi9C,+CACE,MAAMj9C,EAAO6S,KAAKggC,YACZoF,EAAYplC,KAAK5Q,MAAMi2C,OAM7B,IALAl4C,EAAKiD,OAAS,GAEd4P,KAAK5Q,MAAMi2C,QAAS,EAEpBrlC,KAAKiqC,iBAAiB,MACdjqC,KAAK0kC,aAAa,MACxBv3C,EAAKiD,OAAOK,KAAKuP,KAAKqqC,wCACjBrqC,KAAK0kC,aAAa,MACrB1kC,KAAK2jC,OAAOnkB,EAAG3S,OAOnB,OAJA7M,KAAKiqC,iBAAiB,KAEtBjqC,KAAK5Q,MAAMi2C,OAASD,EAEbplC,KAAKigC,WAAW9yC,EAAM,6BAC9B,CAEDm9C,yBACE,MAAMn9C,EAAO6S,KAAKggC,YAIlB,GAHAhgC,KAAKylC,iBAAiB,aAEtBt4C,EAAKi7C,QAAU,GACXpoC,KAAKmjC,IAAI3jB,EAAGnP,UACd,GACEljB,EAAKi7C,QAAQ33C,KAAKuP,KAAKuoC,mCAChBvoC,KAAKmjC,IAAI3jB,EAAG3S,QAWvB,OARA1f,EAAKmD,KAAO0P,KAAKwoC,oBAAoB,CACnCC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGT7oC,KAAKigC,WAAW9yC,EAAM,0BAC9B,CAEDo9C,6BACE,OAAOvqC,KAAKqC,MAAMmd,EAAG7T,MAAQ3L,KAAKqC,MAAMmd,EAAG70B,QACvCqV,KAAKo/B,gBACLp/B,KAAK+lC,iBAAgB,EAC1B,CAEDyE,2BACEr9C,EACAs9C,EACAd,GAgBA,OAdAx8C,EAAKu9C,OAASD,EAGVzqC,KAAK2qC,YAAYjzC,OAAS8nB,EAAGzS,OAC/B5f,EAAKG,GAAK0S,KAAKuqC,6BACfp9C,EAAKlE,IAAM+W,KAAKklC,6BAEhB/3C,EAAKG,GAAK,KACVH,EAAKlE,IAAM+W,KAAKslC,iBAElBtlC,KAAK2jC,OAAOnkB,EAAGpT,UACfjf,EAAKhG,MAAQ6Y,KAAKklC,2BAClB/3C,EAAKw8C,SAAWA,EAET3pC,KAAKigC,WAAW9yC,EAAM,oBAC9B,CAEDy9C,gCACEz9C,EACAs9C,GAoBA,OAlBAt9C,EAAKu9C,OAASD,EAEdt9C,EAAKG,GAAK0S,KAAKuqC,6BACfvqC,KAAK2jC,OAAOnkB,EAAGpT,UACfpM,KAAK2jC,OAAOnkB,EAAGpT,UACXpM,KAAK0kC,aAAa,MAAQ1kC,KAAKqC,MAAMmd,EAAG7S,SAC1Cxf,EAAKkC,QAAS,EACdlC,EAAK2zC,UAAW,EAChB3zC,EAAKhG,MAAQ6Y,KAAK6qC,6BAChB7qC,KAAK89B,YAAY3wC,EAAKlF,MAAOkF,EAAKxD,IAAI1B,UAGxCkF,EAAKkC,QAAS,EACV2Q,KAAKmjC,IAAI3jB,EAAGtS,YACd/f,EAAK2zC,UAAW,GAElB3zC,EAAKhG,MAAQ6Y,KAAKklC,4BAEbllC,KAAKigC,WAAW9yC,EAAM,yBAC9B,CAED09C,6BACE19C,GAoBA,IAlBAA,EAAKiD,OAAS,GACdjD,EAAKi5C,KAAO,KACZj5C,EAAKgyC,eAAiB,KACtBhyC,EAAK6S,KAAO,KAERA,KAAK0kC,aAAa,OACpBv3C,EAAKgyC,eAAiBn/B,KAAKkmC,qCAG7BlmC,KAAK2jC,OAAOnkB,EAAG7S,QACX3M,KAAKqC,MAAMmd,EAAGtP,SAChB/iB,EAAK6S,KAAOA,KAAK8qC,4BAAuC,GAExD39C,EAAK6S,KAAKlY,KAAO,KACZkY,KAAKqC,MAAMmd,EAAG5S,SACjB5M,KAAK2jC,OAAOnkB,EAAG3S,SAGX7M,KAAKqC,MAAMmd,EAAG5S,UAAY5M,KAAKqC,MAAMmd,EAAGnS,WAC9ClgB,EAAKiD,OAAOK,KAAKuP,KAAK8qC,4BAA2B,IAC5C9qC,KAAKqC,MAAMmd,EAAG5S,SACjB5M,KAAK2jC,OAAOnkB,EAAG3S,OAUnB,OANI7M,KAAKmjC,IAAI3jB,EAAGnS,YACdlgB,EAAKi5C,KAAOpmC,KAAK8qC,4BAA2B,IAE9C9qC,KAAK2jC,OAAOnkB,EAAG5S,QACfzf,EAAKk5C,WAAarmC,KAAKklC,2BAEhBllC,KAAKigC,WAAW9yC,EAAM,yBAC9B,CAED49C,gCACE59C,EACAs9C,GAEA,MAAMO,EAAYhrC,KAAKggC,YAGvB,OAFA7yC,EAAKu9C,OAASD,EACdt9C,EAAKhG,MAAQ6Y,KAAK6qC,6BAA6BG,GACxChrC,KAAKigC,WAAW9yC,EAAM,yBAC9B,CAEDq7C,qBAAoB,YAClBC,EADkB,WAElBC,EAFkB,YAGlBC,EAHkB,WAIlBC,EAJkB,aAKlBC,IAQA,MAAMzD,EAAYplC,KAAK5Q,MAAMi2C,OAC7BrlC,KAAK5Q,MAAMi2C,QAAS,EAEpB,MAAMqE,EAAY1pC,KAAKggC,YAOvB,IAAIiL,EACAC,EANJxB,EAAUyB,eAAiB,GAC3BzB,EAAUv2B,WAAa,GACvBu2B,EAAU0B,SAAW,GACrB1B,EAAU2B,cAAgB,GAI1B,IAAIC,GAAU,EAad,IAZI5C,GAAc1oC,KAAKqC,MAAMmd,EAAGjT,YAC9BvM,KAAK2jC,OAAOnkB,EAAGjT,WACf0+B,EAAWzrB,EAAG9S,UACdw+B,GAAQ,IAERlrC,KAAK2jC,OAAOnkB,EAAGlT,QACf2+B,EAAWzrB,EAAG/S,OACdy+B,GAAQ,GAGVxB,EAAUwB,MAAQA,GAEVlrC,KAAKqC,MAAM4oC,IAAW,CAC5B,IAAIR,GAAW,EACXc,EAAsB,KACtBC,EAAwB,KAC5B,MAAMr+C,EAAO6S,KAAKggC,YAElB,GAAI4I,GAAc5oC,KAAKgnC,aAAa,SAAU,CAC5C,MAAM2D,EAAY3qC,KAAK2qC,YAEnBA,EAAUjzC,OAAS8nB,EAAGzS,OAAS49B,EAAUjzC,OAAS8nB,EAAGtS,WACvDlN,KAAKijC,OACLsI,EAAavrC,KAAK5Q,MAAMnH,MACxBwgD,GAAc,EAEjB,CAED,GAAIA,GAAezoC,KAAKgnC,aAAa,UAAW,CAC9C,MAAM2D,EAAY3qC,KAAK2qC,YAGnBA,EAAUjzC,OAAS8nB,EAAGzS,OAAS49B,EAAUjzC,OAAS8nB,EAAGtS,WACvDlN,KAAKijC,OACLwH,GAAW,EAEd,CAED,MAAMd,EAAW3pC,KAAK4pC,oBAEtB,GAAI5pC,KAAKmjC,IAAI3jB,EAAGvT,UACI,MAAds/B,GACFvrC,KAAKgjC,WAAWuI,GAEdvrC,KAAKmjC,IAAI3jB,EAAGvT,WACV09B,GACF3pC,KAAKgjC,WAAW2G,EAAS1hD,OAE3ByhD,EAAU2B,cAAc56C,KACtBuP,KAAK4qC,gCAAgCz9C,EAAMs9C,KAG7Cf,EAAU0B,SAAS36C,KACjBuP,KAAKwqC,2BAA2Br9C,EAAMs9C,EAAUd,SAG/C,GAAI3pC,KAAKqC,MAAMmd,EAAG7S,SAAW3M,KAAK0kC,aAAa,KAClC,MAAd6G,GACFvrC,KAAKgjC,WAAWuI,GAEd5B,GACF3pC,KAAKgjC,WAAW2G,EAAS1hD,OAE3ByhD,EAAUyB,eAAe16C,KACvBuP,KAAK+qC,gCAAgC59C,EAAMs9C,QAExC,CACL,IAAI98C,EAAO,OAEX,GAAIqS,KAAKgnC,aAAa,QAAUhnC,KAAKgnC,aAAa,OAAQ,CACxD,MAAM2D,EAAY3qC,KAAK2qC,YAErBA,EAAUjzC,OAAS8nB,EAAG13B,MACtB6iD,EAAUjzC,OAAS8nB,EAAG70B,QACtBggD,EAAUjzC,OAAS8nB,EAAG7T,MAEtBhe,EAAOqS,KAAK5Q,MAAMjI,MAClB6Y,KAAKijC,OAER,CAED,MAAMwI,EAAgBzrC,KAAK0rC,4BACzBv+C,EACAs9C,EACAc,EACA5B,EACAh8C,EACAg7C,EANoB,MAOpBE,EAAAA,GAAiBqC,GAGG,OAAlBO,GACFH,GAAU,EACVE,EAAexrC,KAAK5Q,MAAMquB,cAE1BisB,EAAUv2B,WAAW1iB,KAAKg7C,EAE7B,CAEDzrC,KAAK2rC,2BAGHH,GACCxrC,KAAKqC,MAAMmd,EAAG/S,SACdzM,KAAKqC,MAAMmd,EAAG9S,YAEf1M,KAAKge,MACHwtB,EACA7nB,EAAWqC,kCAGhB,CAEDhmB,KAAK2jC,OAAOsH,GAORtC,IACFe,EAAU4B,QAAUA,GAGtB,MAAM3rB,EAAM3f,KAAKigC,WAAWyJ,EAAW,wBAIvC,OAFA1pC,KAAK5Q,MAAMi2C,OAASD,EAEbzlB,CACR,CAED+rB,4BACEv+C,EACAs9C,EACAc,EACA5B,EACAh8C,EACAg7C,EACAE,GAEA,GAAI7oC,KAAKmjC,IAAI3jB,EAAGnS,UAOd,OALErN,KAAKqC,MAAMmd,EAAG3S,QACd7M,KAAKqC,MAAMmd,EAAG1S,OACd9M,KAAKqC,MAAMmd,EAAG/S,SACdzM,KAAKqC,MAAMmd,EAAG9S,YAGTi8B,EAKOE,GACV7oC,KAAKge,MAAMhe,KAAK5Q,MAAMquB,aAAckG,EAAWoB,oBAL/C/kB,KAAKge,MACHhe,KAAK5Q,MAAMquB,aACXkG,EAAWqB,wBAKX2kB,GACF3pC,KAAKge,MAAM2rB,EAAS1hD,MAAO07B,EAAWsB,iBAGjC,OAGJ0jB,GACH3oC,KAAKge,MAAMhe,KAAK5Q,MAAMquB,aAAckG,EAAWyC,sBAE/B,MAAdmlB,GACFvrC,KAAKgjC,WAAWuI,GAEd5B,GACF3pC,KAAKge,MAAM2rB,EAAS1hD,MAAO07B,EAAW6B,gBAGxCr4B,EAAK02C,SAAW7jC,KAAKslC,gBACdtlC,KAAKigC,WAAW9yC,EAAM,6BACxB,CACLA,EAAKlE,IAAM+W,KAAKuqC,6BAChBp9C,EAAKu9C,OAASD,EACdt9C,EAAKuT,MAAsB,MAAd6qC,EACbp+C,EAAKQ,KAAOA,EAEZ,IAAImzC,GAAW,EA2Cf,OA1CI9gC,KAAK0kC,aAAa,MAAQ1kC,KAAKqC,MAAMmd,EAAG7S,SAE1Cxf,EAAKkC,QAAS,EAEI,MAAdk8C,GACFvrC,KAAKgjC,WAAWuI,GAEd5B,GACF3pC,KAAKgjC,WAAW2G,EAAS1hD,OAG3BkF,EAAKhG,MAAQ6Y,KAAK6qC,6BAChB7qC,KAAK89B,YAAY3wC,EAAKlF,MAAOkF,EAAKxD,IAAI1B,QAE3B,QAAT0F,GAA2B,QAATA,GACpBqS,KAAK4rC,4BAA4Bz+C,IAIhCw7C,GACiB,gBAAlBx7C,EAAKlE,IAAInB,MACTqF,EAAKhG,MAAM6Y,MAEXA,KAAKge,MACH7wB,EAAKhG,MAAM6Y,KAAK/X,MAChB07B,EAAW+B,gCAIF,SAAT/3B,GAAiBqS,KAAKgjC,aAE1B71C,EAAKkC,QAAS,EAEV2Q,KAAKmjC,IAAI3jB,EAAGtS,YACd4zB,GAAW,GAEb3zC,EAAKhG,MAAQ6Y,KAAKklC,2BAClB/3C,EAAKw8C,SAAWA,GAGlBx8C,EAAK2zC,SAAWA,EAET9gC,KAAKigC,WAAW9yC,EAAM,qBAC9B,CACF,CAIDy+C,4BACE/T,GAEA,MAAMgU,EAA+B,QAAlBhU,EAASlqC,KAAiB,EAAI,EAC3C1F,EAAQ4vC,EAAS5vC,MACjB0D,EACJksC,EAAS1wC,MAAMiJ,OAAOzE,QAAUksC,EAAS1wC,MAAMi/C,KAAO,EAAI,GAExDvO,EAAS1wC,MAAM6Y,MACjBA,KAAKge,MACH6Z,EAAS1wC,MAAM6Y,KAAK/X,MACF,QAAlB4vC,EAASlqC,KACLg2B,EAAWkB,0BACXlB,EAAW4B,2BAIf55B,IAAWkgD,IACS,QAAlBhU,EAASlqC,KACXqS,KAAKge,MAAM/1B,EAAOk7B,EAAO9O,gBAEzBrU,KAAKge,MAAM/1B,EAAOk7B,EAAO7O,iBAIP,QAAlBujB,EAASlqC,MAAkBkqC,EAAS1wC,MAAMi/C,MAC5CpmC,KAAKge,MAAM/1B,EAAOk7B,EAAO5O,uBAE5B,CAEDo3B,0BAEK3rC,KAAKmjC,IAAI3jB,EAAG1S,OACZ9M,KAAKmjC,IAAI3jB,EAAG3S,QACZ7M,KAAKqC,MAAMmd,EAAG/S,SACdzM,KAAKqC,MAAMmd,EAAG9S,YAEf1M,KAAKgjC,YAER,CAED8F,iCACEpJ,EACAz0C,EACAqC,GAEAoyC,EAAWA,GAAY1/B,KAAK5Q,MAAMnH,MAClCgD,EAAWA,GAAY+U,KAAK5Q,MAAMnE,SAClC,IAAIkC,EAAOG,GAAM0S,KAAKmoC,+BAA8B,GAEpD,KAAOnoC,KAAKmjC,IAAI3jB,EAAGvS,MAAM,CACvB,MAAM6+B,EAAQ9rC,KAAK89B,YAAY4B,EAAUz0C,GACzC6gD,EAAMC,cAAgB5+C,EACtB2+C,EAAMx+C,GAAK0S,KAAKmoC,+BAA8B,GAC9Ch7C,EAAO6S,KAAKigC,WAAW6L,EAAO,0BAC/B,CAED,OAAO3+C,CACR,CAED6+C,qBACEtM,EACAz0C,EACAqC,GAEA,MAAMH,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GASxC,OAPAkC,EAAKgyC,eAAiB,KACtBhyC,EAAKG,GAAK0S,KAAK8oC,iCAAiCpJ,EAAUz0C,EAAUqC,GAEhE0S,KAAK0kC,aAAa,OACpBv3C,EAAKgyC,eAAiBn/B,KAAK+oC,uCAGtB/oC,KAAKigC,WAAW9yC,EAAM,wBAC9B,CAED8+C,sBACE,MAAM9+C,EAAO6S,KAAKggC,YAGlB,OAFAhgC,KAAK2jC,OAAOnkB,EAAG3O,SACf1jB,EAAK02C,SAAW7jC,KAAKksC,uBACdlsC,KAAKigC,WAAW9yC,EAAM,uBAC9B,CAEDg/C,qBACE,MAAMh/C,EAAO6S,KAAKggC,YAIlB,IAHA7yC,EAAKue,MAAQ,GACb1L,KAAK2jC,OAAOnkB,EAAGvT,UAERjM,KAAK5Q,MAAMouB,IAAMxd,KAAKrU,SAAWqU,KAAKqC,MAAMmd,EAAGpT,YACpDjf,EAAKue,MAAMjb,KAAKuP,KAAKslC,kBACjBtlC,KAAKqC,MAAMmd,EAAGpT,YAClBpM,KAAK2jC,OAAOnkB,EAAG3S,OAGjB,OADA7M,KAAK2jC,OAAOnkB,EAAGpT,UACRpM,KAAKigC,WAAW9yC,EAAM,sBAC9B,CAED29C,2BAA2BsB,GACzB,IAAItkD,EAAO,KACPg5C,GAAW,EACXwF,EAAiB,KACrB,MAAMn5C,EAAO6S,KAAKggC,YACZqM,EAAKrsC,KAAK2qC,YACV2B,EAAStsC,KAAK5Q,MAAMsI,OAAS8nB,EAAGtP,MAoBtC,OAlBIm8B,EAAG30C,OAAS8nB,EAAGzS,OAASs/B,EAAG30C,OAAS8nB,EAAGtS,UACrCo/B,IAAWF,GACbpsC,KAAKge,MAAM7wB,EAAKlF,MAAO07B,EAAWiC,sBAEpC99B,EAAOkY,KAAK+lC,gBAAgBuG,GACxBtsC,KAAKmjC,IAAI3jB,EAAGtS,YACd4zB,GAAW,EACPwL,GACFtsC,KAAKge,MAAM7wB,EAAKlF,MAAO07B,EAAWgC,4BAGtC2gB,EAAiBtmC,KAAKklC,4BAEtBoB,EAAiBtmC,KAAKslC,gBAExBn4C,EAAKrF,KAAOA,EACZqF,EAAK2zC,SAAWA,EAChB3zC,EAAKm5C,eAAiBA,EACftmC,KAAKigC,WAAW9yC,EAAM,oBAC9B,CAEDo/C,mCACE70C,GAEA,MAAMvK,EAAO6S,KAAK89B,YAAYpmC,EAAKzP,MAAOyP,EAAK/N,IAAI1B,OAInD,OAHAkF,EAAKrF,KAAO,KACZqF,EAAK2zC,UAAW,EAChB3zC,EAAKm5C,eAAiB5uC,EACfsI,KAAKigC,WAAW9yC,EAAM,oBAC9B,CAEDg5C,4BAA4B/1C,EAAoC,IAK9D,IAAIg2C,EAAiC,KACjCl2B,EAAkC,KAStC,IARIlQ,KAAKqC,MAAMmd,EAAGtP,SAChBA,EAAQlQ,KAAK8qC,4BAAuC,GAEpD56B,EAAMpoB,KAAO,KACRkY,KAAKqC,MAAMmd,EAAG5S,SACjB5M,KAAK2jC,OAAOnkB,EAAG3S,SAGX7M,KAAKqC,MAAMmd,EAAG5S,UAAY5M,KAAKqC,MAAMmd,EAAGnS,WAC9Cjd,EAAOK,KAAKuP,KAAK8qC,4BAA2B,IACvC9qC,KAAKqC,MAAMmd,EAAG5S,SACjB5M,KAAK2jC,OAAOnkB,EAAG3S,OAMnB,OAHI7M,KAAKmjC,IAAI3jB,EAAGnS,YACd+4B,EAAOpmC,KAAK8qC,4BAA2B,IAElC,CAAE16C,SAAQg2C,OAAMl2B,QACxB,CAEDs8B,0BACE9M,EACAz0C,EACAkC,EACAG,GAEA,OAAQA,EAAGxF,MACT,IAAK,MACH,OAAOkY,KAAKigC,WAAW9yC,EAAM,qBAE/B,IAAK,OACL,IAAK,UACH,OAAO6S,KAAKigC,WAAW9yC,EAAM,yBAE/B,IAAK,QACH,OAAO6S,KAAKigC,WAAW9yC,EAAM,uBAE/B,IAAK,QACH,OAAO6S,KAAKigC,WAAW9yC,EAAM,uBAE/B,IAAK,SACH,OAAO6S,KAAKigC,WAAW9yC,EAAM,wBAE/B,IAAK,SACH,OAAO6S,KAAKigC,WAAW9yC,EAAM,wBAE/B,IAAK,SACH,OAAO6S,KAAKigC,WAAW9yC,EAAM,wBAE/B,QAEE,OADA6S,KAAKipC,mBAAmB37C,EAAGxF,MACpBkY,KAAKgsC,qBAAqBtM,EAAUz0C,EAAUqC,GAE1D,CAKD4+C,uBACE,MAAMxM,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SACtBkC,EAAO6S,KAAKggC,YAClB,IAAIh9B,EACAtL,EACA+0C,GAAgB,EACpB,MAAMvC,EAAwBlqC,KAAK5Q,MAAM+6C,mBAEzC,OAAQnqC,KAAK5Q,MAAMsI,MACjB,KAAK8nB,EAAG13B,KACN,OAAIkY,KAAKgnC,aAAa,aACbhnC,KAAKsqC,yBAGPtqC,KAAKwsC,0BACV9M,EACAz0C,EACAkC,EACA6S,KAAK+lC,mBAGT,KAAKvmB,EAAGlT,OACN,OAAOtM,KAAKwoC,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGlB,KAAKrpB,EAAGjT,UACN,OAAOvM,KAAKwoC,oBAAoB,CAC9BC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,cAAc,IAGlB,KAAKrpB,EAAGvT,SAIN,OAHAjM,KAAK5Q,MAAM+6C,oBAAqB,EAChCzyC,EAAOsI,KAAKmsC,qBACZnsC,KAAK5Q,MAAM+6C,mBAAqBD,EACzBxyC,EAET,KAAK8nB,EAAGjR,WACN,GAAyB,MAArBvO,KAAK5Q,MAAMjI,MAab,OAZAgG,EAAKgyC,eAAiBn/B,KAAKkmC,oCAC3BlmC,KAAK2jC,OAAOnkB,EAAG7S,QACf3J,EAAMhD,KAAKmmC,8BACXh5C,EAAKiD,OAAS4S,EAAI5S,OAClBjD,EAAKi5C,KAAOpjC,EAAIojC,KAChBj5C,EAAK6S,KAAOgD,EAAIkN,MAChBlQ,KAAK2jC,OAAOnkB,EAAG5S,QAEf5M,KAAK2jC,OAAOnkB,EAAGpS,OAEfjgB,EAAKk5C,WAAarmC,KAAKslC,gBAEhBtlC,KAAKigC,WAAW9yC,EAAM,0BAE/B,MAEF,KAAKqyB,EAAG7S,OAIN,GAHA3M,KAAKijC,QAGAjjC,KAAKqC,MAAMmd,EAAG5S,UAAY5M,KAAKqC,MAAMmd,EAAGnS,UAC3C,GAAIrN,KAAKqC,MAAMmd,EAAG13B,OAASkY,KAAKqC,MAAMmd,EAAGtP,OAAQ,CAC/C,MAAM1E,EAAQxL,KAAK2qC,YAAYjzC,KAC/B+0C,EAAgBjhC,IAAUgU,EAAGtS,UAAY1B,IAAUgU,EAAGzS,KAFxD,MAIE0/B,GAAgB,EAIpB,GAAIA,EAAe,CAMjB,GALAzsC,KAAK5Q,MAAM+6C,oBAAqB,EAChCzyC,EAAOsI,KAAKslC,gBACZtlC,KAAK5Q,MAAM+6C,mBAAqBD,EAI9BlqC,KAAK5Q,MAAM+6C,sBAETnqC,KAAKqC,MAAMmd,EAAG3S,QACb7M,KAAKqC,MAAMmd,EAAG5S,SAAW5M,KAAK2qC,YAAYjzC,OAAS8nB,EAAGpS,OAIzD,OADApN,KAAK2jC,OAAOnkB,EAAG5S,QACRlV,EAGPsI,KAAKmjC,IAAI3jB,EAAG3S,MAEf,CAsBD,OAnBE7J,EADEtL,EACIsI,KAAKmmC,4BAA4B,CACrCnmC,KAAKusC,mCAAmC70C,KAGpCsI,KAAKmmC,8BAGbh5C,EAAKiD,OAAS4S,EAAI5S,OAClBjD,EAAKi5C,KAAOpjC,EAAIojC,KAChBj5C,EAAK6S,KAAOgD,EAAIkN,MAEhBlQ,KAAK2jC,OAAOnkB,EAAG5S,QAEf5M,KAAK2jC,OAAOnkB,EAAGpS,OAEfjgB,EAAKk5C,WAAarmC,KAAKslC,gBAEvBn4C,EAAKgyC,eAAiB,KAEfn/B,KAAKigC,WAAW9yC,EAAM,0BAE/B,KAAKqyB,EAAG70B,OACN,OAAOqV,KAAK09B,aACV19B,KAAK5Q,MAAMjI,MACX,+BAGJ,KAAKq4B,EAAG/O,MACR,KAAK+O,EAAG9O,OAGN,OAFAvjB,EAAKhG,MAAQ6Y,KAAKqC,MAAMmd,EAAG/O,OAC3BzQ,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,gCAE/B,KAAKqyB,EAAG/Q,QACN,GAAyB,MAArBzO,KAAK5Q,MAAMjI,MAAe,CAE5B,GADA6Y,KAAKijC,OACDjjC,KAAKqC,MAAMmd,EAAG7T,KAChB,OAAO3L,KAAK09B,cACT19B,KAAK5Q,MAAMjI,MACZ,8BACAgG,EAAKlF,MACLkF,EAAKxD,IAAI1B,OAIb,GAAI+X,KAAKqC,MAAMmd,EAAG5T,QAChB,OAAO5L,KAAK09B,cACT19B,KAAK5Q,MAAMjI,MACZ,8BACAgG,EAAKlF,MACLkF,EAAKxD,IAAI1B,OAIb,MAAM+X,KAAKge,MACThe,KAAK5Q,MAAMnH,MACX07B,EAAW0C,6BAEd,CAED,MAAMrmB,KAAKgjC,aACb,KAAKxjB,EAAG7T,IACN,OAAO3L,KAAK09B,aACV19B,KAAK5Q,MAAMjI,MACX,+BAGJ,KAAKq4B,EAAG5T,OACN,OAAO5L,KAAK09B,aACV19B,KAAK5Q,MAAMjI,MACX,+BAGJ,KAAKq4B,EAAG1O,MAEN,OADA9Q,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,sBAE/B,KAAKqyB,EAAGhP,MAEN,OADAxQ,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,6BAE/B,KAAKqyB,EAAGtP,MAEN,OADAlQ,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,sBAE/B,KAAKqyB,EAAG7Q,KAEN,OADA3O,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,wBAE/B,QACE,GAAgC,WAA5B6S,KAAK5Q,MAAMsI,KAAKuM,QAClB,OAAOjE,KAAKisC,sBACP,GAAIjsC,KAAK5Q,MAAMsI,KAAKuM,QAAS,CAClC,MAAM8G,EAAQ/K,KAAK5Q,MAAMsI,KAAKqT,MAE9B,OADA/K,KAAKijC,OACEzf,MAAMkpB,iBAAiBv/C,EAAM4d,EACrC,EAGL,MAAM/K,KAAKgjC,YACZ,CAED2J,uBACE,MAAMjN,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAC5B,IAAIyM,EAAOsI,KAAKksC,uBACZU,GAA4B,EAChC,MACG5sC,KAAKqC,MAAMmd,EAAGvT,WAAajM,KAAKqC,MAAMmd,EAAGrS,gBACzCnN,KAAK6sC,sBACN,CACA,MAAM1/C,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAClC61C,EAAW9gC,KAAKmjC,IAAI3jB,EAAGrS,aAC7By/B,EAA4BA,GAA6B9L,EACzD9gC,KAAK2jC,OAAOnkB,EAAGvT,WACV60B,GAAY9gC,KAAKqC,MAAMmd,EAAGpT,WAC7Bjf,EAAK2/C,YAAcp1C,EACnBsI,KAAKijC,OACLvrC,EAAOsI,KAAKigC,WAAW9yC,EAAM,yBAE7BA,EAAK4/C,WAAar1C,EAClBvK,EAAK6/C,UAAYhtC,KAAKslC,gBACtBtlC,KAAK2jC,OAAOnkB,EAAGpT,UACXwgC,GACFz/C,EAAK2zC,SAAWA,EAChBppC,EAAOsI,KAAKigC,WACV9yC,EACA,8BAGFuK,EAAOsI,KAAKigC,WACV9yC,EACA,qBAIP,CACD,OAAOuK,CACR,CAEDu1C,sBACE,MAAM9/C,EAAO6S,KAAKggC,YAClB,OAAIhgC,KAAKmjC,IAAI3jB,EAAGtS,WACd/f,EAAKm5C,eAAiBtmC,KAAKitC,sBACpBjtC,KAAKigC,WAAW9yC,EAAM,2BAEtB6S,KAAK2sC,sBAEf,CAEDO,qCACE,MAAMr0C,EAAQmH,KAAKitC,sBACnB,IAAKjtC,KAAK5Q,MAAM+6C,oBAAsBnqC,KAAKmjC,IAAI3jB,EAAGpS,OAAQ,CAExD,MAAMjgB,EAAO6S,KAAK89B,YAAYjlC,EAAM5Q,MAAO4Q,EAAMlP,IAAI1B,OAMrD,OALAkF,EAAKiD,OAAS,CAAC4P,KAAKusC,mCAAmC1zC,IACvD1L,EAAKi5C,KAAO,KACZj5C,EAAK6S,KAAO,KACZ7S,EAAKk5C,WAAarmC,KAAKslC,gBACvBn4C,EAAKgyC,eAAiB,KACfn/B,KAAKigC,WAAW9yC,EAAM,yBAC9B,CACD,OAAO0L,CACR,CAEDs0C,4BACE,MAAMhgD,EAAO6S,KAAKggC,YAClBhgC,KAAKmjC,IAAI3jB,EAAGnR,YACZ,MAAM3W,EAAOsI,KAAKktC,qCAElB,IADA//C,EAAKue,MAAQ,CAAChU,GACPsI,KAAKmjC,IAAI3jB,EAAGnR,aACjBlhB,EAAKue,MAAMjb,KAAKuP,KAAKktC,sCAEvB,OAA6B,IAAtB//C,EAAKue,MAAM/f,OACd+L,EACAsI,KAAKigC,WAAW9yC,EAAM,6BAC3B,CAEDigD,qBACE,MAAMjgD,EAAO6S,KAAKggC,YAClBhgC,KAAKmjC,IAAI3jB,EAAGrR,WACZ,MAAMzW,EAAOsI,KAAKmtC,4BAElB,IADAhgD,EAAKue,MAAQ,CAAChU,GACPsI,KAAKmjC,IAAI3jB,EAAGrR,YACjBhhB,EAAKue,MAAMjb,KAAKuP,KAAKmtC,6BAEvB,OAA6B,IAAtBhgD,EAAKue,MAAM/f,OACd+L,EACAsI,KAAKigC,WAAW9yC,EAAM,sBAC3B,CAEDm4C,gBACE,MAAMF,EAAYplC,KAAK5Q,MAAMi2C,OAC7BrlC,KAAK5Q,MAAMi2C,QAAS,EACpB,MAAM3tC,EAAOsI,KAAKotC,qBAMlB,OALAptC,KAAK5Q,MAAMi2C,OAASD,EAGpBplC,KAAK5Q,MAAMswB,YACT1f,KAAK5Q,MAAMswB,aAAe1f,KAAK5Q,MAAM+6C,mBAChCzyC,CACR,CAED2yC,uCACE,GAAIrqC,KAAK5Q,MAAMsI,OAAS8nB,EAAG13B,MAA6B,MAArBkY,KAAK5Q,MAAMjI,MAAe,CAC3D,MAAMu4C,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SACtBkC,EAAO6S,KAAK+lC,kBAClB,OAAO/lC,KAAKgsC,qBAAqBtM,EAAUz0C,EAAUkC,EAJvD,CAME,OAAO6S,KAAKslC,eAEf,CAEDyC,0BACE,MAAM56C,EAAO6S,KAAKggC,YAElB,OADA7yC,EAAKm5C,eAAiBtmC,KAAKklC,2BACpBllC,KAAKigC,WAAW9yC,EAAM,iBAC9B,CAEDk6C,mCACEgG,GAEA,MAAMxD,EAAQwD,EACVrtC,KAAK+lC,kBACL/lC,KAAKmoC,gCAKT,OAJInoC,KAAKqC,MAAMmd,EAAGzS,SAChB88B,EAAMvD,eAAiBtmC,KAAK+nC,0BAC5B/nC,KAAKumC,iBAAiBsD,IAEjBA,CACR,CAEDyD,oBAAoBngD,GASlB,OARAA,EAAKgD,WAAWm2C,eAAiBn5C,EAAKm5C,eAEtCtmC,KAAKumC,iBACHp5C,EAAKgD,WACLhD,EAAKm5C,eAAex7C,IACpBqC,EAAKm5C,eAAe38C,IAAImB,KAGnBqC,EAAKgD,UACb,CAEDy5C,oBACE,IAAID,EAAW,KAWf,OAVI3pC,KAAKqC,MAAMmd,EAAG/Q,WAChBk7B,EAAW3pC,KAAKggC,YACS,MAArBhgC,KAAK5Q,MAAMjI,MACbwiD,EAASh8C,KAAO,OAEhBg8C,EAASh8C,KAAO,QAElBqS,KAAKijC,OACLjjC,KAAKigC,WAAW0J,EAAU,aAErBA,CACR,CAMDhK,kBACExyC,EACAogD,EACA1N,GAAqB,GAErB,OAAI0N,EACKvtC,KAAKwtC,iCAAiCrgD,GAAM,IACjDq2B,MAAMmc,kBAAkBxyC,GAAM,EAAM0yC,KAIjCrc,MAAMmc,kBAAkBxyC,GAAM,EAAO0yC,EAC7C,CAED4N,2BACEtgD,EACAuK,EACAmoC,GAAqB,GAErB,GAAI7/B,KAAKqC,MAAMmd,EAAGzS,OAAQ,CACxB,MAAMi5B,EAAWhmC,KAAKggC,aAIpBgG,EAASM,eAETn5C,EAAKw4C,WACH3lC,KAAK0lC,uCAETv4C,EAAKk5C,WAAaL,EAASM,eACvBtmC,KAAKigC,WAAW+F,EAAU,kBAC1B,IACL,CAEDxiB,MAAMiqB,2BAA2BtgD,EAAMuK,EAAMmoC,EAC9C,CAGD6N,eAAejuB,EAAkBkuB,GAE/B,GACE3tC,KAAK5Q,MAAMw+C,QACX5tC,KAAKqC,MAAMmd,EAAG13B,OACO,cAArBkY,KAAK5Q,MAAMjI,MACX,CACA,MAAMwjD,EAAY3qC,KAAK2qC,YACvB,GAAIA,EAAUjzC,OAAS8nB,EAAG13B,MAAQs5B,EAAUupB,EAAUxjD,OAAQ,CAC5D,MAAMgG,EAAO6S,KAAKggC,YAElB,OADAhgC,KAAKijC,OACEjjC,KAAKgpC,mBAAmB77C,EAChC,CAVH,MAWO,GAAI6S,KAAKilC,oBAAsBjlC,KAAKgnC,aAAa,QAAS,CAC/D,MAAM75C,EAAO6S,KAAKggC,YAElB,OADAhgC,KAAKijC,OACEjjC,KAAK6tC,yBAAyB1gD,EACtC,CACD,MAAMsG,EAAO+vB,MAAMkqB,eAAejuB,EAASkuB,GAK3C,YAHwB3+C,IAApBgR,KAAK8kC,YAA6B9kC,KAAKq+B,iBAAiB5qC,KAC1DuM,KAAK8kC,WAAa,MAEbrxC,CACR,CAGDq6C,yBACE3gD,EACA4gD,GAEA,GAAkB,eAAdA,EAAKr2C,KACP,GAAkB,YAAdq2C,EAAKjmD,MACP,GACEkY,KAAKqC,MAAMmd,EAAGpP,SACdpQ,KAAKqC,MAAMmd,EAAG13B,OACdkY,KAAKqC,MAAMmd,EAAGjQ,YACdvP,KAAKqC,MAAMmd,EAAG3P,OACd7P,KAAKqC,MAAMmd,EAAGlP,SAEd,OAAOtQ,KAAK0mC,iBAAiBv5C,QAE1B,GAAI6S,KAAKqC,MAAMmd,EAAG13B,MAAO,CAC9B,GAAkB,cAAdimD,EAAKjmD,KACP,OAAOkY,KAAKgpC,mBAAmB77C,GAC1B,GAAkB,SAAd4gD,EAAKjmD,KACd,OAAOkY,KAAKgoC,mBAAmB76C,GAC1B,GAAkB,WAAd4gD,EAAKjmD,KACd,OAAOkY,KAAKioC,oBAAoB96C,GAAM,EAEzC,CAGH,OAAOq2B,MAAMsqB,yBAAyB3gD,EAAM4gD,EAC7C,CAGDC,+BACE,OACEhuC,KAAKgnC,aAAa,SAClBhnC,KAAKgnC,aAAa,cAClBhnC,KAAKgnC,aAAa,WACjBhnC,KAAKilC,oBAAsBjlC,KAAKgnC,aAAa,SAC9CxjB,MAAMwqB,8BAET,CAEDC,2BACE,QACEjuC,KAAKqC,MAAMmd,EAAG13B,SACQ,SAArBkY,KAAK5Q,MAAMjI,OACW,cAArB6Y,KAAK5Q,MAAMjI,OACU,WAArB6Y,KAAK5Q,MAAMjI,OACV6Y,KAAKilC,oBAA2C,SAArBjlC,KAAK5Q,MAAMjI,SAKpCq8B,MAAMyqB,0BACd,CAEDC,+BACE,GAAIluC,KAAKilC,oBAAsBjlC,KAAKgnC,aAAa,QAAS,CACxD,MAAM75C,EAAO6S,KAAKggC,YAElB,OADAhgC,KAAKijC,OACEjjC,KAAK6tC,yBAAyB1gD,EACtC,CACD,OAAOq2B,MAAM0qB,8BACd,CAEDC,iBACEJ,EACArO,EACAz0C,EACAmjD,GAEA,IAAKpuC,KAAKqC,MAAMmd,EAAGtS,UAAW,OAAO6gC,EAIrC,GAAIK,EAAkB,CACpB,MAAMj6C,EAAS6L,KAAKquC,UAAS,IAC3B7qB,MAAM2qB,iBAAiBJ,EAAMrO,EAAUz0C,KAGzC,OAAKkJ,EAAOhH,MAMRgH,EAAOtB,QAAOmN,KAAK5Q,MAAQ+E,EAAOm6C,WAC/Bn6C,EAAOhH,OALZihD,EAAiBnmD,MAAQkM,EAAOtB,MAAM2qB,KAAOxd,KAAK5Q,MAAMnH,MACjD8lD,EAKV,CAED/tC,KAAK2jC,OAAOnkB,EAAGtS,UACf,MAAM9d,EAAQ4Q,KAAK5Q,MAAMm/C,QACnBC,EAAoBxuC,KAAK5Q,MAAMq/C,UAC/BthD,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GACxC,IAAI,WAAEyjD,EAAF,OAAcC,GAAW3uC,KAAK4uC,iCAC7BC,EAAOC,GAAW9uC,KAAK+uC,wBAAwBL,GAEpD,GAAIC,GAAUG,EAAQnjD,OAAS,EAAG,CAChC,MAAM8iD,EAAY,IAAID,GAEtB,GAAIM,EAAQnjD,OAAS,EAAG,CACtBqU,KAAK5Q,MAAQA,EACb4Q,KAAK5Q,MAAMq/C,UAAYA,EAEvB,IAAK,IAAI5iD,EAAI,EAAGA,EAAIijD,EAAQnjD,OAAQE,IAClC4iD,EAAUh+C,KAAKq+C,EAAQjjD,GAAG5D,SAGzBymD,aAAYC,UAAW3uC,KAAK4uC,kCAC9BC,EAAOC,GAAW9uC,KAAK+uC,wBAAwBL,EACjD,CAEGC,GAAUE,EAAMljD,OAAS,GAM3BqU,KAAKge,MAAM5uB,EAAMnH,MAAO07B,EAAWC,2BAGjC+qB,GAA2B,IAAjBE,EAAMljD,SAClBqU,KAAK5Q,MAAQA,EACb4Q,KAAK5Q,MAAMq/C,UAAYA,EAAUh6C,OAAOo6C,EAAM,GAAG5mD,SAC9CymD,aAAYC,UAAW3uC,KAAK4uC,iCAElC,CAaD,OAXA5uC,KAAK+uC,wBAAwBL,GAAY,GAEzC1uC,KAAK5Q,MAAMq/C,UAAYD,EACvBxuC,KAAK2jC,OAAOnkB,EAAGzS,OAEf5f,EAAKsK,KAAOs2C,EACZ5gD,EAAKuhD,WAAaA,EAClBvhD,EAAK6hD,UAAYhvC,KAAKwtC,iCAAiCrgD,GAAM,IAC3D6S,KAAKivC,sBAAiBjgD,OAAWA,OAAWA,KAGvCgR,KAAKigC,WAAW9yC,EAAM,wBAC9B,CAEDyhD,gCAIE5uC,KAAK5Q,MAAM8/C,0BAA0Bz+C,KAAKuP,KAAK5Q,MAAMnH,OAErD,MAAMymD,EAAa1uC,KAAK8jC,0BAClB6K,GAAU3uC,KAAKqC,MAAMmd,EAAGzS,OAI9B,OAFA/M,KAAK5Q,MAAM8/C,0BAA0BhsC,MAE9B,CAAEwrC,aAAYC,SACtB,CASDI,wBACE5hD,EACAgiD,GAEA,MAAMr8C,EAAQ,CAAC3F,GACTiiD,EAAsC,GAE5C,KAAwB,IAAjBt8C,EAAMnH,QAAc,CACzB,MAAMwB,EAAO2F,EAAMoQ,MACD,4BAAd/V,EAAKuK,MACHvK,EAAKgyC,iBAAmBhyC,EAAKk5C,WAE/BrmC,KAAKqvC,sBAAsBliD,GAE3BiiD,EAAO3+C,KAAKtD,GAEd2F,EAAMrC,KAAKtD,EAAKmD,OACO,0BAAdnD,EAAKuK,OACd5E,EAAMrC,KAAKtD,EAAKuhD,YAChB57C,EAAMrC,KAAKtD,EAAK6hD,WAEnB,CAED,OAAIG,GACFC,EAAOj6C,SAAQhI,GAAQ6S,KAAKqvC,sBAAsBliD,KAC3C,CAACiiD,EAAQ,KAr0DxB,SACEE,EACA73C,GAEA,MAAM83C,EAAQ,GACRC,EAAQ,GACd,IAAK,IAAI3jD,EAAI,EAAGA,EAAIyjD,EAAK3jD,OAAQE,KAC9B4L,EAAK63C,EAAKzjD,IAAe0jD,EAAQC,GAAO/+C,KAAK6+C,EAAKzjD,IAErD,MAAO,CAAC0jD,EAAOC,EAChB,CA8zDYC,CAAUL,GAAQjiD,GACvBA,EAAKiD,OAAOs/C,OAAM72C,GAASmH,KAAK2vC,aAAa92C,GAAO,MAEvD,CAEDw2C,sBAAsBliD,GAAiC,IAAAyiD,EACrD5vC,KAAK6vC,iBAGD1iD,EAAKiD,OAHT,OAAAw/C,EAIEziD,EAAK4wC,YAJP,EAIE6R,EAAYE,eACA,GAGd9vC,KAAK3S,MAAMq1B,MAAMqtB,GAEjBvsB,MAAMwsB,YAAY7iD,GAAM,GAAO,GAC/B6S,KAAK3S,MAAMs1B,MACZ,CAED6qB,iCAAoCrgD,EAAcuJ,GAChD,IAAIvC,EASJ,OARkE,IAA9D6L,KAAK5Q,MAAM8/C,0BAA0Bn5C,QAAQ5I,EAAKlF,QACpD+X,KAAK5Q,MAAM8/C,0BAA0Bz+C,KAAKuP,KAAK5Q,MAAMnH,OACrDkM,EAASuC,IACTsJ,KAAK5Q,MAAM8/C,0BAA0BhsC,OAErC/O,EAASuC,IAGJvC,CACR,CAED87C,eACE9iD,EACAuyC,EACAz0C,GAWA,GATAkC,EAAOq2B,MAAMysB,eAAe9iD,EAAMuyC,EAAUz0C,GACxC+U,KAAKmjC,IAAI3jB,EAAGtS,YACd/f,EAAK2zC,UAAW,EAIhB9gC,KAAKumC,iBAAiBp5C,IAGpB6S,KAAKqC,MAAMmd,EAAGzS,OAAQ,CACxB,MAAMmjC,EAAelwC,KAAK89B,YAAY4B,EAAUz0C,GAIhD,OAHAilD,EAAa//C,WAAahD,EAC1B+iD,EAAa5J,eAAiBtmC,KAAK+nC,0BAE5B/nC,KAAKigC,WAAWiQ,EAAc,qBACtC,CAED,OAAO/iD,CACR,CAEDgjD,wBAAwBhjD,GAEL,sBAAdA,EAAKuK,OACiB,SAApBvK,EAAKy5B,YAA6C,WAApBz5B,EAAKy5B,aACvB,2BAAdz5B,EAAKuK,MACgB,SAApBvK,EAAK26C,YACQ,yBAAd36C,EAAKuK,MAAuD,SAApBvK,EAAK26C,YAOhDtkB,MAAM2sB,wBAAwBhjD,EAC/B,CAED+zC,YAAY/zC,GACV,MAAMijD,EAAO5sB,MAAM0d,YAAY/zC,GAO/B,MALgB,2BAAdijD,EAAK14C,MACS,yBAAd04C,EAAK14C,OAEL04C,EAAKtI,WAAasI,EAAKtI,YAAc,SAEhCsI,CACR,CAEDC,uBAAuBljD,GACrB,GAAI6S,KAAKgnC,aAAa,QAAS,CAC7B75C,EAAK26C,WAAa,OAElB,MAAMwI,EAAkBtwC,KAAKggC,YAG7B,OAFAhgC,KAAKijC,OAEDjjC,KAAKqC,MAAMmd,EAAGlT,SAEhBnf,EAAKoN,WAAayF,KAAKuwC,wBACvBvwC,KAAKwwC,gBAAgBrjD,GACd,MAGA6S,KAAKgoC,mBAAmBsI,EAbnC,CAeO,GAAItwC,KAAKgnC,aAAa,UAAW,CACtC75C,EAAK26C,WAAa,OAElB,MAAMwI,EAAkBtwC,KAAKggC,YAG7B,OAFAhgC,KAAKijC,OAEEjjC,KAAKioC,oBAAoBqI,GAAiB,EAN5C,CAOA,GAAItwC,KAAKgnC,aAAa,aAAc,CACzC75C,EAAK26C,WAAa,OAClB,MAAMwI,EAAkBtwC,KAAKggC,YAE7B,OADAhgC,KAAKijC,OACEjjC,KAAKgpC,mBAAmBsH,EAJ1B,CAKA,GAAItwC,KAAKilC,oBAAsBjlC,KAAKgnC,aAAa,QAAS,CAC/D75C,EAAK26C,WAAa,QAClB,MAAMwI,EAAkBtwC,KAAKggC,YAE7B,OADAhgC,KAAKijC,OACEjjC,KAAK6tC,yBAAyByC,EAJhC,CAML,OAAO9sB,MAAM6sB,uBAAuBljD,EAEvC,CAEDsjD,cAActjD,GACZ,QAAIq2B,MAAMitB,iBAAiB51C,eAEvBmF,KAAKgnC,aAAa,SAAWhnC,KAAK2qC,YAAYjzC,OAAS8nB,EAAG7Q,QAC5DxhB,EAAK26C,WAAa,OAClB9nC,KAAKijC,OACLjjC,KAAKijC,QACE,EAIV,CAEDyN,mCAAmCvjD,GACjC,MAAMqwB,EAAMxd,KAAK5Q,MAAMnH,MACjB0oD,EAAentB,MAAMktB,mCAAmCvjD,GAI9D,OAHIwjD,GAAoC,SAApBxjD,EAAK26C,YACvB9nC,KAAKgjC,WAAWxlB,GAEXmzB,CACR,CAEDC,aAAazjD,EAAe4K,EAAsB84C,GAChDrtB,MAAMotB,aAAazjD,EAAM4K,EAAa84C,GAClC7wC,KAAK0kC,aAAa,OACpBv3C,EAAKgyC,eAAiBn/B,KAAKkmC,oCAE9B,CAED4K,iBACE/R,EACAgS,EACA3hD,GAEA,MAAMouB,EAAMxd,KAAK5Q,MAAMnH,MACvB,GAAI+X,KAAKgnC,aAAa,WAAY,CAChC,GAAIhnC,KAAKgxC,6BAA6BjS,EAAWgS,GAE/C,OAGFA,EAAO1H,SAAU,CAClB,CAED7lB,MAAMstB,iBAAiB/R,EAAWgS,EAAQ3hD,GAEtC2hD,EAAO1H,UAES,kBAAhB0H,EAAOr5C,MACS,yBAAhBq5C,EAAOr5C,MACS,uBAAhBq5C,EAAOr5C,KAEPsI,KAAKge,MAAMR,EAAKmG,EAAWI,qBAClBgtB,EAAO5pD,OAChB6Y,KAAKge,MACH+yB,EAAO5pD,MAAMc,MACb07B,EAAWK,8BAIlB,CAEDitB,WAAWlwB,GACT,MAAgB,aAATA,GAAgC,kBAATA,CAC/B,CAEDmwB,eACE,MAAMnwB,EAAOyC,MAAM2tB,YACbC,EAAW,KAAOrwB,EAGnB/gB,KAAKixC,WAAWlwB,IAAU/gB,KAAK5Q,MAAMi2C,QACxCrlC,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAOlM,kBAAmBm6B,GAGvDpxC,KAAKiiC,YAAYziB,EAAG13B,KAAMspD,EAC3B,CAGDlP,iBAAiB5uC,GACf,MAAM2vC,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GACpD,OAAa,MAATlqB,GAA8C,MAAT2vC,EAChCjjC,KAAKqxC,SAAS7xB,EAAGjT,UAAW,IAEnCvM,KAAK5Q,MAAMi2C,QACD,KAAT/xC,GAA2C,KAATA,EAG1B0M,KAAK5Q,MAAMi2C,QAAmB,KAAT/xC,EACjB,KAAT2vC,EACKjjC,KAAKqxC,SAAS7xB,EAAGrS,YAAa,GAGhCnN,KAAKqxC,SAAS7xB,EAAGtS,SAAU,GJtrEnC,SAAyBnK,EAAiBkgC,GAC/C,OAAmB,KAAZlgC,GAAyC,KAATkgC,CACxC,CIqrEgBqO,CAAgBh+C,EAAM2vC,IAC/BjjC,KAAK5Q,MAAMouB,KAAO,EACXxd,KAAKkxC,gBAEL1tB,MAAM0e,iBAAiB5uC,GAXvB0M,KAAKqxC,SAAS7xB,EAAGjR,WAAY,EAavC,CAEDohC,aAAaxiD,EAAcokD,GACzB,OAAQpkD,EAAKuK,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACH,OAAO,EAET,IAAK,mBAAoB,CACvB,MAAMsa,EAAO7kB,EAAKgmB,WAAWxnB,OAAS,EACtC,OAAOwB,EAAKgmB,WAAWu8B,OAAM,CAAC/a,EAAM9oC,IAElB,iBAAd8oC,EAAKj9B,OACJ7L,IAAMmmB,GAAsB,kBAAd2iB,EAAKj9B,OACpBsI,KAAK2vC,aAAahb,IAGvB,CAED,IAAK,iBACH,OAAO30B,KAAK2vC,aAAaxiD,EAAKhG,OAEhC,IAAK,gBACH,OAAO6Y,KAAK2vC,aAAaxiD,EAAK02C,UAEhC,IAAK,kBACH,OAAO12C,EAAKolB,SAASm9B,OAAM8B,GAAWxxC,KAAK2vC,aAAa6B,KAE1D,IAAK,uBACH,MAAyB,MAAlBrkD,EAAKmB,SAEd,IAAK,0BACL,IAAK,qBACH,OAAO0R,KAAK2vC,aAAaxiD,EAAKgD,YAEhC,IAAK,mBACL,IAAK,2BACH,OAAQohD,EAEV,QACE,OAAO,EAEZ,CAED7Q,aAAavzC,EAAcwzC,GAAiB,GAC1C,MAAkB,uBAAdxzC,EAAKuK,KACA8rB,MAAMkd,aAAa1gC,KAAKstC,oBAAoBngD,GAAOwzC,GAEnDnd,MAAMkd,aAAavzC,EAAMwzC,EAEnC,CAGDkP,iBACE4B,EACAC,EACA/Q,GAEA,IAAK,IAAI90C,EAAI,EAAGA,EAAI4lD,EAAS9lD,OAAQE,IAAK,CACxC,MAAMkiD,EAAO0D,EAAS5lD,GACH,wBAAX,MAAJkiD,OAAA,EAAAA,EAAMr2C,QACR+5C,EAAS5lD,GAAKmU,KAAKstC,oBAAoBS,GAE1C,CACD,OAAOvqB,MAAMqsB,iBAAiB4B,EAAUC,EAAkB/Q,EAC3D,CAIDgR,iBACEF,EACAG,GAEA,IAAK,IAAI/lD,EAAI,EAAGA,EAAI4lD,EAAS9lD,OAAQE,IAAK,KAAAgmD,EACxC,MAAM9D,EAAO0D,EAAS5lD,IAEpBkiD,GACc,uBAAdA,EAAKr2C,MACL,OAAAm6C,EAAC9D,EAAKhQ,QAAL8T,EAAYtT,iBACZkT,EAAS9lD,OAAS,IAAMimD,GAEzB5xC,KAAKge,MAAM+vB,EAAKzH,eAAer+C,MAAO07B,EAAWoC,kBAEpD,CAED,OAAO0rB,CACR,CAEDK,eACE3zC,EACA4zC,EACAC,EACA3S,GAEA,MAAMlyC,EAAOq2B,MAAMsuB,eACjB3zC,EACA4zC,EACAC,EACA3S,GAYF,OAJI0S,IAAiB/xC,KAAK5Q,MAAM6iD,wBAC9BjyC,KAAK2xC,iBAAiBxkD,EAAKolB,UAGtBplB,CACR,CAED+kD,UACEnE,KACG77C,GAUH,GAAkB,uBAAd67C,EAAKr2C,KACP,OAAO8rB,MAAM0uB,UAAUnE,KAAS77C,EAEnC,CAGDguC,mBAAmB/yC,GAIjB,OAHI6S,KAAKqC,MAAMmd,EAAGzS,SAChB5f,EAAKm5C,eAAiBtmC,KAAK+nC,2BAEtBvkB,MAAM0c,mBAAmB/yC,EACjC,CAEDizC,0BACEjzC,GAKA,OAHI6S,KAAKqC,MAAMmd,EAAGzS,SAChB5f,EAAKm5C,eAAiBtmC,KAAK+nC,2BAEtBvkB,MAAM4c,0BAA0BjzC,EACxC,CAGDglD,gBACE,OAAOnyC,KAAK0kC,aAAa,MAAQlhB,MAAM2uB,eACxC,CAGDC,kBACE,OAAOpyC,KAAKqC,MAAMmd,EAAGzS,QAAUyW,MAAM4uB,iBACtC,CAEDC,uBAAuBhjD,GACrB,OAAQ2Q,KAAKqC,MAAMmd,EAAGzS,QAAUyW,MAAM6uB,uBAAuBhjD,EAC9D,CAGDyvC,gBACEC,EACA1vC,EACAgqC,EACAD,EACA4F,EACAC,GAmBA,GAjBK5vC,EAAoBs6C,UACvB3pC,KAAKgjC,WAAY3zC,EAAoBs6C,SAAS1hD,cAExCoH,EAAoBs6C,SACxB3pC,KAAK0kC,aAAa,OACpBr1C,EAAO8vC,eAAiBn/B,KAAKkmC,qCAG/B1iB,MAAMsb,gBACJC,EACA1vC,EACAgqC,EACAD,EACA4F,EACAC,GAGE5vC,EAAOe,QAAU4uC,EAAe,CAClC,MAAM5uC,EAASf,EAAOe,OAClBA,EAAOzE,OAAS,GAAKqU,KAAKsyC,YAAYliD,EAAO,KAC/C4P,KAAKge,MAAM3uB,EAAOpH,MAAO07B,EAAW+B,6BAHxC,MAMO,GAEW,qBAAhBr2B,EAAOqI,MACPsnC,GACA3vC,EAAOlI,MAAMiJ,OACb,CACA,MAAMA,EAASf,EAAOlI,MAAMiJ,OACxBA,EAAOzE,OAAS,GAAKqU,KAAKsyC,YAAYliD,EAAO,KAC/C4P,KAAKge,MAAM3uB,EAAOpH,MAAO07B,EAAW+B,6BAEvC,CACF,CAED6sB,uBACExT,EACA1vC,EACAgqC,EACAD,GAEK/pC,EAAoBs6C,UACvB3pC,KAAKgjC,WAAY3zC,EAAoBs6C,SAAS1hD,cAExCoH,EAAoBs6C,SACxB3pC,KAAK0kC,aAAa,OACpBr1C,EAAO8vC,eAAiBn/B,KAAKkmC,qCAG/B1iB,MAAM+uB,uBAAuBxT,EAAW1vC,EAAQgqC,EAAaD,EAC9D,CAGDoZ,gBAAgBrlD,GAKd,GAJAq2B,MAAMgvB,gBAAgBrlD,GAClBA,EAAK8vC,YAAcj9B,KAAK0kC,aAAa,OACvCv3C,EAAKslD,oBAAsBzyC,KAAK+oC,uCAE9B/oC,KAAKgnC,aAAa,cAAe,CACnChnC,KAAKijC,OACL,MAAMyP,EAAwCvlD,EAAKk7C,WAAa,GAChE,EAAG,CACD,MAAMl7C,EAAO6S,KAAKggC,YAClB7yC,EAAKG,GAAK0S,KAAKmoC,+BAA0C,GACrDnoC,KAAK0kC,aAAa,KACpBv3C,EAAKgyC,eAAiBn/B,KAAK+oC,sCAE3B57C,EAAKgyC,eAAiB,KAExBuT,EAAYjiD,KAAKuP,KAAKigC,WAAW9yC,EAAM,mBARzC,OASS6S,KAAKmjC,IAAI3jB,EAAG3S,OACtB,CACF,CAED8lC,wBAAwBtjD,GACtBm0B,MAAMmvB,wBAAwBtjD,GAC9B,MAAMe,EAAS4P,KAAKo+B,6BAA6B/uC,GACjD,GAAIe,EAAOzE,OAAS,EAAG,CACrB,MAAMkN,EAAQzI,EAAO,GACjB4P,KAAKsyC,YAAYz5C,IAA0B,QAAhBxJ,EAAO1B,KACpCqS,KAAKge,MAAMnlB,EAAM5Q,MAAO07B,EAAWkB,2BAC1B7kB,KAAKsyC,YAAYz5C,IAC1BmH,KAAKge,MAAMnlB,EAAM5Q,MAAO07B,EAAW4B,0BAEtC,CACF,CAEDqtB,kBACEzlD,EACA0lD,GAEA,MAAMlJ,EAAW3pC,KAAK4pC,oBAChB3gD,EAAMu6B,MAAMovB,kBAAkBzlD,EAAM0lD,GAG1C,OADA1lD,EAAKw8C,SAAWA,EACT1gD,CACR,CAGD6pD,kBACEne,EACA+K,EACAz0C,EACAouC,EACAD,EACAkH,EACAC,EACAlB,GAOA,IAAIF,EALCxK,EAAkBgV,UACrB3pC,KAAKgjC,WAAYrO,EAAkBgV,SAAS1hD,cAEtC0sC,EAAkBgV,SAKtB3pC,KAAK0kC,aAAa,OAASnE,IAC7BpB,EAAiBn/B,KAAKkmC,oCACjBlmC,KAAKqC,MAAMmd,EAAG7S,SAAS3M,KAAKgjC,cAGnCxf,MAAMsvB,kBACJne,EACA+K,EACAz0C,EACAouC,EACAD,EACAkH,EACAC,EACAlB,GAIEF,KACDxK,EAAKxtC,OAASwtC,GAAMwK,eAAiBA,EAEzC,CAED4T,6BAA6Bl6C,GAsB3B,OArBImH,KAAKmjC,IAAI3jB,EAAGtS,YACK,eAAfrU,EAAMnB,MACRsI,KAAKge,MAAMnlB,EAAM5Q,MAAO07B,EAAW2B,wBAEjCtlB,KAAKsyC,YAAYz5C,IACnBmH,KAAKge,MAAMnlB,EAAM5Q,MAAO07B,EAAWgC,2BAGnC9sB,EAA2BioC,UAAW,GAEtC9gC,KAAKqC,MAAMmd,EAAGzS,OAChBlU,EAAMytC,eAAiBtmC,KAAK+nC,0BACnB/nC,KAAKsyC,YAAYz5C,IAC1BmH,KAAKge,MAAMnlB,EAAM5Q,MAAO07B,EAAW8B,6BAGjCzlB,KAAKqC,MAAMmd,EAAG7R,KAAO3N,KAAKsyC,YAAYz5C,IACxCmH,KAAKge,MAAMnlB,EAAM5Q,MAAO07B,EAAWkC,oBAGrC7lB,KAAKumC,iBAAiB1tC,GACfA,CACR,CAEDm6C,kBACEtT,EACAz0C,EACAsD,GAEA,MAAMpB,EAAOq2B,MAAMwvB,kBAAkBtT,EAAUz0C,EAAUsD,GAUzD,MAPgB,sBAAdpB,EAAKuK,MACLvK,EAAKm5C,gBACLn5C,EAAKi8C,MAAMnhD,MAAQkF,EAAKm5C,eAAer+C,OAEvC+X,KAAKge,MAAM7wB,EAAKm5C,eAAer+C,MAAO07B,EAAWmC,uBAG5C34B,CACR,CAED8lD,yBAAyB9lD,GACvB,OAAKw5B,EAAkBx5B,GAIhB05B,EAAqB7mB,KAAK5Q,OAHxBo0B,MAAMyvB,yBAAyB9lD,EAIzC,CAED+lD,0BACE/lD,EACAgmD,EACAz7C,EACA07C,GAEAD,EAAUE,MAAQ1sB,EAAkBx5B,GAChC6S,KAAKmoC,+BACW,GACI,GAEpBnoC,KAAK+lC,kBAET/lC,KAAKkyC,UAAUiB,EAAUE,MAAOD,EFvhFJ9L,GEwhF5Bn6C,EAAKoN,WAAW9J,KAAKuP,KAAKigC,WAAWkT,EAAWz7C,GACjD,CAGD47C,iCAAiCnmD,GAC/BA,EAAKy5B,WAAa,QAElB,IAAIj5B,EAAO,KAMX,GALIqS,KAAKqC,MAAMmd,EAAG3O,SAChBljB,EAAO,SACEqS,KAAKgnC,aAAa,UAC3Br5C,EAAO,QAELA,EAAM,CACR,MAAM0+C,EAAKrsC,KAAK2qC,YAGH,SAATh9C,GAAmB0+C,EAAG30C,OAAS8nB,EAAG7Q,MACpC3O,KAAKgjC,WAAWqJ,EAAGpkD,QAInB4+B,EAAqBwlB,IACrBA,EAAG30C,OAAS8nB,EAAGlT,QACf+/B,EAAG30C,OAAS8nB,EAAG7Q,QAEf3O,KAAKijC,OACL91C,EAAKy5B,WAAaj5B,EAErB,CAED,OAAO61B,MAAM8vB,iCAAiCnmD,EAC/C,CAGDomD,qBAAqBpmD,GACnB,MAAMgmD,EAAYnzC,KAAKggC,YACjBwT,EAAgBxzC,KAAK5Q,MAAMnH,MAC3BwrD,EAAazzC,KAAK0zC,wBAExB,IAAIC,EAAoB,KACA,eAApBF,EAAW/7C,OACW,SAApB+7C,EAAW3rD,KACb6rD,EAAoB,OACS,WAApBF,EAAW3rD,OACpB6rD,EAAoB,WAIxB,IAAIpC,GAAY,EAChB,GAAIvxC,KAAKgnC,aAAa,QAAUhnC,KAAK4zC,sBAAsB,MAAO,CAChE,MAAMC,EAAW7zC,KAAK+lC,iBAAgB,GAEd,OAAtB4N,GACC3zC,KAAKqC,MAAMmd,EAAG13B,OACdkY,KAAK5Q,MAAMsI,KAAKuM,SAQjBkvC,EAAUW,SAAWL,EACrBN,EAAUvsB,WAAa,KACvBusB,EAAUE,MAAQrzC,KAAK+lC,oBAPvBoN,EAAUW,SAAWD,EACrBV,EAAUvsB,WAAa+sB,EACvBR,EAAUE,MAAQQ,EAASE,UAV/B,MAiBO,GACiB,OAAtBJ,IACC3zC,KAAKqC,MAAMmd,EAAG13B,OAASkY,KAAK5Q,MAAMsI,KAAKuM,SAGxCkvC,EAAUW,SAAW9zC,KAAK+lC,iBAAgB,GAC1CoN,EAAUvsB,WAAa+sB,EACnB3zC,KAAK6mC,cAAc,MACrBsM,EAAUE,MAAQrzC,KAAK+lC,mBAEvBwL,GAAY,EACZ4B,EAAUE,MAAQF,EAAUW,SAASC,eAElC,CACL,GAAwB,kBAApBN,EAAW/7C,KACb,MAAMsI,KAAKge,MACTm1B,EAAUlrD,MACVk7B,EAAO9M,sBACPo9B,EAAWtsD,OAGfoqD,GAAY,EACZ4B,EAAUW,SAAWL,EACrBN,EAAUvsB,WAAa,KACvBusB,EAAUE,MAAQF,EAAUW,SAASC,SACtC,CAED,MAAMC,EAAmBrtB,EAAkBx5B,GACrC8mD,EAAwBttB,EAAkBwsB,GAE5Ca,GAAoBC,GACtBj0C,KAAKge,MACHw1B,EACA7vB,EAAWmB,sCAIXkvB,GAAoBC,IACtBj0C,KAAKkpC,kBACHiK,EAAUE,MAAMvrD,KAChBqrD,EAAUE,MAAMprD,OACE,IAIlBspD,GAAcyC,GAAqBC,GACrCj0C,KAAKk0C,kBACHf,EAAUE,MAAMvrD,KAChBqrD,EAAUlrD,OACV,GACA,GAIJ+X,KAAKkyC,UAAUiB,EAAUE,MAAO,mBFjpFJ/L,GEkpF5Bn6C,EAAKoN,WAAW9J,KAAKuP,KAAKigC,WAAWkT,EAAW,mBACjD,CAEDgB,mBACE,OAAQn0C,KAAK5Q,MAAMsI,OACZ8nB,EAAGtP,MAEClQ,KAAK+lC,iBAA8B,GAEnCviB,MAAM2wB,kBAElB,CAGDC,oBAAoBjnD,EAAkBknD,GAEpC,MAAM1mD,EAAOR,EAAKQ,KACL,QAATA,GAA2B,QAATA,GAAkBqS,KAAK0kC,aAAa,OACxDv3C,EAAKgyC,eAAiBn/B,KAAKkmC,qCAE7B1iB,MAAM4wB,oBAAoBjnD,EAAMknD,EACjC,CAGDC,WACElE,EACAziD,GAEA61B,MAAM8wB,WAAWlE,EAAMziD,GACnBqS,KAAKqC,MAAMmd,EAAGzS,SAChBqjC,EAAK9iD,GAAGg5C,eAAiBtmC,KAAK+nC,0BAC9B/nC,KAAKumC,iBAAiB6J,EAAK9iD,IAE9B,CAGDinD,kCACEpnD,EACA/D,GAEA,GAAI4W,KAAKqC,MAAMmd,EAAGzS,OAAQ,CACxB,MAAMm9B,EAAwBlqC,KAAK5Q,MAAM+6C,mBACzCnqC,KAAK5Q,MAAM+6C,oBAAqB,EAChCh9C,EAAKk5C,WAAarmC,KAAK+nC,0BACvB/nC,KAAK5Q,MAAM+6C,mBAAqBD,CACjC,CAED,OAAO1mB,MAAM+wB,kCAAkCpnD,EAAM/D,EACtD,CAGDorD,wBACE,OAAOx0C,KAAKqC,MAAMmd,EAAGzS,QAAUyW,MAAMgxB,uBACtC,CAYDvF,iBACE5P,EACAoV,EACArG,GACc,IAAAsG,EACd,IAEI9S,EAFAxyC,EAAQ,KAIZ,GACE4Q,KAAK6R,UAAU,SACd7R,KAAKqC,MAAMmd,EAAG4Y,cAAgBp4B,KAAK0kC,aAAa,MACjD,CAcA,GAbAt1C,EAAQ4Q,KAAK5Q,MAAMm/C,QAEnB3M,EAAM5hC,KAAKquC,UACT,IACE7qB,MAAMyrB,iBACJ5P,EACAoV,EACArG,IAEJh/C,IAIGwyC,EAAI/uC,MAAO,OAAO+uC,EAAIz0C,KAK3B,MAAM,QAAEsyB,GAAYzf,KAAK5Q,MACrBqwB,EAAQA,EAAQ9zB,OAAS,KAAOmsC,EAAGC,OACrCtY,EAAQ9zB,QAAU,EACT8zB,EAAQA,EAAQ9zB,OAAS,KAAOmsC,EAAGG,SAC5CxY,EAAQ9zB,QAAU,EAErB,CAED,GAAO,OAAH+oD,EAAA9S,IAAA8S,EAAK7hD,OAASmN,KAAK0kC,aAAa,KAAM,KAAAiQ,EAAAC,EAGxC,IAAIzV,EAFJ/vC,EAAQA,GAAS4Q,KAAK5Q,MAAMm/C,QAI5B,MAAMnhC,EAAQpN,KAAKquC,UAASwG,IAAS,IAAAC,EACnC3V,EAAiBn/B,KAAKkmC,oCAEtB,MAAM6O,EAAkB/0C,KAAKwtC,iCAC3BrO,GACA,KACE,MAAMhrC,EAASqvB,MAAMyrB,iBACnB5P,EACAoV,EACArG,GAKF,OAFApuC,KAAKg1C,2BAA2B7gD,EAAQgrC,GAEjChrC,CAAP,IAMuB,4BAAzB4gD,EAAgBr9C,MAAhB,OAAAo9C,EACAC,EAAgBhX,QAAhB+W,EAAuBvW,eAEvBsW,IAKF,MAAM9G,EAAO/tC,KAAKi1C,8BAA8BF,GAIhD,OAHAhH,EAAK5O,eAAiBA,EACtBn/B,KAAKg1C,2BAA2BjH,EAAM5O,GAE/B4V,CAAP,GACC3lD,GAEH,IAAI2lD,EAGA,KAEJ,GACE3nC,EAAMjgB,MAEJ,4BADF6S,KAAKi1C,8BAA8B7nC,EAAMjgB,MAAMuK,KAE/C,CACA,IAAK0V,EAAMva,QAAUua,EAAM8nC,QAUzB,OARI9nC,EAAMjgB,KAAKgoD,OAEbn1C,KAAKge,MACHmhB,EAAel3C,MACf07B,EAAW4C,iDAIRnZ,EAAMjgB,KAGf4nD,EAAkB3nC,EAAMjgB,IACzB,CAQD,UAAAwnD,EAAI/S,IAAA+S,EAAKxnD,KAGP,OADA6S,KAAK5Q,MAAQwyC,EAAI0M,UACV1M,EAAIz0C,KAGb,GAAI4nD,EAGF,OADA/0C,KAAK5Q,MAAQge,EAAMkhC,UACZyG,EAGT,UAAAH,EAAIhT,IAAAgT,EAAKQ,OAAQ,MAAMxT,EAAI/uC,MAC3B,GAAIua,EAAMgoC,OAAQ,MAAMhoC,EAAMva,MAG9B,MAAMmN,KAAKge,MACTmhB,EAAel3C,MACf07B,EAAW2C,kCAEd,CAED,OAAO9C,MAAMyrB,iBACX5P,EACAoV,EACArG,EAEH,CAGDiH,WAAWloD,GACT,GAAI6S,KAAKqC,MAAMmd,EAAGzS,OAAQ,CACxB,MAAM5Y,EAAS6L,KAAKquC,UAAS,KAC3B,MAAMnE,EAAwBlqC,KAAK5Q,MAAM+6C,mBACzCnqC,KAAK5Q,MAAM+6C,oBAAqB,EAEhC,MAAMnE,EAAWhmC,KAAKggC,YActB,OAVEgG,EAASM,eAETn5C,EAAKw4C,WACH3lC,KAAK0lC,uCAET1lC,KAAK5Q,MAAM+6C,mBAAqBD,EAE5BlqC,KAAK6sC,sBAAsB7sC,KAAKgjC,aAC/BhjC,KAAKqC,MAAMmd,EAAGpS,QAAQpN,KAAKgjC,aAEzBgD,CAAP,IAGF,GAAI7xC,EAAOihD,OAAQ,OAAO,KAGtBjhD,EAAOtB,QAAOmN,KAAK5Q,MAAQ+E,EAAOm6C,WAGtCnhD,EAAKk5C,WAAalyC,EAAOhH,KAAKm5C,eAC1BtmC,KAAKigC,WAAW9rC,EAAOhH,KAAM,kBAC7B,IACL,CAED,OAAOq2B,MAAM6xB,WAAWloD,EACzB,CAEDmoD,mBACE,OAAOt1C,KAAKqC,MAAMmd,EAAGzS,QAAUyW,MAAM8xB,kBACtC,CAEDC,2BACEpoD,EACAiD,IAEkE,IAA9D4P,KAAK5Q,MAAM8/C,0BAA0Bn5C,QAAQ5I,EAAKlF,OACpDkF,EAAKiD,OAASA,EAEdozB,MAAM+xB,2BAA2BpoD,EAAMiD,EAE1C,CAED4/C,YACE7iD,EACAqoD,EACAC,GAEA,IACEA,IAC8D,IAA9Dz1C,KAAK5Q,MAAM8/C,0BAA0Bn5C,QAAQ5I,EAAKlF,OAFpD,CAQA,IAAK,IAAI4D,EAAI,EAAGA,EAAIsB,EAAKiD,OAAOzE,OAAQE,IAClCmU,KAAKsyC,YAAYnlD,EAAKiD,OAAOvE,KAAOA,EAAI,GAC1CmU,KAAKge,MAAM7wB,EAAKiD,OAAOvE,GAAG5D,MAAO07B,EAAWiC,sBAIhD,OAAOpC,MAAMwsB,eAAen1C,UAT3B,CAUF,CAED66C,mCAAmCC,GACjC,OAAOnyB,MAAMkyB,mCACXC,IAAkE,IAApD31C,KAAK5Q,MAAMq/C,UAAU14C,QAAQiK,KAAK5Q,MAAMnH,OAEzD,CAED2tD,gBACEvU,EACA3B,EACAz0C,EACAq2C,GAEA,GACgB,eAAdD,EAAK3pC,MACS,UAAd2pC,EAAKv5C,OACuC,IAA5CkY,KAAK5Q,MAAMq/C,UAAU14C,QAAQ2pC,GAC7B,CACA1/B,KAAKijC,OAEL,MAAM91C,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GACxCkC,EAAKkD,OAASgxC,EACdl0C,EAAK0N,UAAYmF,KAAK61C,6BAA6Br2B,EAAG5S,QAAQ,GAC9Dy0B,EAAOrhC,KAAKigC,WAAW9yC,EAAM,iBAV/B,MAWO,GACS,eAAdk0C,EAAK3pC,MACS,UAAd2pC,EAAKv5C,MACLkY,KAAK0kC,aAAa,KAClB,CACA,MAAMt1C,EAAQ4Q,KAAK5Q,MAAMm/C,QACnBnhC,EAAQpN,KAAKquC,UACjBwG,GACE70C,KAAK81C,kCAAkCpW,EAAUz0C,IACjD4pD,KACFzlD,GAGF,IAAKge,EAAMva,QAAUua,EAAM8nC,QAAS,OAAO9nC,EAAMjgB,KAEjD,MAAMgH,EAAS6L,KAAKquC,UAClB,IAAM7qB,MAAMoyB,gBAAgBvU,EAAM3B,EAAUz0C,EAAUq2C,IACtDlyC,GAGF,GAAI+E,EAAOhH,OAASgH,EAAOtB,MAAO,OAAOsB,EAAOhH,KAEhD,GAAIigB,EAAMjgB,KAER,OADA6S,KAAK5Q,MAAQge,EAAMkhC,UACZlhC,EAAMjgB,KAGf,GAAIgH,EAAOhH,KAET,OADA6S,KAAK5Q,MAAQ+E,EAAOm6C,UACbn6C,EAAOhH,KAGhB,MAAMigB,EAAMva,OAASsB,EAAOtB,KAC7B,CAED,OAAO2wB,MAAMoyB,gBAAgBvU,EAAM3B,EAAUz0C,EAAUq2C,EACxD,CAEDF,eACEC,EACA3B,EACAz0C,EACAq2C,EACAyU,GAEA,GAAI/1C,KAAKqC,MAAMmd,EAAGrS,cAAgBnN,KAAKg2C,sBAAuB,CAE5D,GADAD,EAAexU,qBAAsB,EACjCD,EAEF,OADAyU,EAAevkD,MAAO,EACf6vC,EAETrhC,KAAKijC,OACL,MAAM91C,EAAiC6S,KAAK89B,YAC1C4B,EACAz0C,GAQF,OANAkC,EAAKkD,OAASgxC,EACdl0C,EAAK8oD,cAAgBj2C,KAAK+oC,sCAC1B/oC,KAAK2jC,OAAOnkB,EAAG7S,QAEfxf,EAAK0N,UAAYmF,KAAK61C,6BAA6Br2B,EAAG5S,QAAQ,GAC9Dzf,EAAK2zC,UAAW,EACT9gC,KAAK6gC,qBAAqB1zC,GAAqB,EAjBxD,CAkBO,IACJm0C,GACDthC,KAAKglC,oBACLhlC,KAAK0kC,aAAa,KAClB,CACA,MAAMv3C,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GACxCkC,EAAKkD,OAASgxC,EAEd,MAAMltC,EAAS6L,KAAKquC,UAAS,KAC3BlhD,EAAK8oD,cACHj2C,KAAKoqC,+CACPpqC,KAAK2jC,OAAOnkB,EAAG7S,QACfxf,EAAK0N,UAAYmF,KAAK61C,6BAA6Br2B,EAAG5S,QAAQ,GAC1DmpC,EAAexU,sBAAqBp0C,EAAK2zC,UAAW,GACjD9gC,KAAK6gC,qBACV1zC,EACA4oD,EAAexU,wBAInB,GAAIptC,EAAOhH,KAET,OADIgH,EAAOtB,QAAOmN,KAAK5Q,MAAQ+E,EAAOm6C,WAC/Bn6C,EAAOhH,IAEjB,CAED,OAAOq2B,MAAM4d,eACXC,EACA3B,EACAz0C,EACAq2C,EACAyU,EAEH,CAEDG,kBAAkB/oD,GAChB,IAAIgpD,EAAQ,KACRn2C,KAAKglC,oBAAsBhlC,KAAK0kC,aAAa,OAC/CyR,EAAQn2C,KAAKquC,UAAS,IACpBruC,KAAKoqC,iDACLj9C,MAEJA,EAAK8oD,cAAgBE,EAErB3yB,MAAM0yB,kBAAkB/oD,EACzB,CAED2oD,kCACEpW,EACAz0C,GAEA,MAAMkC,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAExC,GADA+U,KAAKo0C,oBAAoBjnD,GACpB6S,KAAKq1C,WAAWloD,GACrB,OAAO6S,KAAKo2C,qBACVjpD,OACa6B,GACC,EAEjB,CAEDqnD,sBAAsB/iD,GACpB,MAAM2vC,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GACpD,GACW,KAATlqB,GACS,KAAT2vC,GACAjjC,KAAK5Q,MAAMknD,eAKX,OAHAt2C,KAAK5Q,MAAMknD,gBAAiB,EAC5Bt2C,KAAK5Q,MAAMouB,KAAO,OAClBxd,KAAKu2C,YAIP/yB,MAAM6yB,sBAAsB/iD,EAC7B,CAEDkjD,mBAAmBljD,GACjB,MAAM2vC,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAEzC,MAATlqB,GACS,MAAT2vC,EAOFzf,MAAMgzB,mBAAmBljD,GAJvB0M,KAAKqxC,SAAS7xB,EAAG9S,UAAW,EAK/B,CAED+pC,cAAcC,EAAczjD,GAC1B,MAAM0jD,EAAWnzB,MAAMizB,cAAcC,EAAMzjD,GAI3C,OAHI+M,KAAK5Q,MAAMknD,gBACbt2C,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAKmG,EAAW+C,yBAEjCiwB,CACR,CAEDC,mBACE,GAAI52C,KAAK6R,UAAU,iBAAmB7R,KAAK62C,kBAOzC,OANI72C,KAAK5Q,MAAMknD,gBACbt2C,KAAKgjC,WAAW,KAAMrf,EAAW0B,mBAEnCrlB,KAAK82C,2BACL92C,KAAK5Q,MAAMouB,KAAOxd,KAAK62C,uBACvB72C,KAAK5Q,MAAMknD,gBAAiB,GAI9B,GAAIt2C,KAAK5Q,MAAMknD,eAAf,CACE,MAAMxrD,EAAMkV,KAAK6d,MAAM9nB,QAAQ,MAAQiK,KAAK5Q,MAAMouB,KAAO,GACzD,IAAa,IAAT1yB,EACF,MAAMkV,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAM,EAAG2F,EAAO3G,qBAE9Cxc,KAAK5Q,MAAMouB,IAAM1yB,EAAM,CAExB,MAED04B,MAAMozB,kBACP,CAEDC,kBACE,MAAM,IAAEr5B,GAAQxd,KAAK5Q,MACrB,IAAI2nD,EAA4B,EAChC,KACE,CAAC,GAAD,GAAiCtzB,SAC/BzjB,KAAK6d,MAAMmkB,WAAWxkB,EAAMu5B,KAG9BA,IAGF,MAAMC,EAAMh3C,KAAK6d,MAAMmkB,WAAW+U,EAA4Bv5B,GACxDy5B,EAAMj3C,KAAK6d,MAAMmkB,WAAW+U,EAA4Bv5B,EAAM,GAEpE,OAAY,KAARw5B,GAAmC,KAARC,EACtBF,EAA4B,EAM7B,iBAHN/2C,KAAK6d,MAAMzxB,MACT2qD,EAA4Bv5B,EAC5Bu5B,EAA4Bv5B,EAAM,IAG7Bu5B,EAA4B,GAEzB,KAARC,GAAmC,KAARC,GACtBF,CAGV,CAEDD,2BAEE,IAAa,IADD92C,KAAK6d,MAAM9nB,QAAQ,KAAMiK,KAAK5Q,MAAMouB,KAE9C,MAAMxd,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAO3G,oBAE3C,CAID06B,yCACE15B,GACA,SAAE25B,EAAF,WAAYC,IAEZp3C,KAAKge,MACHR,EACAmG,EAAWO,gCACXkzB,EACAD,EAEH,CAEDE,+BACE75B,GACA,SAAE25B,EAAF,WAAYC,IAEZ,MAAMvP,EAAauP,EAAW,GAAG32C,cAAgB22C,EAAWhrD,MAAM,GAClE4T,KAAKge,MACHR,EACAmG,EAAWe,sBACX0yB,EACAvP,EACAsP,EAEH,CAEDG,iCACE95B,GACA,SAAE25B,EAAF,WAAYC,IAEZp3C,KAAKge,MAAMR,EAAKmG,EAAWQ,wBAAyBizB,EAAYD,EACjE,CAEDI,sCACE/5B,GACA,SAAE25B,IAEFn3C,KAAKge,MAAMR,EAAKmG,EAAWS,6BAA8B+yB,EAC1D,CAEDK,iCACEh6B,GACA,SACE25B,EADF,aAEEM,IAGF,OAAOz3C,KAAKge,MACVR,EACiB,OAAjBi6B,EACI9zB,EAAWW,uCACXX,EAAWU,wBACf8yB,EACAM,EAEH,CAEDC,sCACEl6B,GACA,SAAE25B,EAAF,aAAYQ,EAAZ,WAA0BP,IAE1B,IAAI1vD,EAAU,KACd,OAAQiwD,GACN,IAAK,UACL,IAAK,SACL,IAAK,SACHjwD,EAAUi8B,EAAWY,wCACrB,MACF,IAAK,SACH78B,EAAUi8B,EAAWa,uCACrB,MACF,QAEE98B,EAAUi8B,EAAWc,wCAEzB,OAAOzkB,KAAKge,MAAMR,EAAK91B,EAASyvD,EAAUC,EAAYO,EACvD,CAEDC,wCACEp6B,GACA,SAAE25B,EAAF,WAAYC,IAEZp3C,KAAKge,MACHR,EACAmG,EAAWgB,+BACXwyB,EACAC,EAEH,CAEDS,mDACEr6B,GACA,SAAE25B,IAEFn3C,KAAKge,MACHR,EACAmG,EAAWiB,0CACXuyB,EAEH,CAEDW,qBACE,MAAMpY,EAAW1/B,KAAK5Q,MAAMnH,MACtB8vD,EAAY,IAAM/3C,KAAKqC,MAAMmd,EAAG3S,QAAU7M,KAAKqC,MAAMmd,EAAG/S,QAC9D,OAAQzM,KAAK5Q,MAAMsI,MACjB,KAAK8nB,EAAG7T,IAAK,CACX,MAAMqsC,EAAUh4C,KAAK09B,aAAa19B,KAAK5Q,MAAMjI,MAAO,kBACpD,OAAI4wD,IACK,CAAErgD,KAAM,SAAU8lB,IAAKw6B,EAAQ/vD,MAAOd,MAAO6wD,GAE/C,CAAEtgD,KAAM,UAAW8lB,IAAKkiB,EAChC,CACD,KAAKlgB,EAAG70B,OAAQ,CACd,MAAMqtD,EAAUh4C,KAAK09B,aAAa19B,KAAK5Q,MAAMjI,MAAO,iBACpD,OAAI4wD,IACK,CAAErgD,KAAM,SAAU8lB,IAAKw6B,EAAQ/vD,MAAOd,MAAO6wD,GAE/C,CAAEtgD,KAAM,UAAW8lB,IAAKkiB,EAChC,CACD,KAAKlgB,EAAG/O,MACR,KAAK+O,EAAG9O,OAAQ,CACd,MAAMsnC,EAAUh4C,KAAKi4C,sBACrB,OAAIF,IACK,CACLrgD,KAAM,UACN8lB,IAAKw6B,EAAQ/vD,MACbd,MAAO6wD,GAGJ,CAAEtgD,KAAM,UAAW8lB,IAAKkiB,EAChC,CACD,QACE,MAAO,CAAEhoC,KAAM,UAAW8lB,IAAKkiB,GAEpC,CAEDwY,oBACE,MAAM16B,EAAMxd,KAAK5Q,MAAMnH,MAKvB,MAAO,CAAEqF,GAJE0S,KAAK+lC,iBAAgB,GAInBoS,KAHAn4C,KAAKmjC,IAAI3jB,EAAG7R,IACrB3N,KAAK83C,qBACL,CAAEpgD,KAAM,OAAQ8lB,OAErB,CAED46B,kCACE56B,EACAiC,EACA44B,GAEA,MAAM,aAAEV,GAAiBl4B,EACJ,OAAjBk4B,GAGAA,IAAiBU,GACnBr4C,KAAK03C,sCAAsCl6B,EAAKiC,EAEnD,CAED64B,iBAAgB,SACdnB,EADc,aAEdQ,IAaA,MAAMY,EAAY,IAAIlkD,IAChBmkD,EAAU,CACdC,eAAgB,GAChBC,cAAe,GACfC,cAAe,GACfC,iBAAkB,IAEpB,IAAIC,GAAoB,EACxB,MAAQ74C,KAAKqC,MAAMmd,EAAG/S,SAAS,CAC7B,GAAIzM,KAAKmjC,IAAI3jB,EAAGnS,UAAW,CACzBwrC,GAAoB,EACpB,KACD,CACD,MAAMC,EAAa94C,KAAKggC,aAClB,GAAE1yC,EAAF,KAAM6qD,GAASn4C,KAAKk4C,oBACpBd,EAAa9pD,EAAGxF,KACtB,GAAmB,KAAfsvD,EACF,SAEE,SAAS3/C,KAAK2/C,IAChBp3C,KAAKq3C,+BAA+B/pD,EAAGrF,MAAO,CAC5CkvD,WACAC,eAGAmB,EAAU3vD,IAAIwuD,IAChBp3C,KAAKs3C,iCAAiChqD,EAAGrF,MAAO,CAC9CkvD,WACAC,eAGJmB,EAAUrgD,IAAIk/C,GACd,MAAM33B,EAAU,CAAE03B,WAAUQ,eAAcP,cAE1C,OADA0B,EAAWxrD,GAAKA,EACR6qD,EAAKzgD,MACX,IAAK,UACHsI,KAAKo4C,kCACHD,EAAK36B,IACLiC,EACA,WAEFq5B,EAAWX,KAAOA,EAAKhxD,MACvBqxD,EAAQC,eAAehoD,KACrBuP,KAAKigC,WAAW6Y,EAAY,sBAE9B,MAEF,IAAK,SACH94C,KAAKo4C,kCAAkCD,EAAK36B,IAAKiC,EAAS,UAC1Dq5B,EAAWX,KAAOA,EAAKhxD,MACvBqxD,EAAQE,cAAcjoD,KACpBuP,KAAKigC,WAAW6Y,EAAY,qBAE9B,MAEF,IAAK,SACH94C,KAAKo4C,kCAAkCD,EAAK36B,IAAKiC,EAAS,UAC1Dq5B,EAAWX,KAAOA,EAAKhxD,MACvBqxD,EAAQG,cAAcloD,KACpBuP,KAAKigC,WAAW6Y,EAAY,qBAE9B,MAEF,IAAK,UACH,MAAM94C,KAAK03C,sCAAsCS,EAAK36B,IAAKiC,GAE7D,IAAK,OACH,OAAQk4B,GACN,IAAK,UACH33C,KAAKk3C,yCACHiB,EAAK36B,IACLiC,GAEF,MACF,IAAK,SACHzf,KAAK43C,wCAAwCO,EAAK36B,IAAKiC,GACvD,MACF,QACE+4B,EAAQI,iBAAiBnoD,KACvBuP,KAAKigC,WAAW6Y,EAAY,yBAMjC94C,KAAKqC,MAAMmd,EAAG/S,SACjBzM,KAAK2jC,OAAOnkB,EAAG3S,MAElB,CACD,MAAO,CAAE2rC,UAASK,oBACnB,CAEDE,sBACEC,EACAJ,GACA,SAAEzB,IAEF,GAAkC,IAA9B6B,EAAmBrtD,OACrB,OAAOitD,EACF,GAAgC,IAA5BA,EAAiBjtD,OAC1B,OAAOqtD,EACF,GAAIJ,EAAiBjtD,OAASqtD,EAAmBrtD,OAAQ,CAC9D,IAAK,MAAMolD,KAAUiI,EACnBh5C,KAAK63C,mDACH9G,EAAO9oD,MACP,CAAEkvD,aAGN,OAAOyB,CAPF,CASL,IAAK,MAAM7H,KAAU6H,EACnB54C,KAAK63C,mDACH9G,EAAO9oD,MACP,CAAEkvD,aAGN,OAAO6B,CAEV,CAEDC,2BAA0B,SACxB9B,IAIA,GAAIn3C,KAAK6mC,cAAc,MAAO,CAC5B,IAAK7mC,KAAKqC,MAAMmd,EAAG13B,MACjB,MAAMkY,KAAKw3C,iCAAiCx3C,KAAK5Q,MAAMnH,MAAO,CAC5DkvD,WACAM,aAAc,OAIlB,MAAM,MAAEtwD,GAAU6Y,KAAK5Q,MAevB,OAdA4Q,KAAKijC,OAGO,YAAV97C,GACU,WAAVA,GACU,WAAVA,GACU,WAAVA,GAEA6Y,KAAKw3C,iCAAiCx3C,KAAK5Q,MAAMnH,MAAO,CACtDkvD,WACAM,aAActwD,IAIXA,CACR,CACD,OAAO,IACR,CAED+xD,aAAa/rD,GAAc,SAAEgqD,EAAF,QAAYgC,IACrC,MAAMxB,EAAe33C,KAAKi5C,0BAA0B,CAAE9B,aACtDn3C,KAAK2jC,OAAOnkB,EAAGlT,QACf,MAAM,QAAEksC,EAAF,kBAAWK,GAAsB74C,KAAKs4C,gBAAgB,CAC1DnB,WACAQ,iBAIF,OAFAxqD,EAAK0rD,kBAAoBA,EAEjBlB,GACN,IAAK,UAIH,OAHAxqD,EAAKwqD,cAAe,EACpBxqD,EAAKqrD,QAAUA,EAAQC,eACvBz4C,KAAK2jC,OAAOnkB,EAAG/S,QACRzM,KAAKigC,WAAW9yC,EAAM,mBAC/B,IAAK,SAIH,OAHAA,EAAKwqD,cAAe,EACpBxqD,EAAKqrD,QAAUA,EAAQE,cACvB14C,KAAK2jC,OAAOnkB,EAAG/S,QACRzM,KAAKigC,WAAW9yC,EAAM,kBAC/B,IAAK,SAQH,OAPAA,EAAKwqD,cAAe,EACpBxqD,EAAKqrD,QAAUx4C,KAAK+4C,sBAClBP,EAAQG,cACRH,EAAQI,iBACR,CAAEzB,aAEJn3C,KAAK2jC,OAAOnkB,EAAG/S,QACRzM,KAAKigC,WAAW9yC,EAAM,kBAC/B,IAAK,SAGH,OAFAA,EAAKqrD,QAAUA,EAAQI,iBACvB54C,KAAK2jC,OAAOnkB,EAAG/S,QACRzM,KAAKigC,WAAW9yC,EAAM,kBAC/B,QAAS,CAEP,MAAM8mC,EAAQ,KACZ9mC,EAAKqrD,QAAU,GACfx4C,KAAK2jC,OAAOnkB,EAAG/S,QACRzM,KAAKigC,WAAW9yC,EAAM,mBAE/BA,EAAKwqD,cAAe,EAEpB,MAAMyB,EAAWZ,EAAQC,eAAe9sD,OAClC0tD,EAAUb,EAAQE,cAAc/sD,OAChC2tD,EAAUd,EAAQG,cAAchtD,OAChC4tD,EAAef,EAAQI,iBAAiBjtD,OAE9C,GAAKytD,GAAaC,GAAYC,GAAYC,EAEnC,IAAKH,GAAaC,EAQlB,KAAKA,IAAYC,GAAWF,GAAYG,EAAc,CAC3D,IAAK,MAAMxI,KAAUyH,EAAQI,iBAC3B54C,KAAKk3C,yCAAyCnG,EAAO9oD,MAAO,CAC1DkvD,WACAC,WAAYrG,EAAOzjD,GAAGxF,OAK1B,OAFAqF,EAAKqrD,QAAUA,EAAQC,eACvBz4C,KAAK2jC,OAAOnkB,EAAG/S,QACRzM,KAAKigC,WAAW9yC,EAAM,kBATxB,CAUA,IAAKisD,IAAaE,GAAWD,GAAWE,EAAc,CAC3D,IAAK,MAAMxI,KAAUyH,EAAQI,iBAC3B54C,KAAK43C,wCAAwC7G,EAAO9oD,MAAO,CACzDkvD,WACAC,WAAYrG,EAAOzjD,GAAGxF,OAK1B,OAFAqF,EAAKqrD,QAAUA,EAAQE,cACvB14C,KAAK2jC,OAAOnkB,EAAG/S,QACRzM,KAAKigC,WAAW9yC,EAAM,iBATxB,CAYL,OADA6S,KAAKu3C,sCAAsC4B,EAAS,CAAEhC,aAC/CljB,GACR,CAxBC,OANA9mC,EAAKqrD,QAAUx4C,KAAK+4C,sBAClBP,EAAQG,cACRH,EAAQI,iBACR,CAAEzB,aAEJn3C,KAAK2jC,OAAOnkB,EAAG/S,QACRzM,KAAKigC,WAAW9yC,EAAM,iBAwB9B,CAhCC,OAAO8mC,GAiCV,EAEJ,CAED4Z,yBAAyB1gD,GACvB,MAAMG,EAAK0S,KAAK+lC,kBAMhB,OALA54C,EAAKG,GAAKA,EACVH,EAAKmD,KAAO0P,KAAKk5C,aAAal5C,KAAKggC,YAAa,CAC9CmX,SAAU7pD,EAAGxF,KACbqxD,QAAS7rD,EAAGrF,QAEP+X,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAEDke,cAAcwU,GAEV7f,KAAKqC,MAAMmd,EAAG13B,OACO,OAArBkY,KAAK5Q,MAAMjI,OACX04B,IAAaL,EAAG13B,MAEd,cADFkY,KAAK6d,MAAMzxB,MAAM4T,KAAK5Q,MAAMquB,aAAczd,KAAK5Q,MAAMuuB,YAGrD3d,KAAK5Q,MAAMswB,aAAc,EAEzB8D,MAAMnY,cAAcwU,EAEvB,CAGDm2B,sBACE,MAAM/S,EAAOjjC,KAAKw5C,iBAClB,GAAI,KAAAx5C,KAAK6d,MAAMmkB,WAAWiB,GAA8B,CACtD,MAAMwW,EAAYz5C,KAAK6d,MAAMmkB,WAAWiB,EAAO,GAC/C,OACgB,KAAdwW,GAAkD,KAAdA,CAEvC,CACD,OAAO,CACR,CAEDxE,8BAA8B9nD,GAC5B,MAAqB,uBAAdA,EAAKuK,KAAgCvK,EAAKgD,WAAahD,CAC/D,GO7/GHusD,WFyCczc,GACd,cAAcA,EACZ8H,kBACE,OAAOpM,EACR,CAEDghB,iBAGE,OAAO35C,KAAKqC,MAAMmd,EAAG13B,KACtB,CAED8xD,2BACE,OACG55C,KAAKqC,MAAMmd,EAAGvT,WACbjM,KAAKqC,MAAMmd,EAAGlT,SACdtM,KAAKqC,MAAMmd,EAAG7Q,OACd3O,KAAKqC,MAAMmd,EAAGnS,WACdrN,KAAKqC,MAAMmd,EAAGzT,cACd/L,KAAK65C,2BACN75C,KAAKigB,uBAET,CAED65B,+BAME,OADA95C,KAAKijC,OACEjjC,KAAK45C,0BACb,CAGDG,gBAA+BC,GAC7B,IAAKh6C,KAAKqC,MAAMmd,EAAG13B,MACjB,OAGF,MAAMwT,EAAW0E,KAAK5Q,MAAMjI,MAC5B,OAC0C,IAAxC6yD,EAAiBjkD,QAAQuF,IACzB0E,KAAKi6C,WAAWj6C,KAAK85C,6BAA6BhmD,KAAKkM,OAEhD1E,OAJT,CAOD,CAOD4+C,iBACEC,EAIAH,EACAI,EACA57B,GAEA,MAAM67B,EAAe,CAAC78B,EAAKliB,EAAUg/C,EAAQC,KACvCj/C,IAAag/C,GAAUH,EAASI,IAClCv6C,KAAKge,MAAMR,EAAKgc,GAASwB,sBAAuBsf,EAAQC,EACzD,EAEGC,EAAe,CAACh9B,EAAKliB,EAAUm/C,EAAMC,MAEtCP,EAASM,IAASn/C,IAAao/C,GAC/BP,EAASO,IAASp/C,IAAam/C,IAEhCz6C,KAAKge,MAAMR,EAAKgc,GAASiB,sBAAuBggB,EAAMC,EACvD,EAGH,OAAS,CACP,MAAMhb,EAAW1/B,KAAK5Q,MAAMnH,MACtBqT,EAAwB0E,KAAK+5C,gBACjCC,EAAiBvlD,OAAjB,MAAwB2lD,EAAAA,EAAuB,KAGjD,IAAK9+C,EAAU,MAEXkhC,GAAmBlhC,GACjB6+C,EAASQ,cACX36C,KAAKge,MAAM0hB,EAAUlG,GAASU,iCAE9BmgB,EAAa3a,EAAUpkC,EAAUA,EAAU,YAC3C++C,EAAa3a,EAAUpkC,EAAUA,EAAU,UAE3C6+C,EAASQ,cAAgBr/C,IAGvBtU,OAAOmC,eAAeC,KAAK+wD,EAAU7+C,GACvC0E,KAAKge,MAAM0hB,EAAUlG,GAASW,kBAAmB7+B,IAEjD++C,EAAa3a,EAAUpkC,EAAU,SAAU,YAC3C++C,EAAa3a,EAAUpkC,EAAU,SAAU,YAC3C++C,EAAa3a,EAAUpkC,EAAU,WAAY,YAC7C++C,EAAa3a,EAAUpkC,EAAU,WAAY,YAE7Ck/C,EAAa9a,EAAUpkC,EAAU,UAAW,YAC5Ck/C,EAAa9a,EAAUpkC,EAAU,SAAU,aAE7C6+C,EAAS7+C,IAAY,GAGvB,MAAI8+C,GAAAA,EAAqB32B,SAASnoB,IAChC0E,KAAKge,MACH0hB,EAEAlhB,EACAljB,EAGL,CACF,CAEDs/C,mBAAmBjtD,GACjB,OAAQA,GACN,IAAK,cACL,IAAK,cACH,OAAOqS,KAAKqC,MAAMmd,EAAG/S,QACvB,IAAK,wBACH,OAAOzM,KAAKqC,MAAMmd,EAAGlT,QACvB,IAAK,oBACH,OAAOtM,KAAKqC,MAAMmd,EAAGpT,UACvB,IAAK,4BACH,OAAOpM,KAAK0kC,aAAa,KAG7B,MAAM,IAAI78C,MAAM,cACjB,CAEDgzD,YAAuBltD,EAAsBmtD,GAC3C,MAAM3mD,EAAc,GACpB,MAAQ6L,KAAK46C,mBAAmBjtD,IAE9BwG,EAAO1D,KAAKqqD,KAEd,OAAO3mD,CACR,CAED4mD,qBACEptD,EACAmtD,GAEA,OAAOxhB,GACLt5B,KAAKg7C,2BACHrtD,EACAmtD,GACoB,GAGzB,CAMDE,2BACErtD,EACAmtD,EACAG,GAEA,MAAM9mD,EAAS,GAEf,MACM6L,KAAK46C,mBAAmBjtD,IADrB,CAKP,MAAM6jD,EAAUsJ,IAChB,GAAe,MAAXtJ,EACF,OAIF,GAFAr9C,EAAO1D,KAAK+gD,IAERxxC,KAAKmjC,IAAI3jB,EAAG3S,OAAhB,CAIA,GAAI7M,KAAK46C,mBAAmBjtD,GAC1B,MAOF,YAJIstD,GAEFj7C,KAAK2jC,OAAOnkB,EAAG3S,OARhB,CAWF,CAED,OAAO1Y,CACR,CAED+mD,qBACEvtD,EACAmtD,EACAK,EACAC,GAEKA,IACCD,EACFn7C,KAAK2jC,OAAOnkB,EAAGvT,UAEfjM,KAAKiqC,iBAAiB,MAI1B,MAAM91C,EAAS6L,KAAK+6C,qBAAqBptD,EAAMmtD,GAQ/C,OANIK,EACFn7C,KAAK2jC,OAAOnkB,EAAGpT,UAEfpM,KAAKiqC,iBAAiB,KAGjB91C,CACR,CAEDknD,oBACE,MAAMluD,EAAuB6S,KAAKggC,YAiBlC,OAhBAhgC,KAAK2jC,OAAOnkB,EAAGjP,SACfvQ,KAAK2jC,OAAOnkB,EAAG7S,QACV3M,KAAKqC,MAAMmd,EAAG70B,SACjBqV,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOuxC,GAAS6C,+BAIxClvC,EAAK02C,SAAW7jC,KAAKo/B,gBACrBp/B,KAAK2jC,OAAOnkB,EAAG5S,QAEX5M,KAAKmjC,IAAI3jB,EAAGvS,OACd9f,EAAKmuD,UAAYt7C,KAAKu7C,mBAA2C,IAE/Dv7C,KAAK0kC,aAAa,OACpBv3C,EAAKgyC,eAAiBn/B,KAAKw7C,wBAEtBx7C,KAAKigC,WAAW9yC,EAAM,eAC9B,CAEDouD,kBAAkBE,GAChB,IAAIhZ,EAAyBziC,KAAK+lC,kBAClC,KAAO/lC,KAAKmjC,IAAI3jB,EAAGvS,MAAM,CACvB,MAAM9f,EAA0B6S,KAAKyhC,gBAAgBgB,GACrDt1C,EAAKoB,KAAOk0C,EACZt1C,EAAKi8C,MAAQppC,KAAK+lC,gBAAgB0V,GAClChZ,EAASziC,KAAKigC,WAAW9yC,EAAM,kBAChC,CACD,OAAOs1C,CACR,CAEDiZ,uBACE,MAAMvuD,EAA0B6S,KAAKggC,YAKrC,OAJA7yC,EAAKwuD,SAAW37C,KAAKu7C,mBAA2C,IAC3Dv7C,KAAKigB,yBAA2BjgB,KAAK0kC,aAAa,OACrDv3C,EAAKgyC,eAAiBn/B,KAAKw7C,wBAEtBx7C,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAEDyuD,yBAAyBC,GACvB77C,KAAKijC,OACL,MAAM91C,EAA0B6S,KAAKyhC,gBAAgBoa,GAIrD,OAHA1uD,EAAK2uD,cAAgBD,EACrB1uD,EAAKm5C,eAAiBtmC,KAAK+7C,uBAAqC,GAChE5uD,EAAK6uD,SAAU,EACRh8C,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAED8uD,sBACE,MAAM9uD,EAAqB6S,KAAKggC,YAEhC,OADAhgC,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,aAC9B,CAED+uD,mBACE,MAAM/uD,EAAsB6S,KAAKggC,YAOjC,OANAhgC,KAAK2jC,OAAOnkB,EAAG3O,SACX7Q,KAAKqC,MAAMmd,EAAGjP,SAChBpjB,EAAKgvD,SAAWn8C,KAAKq7C,oBAErBluD,EAAKgvD,SAAWn8C,KAAKu7C,mBAA2C,GAE3Dv7C,KAAKigC,WAAW9yC,EAAM,cAC9B,CAEDivD,uBACE,MAAMjvD,EAA0B6S,KAAKggC,YAIrC,OAHA7yC,EAAKrF,KAAOkY,KAAKq8C,oBAAoBlvD,EAAKlF,OAC1CkF,EAAKmvD,WAAat8C,KAAKu8C,mBAAmB/8B,EAAGnP,UAC7CljB,EAAK1E,QAAUuX,KAAKu8C,mBAAmB/8B,EAAG7R,IACnC3N,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAEDqvD,2BACE,GAAIx8C,KAAK0kC,aAAa,KACpB,OAAO1kC,KAAKy8C,uBAEf,CAEDA,wBACE,MAAMtvD,EAAqC6S,KAAKggC,YAiBhD,OAfIhgC,KAAK0kC,aAAa,MAAQ1kC,KAAKqC,MAAMmd,EAAG4Y,aAC1Cp4B,KAAKijC,OAELjjC,KAAKgjC,aAGP71C,EAAKiD,OAAS4P,KAAKk7C,qBACjB,4BACAl7C,KAAKo8C,qBAAqBtoD,KAAKkM,OACjB,GACO,GAEI,IAAvB7S,EAAKiD,OAAOzE,QACdqU,KAAKge,MAAM7wB,EAAKlF,MAAOuxC,GAASc,qBAE3Bt6B,KAAKigC,WAAW9yC,EAAM,6BAC9B,CAEDuvD,gCACE,OAAI18C,KAAK2qC,YAAYjzC,OAAS8nB,EAAG1P,QAC/B9P,KAAKijC,OACEjjC,KAAK07C,wBAEP,IACR,CAIDiB,gBACEC,EACAC,GAGA,MAAMC,EAAsBF,IAAgBp9B,EAAGpS,MAC/CyvC,EAAU1d,eAAiBn/B,KAAKw8C,2BAChCx8C,KAAK2jC,OAAOnkB,EAAG7S,QACfkwC,EAAUE,WAAa/8C,KAAKg9C,kCACxBF,GAGO98C,KAAKqC,MAAMu6C,MAFpBC,EAAUvW,eACRtmC,KAAKi9C,qCAAqCL,GAK/C,CAEDI,iCAGE,OAAOh9C,KAAKk9C,iBAAiB19B,EAAG5S,OAAzB,IAA6DvgB,KAClEqC,IAEqB,eAAjBA,EAAQgJ,MACS,gBAAjBhJ,EAAQgJ,MACS,kBAAjBhJ,EAAQgJ,MACS,iBAAjBhJ,EAAQgJ,MAERsI,KAAKge,MACHtvB,EAAQzG,MACRuxC,GAAS+C,kCACT7tC,EAAQgJ,MAGJhJ,IAGb,CAEDyuD,6BACOn9C,KAAKmjC,IAAI3jB,EAAG3S,QAAW7M,KAAKo9C,oBAC/Bp9C,KAAK2jC,OAAOnkB,EAAG1S,KAElB,CAEDuwC,uBACE1vD,EACAR,GAIA,OAFA6S,KAAK28C,gBAAgBn9B,EAAGzS,MAAO5f,GAC/B6S,KAAKm9C,6BACEn9C,KAAKigC,WAAW9yC,EAAMQ,EAC9B,CAED2vD,kCAEE,OADAt9C,KAAKijC,OACEjjC,KAAKmjC,IAAI3jB,EAAG13B,OAASkY,KAAKqC,MAAMmd,EAAGzS,MAC3C,CAEDwwC,yBAAyBpwD,GACvB,IAEI6S,KAAKqC,MAAMmd,EAAGvT,YACdjM,KAAKw9C,YAAYx9C,KAAKs9C,gCAAgCxpD,KAAKkM,OAG7D,OAGFA,KAAK2jC,OAAOnkB,EAAGvT,UACf,MAAM3e,EAAK0S,KAAK+lC,kBAChBz4C,EAAGg5C,eAAiBtmC,KAAK+7C,wBACzB/7C,KAAKumC,iBAAiBj5C,GAEtB0S,KAAK2jC,OAAOnkB,EAAGpT,UACfjf,EAAK4vD,WAAa,CAACzvD,GAEnB,MAAMoK,EAAOsI,KAAKy9C,2BAGlB,OAFI/lD,IAAMvK,EAAKm5C,eAAiB5uC,GAChCsI,KAAKm9C,6BACEn9C,KAAKigC,WAAW9yC,EAAM,mBAC9B,CAEDuwD,iCACEvwD,EACAwwD,GAEI39C,KAAKmjC,IAAI3jB,EAAGtS,YAAW/f,EAAK2zC,UAAW,GAC3C,MAAM8c,EAAezwD,EAErB,GAAI6S,KAAKqC,MAAMmd,EAAG7S,SAAW3M,KAAK0kC,aAAa,KAAM,CAC/CiZ,GACF39C,KAAKge,MAAM7wB,EAAKlF,MAAOuxC,GAASkC,4BAElC,MAAMrsC,EAA8BuuD,EAMpC,GALIvuD,EAAO1B,MAAQqS,KAAK0kC,aAAa,MACnC1kC,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAKgc,GAASG,iCAEtC35B,KAAK28C,gBAAgBn9B,EAAGzS,MAAO1d,GAC/B2Q,KAAKm9C,6BACe,QAAhB9tD,EAAO1B,KACL0B,EAAO0tD,WAAWpxD,OAAS,IAC7BqU,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAO9O,gBAC9BrU,KAAKsyC,YAAYjjD,EAAO0tD,WAAW,KACrC/8C,KAAKge,MACHhe,KAAK5Q,MAAMouB,IACXgc,GAASE,yCAIV,GAAoB,QAAhBrqC,EAAO1B,KAAgB,CAChC,GAAiC,IAA7B0B,EAAO0tD,WAAWpxD,OACpBqU,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAO7O,oBAC7B,CACL,MAAMupC,EAAiBxuD,EAAO0tD,WAAW,GACrC/8C,KAAKsyC,YAAYuL,IACnB79C,KAAKge,MACHhe,KAAK5Q,MAAMouB,IACXgc,GAASE,mCAIa,eAAxBmkB,EAAenmD,MACfmmD,EAAe/c,UAEf9gC,KAAKge,MACHhe,KAAK5Q,MAAMouB,IACXgc,GAASmC,uCAGe,gBAAxBkiB,EAAenmD,MACjBsI,KAAKge,MACHhe,KAAK5Q,MAAMouB,IACXgc,GAASoC,kCAGd,CACGvsC,EAAOi3C,gBACTtmC,KAAKge,MACH3uB,EAAOi3C,eAAer+C,MACtBuxC,GAASqC,+BA9BR,MAkCLxsC,EAAO1B,KAAO,SAEhB,OAAOqS,KAAKigC,WAAW5wC,EAAQ,oBAxDjC,CAyDO,CACL,MAAMwoC,EAAkC+lB,EACpCD,IAAU9lB,EAAS8lB,UAAW,GAClC,MAAMjmD,EAAOsI,KAAKy9C,2BAGlB,OAFI/lD,IAAMmgC,EAASyO,eAAiB5uC,GACpCsI,KAAKm9C,6BACEn9C,KAAKigC,WAAWpI,EAAU,sBAClC,CACF,CAEDimB,oBACE,MAAM3wD,EAAY6S,KAAKggC,YAEvB,GAAIhgC,KAAKqC,MAAMmd,EAAG7S,SAAW3M,KAAK0kC,aAAa,KAC7C,OAAO1kC,KAAKq9C,uBAAuB,6BAA8BlwD,GAGnE,GAAI6S,KAAKqC,MAAMmd,EAAGvP,MAAO,CACvB,MAAM3iB,EAAmB0S,KAAKggC,YAE9B,OADAhgC,KAAKijC,OACDjjC,KAAKqC,MAAMmd,EAAG7S,SAAW3M,KAAK0kC,aAAa,KACtC1kC,KAAKq9C,uBACV,kCACAlwD,IAGFA,EAAKlE,IAAM+W,KAAK0sC,iBAAiBp/C,EAAI,OAC9B0S,KAAK09C,iCAAiCvwD,GAAM,GAEtD,CAED6S,KAAKk6C,iBACH/sD,EACA,CAAC,YACD,CACE,UACA,WACA,UACA,YACA,SACA,SACA,YAEFqsC,GAASuB,6BAIX,OADY/6B,KAAKu9C,yBAAyBpwD,KAK1C6S,KAAK4yC,kBAAkBzlD,GAAiC,GAErDA,EAAKS,UACY,eAAlBT,EAAKlE,IAAIyO,MACU,QAAlBvK,EAAKlE,IAAInB,MAAoC,QAAlBqF,EAAKlE,IAAInB,OACrCkY,KAAK45C,6BAELzsD,EAAKQ,KAAOR,EAAKlE,IAAInB,KACrBkY,KAAK4yC,kBAAkBzlD,GAAiC,IAEnD6S,KAAK09C,iCAAiCvwD,IAAQA,EAAKwwD,UAC3D,CAEDI,qBACE,MAAM5wD,EAAwB6S,KAAKggC,YAEnC,OADA7yC,EAAKqrD,QAAUx4C,KAAKg+C,2BACbh+C,KAAKigC,WAAW9yC,EAAM,gBAC9B,CAED6wD,2BACEh+C,KAAK2jC,OAAOnkB,EAAGlT,QACf,MAAMksC,EAAUx4C,KAAK66C,YACnB,cACA76C,KAAK89C,kBAAkBhqD,KAAKkM,OAG9B,OADAA,KAAK2jC,OAAOnkB,EAAG/S,QACR+rC,CACR,CAEDyF,wBAEE,OADAj+C,KAAKijC,OACDjjC,KAAKmjC,IAAI3jB,EAAG/Q,SACPzO,KAAKgnC,aAAa,aAEvBhnC,KAAKgnC,aAAa,aACpBhnC,KAAKijC,SAEFjjC,KAAKqC,MAAMmd,EAAGvT,YAGnBjM,KAAKijC,SACAjjC,KAAK25C,mBAGV35C,KAAKijC,OACEjjC,KAAKqC,MAAMmd,EAAG7O,OACtB,CAEDutC,6BACE,MAAM/wD,EAA0B6S,KAAKggC,YAGrC,OAFA7yC,EAAKrF,KAAOkY,KAAKq8C,oBAAoBlvD,EAAKlF,OAC1CkF,EAAKmvD,WAAat8C,KAAKm+C,sBAAsB3+B,EAAG7O,KACzC3Q,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAEDixD,oBACE,MAAMjxD,EAAuB6S,KAAKggC,YA8BlC,OA5BAhgC,KAAK2jC,OAAOnkB,EAAGlT,QAEXtM,KAAKqC,MAAMmd,EAAG/Q,UAChBthB,EAAKwwD,SAAW39C,KAAK5Q,MAAMjI,MAC3B6Y,KAAKijC,OACLjjC,KAAKylC,iBAAiB,aACbzlC,KAAK6mC,cAAc,cAC5B15C,EAAKwwD,UAAW,GAGlB39C,KAAK2jC,OAAOnkB,EAAGvT,UACf9e,EAAK68C,cAAgBhqC,KAAKk+C,6BAC1B/wD,EAAKkxD,SAAWr+C,KAAK6mC,cAAc,MAAQ7mC,KAAKs+C,cAAgB,KAEhEt+C,KAAK2jC,OAAOnkB,EAAGpT,UAEXpM,KAAKqC,MAAMmd,EAAG/Q,UAChBthB,EAAK2zC,SAAW9gC,KAAK5Q,MAAMjI,MAC3B6Y,KAAKijC,OACLjjC,KAAK2jC,OAAOnkB,EAAGtS,WACNlN,KAAKmjC,IAAI3jB,EAAGtS,YACrB/f,EAAK2zC,UAAW,GAGlB3zC,EAAKm5C,eAAiBtmC,KAAKu+C,iBAC3Bv+C,KAAKwmC,YACLxmC,KAAK2jC,OAAOnkB,EAAG/S,QAERzM,KAAKigC,WAAW9yC,EAAM,eAC9B,CAEDqxD,mBACE,MAAMrxD,EAAsB6S,KAAKggC,YACjC7yC,EAAKsxD,aAAez+C,KAAKk7C,qBACvB,oBACAl7C,KAAK0+C,wBAAwB5qD,KAAKkM,OACpB,GACO,GAKvB,IAAI2+C,GAAsB,EACtBC,EAAkB,KAoCtB,OAnCAzxD,EAAKsxD,aAAatpD,SAAQ0pD,IAAe,IAAAC,EACvC,IAAI,KAAEpnD,GAASmnD,GAGbF,GACS,eAATjnD,GACS,mBAATA,GACW,uBAATA,GAAiCmnD,EAAY/d,UAE/C9gC,KAAKge,MAAM6gC,EAAY52D,MAAOuxC,GAAS6B,4BAIzCsjB,EACEA,GACU,uBAATjnD,GAAiCmnD,EAAY/d,UACrC,mBAATppC,EAGW,eAATA,IAEFA,GADAmnD,EAAcA,EAAYvY,gBACP5uC,MAGrB,MAAMqnD,EAAqB,uBAATrnD,EAElBknD,EAAe,OAAAE,EAAGF,GAAHE,EAAsBC,EACjCH,IAAoBG,GACtB/+C,KAAKge,MACH6gC,EAAY52D,MACZuxC,GAAS0B,iCAEZ,IAGIl7B,KAAKigC,WAAW9yC,EAAM,cAC9B,CAEDuxD,0BAGE,MAAQz2D,MAAOy3C,EAAT,SAAmBz0C,GAAa+U,KAAK5Q,MAErCg3C,EAAOpmC,KAAKmjC,IAAI3jB,EAAGnS,UACzB,IAAI3V,EAAOsI,KAAKs+C,cAChB,MAAMxd,EAAW9gC,KAAKmjC,IAAI3jB,EAAGtS,UAG7B,GAFgBlN,KAAKmjC,IAAI3jB,EAAGzS,OAEf,CACX,MAAMiyC,EAAoCh/C,KAAKyhC,gBAAgB/pC,GAC/DsnD,EAAYle,SAAWA,EAGP,oBAAdppC,EAAKA,MACJA,EAAKynC,gBACiB,eAAvBznC,EAAKikD,SAASjkD,MAIdsI,KAAKge,MAAMtmB,EAAKzP,MAAOuxC,GAASyB,yBAIhC+jB,EAAYj0C,MAAQrT,GANpBsnD,EAAYj0C,MAASrT,EAAKikD,SAS5BqD,EAAYlS,YAAc9sC,KAAKs+C,cAC/B5mD,EAAOsI,KAAKigC,WAAW+e,EAAa,qBAnBtC,MAoBO,GAAIle,EAAU,CACnB,MAAMme,EAAqCj/C,KAAKyhC,gBAAgB/pC,GAChEunD,EAAiB3Y,eAAiB5uC,EAClCA,EAAOsI,KAAKigC,WAAWgf,EAAkB,iBAC1C,CAED,GAAI7Y,EAAM,CACR,MAAM8Y,EAAyBl/C,KAAK89B,YAAY4B,EAAUz0C,GAC1Di0D,EAAS5Y,eAAiB5uC,EAC1BA,EAAOsI,KAAKigC,WAAWif,EAAU,aAClC,CAED,OAAOxnD,CACR,CAEDynD,2BACE,MAAMhyD,EAAO6S,KAAKggC,YAIlB,OAHAhgC,KAAK2jC,OAAOnkB,EAAG7S,QACfxf,EAAKm5C,eAAiBtmC,KAAKs+C,cAC3Bt+C,KAAK2jC,OAAOnkB,EAAG5S,QACR5M,KAAKigC,WAAW9yC,EAAM,sBAC9B,CAEDiyD,iCACE1nD,EACA2nD,GAEA,MAAMlyD,EAAsC6S,KAAKggC,YAQjD,MAPa,sBAATtoC,IAEFvK,EAAKkyD,WAAaA,EACdA,GAAUr/C,KAAKijC,OACnBjjC,KAAKijC,QAEPjjC,KAAK28C,gBAAgBn9B,EAAGpS,MAAOjgB,GACxB6S,KAAKigC,WAAW9yC,EAAMuK,EAC9B,CAED4nD,yBACE,MAAMnyD,EAAwB6S,KAAKggC,YAcnC,OAbA7yC,EAAK6qD,QAAU,MACb,OAAQh4C,KAAK5Q,MAAMsI,MACjB,KAAK8nB,EAAG7T,IACR,KAAK6T,EAAG5T,OACR,KAAK4T,EAAG70B,OACR,KAAK60B,EAAG/O,MACR,KAAK+O,EAAG9O,OAEN,OAAO1Q,KAAKo/B,gBACd,QACE,MAAMp/B,KAAKgjC,aAVF,KAaRhjC,KAAKigC,WAAW9yC,EAAM,gBAC9B,CAEDoyD,6BACE,MAAMpyD,EAAwB6S,KAAKggC,YAEnC,OADA7yC,EAAK6qD,QAAUh4C,KAAKw/C,eAAc,GAC3Bx/C,KAAKigC,WAAW9yC,EAAM,gBAC9B,CAEDsyD,4BACE,OAAIz/C,KAAK5Q,MAAMi2C,OAAerlC,KAAKs+C,cAC5B96B,MAAMi8B,2BACd,CAEDC,qCACE,MAAMC,EAAc3/C,KAAKi8C,sBACzB,OAAIj8C,KAAKgnC,aAAa,QAAUhnC,KAAKigB,wBAC5BjgB,KAAK47C,yBAAyB+D,GAE9BA,CAEV,CAEDC,sBACE,OAAQ5/C,KAAK5Q,MAAMsI,MACjB,KAAK8nB,EAAG13B,KACR,KAAK03B,EAAG1O,MACR,KAAK0O,EAAGhP,MAAO,CACb,MAAM9Y,EAAOsI,KAAKqC,MAAMmd,EAAG1O,OACvB,gBACA9Q,KAAKqC,MAAMmd,EAAGhP,OACd,gBAvzBd,SACErpB,GAEA,OAAQA,GACN,IAAK,MACH,MAAO,eACT,IAAK,UACH,MAAO,mBACT,IAAK,SACH,MAAO,kBACT,IAAK,QACH,MAAO,iBACT,IAAK,SACH,MAAO,kBACT,IAAK,SACH,MAAO,kBACT,IAAK,SACH,MAAO,kBACT,IAAK,SACH,MAAO,kBACT,IAAK,YACH,MAAO,qBACT,IAAK,UACH,MAAO,mBACT,QACE,OAEL,CA6xBa04D,CAAoB7/C,KAAK5Q,MAAMjI,OACnC,QACW6H,IAAT0I,GACA,KAAAsI,KAAK8/C,oBACL,CACA,MAAM3yD,EAAwB6S,KAAKggC,YAEnC,OADAhgC,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAMuK,EAC9B,CACD,OAAOsI,KAAK07C,sBACb,CACD,KAAKl8B,EAAG70B,OACR,KAAK60B,EAAG7T,IACR,KAAK6T,EAAG5T,OACR,KAAK4T,EAAG/O,MACR,KAAK+O,EAAG9O,OACN,OAAO1Q,KAAKs/C,yBACd,KAAK9/B,EAAG/Q,QACN,GAAyB,MAArBzO,KAAK5Q,MAAMjI,MAAe,CAC5B,MAAMgG,EAAwB6S,KAAKggC,YAC7BuW,EAAYv2C,KAAK2qC,YACvB,GAAI4L,EAAU7+C,OAAS8nB,EAAG7T,KAAO4qC,EAAU7+C,OAAS8nB,EAAG5T,OACrD,MAAM5L,KAAKgjC,aAGb,OADA71C,EAAK6qD,QAAUh4C,KAAK+/C,kBACb//C,KAAKigC,WAAW9yC,EAAM,gBAC9B,CACD,MACF,KAAKqyB,EAAGtP,MACN,OAAOlQ,KAAK0/C,qCACd,KAAKlgC,EAAG3O,QACN,OAAO7Q,KAAKk8C,mBACd,KAAK18B,EAAGjP,QACN,OAAOvQ,KAAKq7C,oBACd,KAAK77B,EAAGlT,OACN,OAAOtM,KAAKw9C,YAAYx9C,KAAKi+C,sBAAsBnqD,KAAKkM,OACpDA,KAAKo+C,oBACLp+C,KAAK+9C,qBACX,KAAKv+B,EAAGvT,SACN,OAAOjM,KAAKw+C,mBACd,KAAKh/B,EAAG7S,OAaN,OAAO3M,KAAKm/C,2BACd,KAAK3/B,EAAGlS,UACN,OAAOtN,KAAKu/C,6BAGhB,MAAMv/C,KAAKgjC,YACZ,CAEDgd,2BACE,IAAItoD,EAAOsI,KAAK4/C,sBAChB,MAAQ5/C,KAAKigB,yBAA2BjgB,KAAKmjC,IAAI3jB,EAAGvT,WAClD,GAAIjM,KAAKqC,MAAMmd,EAAGpT,UAAW,CAC3B,MAAMjf,EAAsB6S,KAAKyhC,gBAAgB/pC,GACjDvK,EAAK2/C,YAAcp1C,EACnBsI,KAAK2jC,OAAOnkB,EAAGpT,UACf1U,EAAOsI,KAAKigC,WAAW9yC,EAAM,cAJ/B,KAKO,CACL,MAAMA,EAA8B6S,KAAKyhC,gBAAgB/pC,GACzDvK,EAAK4/C,WAAar1C,EAClBvK,EAAK6/C,UAAYhtC,KAAKs+C,cACtBt+C,KAAK2jC,OAAOnkB,EAAGpT,UACf1U,EAAOsI,KAAKigC,WAAW9yC,EAAM,sBAC9B,CAEH,OAAOuK,CACR,CAEDuoD,oBACE3xD,GAEA,MAAMnB,EAAyB6S,KAAKggC,YASpC,OARAhgC,KAAKylC,iBAAiBn3C,GACtBnB,EAAKmB,SAAWA,EAChBnB,EAAKm5C,eAAiBtmC,KAAKkgD,8BAEV,aAAb5xD,GACF0R,KAAKmgD,iCAAiChzD,GAGjC6S,KAAKigC,WAAW9yC,EAAM,iBAC9B,CAEDgzD,iCAAiChzD,GAC/B,OAAQA,EAAKm5C,eAAe5uC,MAC1B,IAAK,cACL,IAAK,cACH,OACF,QACEsI,KAAKge,MAAM7wB,EAAKlF,MAAOuxC,GAAS0C,oBAErC,CAEDkkB,mBACE,MAAMjzD,EAAO6S,KAAKggC,YAClBhgC,KAAKylC,iBAAiB,SACtB,MAAMuE,EAAgBhqC,KAAKggC,YAG3B,OAFAgK,EAAcliD,KAAOkY,KAAKq8C,oBAAoBrS,EAAc/hD,OAC5DkF,EAAK68C,cAAgBhqC,KAAKigC,WAAW+J,EAAe,mBAC7ChqC,KAAKigC,WAAW9yC,EAAM,cAC9B,CAED+yD,8BACE,MAAM5xD,EAAW,CAAC,QAAS,SAAU,YAAYsuC,MAAKyjB,GACpDrgD,KAAKgnC,aAAaqZ,KAEpB,OAAO/xD,EACH0R,KAAKigD,oBAAoB3xD,GACzB0R,KAAKgnC,aAAa,SAClBhnC,KAAKogD,mBACLpgD,KAAKggD,0BACV,CAEDM,+BACE3yD,EACA4yD,EACAjyD,GAEA,MAAMnB,EAA6C6S,KAAKggC,YAClDwgB,EAAqBxgD,KAAKmjC,IAAI70C,GAC9Bod,EAAQ,GACd,GACEA,EAAMjb,KAAK8vD,WACJvgD,KAAKmjC,IAAI70C,IAClB,OAAqB,IAAjBod,EAAM/f,QAAiB60D,GAG3BrzD,EAAKue,MAAQA,EACN1L,KAAKigC,WAAW9yC,EAAMQ,IAHpB+d,EAAM,EAIhB,CAED+0C,kCACE,OAAOzgD,KAAKsgD,+BACV,qBACAtgD,KAAKkgD,4BAA4BpsD,KAAKkM,MACtCwf,EAAGnR,WAEN,CAEDqyC,2BACE,OAAO1gD,KAAKsgD,+BACV,cACAtgD,KAAKygD,gCAAgC3sD,KAAKkM,MAC1Cwf,EAAGrR,UAEN,CAEDwyC,0BACE,QAAI3gD,KAAK0kC,aAAa,MAIpB1kC,KAAKqC,MAAMmd,EAAG7S,SACd3M,KAAKw9C,YAAYx9C,KAAK4gD,qCAAqC9sD,KAAKkM,MAEnE,CAED6gD,uBACE,GAAI7gD,KAAKqC,MAAMmd,EAAG13B,OAASkY,KAAKqC,MAAMmd,EAAGtP,OAEvC,OADAlQ,KAAKijC,QACE,EAGT,GAAIjjC,KAAKqC,MAAMmd,EAAGlT,QAAS,CACzB,IAAIw0C,EAAoB,EAGxB,IAFA9gD,KAAKijC,OAEE6d,EAAoB,GACrB9gD,KAAKqC,MAAMmd,EAAGlT,UACdw0C,EACO9gD,KAAKqC,MAAMmd,EAAG/S,WACrBq0C,EAEJ9gD,KAAKijC,OAEP,OAAO,CACR,CAED,GAAIjjC,KAAKqC,MAAMmd,EAAGvT,UAAW,CAC3B,IAAI60C,EAAoB,EAGxB,IAFA9gD,KAAKijC,OAEE6d,EAAoB,GACrB9gD,KAAKqC,MAAMmd,EAAGvT,YACd60C,EACO9gD,KAAKqC,MAAMmd,EAAGpT,aACrB00C,EAEJ9gD,KAAKijC,OAEP,OAAO,CACR,CAED,OAAO,CACR,CAED2d,uCAEE,GADA5gD,KAAKijC,OACDjjC,KAAKqC,MAAMmd,EAAG5S,SAAW5M,KAAKqC,MAAMmd,EAAGnS,UAGzC,OAAO,EAET,GAAIrN,KAAK6gD,uBAAwB,CAC/B,GACE7gD,KAAKqC,MAAMmd,EAAGzS,QACd/M,KAAKqC,MAAMmd,EAAG3S,QACd7M,KAAKqC,MAAMmd,EAAGtS,WACdlN,KAAKqC,MAAMmd,EAAG7R,IAMd,OAAO,EAET,GAAI3N,KAAKqC,MAAMmd,EAAG5S,UAChB5M,KAAKijC,OACDjjC,KAAKqC,MAAMmd,EAAGpS,QAEhB,OAAO,CAGZ,CACD,OAAO,CACR,CAED6vC,qCACEL,GAEA,OAAO58C,KAAK+gD,UAAS,KACnB,MAAMvzD,EAAwBwS,KAAKggC,YACnChgC,KAAK2jC,OAAOiZ,GAEZ,MAAMzvD,EAAO6S,KAAKggC,YAEZgc,IAAYh8C,KAAKi6C,WACrBj6C,KAAKghD,4BAA4BltD,KAAKkM,OAGxC,GAAIg8C,GAAWh8C,KAAKqC,MAAMmd,EAAGtP,OAAQ,CAGnC,IAAI+wC,EAAoBjhD,KAAK0/C,qCAY7B,MAT+B,eAA3BuB,EAAkBvpD,MACpBvK,EAAK2uD,cAAiBmF,EACtB9zD,EAAK6uD,SAAU,EACfiF,EAAoBjhD,KAAKigC,WAAW9yC,EAAM,qBAE1C6S,KAAKg1C,2BAA2BiM,EAAmB9zD,GAClD8zD,EAAsCjF,SAAU,GAEnDxuD,EAAE84C,eAAiB2a,EACZjhD,KAAKigC,WAAWzyC,EAAG,mBAC3B,CAED,MAAM0zD,EACJlhD,KAAK25C,kBACL35C,KAAKi6C,WAAWj6C,KAAKmhD,2BAA2BrtD,KAAKkM,OAEvD,IAAKkhD,EACH,OAAKlF,GAML7uD,EAAK2uD,cAAgB97C,KAAK+lC,kBAC1B54C,EAAK6uD,QAAUA,EACfxuD,EAAE84C,eAAiBtmC,KAAKigC,WAAW9yC,EAAM,mBAClC6S,KAAKigC,WAAWzyC,EAAG,qBAPjBwS,KAAK+7C,uBAAqC,EAAOvuD,GAW5D,MAAMkK,EAAOsI,KAAK+7C,uBAAqC,GAKvD,OAJA5uD,EAAK2uD,cAAgBoF,EACrB/zD,EAAKm5C,eAAiB5uC,EACtBvK,EAAK6uD,QAAUA,EACfxuD,EAAE84C,eAAiBtmC,KAAKigC,WAAW9yC,EAAM,mBAClC6S,KAAKigC,WAAWzyC,EAAG,mBAA1B,GAEH,CAED4zD,0CACE,OAAOphD,KAAKqC,MAAMmd,EAAGzS,OACjB/M,KAAKi9C,qCAAqCz9B,EAAGzS,YAC7C/d,CACL,CAEDyuD,2BACE,OAAOz9C,KAAKqC,MAAMmd,EAAGzS,OAAS/M,KAAK+7C,6BAA0B/sD,CAC9D,CAEDuvD,iBACE,OAAOv+C,KAAKu8C,mBAAmB/8B,EAAGzS,MACnC,CAEDo0C,6BACE,MAAM7zD,EAAK0S,KAAK+lC,kBAChB,GAAI/lC,KAAKgnC,aAAa,QAAUhnC,KAAKigB,wBAEnC,OADAjgB,KAAKijC,OACE31C,CAEV,CAED0zD,8BACE,IACGhhD,KAAKqC,MAAMmd,EAAG13B,OACM,YAArBkY,KAAK5Q,MAAMjI,OACX6Y,KAAKigB,wBAEL,OAAO,EAET,MAAMohC,EAAcrhD,KAAK5Q,MAAMiyD,YAE/B,OADArhD,KAAKijC,UACAjjC,KAAKqC,MAAMmd,EAAG13B,QAAUkY,KAAKqC,MAAMmd,EAAGtP,SAIvCmxC,GACFrhD,KAAKge,MACHhe,KAAK5Q,MAAMquB,aACX0F,EAAOnM,2BACP,WAIG,GACR,CAED+kC,sBACEuF,GAAW,EACX9zD,EAAwBwS,KAAKggC,aAM7B,OAJAhgC,KAAK+gD,UAAS,KACRO,GAAUthD,KAAK2jC,OAAOnkB,EAAGzS,OAC7Bvf,EAAE84C,eAAiBtmC,KAAKs+C,aAAxB9wD,IAEKwS,KAAKigC,WAAWzyC,EAAG,mBAC3B,CAGD8wD,cAEE/kB,GAAOv5B,KAAK5Q,MAAMi2C,QAClB,MAAM3tC,EAAOsI,KAAKuhD,4BAClB,GAAIvhD,KAAKigB,0BAA4BjgB,KAAKmjC,IAAI3jB,EAAGnP,UAC/C,OAAO3Y,EAET,MAAMvK,EAA4B6S,KAAKyhC,gBAAgB/pC,GAOvD,OANAvK,EAAKq0D,UAAY9pD,EACjBvK,EAAKs0D,YAAczhD,KAAKuhD,4BACxBvhD,KAAK2jC,OAAOnkB,EAAGtS,UACf/f,EAAKu0D,SAAW1hD,KAAKs+C,cACrBt+C,KAAK2jC,OAAOnkB,EAAGzS,OACf5f,EAAKw0D,UAAY3hD,KAAKs+C,cACft+C,KAAKigC,WAAW9yC,EAAM,oBAC9B,CAEDy0D,iCACE,OAAO5hD,KAAKgnC,aAAa,aAAehnC,KAAK2qC,YAAYjzC,OAAS8nB,EAAGvP,IACtE,CAEDsxC,4BACE,OAAIvhD,KAAK2gD,0BACA3gD,KAAKo/C,iCAAiC,kBAE3Cp/C,KAAKqC,MAAMmd,EAAGvP,MAETjQ,KAAKo/C,iCAAiC,qBACpCp/C,KAAK4hD,iCAEP5hD,KAAKo/C,iCACV,qBACe,GAGZp/C,KAAK0gD,0BACb,CAEDmB,uBACE,MAAM10D,EAA0B6S,KAAKggC,YAC/BlwB,EAAS9P,KAAK08C,gCAIpB,OAHAvvD,EAAKm5C,eAAiBx2B,GAAU9P,KAAK8hD,sBACrC9hD,KAAKiqC,iBAAiB,KACtB98C,EAAKgD,WAAa6P,KAAK+/C,kBAChB//C,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAED40D,sBACEC,GAEA,MAAMC,EAAgBjiD,KAAK5Q,MAAMnH,MAE3Bi6D,EAAgBliD,KAAK+6C,qBACzB,wBACA/6C,KAAKmiD,mCAAmCruD,KAAKkM,OAO/C,OAJKkiD,EAAcv2D,QACjBqU,KAAKge,MAAMikC,EAAezoB,GAASY,wBAAyB4nB,GAGvDE,CACR,CAEDC,qCACE,MAAMh1D,EAAwC6S,KAAKggC,YAQnD,OALA7yC,EAAKgD,WAAa6P,KAAKu7C,mBAA2C,GAC9Dv7C,KAAK0kC,aAAa,OACpBv3C,EAAKgyC,eAAiBn/B,KAAKw7C,wBAGtBx7C,KAAKigC,WAAW9yC,EAAM,gCAC9B,CAEDi1D,4BACEj1D,GAEAA,EAAKG,GAAK0S,KAAK+lC,kBACf/lC,KAAKkyC,UACH/kD,EAAKG,GACL,mCPx1C0B,KO21C5BH,EAAKgyC,eAAiBn/B,KAAKw8C,2BACvBx8C,KAAKmjC,IAAI3jB,EAAGnP,YACdljB,EAAKi7C,QAAUpoC,KAAK+hD,sBAAsB,YAE5C,MAAMzxD,EAA0B0P,KAAKggC,YAGrC,OAFA1vC,EAAKA,KAAO0P,KAAK+gD,SAAS/gD,KAAKg+C,yBAAyBlqD,KAAKkM,OAC7D7S,EAAKmD,KAAO0P,KAAKigC,WAAW3vC,EAAM,mBAC3B0P,KAAKigC,WAAW9yC,EAAM,yBAC9B,CAEDk1D,4BACEl1D,GAsBA,OApBAA,EAAKG,GAAK0S,KAAK+lC,kBACf/lC,KAAKkyC,UAAU/kD,EAAKG,GAAI,wBPx2CI,GO02C5BH,EAAKgyC,eAAiBn/B,KAAKw8C,2BAC3BrvD,EAAKm5C,eAAiBtmC,KAAK+gD,UAAS,KAGlC,GAFA/gD,KAAK2jC,OAAOnkB,EAAG7R,IAGb3N,KAAKgnC,aAAa,cAClBhnC,KAAK2qC,YAAYjzC,OAAS8nB,EAAGvS,IAC7B,CACA,MAAM9f,EAAwB6S,KAAKggC,YAEnC,OADAhgC,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,qBAC9B,CAED,OAAO6S,KAAKs+C,aAAZ,IAGFt+C,KAAKwmC,YACExmC,KAAKigC,WAAW9yC,EAAM,yBAC9B,CAEDm1D,cAAiBC,GACf,MAAMC,EAAaxiD,KAAK5Q,MAAMqwB,QAC9Bzf,KAAK5Q,MAAMqwB,QAAU,CAAC+iC,EAAW,IACjC,IACE,OAAOD,GADT,SAGEviD,KAAK5Q,MAAMqwB,QAAU+iC,CACtB,CACF,CAODzB,SAAYwB,GACV,MAAMnd,EAAYplC,KAAK5Q,MAAMi2C,OAC7BrlC,KAAK5Q,MAAMi2C,QAAS,EACpB,IACE,OAAOkd,GADT,SAGEviD,KAAK5Q,MAAMi2C,OAASD,CACrB,CACF,CAEDmX,mBAAmB/wC,GACjB,OAAQxL,KAAKqC,MAAMmJ,GAAqBxL,KAAK8hD,2BAAjB9yD,CAC7B,CAEDmvD,sBAAsB3yC,GACpB,OAAOxL,KAAKyiD,mBAAkB,IAAMziD,KAAK2jC,OAAOn4B,IACjD,CAEDs2C,sBACE,OAAO9hD,KAAKyiD,mBAAkB,IAAMziD,KAAKijC,QAC1C,CAEDwf,kBAAkBF,GAChB,OAAOviD,KAAK+gD,UAAS,KACnBwB,IACOviD,KAAKs+C,gBAEf,CAEDoE,oBACE,MAAMv1D,EAAuB6S,KAAKggC,YAQlC,OANA7yC,EAAKG,GAAK0S,KAAKqC,MAAMmd,EAAG70B,QACpBqV,KAAKo/B,gBACLp/B,KAAK+lC,iBAA8B,GACnC/lC,KAAKmjC,IAAI3jB,EAAG7R,MACdxgB,EAAKw1D,YAAc3iD,KAAK8jC,2BAEnB9jC,KAAKigC,WAAW9yC,EAAM,eAC9B,CAEDy1D,uBACEz1D,EACA01D,GAgBA,OAdIA,IAAS11D,EAAK45B,OAAQ,GAC1B55B,EAAKG,GAAK0S,KAAK+lC,kBACf/lC,KAAKkyC,UACH/kD,EAAKG,GACL,8BACAu1D,EPv7C0BC,IAPAxb,KOi8C5BtnC,KAAK2jC,OAAOnkB,EAAGlT,QACfnf,EAAKqrD,QAAUx4C,KAAK+6C,qBAClB,cACA/6C,KAAK0iD,kBAAkB5uD,KAAKkM,OAE9BA,KAAK2jC,OAAOnkB,EAAG/S,QACRzM,KAAKigC,WAAW9yC,EAAM,oBAC9B,CAED41D,qBACE,MAAM51D,EAAwB6S,KAAKggC,YAYnC,OAXAhgC,KAAK3S,MAAMq1B,MP//CiB,GOigD5B1iB,KAAK2jC,OAAOnkB,EAAGlT,QAEftM,KAAKgjD,4BACF71D,EAAKmD,KAAO,QACItB,GACF,EACLwwB,EAAG/S,QAEfzM,KAAK3S,MAAMs1B,OACJ3iB,KAAKigC,WAAW9yC,EAAM,gBAC9B,CAED81D,oCACE91D,EACA+1D,GAAmB,GAYnB,GAVA/1D,EAAKG,GAAK0S,KAAK+lC,kBAEVmd,GACHljD,KAAKkyC,UACH/kD,EAAKG,GACL,kCP39CwB,MOg+CxB0S,KAAKmjC,IAAI3jB,EAAGvS,KAAM,CACpB,MAAMk2C,EAAQnjD,KAAKggC,YACnBhgC,KAAKijD,oCAAoCE,GAAO,GAChDh2D,EAAKmD,KAAO6yD,CAHd,MAKEnjD,KAAK3S,MAAMq1B,MPvhDe,KOwhD1B1iB,KAAKojD,UAAU1gC,MDpiDF,GCqiDbv1B,EAAKmD,KAAO0P,KAAK+iD,qBACjB/iD,KAAKojD,UAAUzgC,OACf3iB,KAAK3S,MAAMs1B,OAEb,OAAO3iB,KAAKigC,WAAW9yC,EAAM,sBAC9B,CAEDk2D,wCACEl2D,GAoBA,OAlBI6S,KAAKgnC,aAAa,WACpB75C,EAAKm2D,QAAS,EACdn2D,EAAKG,GAAK0S,KAAK+lC,mBACN/lC,KAAKqC,MAAMmd,EAAG70B,QACvBwC,EAAKG,GAAK0S,KAAKo/B,gBAEfp/B,KAAKgjC,aAEHhjC,KAAKqC,MAAMmd,EAAGlT,SAChBtM,KAAK3S,MAAMq1B,MP5iDe,KO6iD1B1iB,KAAKojD,UAAU1gC,MDzjDF,GC0jDbv1B,EAAKmD,KAAO0P,KAAK+iD,qBACjB/iD,KAAKojD,UAAUzgC,OACf3iB,KAAK3S,MAAMs1B,QAEX3iB,KAAKwmC,YAGAxmC,KAAKigC,WAAW9yC,EAAM,sBAC9B,CAEDo2D,+BACEp2D,EACAq2D,GAEAr2D,EAAKq2D,SAAWA,IAAY,EAC5Br2D,EAAKG,GAAK0S,KAAK+lC,kBACf/lC,KAAKkyC,UAAU/kD,EAAKG,GAAI,4BPzhDIg6C,GO0hD5BtnC,KAAK2jC,OAAOnkB,EAAG7R,IACf,MAAM81C,EAAkBzjD,KAAK0jD,yBAS7B,MAPsB,SAApBv2D,EAAKy5B,YACoB,8BAAzB68B,EAAgB/rD,MAEhBsI,KAAKge,MAAMylC,EAAgBx7D,MAAOuxC,GAASgB,0BAE7CrtC,EAAKs2D,gBAAkBA,EACvBzjD,KAAKwmC,YACExmC,KAAKigC,WAAW9yC,EAAM,4BAC9B,CAEDw2D,8BACE,OACE3jD,KAAKgnC,aAAa,YAClB,KAAAhnC,KAAK8/C,mBAER,CAED4D,yBACE,OAAO1jD,KAAK2jD,8BACR3jD,KAAK4jD,iCACL5jD,KAAKu7C,mBAA2C,EACrD,CAEDqI,iCACE,MAAMz2D,EAAoC6S,KAAKggC,YAG/C,GAFAhgC,KAAKylC,iBAAiB,WACtBzlC,KAAK2jC,OAAOnkB,EAAG7S,SACV3M,KAAKqC,MAAMmd,EAAG70B,QACjB,MAAMqV,KAAKgjC,aAKb,OAFA71C,EAAKgD,WAAa6P,KAAKo/B,gBACvBp/B,KAAK2jC,OAAOnkB,EAAG5S,QACR5M,KAAKigC,WAAW9yC,EAAM,4BAC9B,CAIDqwD,YAAex3C,GACb,MAAM5W,EAAQ4Q,KAAK5Q,MAAMm/C,QACnBsV,EAAM79C,IAEZ,OADAhG,KAAK5Q,MAAQA,EACNy0D,CACR,CAEDC,mBAAmC99C,GACjC,MAAM7R,EAAS6L,KAAKquC,UAASwG,GAAS7uC,KAAO6uC,MAE7C,IAAI1gD,EAAO+gD,SAAY/gD,EAAOhH,KAE9B,OADIgH,EAAOtB,QAAOmN,KAAK5Q,MAAQ+E,EAAOm6C,WAC/Bn6C,EAAOhH,IACf,CAED8sD,WAAcj0C,GACZ,MAAM5W,EAAQ4Q,KAAK5Q,MAAMm/C,QACnBp6C,EAAS6R,IACf,YAAehX,IAAXmF,IAAmC,IAAXA,EACnBA,OAEP6L,KAAK5Q,MAAQA,EAGhB,CAED20D,kBAAkBC,GAChB,GAAIhkD,KAAKo9C,mBACP,OAEF,IACIzvD,EADAs2D,EAAYjkD,KAAK5Q,MAAMsI,KAQ3B,OALIsI,KAAKgnC,aAAa,SACpBid,EAAYzkC,EAAG3P,KACfliB,EAAO,OAGFqS,KAAKkkD,oBAAmB,KAC7B,OAAQD,GACN,KAAKzkC,EAAGjQ,UAEN,OADAy0C,EAAK3a,SAAU,EACRrpC,KAAKmkD,uBACVH,GACY,GACc,GAE9B,KAAKxkC,EAAGpP,OAIN,OADA4zC,EAAK3a,SAAU,EACRrpC,KAAKokD,WACVJ,GACkB,GACD,GAErB,KAAKxkC,EAAG1P,OACN,GAAI9P,KAAKqC,MAAMmd,EAAG1P,SAAW9P,KAAK4zC,sBAAsB,QAItD,OAFA5zC,KAAK2jC,OAAOnkB,EAAG1P,QACf9P,KAAKylC,iBAAiB,QACfzlC,KAAK4iD,uBAAuBoB,GAAoB,GAG3D,KAAKxkC,EAAG3P,KAEN,OADAliB,EAAOA,GAAQqS,KAAK5Q,MAAMjI,MACnB6Y,KAAKqkD,kBAAkBL,EAAMr2D,GACtC,KAAK6xB,EAAG13B,KAAM,CACZ,MAAMX,EAAQ6Y,KAAK5Q,MAAMjI,MACzB,MAAc,WAAVA,EACK6Y,KAAKqjD,wCAAwCW,GAE7ChkD,KAAKskD,mBAAmBN,EAAM78D,GAAkB,EAE1D,EAnCH,GAsCH,CAGDo9D,8BACE,OAAOvkD,KAAKskD,mBACVtkD,KAAKggC,YACLhgC,KAAK5Q,MAAMjI,OACA,EAEd,CAEDq9D,2BAA2Br3D,EAAW4gD,GACpC,OAAQA,EAAKjmD,MACX,IAAK,UAAW,CACd,MAAMsR,EAAc4G,KAAK+jD,kBAAkB52D,GAC3C,GAAIiM,EAEF,OADAA,EAAYiwC,SAAU,EACfjwC,EAET,KACD,CACD,IAAK,SAGH,GAAI4G,KAAKqC,MAAMmd,EAAGlT,QAAS,CACzBtM,KAAK3S,MAAMq1B,MP9sDW,KO+sDtB1iB,KAAKojD,UAAU1gC,MD3tDN,GC4tDT,MAAM+hC,EAA6Bt3D,EAMnC,OALAs3D,EAAInB,QAAS,EACbmB,EAAIn3D,GAAKygD,EACT0W,EAAIn0D,KAAO0P,KAAK+iD,qBAChB/iD,KAAK3S,MAAMs1B,OACX3iB,KAAKojD,UAAUzgC,OACR3iB,KAAKigC,WAAWwkB,EAAK,sBAC7B,CACD,MAEF,QACE,OAAOzkD,KAAKskD,mBAAmBn3D,EAAM4gD,EAAKjmD,MAAiB,GAEhE,CAGDw8D,mBACEn3D,EACAhG,EACA87C,GAGA,OAAQ97C,GACN,IAAK,WACH,GACE6Y,KAAK0kD,sBAAsBzhB,KAC1BjjC,KAAKqC,MAAMmd,EAAGpP,SAAWpQ,KAAKqC,MAAMmd,EAAG13B,OAExC,OAAOkY,KAAK2kD,2BAA2Bx3D,GAEzC,MAEF,IAAK,OACH,GAAI81C,GAAQjjC,KAAKqC,MAAMmd,EAAG13B,MAExB,OADIm7C,GAAMjjC,KAAKijC,OACRjjC,KAAK4iD,uBAAuBz1D,GAAoB,GAEzD,MAEF,IAAK,YACH,GAAI6S,KAAK0kD,sBAAsBzhB,IAASjjC,KAAKqC,MAAMmd,EAAG13B,MACpD,OAAOkY,KAAKoiD,4BAA4Bj1D,GAE1C,MAEF,IAAK,SACH,GAAI6S,KAAK0kD,sBAAsBzhB,GAAO,CACpC,GAAIjjC,KAAKqC,MAAMmd,EAAG70B,QAChB,OAAOqV,KAAKqjD,wCAAwCl2D,GAC/C,GAAI6S,KAAKqC,MAAMmd,EAAG13B,MACvB,OAAOkY,KAAKijD,oCAAoC91D,EAEnD,CACD,MAEF,IAAK,YACH,GAAI6S,KAAK0kD,sBAAsBzhB,IAASjjC,KAAKqC,MAAMmd,EAAG13B,MACpD,OAAOkY,KAAKijD,oCAAoC91D,GAElD,MAEF,IAAK,OACH,GAAI6S,KAAK0kD,sBAAsBzhB,IAASjjC,KAAKqC,MAAMmd,EAAG13B,MACpD,OAAOkY,KAAKqiD,4BAA4Bl1D,GAI/C,CAEDu3D,sBAAsBzhB,GACpB,OAAIA,GACEjjC,KAAK4kD,0BACT5kD,KAAKijC,QACE,IAEDjjC,KAAKo9C,kBACd,CAEDyH,oCACEnlB,EACAz0C,GAEA,IAAK+U,KAAK0kC,aAAa,KACrB,OAGF,MAAMogB,EAA4B9kD,KAAK5Q,MAAM6iD,uBAC7CjyC,KAAK5Q,MAAM6iD,wBAAyB,EAEpC,MAAM4R,EAAkC7jD,KAAK8jD,oBAAmB,KAC9D,MAAM32D,EAAkC6S,KAAK89B,YAC3C4B,EACAz0C,GAOF,OALAkC,EAAKgyC,eAAiBn/B,KAAKy8C,wBAE3Bj5B,MAAM4wB,oBAAoBjnD,GAC1BA,EAAKk5C,WAAarmC,KAAKohD,0CACvBphD,KAAK2jC,OAAOnkB,EAAGpS,OACRjgB,CAAP,IAKF,OAFA6S,KAAK5Q,MAAM6iD,uBAAyB6S,EAE/BjB,EAIE7jD,KAAKo2C,qBACVyN,EAC6B,MACjB,QAPd,CASD,CAEDrI,uBACE,MAAMruD,EAAO6S,KAAKggC,YAkBlB,OAjBA7yC,EAAKiD,OAAS4P,KAAK+gD,UAAS,IAE1B/gD,KAAKsiD,eAAc,KACjBtiD,KAAKiqC,iBAAiB,KACfjqC,KAAK+6C,qBACV,4BACA/6C,KAAKs+C,YAAYxqD,KAAKkM,YAID,IAAvB7S,EAAKiD,OAAOzE,QACdqU,KAAKge,MAAM7wB,EAAKlF,MAAOuxC,GAASa,oBAIlCr6B,KAAK5Q,MAAMswB,aAAc,EACzB1f,KAAKiqC,iBAAiB,KACfjqC,KAAKigC,WAAW9yC,EAAM,+BAC9B,CAED43D,uBACE,GAAI/kD,KAAKqC,MAAMmd,EAAG13B,MAChB,OAAQkY,KAAK5Q,MAAMjI,OACjB,IAAK,WACL,IAAK,UACL,IAAK,OACL,IAAK,YACL,IAAK,SACL,IAAK,YACL,IAAK,OACH,OAAO,EAIb,OAAO,CACR,CAMD8mD,2BACE,OAAIjuC,KAAK+kD,wBACFvhC,MAAMyqB,0BACd,CAED+W,wBACE3Q,EACA4Q,GAGA,MAAMvlB,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAE5B,IAAI0vD,EACAgD,GAAW,OACQ3uD,IAAnBqlD,IACFsG,EAAgB36C,KAAKklD,sBACrBvH,IAAa39C,KAAK+5C,gBAAgB,CAAC,cACZ,IAAnB1F,IAA6BsG,GAAiBgD,IAChD39C,KAAKge,MAAM0hB,EAAUlG,GAASyC,8BAIlC,MAAM1tC,EAAOyR,KAAKgzC,oBAClBhzC,KAAK+yC,6BAA6BxkD,GAClC,MAAM42D,EAAMnlD,KAAKgzC,kBAAkBzkD,EAAKtG,MAAOsG,EAAK5E,IAAI1B,MAAOsG,GAC/D,GAAIosD,GAAiBgD,EAAU,CAC7B,MAAMyH,EAA4BplD,KAAK89B,YAAY4B,EAAUz0C,GAU7D,OATIg6D,EAAWt5D,SACby5D,EAAGH,WAAaA,GAEdtK,IAAeyK,EAAGzK,cAAgBA,GAClCgD,IAAUyH,EAAGzH,SAAWA,GACX,eAAbwH,EAAIztD,MAAsC,sBAAbytD,EAAIztD,MACnCsI,KAAKge,MAAMonC,EAAGn9D,MAAOuxC,GAAS8C,kCAEhC8oB,EAAGC,UAAcF,EACVnlD,KAAKigC,WAAWmlB,EAAI,sBAC5B,CAMD,OAJIH,EAAWt5D,SACb4C,EAAK02D,WAAaA,GAGbE,CACR,CAED1X,2BACEtgD,EACAuK,EACAmoC,GAAqB,GAEjB7/B,KAAKqC,MAAMmd,EAAGzS,SAChB5f,EAAKk5C,WAAarmC,KAAKi9C,qCAAqCz9B,EAAGzS,QAGjE,MAAMu4C,EACK,wBAAT5tD,EACI,oBACS,gBAATA,EACA,uBACA1I,EACFs2D,IAAiBtlD,KAAKqC,MAAMmd,EAAGlT,SAAWtM,KAAKo9C,mBACjDp9C,KAAKigC,WAAW9yC,EAAMm4D,GAGH,sBAAjBA,GAAwCtlD,KAAK5Q,MAAMm2D,mBACrDvlD,KAAKge,MAAM7wB,EAAKlF,MAAOuxC,GAASS,kCAG9B9sC,EAAKk8C,SAEL7lB,MAAMiqB,2BAA2BtgD,EAAMm4D,EAAczlB,GAKzDrc,MAAMiqB,2BAA2BtgD,EAAMuK,EAAMmoC,EAC9C,CAED2lB,4BAA4Br4D,IACrBA,EAAKmD,MAAQnD,EAAKG,GAGrB0S,KAAKkyC,UAAU/kD,EAAKG,GAAI,gBPv5DE,MOy5D1Bk2B,MAAMgiC,+BAA+B3qD,UAExC,CAED4qD,2BAA2BhtD,GACzBA,EAAMtD,SAAQhI,IACO,0BAAX,MAAJA,OAAA,EAAAA,EAAMuK,OACRsI,KAAKge,MACH7wB,EAAKm5C,eAAer+C,MACpBuxC,GAAS2C,yBAEZ,GAEJ,CAEDwV,iBACEF,EACAiU,GAOA,OADA1lD,KAAKylD,2BAA2BhU,GACzBA,CACR,CAEDK,kBAAkB5/C,GAChB,MAAM/E,EAAOq2B,MAAMsuB,kBAAkB5/C,GAMrC,MAJkB,oBAAd/E,EAAKuK,MACPsI,KAAKylD,2BAA2Bt4D,EAAKolB,UAGhCplB,CACR,CAEDi0C,eACEC,EACA3B,EACAz0C,EACAq2C,EACAlyC,GAEA,IAAK4Q,KAAKigB,yBAA2BjgB,KAAKqC,MAAMmd,EAAG3R,MAAO,CACxD7N,KAAK5Q,MAAMswB,aAAc,EACzB1f,KAAKijC,OAEL,MAAM0iB,EAA2C3lD,KAAK89B,YACpD4B,EACAz0C,GAGF,OADA06D,EAAkBx1D,WAAakxC,EACxBrhC,KAAKigC,WAAW0lB,EAAmB,sBAC3C,CAED,GAAI3lD,KAAK0kC,aAAa,KAAM,CAI1B,MAAMvwC,EAAS6L,KAAK8jD,oBAAmB,KACrC,IAAKxiB,GAAWthC,KAAK4lD,qBAAqBvkB,GAAO,CAG/C,MAAMwkB,EAAe7lD,KAAK6kD,oCACxBnlB,EACAz0C,GAEF,GAAI46D,EACF,OAAOA,CAEV,CAED,MAAM14D,EAAyB6S,KAAK89B,YAAY4B,EAAUz0C,GAC1DkC,EAAKkD,OAASgxC,EAEd,MAAM4U,EAAgBj2C,KAAKw7C,uBAE3B,GAAIvF,EAAe,CACjB,IAAK3U,GAAWthC,KAAKmjC,IAAI3jB,EAAG7S,QAgB1B,OAbAxf,EAAK0N,UAAYmF,KAAK61C,6BACpBr2B,EAAG5S,QACiB,GAItB5M,KAAKylD,2BAA2Bt4D,EAAK0N,WAErC1N,EAAKgyC,eAAiB8W,EAClB7mD,EAAMmyC,sBAERp0C,EAAK2zC,UAAW,GAEX9gC,KAAK6gC,qBAAqB1zC,EAAMiC,EAAMmyC,qBACxC,GAAIvhC,KAAKqC,MAAMmd,EAAGlS,WAAY,CACnC,MAAMnZ,EAAS6L,KAAK8lD,8BAClBzkB,EACA3B,EACAz0C,EACAmE,GAGF,OADA+E,EAAOgrC,eAAiB8W,EACjB9hD,CACR,CACF,CAED6L,KAAKgjC,YAAL,IAGF,GAAI7uC,EAAQ,OAAOA,CACpB,CAED,OAAOqvB,MAAM4d,eAAeC,EAAM3B,EAAUz0C,EAAUq2C,EAASlyC,EAChE,CAED8mD,kBAAkB/oD,GAChB,GAAI6S,KAAK0kC,aAAa,KAAM,CAG1B,MAAMvF,EAAiBn/B,KAAK8jD,oBAAmB,KAC7C,MAAM5xD,EAAO8N,KAAKw7C,uBAElB,OADKx7C,KAAKqC,MAAMmd,EAAG7S,SAAS3M,KAAKgjC,aAC1B9wC,CAAP,IAEEitC,IACFhyC,EAAKgyC,eAAiBA,EAEzB,CAED3b,MAAM0yB,kBAAkB/oD,EACzB,CAED44D,YACEx3D,EACAy3D,EACAC,EACAC,GAEA,GACE5sB,GAAQ9Z,EAAG7O,IAAIvF,OAAS86C,IACvBlmD,KAAKigB,yBACNjgB,KAAKgnC,aAAa,MAClB,CACA,MAAM75C,EAAyB6S,KAAK89B,YAClCkoB,EACAC,GAEF94D,EAAKgD,WAAa5B,EAClB,MAAMuhB,EAAS9P,KAAK08C,gCASpB,OAPEvvD,EAAKm5C,eADHx2B,GAGoB9P,KAAK8hD,sBAE7B9hD,KAAKigC,WAAW9yC,EAAM,kBAEtB6S,KAAKmmD,eACEnmD,KAAK+lD,YAAY54D,EAAM64D,EAAcC,EAAcC,EAC3D,CAED,OAAO1iC,MAAMuiC,YAAYx3D,EAAMy3D,EAAcC,EAAcC,EAC5D,CAEDhS,kBACEnzB,EACA91B,EACAm7D,EAEA7U,GACO,CAeT8U,wBAAyB,CAEzB7e,YAAYr6C,GAEV,GADAA,EAAKy5B,WAAa,QACd5mB,KAAKqC,MAAMmd,EAAG13B,OAASkY,KAAKqC,MAAMmd,EAAG7Q,OAAS3O,KAAKqC,MAAMmd,EAAGlT,QAAS,CACvE,IAAIg6C,EAAQtmD,KAAK2qC,YAgBjB,IAbE3qC,KAAKgnC,aAAa,SAElBsf,EAAM5uD,OAAS8nB,EAAG3S,OAEhBy5C,EAAM5uD,OAAS8nB,EAAG13B,MAAwB,SAAhBw+D,EAAMn/D,OAElCm/D,EAAM5uD,OAAS8nB,EAAG7R,KAElBxgB,EAAKy5B,WAAa,OAClB5mB,KAAKijC,OACLqjB,EAAQtmD,KAAK2qC,aAGX3qC,KAAKqC,MAAMmd,EAAG13B,OAASw+D,EAAM5uD,OAAS8nB,EAAG7R,GAC3C,OAAO3N,KAAKujD,+BAA+Bp2D,EAE9C,CAED,MAAMo5D,EAAa/iC,MAAMgkB,YAAYr6C,GAgBrC,MAV4B,SAA1Bo5D,EAAW3/B,YACX2/B,EAAWhsD,WAAW5O,OAAS,GACG,2BAAlC46D,EAAWhsD,WAAW,GAAG7C,MAEzBsI,KAAKge,MACHuoC,EAAWt+D,MACXuxC,GAASwC,wCAINuqB,CACR,CAEDrlB,YAAY/zC,GACV,GAAI6S,KAAKqC,MAAMmd,EAAGjP,SAYhB,OAVAvQ,KAAKijC,OAEHjjC,KAAKgnC,aAAa,SAClB,KAAAhnC,KAAK8/C,qBAEL3yD,EAAKy5B,WAAa,OAClB5mB,KAAKijC,QAEL91C,EAAKy5B,WAAa,QAEb5mB,KAAKujD,+BAA+Bp2D,GAAqB,GAC3D,GAAI6S,KAAKmjC,IAAI3jB,EAAG7R,IAAK,CAE1B,MAAMziB,EAA+BiC,EAGrC,OAFAjC,EAAOiF,WAAa6P,KAAK0jC,kBACzB1jC,KAAKwmC,YACExmC,KAAKigC,WAAW/0C,EAAQ,qBAL1B,CAMA,GAAI8U,KAAK6mC,cAAc,MAAO,CAEnC,MAAMuJ,EAAuCjjD,EAK7C,OAHA6S,KAAKylC,iBAAiB,aACtB2K,EAAK9iD,GAAK0S,KAAK+lC,kBACf/lC,KAAKwmC,YACExmC,KAAKigC,WAAWmQ,EAAM,+BAPxB,CAgBL,OAPIpwC,KAAKgnC,aAAa,SAAWhnC,KAAK2qC,YAAYjzC,OAAS8nB,EAAGlT,QAC5DtM,KAAKijC,OACL91C,EAAK26C,WAAa,QAElB36C,EAAK26C,WAAa,QAGbtkB,MAAM0d,YAAY/zC,EAE5B,CAEDq5D,kBACE,OACExmD,KAAKgnC,aAAa,aAAehnC,KAAK2qC,YAAYjzC,OAAS8nB,EAAGpP,MAEjE,CAED89B,+BACE,GAAIluC,KAAKwmD,kBAAmB,CAC1B,MAAMC,EAAMzmD,KAAKggC,YAIjB,OAHAhgC,KAAKijC,OACLwjB,EAAIpH,UAAW,EACfr/C,KAAKokD,WAAWqC,GAAK,GAAM,GACpBA,CACR,CAID,GAAyB,cAArBzmD,KAAK5Q,MAAMjI,MAAuB,CACpC,MAAMgN,EAAS6L,KAAKskD,mBAClBtkD,KAAKggC,YACLhgC,KAAK5Q,MAAMjI,OACX,GAGF,GAAIgN,EAAQ,OAAOA,CACpB,CAED,OAAOqvB,MAAM0qB,8BACd,CAEDwY,sBAAsBjnC,EAAkBkuB,GACtC,GAAI3tC,KAAK5Q,MAAMsI,OAAS8nB,EAAG1P,OAAQ,CACjC,MAAMw2C,EAAQtmD,KAAK2qC,YACnB,GAAI2b,EAAM5uD,OAAS8nB,EAAG13B,MAAwB,SAAhBw+D,EAAMn/D,MAAkB,CACpD,MAAMgG,EAA4B6S,KAAKggC,YAGvC,OAFAhgC,KAAK2jC,OAAOnkB,EAAG1P,QACf9P,KAAKylC,iBAAiB,QACfzlC,KAAK4iD,uBAAuBz1D,GAAoB,EACxD,CACF,CACD,OAAOq2B,MAAMkjC,sBAAsBjnC,EAASkuB,EAC7C,CAEDuX,sBACE,OAAOllD,KAAK+5C,gBAAgB,CAAC,SAAU,YAAa,WACrD,CAED4M,mBAAmB5V,EAAa6V,GAC9B,OAAOA,EAAU9xD,MAAKwG,GAChBkhC,GAAmBlhC,GACdy1C,EAAO4J,gBAAkBr/C,IAEzBy1C,EAAOz1C,IAEnB,CAEDw1C,iBACE/R,EACAgS,EACA3hD,GAEA,MAAMy3D,EAAiC,CACrC,UACA,UACA,SACA,YACA,WACA,WACA,YAEF7mD,KAAKk6C,iBACHnJ,EACA8V,EAA+BpyD,OAAO,CAAC,YAGzC,MAAMqyD,EAAmC,KACvC,MAAMrc,IAAasG,EAAOrG,OACtBD,GAAYzqC,KAAKmjC,IAAI3jB,EAAGlT,SACtBtM,KAAK2mD,mBAAmB5V,EAAQ8V,IAClC7mD,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAKgc,GAASsC,+BAEtC97B,KAAK+mD,sBAAsBhoB,EAAagS,IAExC/wC,KAAKgnD,6BAA6BjoB,EAAWgS,EAAQ3hD,EAAOq7C,EAC7D,EAECsG,EAAO1H,QACTrpC,KAAKkkD,mBAAmB4C,GAExBA,GAEH,CAEDE,6BACEjoB,EACAgS,EACA3hD,EACAq7C,GAEA,MAAMwc,EAAMjnD,KAAKu9C,yBAAyBxM,GAC1C,GAAIkW,EAoBF,OAnBAloB,EAAUzuC,KAAKG,KAAKw2D,GAEflW,EAAasO,UAChBr/C,KAAKge,MAAM+yB,EAAO9oD,MAAOuxC,GAASkB,2BAE/BqW,EAAa4J,eAChB36C,KAAKge,MACH+yB,EAAO9oD,MACPuxC,GAASmB,+BACRoW,EAAa4J,eAGb5J,EAAa1H,SAChBrpC,KAAKge,MAAM+yB,EAAO9oD,MAAOuxC,GAASoB,+BAE/BmW,EAAajyB,UAChB9e,KAAKge,MAAM+yB,EAAO9oD,MAAOuxC,GAASqB,6BAMjC76B,KAAK5Q,MAAM83D,iBAAoBnW,EAAasO,UAC/Cr/C,KAAKge,MAAM+yB,EAAO9oD,MAAOuxC,GAAS2B,mCAG/B4V,EAAajyB,WACX1vB,EAAM+3D,eACTnnD,KAAKge,MAAM+yB,EAAO9oD,MAAOuxC,GAAS8B,wBAMtC9X,MAAMwjC,6BAA6BjoB,EAAWgS,EAAQ3hD,EAAOq7C,EAC9D,CAED2c,6BACEC,GAEiBrnD,KAAKmjC,IAAI3jB,EAAGtS,YACfm6C,EAAavmB,UAAW,GAEjCumB,EAAmB1J,UAAY39C,KAAKqC,MAAMmd,EAAG7S,SAChD3M,KAAKge,MAAMqpC,EAAap/D,MAAOuxC,GAASK,wBAGrCwtB,EAAmBhe,SAAWrpC,KAAKqC,MAAMmd,EAAG7S,SAC/C3M,KAAKge,MAAMqpC,EAAap/D,MAAOuxC,GAASI,sBAE3C,CAMDkU,yBACE3gD,EACA4gD,GAMA,OAHgB,eAAdA,EAAKr2C,KACDsI,KAAKwkD,2BAA2Br3D,EAAM4gD,QACtC/+C,IACSw0B,MAAMsqB,yBAAyB3gD,EAAM4gD,EACrD,CAIDC,+BACE,QAAIhuC,KAAK+kD,wBACFvhC,MAAMwqB,8BACd,CAGDG,iBACEJ,EACArO,EACAz0C,EACAmjD,GAIA,IAAKA,IAAqBpuC,KAAKqC,MAAMmd,EAAGtS,UACtC,OAAOsW,MAAM2qB,iBACXJ,EACArO,EACAz0C,EACAmjD,GAIJ,MAAMj6C,EAAS6L,KAAKquC,UAAS,IAC3B7qB,MAAM2qB,iBAAiBJ,EAAMrO,EAAUz0C,KAGzC,OAAKkJ,EAAOhH,MAKRgH,EAAOtB,QAAOmN,KAAK5Q,MAAQ+E,EAAOm6C,WAC/Bn6C,EAAOhH,OAJZihD,EAAiBnmD,MAAQkM,EAAOtB,MAAM2qB,KAAOxd,KAAK5Q,MAAMnH,MACjD8lD,EAIV,CAIDkC,eACE9iD,EACAuyC,EACAz0C,GAWA,GATAkC,EAAOq2B,MAAMysB,eAAe9iD,EAAMuyC,EAAUz0C,GACxC+U,KAAKmjC,IAAI3jB,EAAGtS,YACd/f,EAAK2zC,UAAW,EAIhB9gC,KAAKumC,iBAAiBp5C,IAGpB6S,KAAKqC,MAAMmd,EAAGzS,OAAQ,CACxB,MAAMmjC,EAAuClwC,KAAK89B,YAChD4B,EACAz0C,GAKF,OAHAilD,EAAa//C,WAAahD,EAC1B+iD,EAAa5J,eAAiBtmC,KAAK+7C,wBAE5B/7C,KAAKigC,WAAWiQ,EAAc,uBACtC,CAED,OAAO/iD,CACR,CAEDkjD,uBAAuBljD,GAErB,MAAMuyC,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAGtBq8D,EAAYtnD,KAAK6mC,cAAc,WAErC,GACEygB,IACCtnD,KAAKgnC,aAAa,aAAehnC,KAAKguC,gCAEvC,MAAMhuC,KAAKge,MACThe,KAAK5Q,MAAMnH,MACXuxC,GAASe,mCAIb,IAAInhC,EAwBJ,OAtBI4G,KAAKqC,MAAMmd,EAAG13B,QAChBsR,EAAc4G,KAAKukD,+BAEhBnrD,IACHA,EAAcoqB,MAAM6sB,uBAAuBljD,IAG3CiM,IACsB,2BAArBA,EAAY1B,MACU,2BAArB0B,EAAY1B,MACZ4vD,KAEFn6D,EAAK26C,WAAa,QAGhB1uC,GAAekuD,IAEjBtnD,KAAKunD,mBAAmBnuD,EAAasmC,EAAUz0C,GAE/CmO,EAAYiwC,SAAU,GAGjBjwC,CACR,CAEDw3C,aACEzjD,EACA4K,EACA84C,GAEA,KAAM94C,GAAe84C,IAAe7wC,KAAKgnC,aAAa,cACpD,OAGFxjB,MAAMotB,aACJzjD,EACA4K,EACA84C,EACC1jD,EAAWk8C,QP98Ec,KAPA/B,KOu9E5B,MAAMnI,EAAiBn/B,KAAKw8C,2BACxBrd,IAAgBhyC,EAAKgyC,eAAiBA,EAC3C,CAEDqoB,6BACEr6D,IAEKA,EAAK2zC,UAAY9gC,KAAKmjC,IAAI3jB,EAAG3R,QAChC1gB,EAAKs6D,UAAW,GAGlB,MAAM/vD,EAAOsI,KAAKy9C,2BACd/lD,IAAMvK,EAAKm5C,eAAiB5uC,EACjC,CAEDwoC,mBAAmB/yC,GAOjB,OANA6S,KAAKwnD,6BAA6Br6D,GAE9B6S,KAAK5Q,MAAMm2D,kBAAoBvlD,KAAKqC,MAAMmd,EAAG7R,KAC/C3N,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOuxC,GAASQ,iCAGjCxW,MAAM0c,mBAAmB/yC,EACjC,CAEDizC,0BACEjzC,GAiBA,OAdIA,EAAKkyD,UACPr/C,KAAKge,MAAM7wB,EAAKlF,MAAOuxC,GAASgC,2BAI9BruC,EAAKwtD,eACP36C,KAAKge,MACH7wB,EAAKlF,MACLuxC,GAASiC,+BACTtuC,EAAKwtD,eAIT36C,KAAKwnD,6BAA6Br6D,GAC3Bq2B,MAAM4c,0BAA0BjzC,EACxC,CAED2xC,gBACEC,EACA1vC,EACAgqC,EACAD,EACA4F,EACAC,GAEA,MAAME,EAAiBn/B,KAAKw8C,2BACxBrd,GAAkBH,GACpBh/B,KAAKge,MAAMmhB,EAAel3C,MAAOuxC,GAASM,+BAIxCzqC,EAAOg6C,SAA4B,QAAhBh6C,EAAO1B,MAAkC,QAAhB0B,EAAO1B,MACrDqS,KAAKge,MAAM3uB,EAAOpH,MAAOuxC,GAASO,gBAAiB1qC,EAAO1B,MAExDwxC,IAAgB9vC,EAAO8vC,eAAiBA,GAC5C3b,MAAMsb,gBACJC,EACA1vC,EACAgqC,EACAD,EACA4F,EACAC,EAEH,CAEDsT,uBACExT,EACA1vC,EACAgqC,EACAD,GAEA,MAAM+F,EAAiBn/B,KAAKw8C,2BACxBrd,IAAgB9vC,EAAO8vC,eAAiBA,GAC5C3b,MAAM+uB,uBAAuBxT,EAAW1vC,EAAQgqC,EAAaD,EAC9D,CAEDoZ,gBAAgBrlD,GACdq2B,MAAMgvB,gBAAgBrlD,GAClBA,EAAK8vC,YAAcj9B,KAAK0kC,aAAa,OACvCv3C,EAAKslD,oBAAsBzyC,KAAKw7C,wBAE9Bx7C,KAAK6mC,cAAc,gBACrB15C,EAAKk7C,WAAaroC,KAAK+hD,sBAAsB,cAEhD,CAEDjP,kBAAkBne,KAAyBziC,GACzC,MAAMitC,EAAiBn/B,KAAKw8C,2BACxBrd,IAAgBxK,EAAKwK,eAAiBA,GAE1C3b,MAAMsvB,kBAAkBne,KAASziC,EAClC,CAEDkiD,oBAAoBjnD,EAAkBknD,GACpC,MAAMlV,EAAiBn/B,KAAKw8C,2BACxBrd,IAAgBhyC,EAAKgyC,eAAiBA,GAC1C3b,MAAM4wB,oBAAoBjnD,EAAMknD,EACjC,CAGDC,WACElE,EACAziD,GAEA61B,MAAM8wB,WAAWlE,EAAMziD,GACF,eAAjByiD,EAAK9iD,GAAGoK,MAAyBsI,KAAKmjC,IAAI3jB,EAAG3R,QAC/CuiC,EAAKqX,UAAW,GAGlB,MAAM/vD,EAAOsI,KAAKy9C,2BACd/lD,IACF04C,EAAK9iD,GAAGg5C,eAAiB5uC,EACzBsI,KAAKumC,iBAAiB6J,EAAK9iD,IAE9B,CAGDinD,kCACEpnD,EACA/D,GAKA,OAHI4W,KAAKqC,MAAMmd,EAAGzS,SAChB5f,EAAKk5C,WAAarmC,KAAK+7C,yBAElBv4B,MAAM+wB,kCAAkCpnD,EAAM/D,EACtD,CAED6lD,oBAAoB/8C,GAAoB,IAAAwiD,EAAAC,EAAA+S,EAAA9S,EAAA+S,EAAAC,EAAAC,EAGtC,IAAIz4D,EACAwyC,EACAkmB,EA+BA3oB,EA7BJ,GACEn/B,KAAK6R,UAAU,SACd7R,KAAKqC,MAAMmd,EAAG4Y,cAAgBp4B,KAAK0kC,aAAa,MACjD,CAOA,GALAt1C,EAAQ4Q,KAAK5Q,MAAMm/C,QAEnB3M,EAAM5hC,KAAKquC,UAAS,IAAM7qB,MAAMyrB,oBAAoB/8C,IAAO9C,IAGtDwyC,EAAI/uC,MAAO,OAAO+uC,EAAIz0C,KAK3B,MAAM,QAAEsyB,GAAYzf,KAAK5Q,MACrBqwB,EAAQA,EAAQ9zB,OAAS,KAAOo8D,EAAGhwB,OACrCtY,EAAQ9zB,QAAU,EACT8zB,EAAQA,EAAQ9zB,OAAS,KAAOo8D,EAAG9vB,SAC5CxY,EAAQ9zB,QAAU,EAErB,CAED,KAAI,OAAA+oD,EAAC9S,IAAA8S,EAAK7hD,OAAUmN,KAAK0kC,aAAa,MACpC,OAAOlhB,MAAMyrB,oBAAoB/8C,GAMnC9C,EAAQA,GAAS4Q,KAAK5Q,MAAMm/C,QAE5B,MAAMnhC,EAAQpN,KAAKquC,UAASwG,IAAS,IAAAhD,EAAAmW,EAEnC7oB,EAAiBn/B,KAAKy8C,wBACtB,MAAM1O,EAAOvqB,MAAMyrB,oBAAoB/8C,GAcvC,OAXgB,4BAAd67C,EAAKr2C,MAAL,OAAAm6C,EACA9D,EAAKhQ,QAAL8T,EAAYtT,gBAEZsW,IAIoC,KAApB,OAAdmT,EAAA7oB,QAAA,EAAA6oB,EAAgB53D,OAAOzE,SACzBqU,KAAKg1C,2BAA2BjH,EAAM5O,GAExC4O,EAAK5O,eAAiBA,EACf4O,CAAP,GACC3+C,GAEH,IAAKge,EAAMva,QAAUua,EAAM8nC,QAAS,OAAO9nC,EAAMjgB,KAEjD,IAAKy0C,IAIHrI,IAAQv5B,KAAK6R,UAAU,QAIvBi2C,EAAW9nD,KAAKquC,UAAS,IAAM7qB,MAAMyrB,oBAAoB/8C,IAAO9C,IAE3D04D,EAASj1D,OAAO,OAAOi1D,EAAS36D,KAGvC,UAAAwnD,EAAI/S,IAAA+S,EAAKxnD,KAGP,OADA6S,KAAK5Q,MAAQwyC,EAAI0M,UACV1M,EAAIz0C,KAGb,GAAIigB,EAAMjgB,KAGR,OADA6S,KAAK5Q,MAAQge,EAAMkhC,UACZlhC,EAAMjgB,KAGf,UAAAu6D,EAAII,IAAAJ,EAAUv6D,KAGZ,OADA6S,KAAK5Q,MAAQ04D,EAASxZ,UACfwZ,EAAS36D,KAGlB,UAAAynD,EAAIhT,IAAAgT,EAAKQ,OAAQ,MAAMxT,EAAI/uC,MAC3B,GAAIua,EAAMgoC,OAAQ,MAAMhoC,EAAMva,MAC9B,UAAA80D,EAAIG,IAAAH,EAAUvS,OAAQ,MAAM0S,EAASj1D,MAErC,MAAS,OAAH+0D,EAAAhmB,QAAA,EAAAgmB,EAAK/0D,QAASua,EAAMva,QAApB,OAAAg1D,EAA6BC,QAA7B,EAA6BD,EAAUh1D,MAC9C,CAGDktD,gBAAgB1gB,GACd,OAAKr/B,KAAK6R,UAAU,QAAU7R,KAAK0kC,aAAa,KACvC1kC,KAAK6hD,uBAELr+B,MAAMu8B,gBAAgB1gB,EAEhC,CAEDgW,WAAWloD,GACT,GAAI6S,KAAKqC,MAAMmd,EAAGzS,OAAQ,CAIxB,MAAM5Y,EAAS6L,KAAKquC,UAASwG,IAC3B,MAAMxO,EAAarmC,KAAKi9C,qCACtBz9B,EAAGzS,OAGL,OADI/M,KAAK6sC,sBAAyB7sC,KAAKqC,MAAMmd,EAAGpS,QAAQynC,IACjDxO,CAAP,IAGF,GAAIlyC,EAAO+gD,QAAS,OAEf/gD,EAAOihD,SACNjhD,EAAOtB,QAAOmN,KAAK5Q,MAAQ+E,EAAOm6C,WACtCnhD,EAAKk5C,WAAalyC,EAAOhH,KAE5B,CAED,OAAOq2B,MAAM6xB,WAAWloD,EACzB,CAGD4lD,6BAA6Bl6C,GACvBmH,KAAKmjC,IAAI3jB,EAAGtS,YAEG,eAAfrU,EAAMnB,MACLsI,KAAK5Q,MAAMm2D,kBACXvlD,KAAK5Q,MAAMi2C,QAEZrlC,KAAKge,MAAMnlB,EAAM5Q,MAAOuxC,GAAS+B,mBAGjC1iC,EAA2BioC,UAAW,GAE1C,MAAMppC,EAAOsI,KAAKy9C,2BAIlB,OAHI/lD,IAAMmB,EAAMytC,eAAiB5uC,GACjCsI,KAAKumC,iBAAiB1tC,GAEfA,CACR,CAED6nC,aAAavzC,EAAcwzC,GAAiB,GAC1C,OAAQxzC,EAAKuK,MACX,IAAK,uBACH,OAAO8rB,MAAMkd,aAAa1gC,KAAKstC,oBAAoBngD,GAAOwzC,GAC5D,IAAK,sBASL,QACE,OAAOnd,MAAMkd,aAAavzC,EAAMwzC,GARlC,IAAK,0BACH,OAAO3gC,KAAKioD,oCAAoC96D,EAAMwzC,GACxD,IAAK,iBACL,IAAK,sBACL,IAAK,kBAEH,OADAxzC,EAAKgD,WAAa6P,KAAK0gC,aAAavzC,EAAKgD,WAAYwwC,GAC9CxzC,EAIZ,CAED86D,oCAAoC96D,EAAcwzC,GAChD,OAAQxzC,EAAKgD,WAAWuH,MACtB,IAAK,iBACL,IAAK,sBACL,IAAK,kBACL,IAAK,0BAEH,OADAvK,EAAKgD,WAAa6P,KAAK0gC,aAAavzC,EAAKgD,WAAYwwC,GAC9CxzC,EACT,QACE,OAAOq2B,MAAMkd,aAAavzC,EAAMwzC,GAErC,CAEDuR,UACEnE,EACAqF,KACGlhD,GAGG,IAAAg2D,EACN,OAAQna,EAAKr2C,MACX,IAAK,uBAIH,OACF,IAAK,sBAEH,YADAsI,KAAKkyC,UAAUnE,EAAKsX,UAAW,wBAAyBnzD,GAE1D,IAAK,iBACL,IAAK,kBACH,KACmBA,EAAK,IACC,6BAAvBkhD,GACA,OAAA8U,EAACna,EAAKhQ,QAALmqB,EAAY3pB,eACb,CACAv+B,KAAKge,MAAM+vB,EAAK9lD,MAAOk7B,EAAOjM,WAAYk8B,GAC1C,KACD,CAED,YADApzC,KAAKkyC,UAAUnE,EAAK59C,WAAY,8BAA+B+B,GAEjE,IAAK,sBAEH,YADA8N,KAAKkyC,UAAUnE,EAAK59C,WAAYijD,KAAuBlhD,GAEzD,QAEE,YADAsxB,MAAM0uB,UAAUnE,EAAMqF,KAAuBlhD,GAGlD,CAEDiiD,mBACE,OAAQn0C,KAAK5Q,MAAMsI,OACZ8nB,EAAGtP,MAEClQ,KAAK+lC,iBAA8B,GAEnCviB,MAAM2wB,kBAElB,CAEDgU,6BAA6Bpa,GAC3B,GAAI/tC,KAAK0kC,aAAa,KAAM,CAC1B,MAAMuR,EAAgBj2C,KAAKw7C,uBAE3B,GAAIx7C,KAAKqC,MAAMmd,EAAG7S,QAAS,CACzB,MAAMvjB,EAAOo6B,MAAM2kC,6BAA6Bpa,GAEhD,OADA3kD,EAAK+1C,eAAiB8W,EACf7sD,CACR,CAED4W,KAAKgjC,WAAWhjC,KAAK5Q,MAAMnH,MAAOu3B,EAAG7S,OACtC,CAED,OAAO6W,MAAM2kC,6BAA6Bpa,EAC3C,CAEDqa,oBAAoBjqD,GAEhB6B,KAAK5Q,MAAMm2D,kBACXvlD,KAAKqC,MAAMmd,EAAG3S,QACd7M,KAAK8/C,sBAAwB3hD,EAE7B6B,KAAKijC,OAELzf,MAAM4kC,oBAAoBjqD,EAE7B,CAODg0C,gBACE,OAAOnyC,KAAK0kC,aAAa,MAAQlhB,MAAM2uB,eACxC,CAEDC,kBACE,OACEpyC,KAAKqC,MAAMmd,EAAG3R,OAAS7N,KAAKqC,MAAMmd,EAAGzS,QAAUyW,MAAM4uB,iBAExD,CAEDY,qBAAqB9gD,GACnB,MAAM/E,EAAOq2B,MAAMwvB,qBAAqB9gD,GAaxC,MAVgB,sBAAd/E,EAAKuK,MACLvK,EAAKm5C,gBACLn5C,EAAKi8C,MAAMnhD,MAAQkF,EAAKm5C,eAAer+C,OAEvC+X,KAAKge,MACH7wB,EAAKm5C,eAAer+C,MACpBuxC,GAASuC,2BAIN5uC,CACR,CAGD+0C,iBAAiB5uC,GACf,OACE0M,KAAK5Q,MAAMi2C,QACD,KAAT/xC,GAA2C,KAATA,EAI5BkwB,MAAM0e,iBAAiB5uC,GAFvB0M,KAAKqxC,SAAS7xB,EAAGjR,WAAY,EAIvC,CAGD43C,eACE,GAAInmD,KAAKqC,MAAMmd,EAAGjR,YAAa,CAC7B,MAAMjb,EAAO0M,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMnH,OACjC,KAATqL,GAAwC,KAATA,IACjC0M,KAAK5Q,MAAMouB,KAAO,EAClBxd,KAAKqoD,gBAAgB/0D,GAExB,CACF,CAEDu8C,iBAAiB4B,GACf,IAAK,IAAI5lD,EAAI,EAAGA,EAAI4lD,EAAS9lD,OAAQE,IAAK,CACxC,MAAMkiD,EAAO0D,EAAS5lD,GACtB,GAAKkiD,EACL,OAAQA,EAAKr2C,MACX,IAAK,uBACH+5C,EAAS5lD,GAAKmU,KAAKstC,oBAAoBS,GACvC,MACF,IAAK,iBACL,IAAK,kBACE/tC,KAAK5Q,MAAM6iD,uBAGdjyC,KAAKge,MAAM+vB,EAAK9lD,MAAOuxC,GAAS4C,+BAFhCqV,EAAS5lD,GAAKmU,KAAKstC,oBAAoBS,GAM9C,CACD,OAAOvqB,MAAMqsB,oBAAoBh1C,UAClC,CAEDyyC,oBAAoBngD,GASlB,OARAA,EAAKgD,WAAWm2C,eAAiBn5C,EAAKm5C,eAEtCtmC,KAAKumC,iBACHp5C,EAAKgD,WACLhD,EAAKm5C,eAAex7C,IACpBqC,EAAKm5C,eAAe38C,IAAImB,KAGnBqC,EAAKgD,UACb,CAEDmlD,mBACE,OAAOt1C,KAAKqC,MAAMmd,EAAGzS,QAAUyW,MAAM8xB,kBACtC,CAEDd,wBACE,OAAOx0C,KAAKqC,MAAMmd,EAAGzS,QAAUyW,MAAMgxB,uBACtC,CAED8T,0BAEE,OAAO9kC,MAAM8kC,2BAA6BtoD,KAAKwmD,iBAChD,CAEDxiB,gCACE72C,GAEA,GAAI6S,KAAK0kC,aAAa,KAAM,CAC1B,MAAMuR,EAAgBj2C,KAAK8jD,oBAAmB,IAC5C9jD,KAAKw7C,yBAEHvF,IAAe9oD,EAAKgyC,eAAiB8W,EAC1C,CACD,OAAOzyB,MAAMwgB,gCAAgC72C,EAC9C,CAEDo7D,kCACEl5D,GAEA,MAAMm5D,EAAYhlC,MAAM+kC,kCAAkCl5D,GAEpDo5D,EADSzoD,KAAKo+B,6BAA6B/uC,GACvB,GAG1B,OAFwBo5D,GAAczoD,KAAKsyC,YAAYmW,GAE9BD,EAAY,EAAIA,CAC1C,CAEDE,wBACE,MAAM7vD,EAAQ2qB,MAAMklC,wBACdhxD,EAAOsI,KAAKy9C,2BAOlB,OALI/lD,IACFmB,EAAMytC,eAAiB5uC,EACvBsI,KAAKumC,iBAAiB1tC,IAGjBA,CACR,CAEDqrD,mBAAsB3B,GACpB,MAAMoG,EAAsB3oD,KAAK5Q,MAAMm2D,iBACvCvlD,KAAK5Q,MAAMm2D,kBAAmB,EAC9B,IACE,OAAOhD,GADT,SAGEviD,KAAK5Q,MAAMm2D,iBAAmBoD,CAC/B,CACF,CAEDvE,WAAuBj3D,KAAY+E,GACjC,MAAM02D,EAAqB5oD,KAAK5Q,MAAM83D,gBACtClnD,KAAK5Q,MAAM83D,kBAAqB/5D,EAAWkyD,SAC3C,IACE,OAAO77B,MAAM4gC,WAAWj3D,KAAS+E,EADnC,SAGE8N,KAAK5Q,MAAM83D,gBAAkB0B,CAC9B,CACF,CAEDjE,2BACEx3D,GAEA,GAAI6S,KAAKqC,MAAMmd,EAAGpP,QAEhB,OADAjjB,EAAKkyD,UAAW,EACTr/C,KAAKokD,WACTj3D,GACiB,GACD,GAEd,GAAI6S,KAAKgnC,aAAa,cAM3B,IAAKhnC,KAAK4kD,wBAOR,OANAz3D,EAAKkyD,UAAW,EAChBr/C,KAAKge,MACH7wB,EAAKlF,MACLuxC,GAAS4B,0CAEXp7B,KAAKijC,OACEjjC,KAAKoiD,4BACTj1D,QAIL6S,KAAKgjC,WAAW,KAAMxjB,EAAGpP,OAE5B,CAED8uB,eAAehtC,GACb,MAAM7C,EAASm0B,MAAM0b,eAAehtC,GACpC,GAAI7C,EAAOgwD,WACOr/C,KAAK6R,UAAU,UACzBxiB,EAAOlI,MAAMmJ,KACbjB,EAAOiB,MACA,CACX,MAAM,IAAErH,GAAQoG,EAChB2Q,KAAKge,MACH3uB,EAAOpH,MACPuxC,GAASC,gCACI,eAAbxwC,EAAIyO,KACAzO,EAAInB,KACH,IAAGkY,KAAK6d,MAAMzxB,MAAMnD,EAAIhB,MAAOgB,EAAI6B,QAE3C,CAEH,OAAOuE,CACR,CAEDw5D,8BACE,QAAS7oD,KAAK8R,gBAAgB,aAAc,MAC7C,CAEDpb,QAIE,OAHIsJ,KAAK6oD,gCACP7oD,KAAK5Q,MAAMm2D,kBAAmB,GAEzB/hC,MAAM9sB,OACd,CAEDoyD,gBAIE,OAHI9oD,KAAK6oD,gCACP7oD,KAAK5Q,MAAMm2D,kBAAmB,GAEzB/hC,MAAMslC,eACd,GEx9FHC,YEtJc9rB,GACd,cAAcA,EACZ+rB,mBACE,GAAIhpD,KAAKqC,MAAMmd,EAAG9Q,QAAS,CACzB,MAAMu6C,EAAmBjpD,KAAK5Q,MAAMnH,MAE9BkF,EAAO6S,KAAKggC,YAElB,GADAhgC,KAAKmjC,IAAI3jB,EAAG9Q,QACR1O,KAAKqC,MAAMmd,EAAG13B,MAAO,CACvB,MAAMA,EAAOkY,KAAKq8C,oBAAoBr8C,KAAK5Q,MAAMnH,OAC3CkH,EAAa6Q,KAAK0sC,iBAAiBv/C,EAAMrF,GAE/C,GADAqH,EAAWuI,KAAO,wBACdsI,KAAKqC,MAAMmd,EAAG7S,QAChB,OAAOxd,CAEV,CACD6Q,KAAKgjC,WAAWimB,EACjB,CACF,CAMD7pB,gBACE,OAAOp/B,KAAKgpD,oBAAsBxlC,MAAM4b,iBAAiBvkC,UAC1D,GF6HHhG,aDlGcooC,GACd,cAAcA,EACZisB,iBACEvxD,GAEA,GAAIqI,KAAKqC,MAAMmd,EAAGzqB,aAAc,CAC9B,MAAM5H,EAAO6S,KAAKggC,YAUlB,OATAhgC,KAAKijC,OACLjjC,KAAKmpD,cAAc,oCAInBh8D,EAAKrF,KAAO07B,MAAMuiB,iBAA8B,GAEhD/lC,KAAKmpD,cAAc,oCACnBnpD,KAAK2jC,OAAOnkB,EAAGzqB,aACRiL,KAAKopD,kBAAkBj8D,EAAMwK,EACrC,CACF,CAEDyxD,kBACEj8D,EACAwK,GAEA,MAAM0xD,KAAgBl8D,EAAKwK,cAA8B,gBAAdxK,EAAKuK,MAGhD,OAFAvK,EAAKwK,aAAeA,EAEb0xD,EAAal8D,EAAO6S,KAAKigC,WAAW9yC,EAAM,cAClD,CAMD+0C,iBAAiB5uC,GACf,OACW,KAATA,GACA,KAAA0M,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAEhCxd,KAAKqxC,SAAS7xB,EAAGzqB,YAAa,GAGhCyuB,MAAM0e,oBAAoBrnC,UAClC,CAMDukC,gBACE,OACEp/B,KAAKkpD,iBAAiB,eAAiB1lC,MAAM4b,iBAAiBvkC,UAEjE,CAEDkrC,kBAKE,OACE/lC,KAAKkpD,iBAAiB,eACtB1lC,MAAMuiB,mBAAmBlrC,UAE5B,CAEDq5C,kBAAkBnzB,QAIH/xB,IAAT+xB,GAAoByC,MAAM0wB,qBAAqBr5C,UACpD,CAMDs5C,mBACE,OACEn0C,KAAKkpD,iBAAiB,YAAc1lC,MAAM2wB,oBAAoBt5C,UAEjE,CAEDq3C,UAAUnE,GACU,gBAAdA,EAAKr2C,MAAwB8rB,MAAM0uB,aAAar3C,UACrD,CAED6lC,aAAavzC,GACX,OACEA,GACc,gBAAdA,EAAKuK,MACiB,eAAtBvK,EAAKwK,cAELxK,EAAKwK,aAAe,UACbxK,GAEFq2B,MAAMkd,gBAAgB7lC,UAC9B,CAMD+sC,MAAMnoB,GACJ,QAAI+D,MAAMokB,MAAMnoB,MAMXzf,KAAKgnC,aAAa,UAGnBvnB,GAIczf,KAAK2qC,YACTjzC,OAAS8nB,EAAGzqB,YAK3B,CAEDu0D,oBAAoBn8D,GACdA,EAAK4d,OAA6B,gBAApB5d,EAAK4d,MAAMrT,MAC7B8rB,MAAM8lC,uBAAuBzuD,UAC9B,CAEDizC,yBACE3gD,EACA4gD,GAEA,GACgB,gBAAdA,EAAKr2C,MACJq2C,EAAKhQ,OAASgQ,EAAKhQ,MAAMQ,cAE1B,OAAO/a,MAAMsqB,4BAA4BjzC,WAG3C,GAAImF,KAAKqC,MAAMmd,EAAGzS,OAAQ,CACxB,MAAMtZ,EAA2BtG,EAIjC,OAHAsG,EAAKsX,MAAQ/K,KAAKopD,kBAAkBrb,EAAM,cAC1C/tC,KAAKijC,OACLxvC,EAAKnD,KAAO0P,KAAK0tC,eAAe,SACzB1tC,KAAKigC,WAAWxsC,EAAM,mBAC9B,CAKD,OAHAuM,KAAKwmC,YAELr5C,EAAKrF,KAAOimD,EAAKjmD,KACVkY,KAAKopD,kBAAkBj8D,EAAM,YACrC,CAEDo8D,aACE,OACEvpD,KAAKkpD,iBAAiB,mBACtB1lC,MAAM+lC,cAAc1uD,UAEvB,CAED2uD,kBACE,OACExpD,KAAKkpD,iBAAiB,eACtB1lC,MAAMgmC,mBAAmB3uD,UAE5B,CAEDupD,WACEj3D,EACA4K,EACA84C,GAEA,MAAMn5C,EAAOK,EAAc,mBAAqB,kBAEhDiI,KAAKijC,OACLjjC,KAAKypD,eAAet8D,GACpB,MAAMu8D,EAAY1pD,KAAK5Q,MAAMw+C,OAEvB74C,EAAciL,KAAKkpD,iBAAiB,cAC1C,GAAIn0D,EACF,GACEiL,KAAKqC,MAAMmd,EAAGnP,WACdrQ,KAAKqC,MAAMmd,EAAGzqB,cACdiL,KAAKqC,MAAMmd,EAAGlT,QAEdnf,EAAKG,GAAKyH,MACL,IAAI87C,IAAe94C,EAGxB,OAFA5K,EAAKG,GAAK,KACVH,EAAKmD,KAAO0P,KAAKopD,kBAAkBr0D,EAAa,aACzCiL,KAAKigC,WAAW9yC,EAAMuK,GAE7BsI,KAAKgjC,WAAW,KAAMvG,GAAkBC,oBACzC,MAED18B,KAAK4wC,aAAazjD,EAAM4K,EAAa84C,GAOvC,OAJA7wC,KAAKwyC,gBAAgBrlD,GACrBA,EAAKmD,KACH0P,KAAKkpD,iBAAiB,cACtBlpD,KAAK2pD,iBAAiBx8D,EAAK8vC,WAAYysB,GAClC1pD,KAAKigC,WAAW9yC,EAAMuK,EAC9B,CAEDwpC,YAAY/zC,GACV,MAAM4H,EAAciL,KAAKkpD,iBAAiB,cAC1C,IAAKn0D,EAAa,OAAOyuB,MAAM0d,eAAermC,WAE9C,IAAKmF,KAAKgnC,aAAa,UAAYhnC,KAAKqC,MAAMmd,EAAG3S,OAK/C,OAHA1f,EAAKoN,WAAa,GAClBpN,EAAKnC,OAAS,KACdmC,EAAKiM,YAAc4G,KAAKopD,kBAAkBr0D,EAAa,eAChDiL,KAAKigC,WAAW9yC,EAAM,0BAI/B6S,KAAK4pD,aAAa,qBAClB,MAAMzW,EAAYnzC,KAAKggC,YAIvB,OAHAmT,EAAUhS,SAAWpsC,EACrB5H,EAAKoN,WAAa,CAACyF,KAAKigC,WAAWkT,EAAW,2BAEvC3vB,MAAM0d,YAAY/zC,EAC1B,CAED8gD,2BACE,GAAIjuC,KAAKqC,MAAMmd,EAAG3rB,UAAW,CAC3B,MAAMovC,EAAOjjC,KAAKw5C,iBAClB,GAAIx5C,KAAK6pD,qBAAqB5mB,EAAM,SAEhCjjC,KAAK6d,MAAMve,WACTkgB,EAAGzqB,YAAYgW,MACf/K,KAAK8pD,oBAAoB7mB,EAAO,IAGlC,OAAO,CAGZ,CACD,OAAOzf,MAAMyqB,0BACd,CAED8b,iCAAiC58D,GAC/B,SAAIA,EAAKoN,YAAcpN,EAAKoN,WAAW5O,OAAS,IAIzC63B,MAAMumC,oCAAoClvD,UAClD,CAEDmvD,YAAY78D,GACV,MAAM,WAAEoN,GAAepN,EACvB,MAAIoN,GAAAA,EAAY5O,SACdwB,EAAKoN,WAAaA,EAAW0vD,QAC3B98D,GAA+B,gBAAvBA,EAAKg0C,SAASzpC,QAG1B8rB,MAAMwmC,YAAY78D,GAClBA,EAAKoN,WAAaA,CACnB,CAEDitC,YACEr6C,GAEA,MAAM4H,EAAciL,KAAKkpD,iBAAiB,cAC1C,IAAKn0D,EAAa,OAAOyuB,MAAMgkB,eAAe3sC,WAI9C,GAFA1N,EAAKoN,WAAa,IAEbyF,KAAKgnC,aAAa,UAAYhnC,KAAKqC,MAAMmd,EAAG3S,OAI/C,OAFA1f,EAAKnC,OAASgV,KAAKopD,kBAAkBr0D,EAAa,iBAClDiL,KAAKwmC,YACExmC,KAAKigC,WAAW9yC,EAAM,qBAI/B,MAAMgmD,EAAYnzC,KAAKyhC,gBAAgB1sC,GAgBvC,OAfAo+C,EAAUE,MAAQt+C,EAClBiL,KAAKigC,WAAWkT,EAAW,0BAC3BhmD,EAAKoN,WAAW9J,KAAK0iD,GAEjBnzC,KAAKmjC,IAAI3jB,EAAG3S,SAEQ7M,KAAKkqD,8BAA8B/8D,IAGrC6S,KAAKmqD,2BAA2Bh9D,IAGtD6S,KAAKylC,iBAAiB,QACtBt4C,EAAKnC,OAASgV,KAAKoqD,oBACnBpqD,KAAKwmC,YACExmC,KAAKigC,WAAW9yC,EAAM,oBAC9B,CAEDi9D,oBAGE,OACEpqD,KAAKkpD,iBAAiB,kBACtB1lC,MAAM4mC,qBAAqBvvD,UAE9B,IC5MQwvD,GACXrjE,OAAOuO,KAAKwnC,IGrIDutB,GAA0B,CAErC9zD,WAAY,SAEZ+zD,oBAAgBv7D,EAGhB1D,UAAW,EAGXk/D,2BAA2B,EAG3Bl0D,4BAA4B,EAG5Bm0D,6BAA6B,EAE7Bl0D,yBAAyB,EAEzBm0D,wBAAwB,EAExBr0D,QAAS,GAETs0D,WAAY,KASZC,QAAQ,EAERC,QAAQ,EAGRC,gCAAgC,EAGhC1sC,eAAe,GC5CF,MAAM2sC,GAAM5qD,cAAA,KACzBytC,YADyB,OAEzBtL,aAFyB,OAMzBr3C,cANyB,OAOzBE,YAPyB,OAiBzBkzB,OAAyB,GAjBA,KAoBzB2sC,kBAA4B,EApBH,KA0BzBvc,UAAsB,GA1BG,KAkCzBS,0BAAsC,GAlCb,KAqCzB+C,wBAAkC,EArCT,KAsCzBgZ,YAAsB,EAtCG,KAuCzB5lB,QAAkB,EAvCO,KAwCzB8E,oBAA8B,EAxCL,KAyCzBvF,gBAA0B,EAzCD,KA0CzB0R,gBAA0B,EA1CD,KA2CzBiP,kBAA4B,EA3CH,KA4CzB2B,iBAA2B,EA5CF,KA+CzBgE,aAAkC,CAChCC,yBAA0B,EAC1BC,cAAe,MAjDQ,KAqDzBC,WAAqB,EArDI,KAsDzBC,4BAAsC,EAtDb,KAyDzB9nD,OAIK,GA7DoB,KAkEzB+nD,eAA4C,CAAC,IAlEpB,KAqEzBC,SAA6B,GArEJ,KAwEzBp5C,iBAAqC,GAxEZ,KAyEzBC,gBAAoC,GAzEX,KA0EzBU,aAKK,GA/EoB,KAiFzBJ,oBAA8B,KAjFL,KAoFzB6K,IAAc,EApFW,KAqFzBM,UAAoB,EArFK,KAyFzBpmB,KAAkB8nB,EAAGxT,IAzFI,KA4FzB7kB,MAAa,KA5FY,KA+FzBc,MAAgB,EA/FS,KAgGzB6C,IAAc,EAhGW,KAoGzB8yB,cAA0B,KApGD,KAsGzBF,gBAA4B,KAtGH,KAuGzBD,aAAuB,EAvGE,KAwGzBE,WAAqB,EAxGI,KA6GzB8B,QAA6B,CAACsoC,EAAGhpC,gBA7GR,KA8GzBW,aAAuB,EA9GE,KAmHzB2hC,aAAuB,EAnHE,KA6HzBoK,aAA2C,IAAIrwD,IA7HtB,KAiIzBswD,oBAAqC,GAjIZ,KAoIzBC,aAAuB,CApIE,CASzBxT,KAAKx4C,GACHK,KAAK4tC,QACoB,IAAvBjuC,EAAQgrD,YAAsD,WAAvBhrD,EAAQnJ,WAEjDwJ,KAAKsiC,QAAU3iC,EAAQrU,UACvB0U,KAAK/U,SAAW+U,KAAK7U,OAAS6U,KAAK4rD,aACpC,CAuHDA,cACE,OAAO,IAAIv6C,EAASrR,KAAKsiC,QAAStiC,KAAKwd,IAAMxd,KAAK8d,UACnD,CAEDywB,MAAMsd,GACJ,MAAMz8D,EAAQ,IAAI27D,GACZx1D,EAAOvO,OAAOuO,KAAKyK,MACzB,IAAK,IAAInU,EAAI,EAAGF,EAAS4J,EAAK5J,OAAQE,EAAIF,EAAQE,IAAK,CACrD,MAAM5C,EAAMsM,EAAK1J,GAEjB,IAAI8Z,EAAM3F,KAAK/W,IAEV4iE,GAAcl/D,MAAMC,QAAQ+Y,KAC/BA,EAAMA,EAAIvZ,SAIZgD,EAAMnG,GAAO0c,CACd,CAED,OAAOvW,CACR,E,OClLH,SAAiBkE,GACf,OAAOA,GAAI,IAAcA,GAAI,EAC9B,EAoBD,MAAMw4D,GAAoB,IAAIz3D,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAKtD03D,GAAoC,CACxCC,UAAW,CAAC,GAAD,wBAUXhoD,IAAK,CAAC,GAAD,YAQDioD,GAAkC,CACxCA,IAAsC,CAAC,GAAD,KAKtCA,GAAgCC,IAAM,IAEjCD,GAAgCE,IAFC,mBAWtCF,GAAgCG,IAAM,IAEjCH,GAAgCC,IAFC,OAQtCD,GAAgCjoD,IAAM,IAEjCioD,GAAgCG,IAFC,wCAuB/B,MAAMC,GACXlsD,YAAY/Q,GACV4Q,KAAKtI,KAAOtI,EAAMsI,KAClBsI,KAAK7Y,MAAQiI,EAAMjI,MACnB6Y,KAAK/X,MAAQmH,EAAMnH,MACnB+X,KAAKlV,IAAMsE,EAAMtE,IACjBkV,KAAKrW,IAAM,IAAI4nB,EAAeniB,EAAMnE,SAAUmE,EAAMjE,OACrD,EAWY,MAAMmhE,WAAkBC,EAcrCpsD,YAAYR,EAAkBke,GAC5B2F,QAD2C,KAL7C9E,iBAK6C,OAF7CmsC,OAAmC,GAIjC7qD,KAAK5Q,MAAQ,IAAI27D,GACjB/qD,KAAK5Q,MAAM+oD,KAAKx4C,GAChBK,KAAK6d,MAAQA,EACb7d,KAAKrU,OAASkyB,EAAMlyB,OACpBqU,KAAK0e,aAAc,CACpB,CAED8tC,UAAUhhD,GAGRxL,KAAK6qD,OAAOl/D,OAASqU,KAAK5Q,MAAMu8D,aAChC3rD,KAAK6qD,OAAOp6D,KAAK+a,KACfxL,KAAK5Q,MAAMu8D,YACd,CAID1oB,OACOjjC,KAAK0e,cACR1e,KAAKysD,sBACDzsD,KAAKL,QAAQkrD,QACf7qD,KAAKwsD,UAAU,IAAIH,GAAMrsD,KAAK5Q,SAIlC4Q,KAAK5Q,MAAMuuB,WAAa3d,KAAK5Q,MAAMtE,IACnCkV,KAAK5Q,MAAMquB,aAAezd,KAAK5Q,MAAMnH,MACrC+X,KAAK5Q,MAAMwuB,cAAgB5d,KAAK5Q,MAAMjE,OACtC6U,KAAK5Q,MAAMsuB,gBAAkB1d,KAAK5Q,MAAMnE,SACxC+U,KAAKu2C,WACN,CAIDpT,IAAIzrC,GACF,QAAIsI,KAAKqC,MAAM3K,KACbsI,KAAKijC,QACE,EAIV,CAID5gC,MAAM3K,GACJ,OAAOsI,KAAK5Q,MAAMsI,OAASA,CAC5B,CAIDizC,YACE,MAAM+hB,EAAM1sD,KAAK5Q,MACjB4Q,KAAK5Q,MAAQs9D,EAAIne,OAAM,GAEvBvuC,KAAK0e,aAAc,EACnB1e,KAAKijC,OACLjjC,KAAK0e,aAAc,EAEnB,MAAMiuC,EAAO3sD,KAAK5Q,MAElB,OADA4Q,KAAK5Q,MAAQs9D,EACNC,CACR,CAEDnT,iBACE,OAAOx5C,KAAK8pD,oBAAoB9pD,KAAK5Q,MAAMouB,IAC5C,CAEDssC,oBAAoBtsC,GAIlB,OAHArM,EAAexO,UAAY6a,EAGpBA,EAFMrM,EAAevO,KAAK5C,KAAK6d,OAEpB,GAAGlyB,MACtB,CAEDm0D,oBACE,OAAO9/C,KAAK6d,MAAMmkB,WAAWhiC,KAAKw5C,iBACnC,CAEDoT,eAAepvC,GAKb,IAAIqvC,EAAK7sD,KAAK6d,MAAMmkB,WAAWxkB,GAC/B,GAAsB,QAAZ,MAALqvC,MAA6BrvC,EAAMxd,KAAK6d,MAAMlyB,OAAQ,CACzD,MAAMmhE,EAAQ9sD,KAAK6d,MAAMmkB,WAAWxkB,GACX,QAAZ,MAARsvC,KACHD,EAAK,QAAiB,KAALA,IAAe,KAAe,KAARC,GAE1C,CACD,OAAOD,CACR,CAKDE,UAAUnf,GACR5tC,KAAK5Q,MAAMw+C,OAASA,EAChBA,IAKF5tC,KAAK5Q,MAAMq8D,aAAat2D,SAAQ,CAACzN,EAAS81B,IAExCxd,KAAKge,MAAMR,EAAK91B,KAElBsY,KAAK5Q,MAAMq8D,aAAauB,QAE3B,CAEDptC,aACE,OAAO5f,KAAK5Q,MAAMqwB,QAAQzf,KAAK5Q,MAAMqwB,QAAQ9zB,OAAS,EACvD,CAKD4qD,YACE,MAAM32B,EAAa5f,KAAK4f,aAIxB,GAHI,MAACA,GAAAA,EAAYf,eAAe7e,KAAKitD,YACrCjtD,KAAK5Q,MAAMnH,MAAQ+X,KAAK5Q,MAAMouB,IAC9Bxd,KAAK5Q,MAAMnE,SAAW+U,KAAK5Q,MAAMw8D,cAC7B5rD,KAAK5Q,MAAMouB,KAAOxd,KAAKrU,OAEzB,YADAqU,KAAKiiC,YAAYziB,EAAGxT,KAItB,MAAM8S,EAAQ,MAAGc,OAAH,EAAGA,EAAYd,SACzBA,EACFA,EAAS9e,MAETA,KAAKkiC,iBAAiBliC,KAAK4sD,eAAe5sD,KAAK5Q,MAAMouB,KAExD,CAED0vC,YACEC,EACAC,EACAnlE,EACA6C,EACAG,EACAE,GAEA,MAAMgnB,EAAU,CACdza,KAAMy1D,EAAQ,eAAiB,cAC/BhmE,MAAOimE,EACPnlE,MAAOA,EACP6C,IAAKA,EACLnB,IAAK,IAAI4nB,EAAetmB,EAAUE,IAGhC6U,KAAKL,QAAQkrD,QAAQ7qD,KAAKwsD,UAAUr6C,GACxCnS,KAAK5Q,MAAMo8D,SAAS/6D,KAAK0hB,GACzBnS,KAAKkS,WAAWC,EACjB,CAEDykC,mBACE,MAAM3rD,EAAW+U,KAAK5Q,MAAMw8D,cACtB3jE,EAAQ+X,KAAK5Q,MAAMouB,IACnB1yB,EAAMkV,KAAK6d,MAAM9nB,QAAQ,KAAMiK,KAAK5Q,MAAMouB,IAAM,GACtD,IAAa,IAAT1yB,EAAY,MAAMkV,KAAKge,MAAM/1B,EAAOk7B,EAAO3G,qBAI/C,IAAIna,EACJ,IAHArC,KAAK5Q,MAAMouB,IAAM1yB,EAAM,EACvBmmB,EAAWtO,UAAY1a,GAGpBoa,EAAQ4O,EAAWrO,KAAK5C,KAAK6d,SAC9Bxb,EAAM/V,MAAQ0T,KAAK5Q,MAAMouB,OAEvBxd,KAAK5Q,MAAMkzC,QACbtiC,KAAK5Q,MAAM0uB,UAAYzb,EAAM/V,MAAQ+V,EAAM,GAAG1W,OAK5CqU,KAAK0e,aAET1e,KAAKktD,aACH,EACAltD,KAAK6d,MAAMzxB,MAAMnE,EAAQ,EAAG6C,GAC5B7C,EACA+X,KAAK5Q,MAAMouB,IACXvyB,EACA+U,KAAK5Q,MAAMw8D,cAEd,CAEDyB,gBAAgBC,GACd,MAAMrlE,EAAQ+X,KAAK5Q,MAAMouB,IACnBvyB,EAAW+U,KAAK5Q,MAAMw8D,cAC5B,IAAI7pB,EAAK/hC,KAAK6d,MAAMmkB,WAAYhiC,KAAK5Q,MAAMouB,KAAO8vC,GAClD,GAAIttD,KAAK5Q,MAAMouB,IAAMxd,KAAKrU,OACxB,MAAQulB,EAAU6wB,MAAS/hC,KAAK5Q,MAAMouB,IAAMxd,KAAKrU,QAC/Co2C,EAAK/hC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KAMtCxd,KAAK0e,aAET1e,KAAKktD,aACH,EACAltD,KAAK6d,MAAMzxB,MAAMnE,EAAQqlE,EAAWttD,KAAK5Q,MAAMouB,KAC/Cv1B,EACA+X,KAAK5Q,MAAMouB,IACXvyB,EACA+U,KAAK5Q,MAAMw8D,cAEd,CAKDqB,YACEM,EAAM,KAAOvtD,KAAK5Q,MAAMouB,IAAMxd,KAAKrU,QAAQ,CACzC,MAAMo2C,EAAK/hC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KAC5C,OAAQukB,GACN,QACA,SACA,SACI/hC,KAAK5Q,MAAMouB,IACb,MACF,QAEI,KAAAxd,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,MAErCxd,KAAK5Q,MAAMouB,IAGjB,QACA,UACA,YACIxd,KAAK5Q,MAAMouB,MACXxd,KAAK5Q,MAAMkzC,QACbtiC,KAAK5Q,MAAM0uB,UAAY9d,KAAK5Q,MAAMouB,IAClC,MAEF,QACE,OAAQxd,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,IAC7C,QACExd,KAAK42C,mBACL,MAEF,QACE52C,KAAKqtD,gBAAgB,GACrB,MAEF,QACE,MAAME,EAEV,MAEF,QACE,IAAIn8C,EAAa2wB,GAGf,MAAMwrB,IAFJvtD,KAAK5Q,MAAMouB,IAKpB,CACF,CAODykB,YAAYvqC,EAAiBiO,GAC3B3F,KAAK5Q,MAAMtE,IAAMkV,KAAK5Q,MAAMouB,IAC5Bxd,KAAK5Q,MAAMjE,OAAS6U,KAAK5Q,MAAMw8D,cAC/B,MAAM/rC,EAAW7f,KAAK5Q,MAAMsI,KAC5BsI,KAAK5Q,MAAMsI,KAAOA,EAClBsI,KAAK5Q,MAAMjI,MAAQwe,EAEd3F,KAAK0e,aAAa1e,KAAKqL,cAAcwU,EAC3C,CAYD2tC,uBACE,GAAuB,IAAnBxtD,KAAK5Q,MAAMouB,KAAaxd,KAAKytD,wBAC/B,OAGF,MAAMC,EAAU1tD,KAAK5Q,MAAMouB,IAAM,EAC3BylB,EAAOjjC,KAAK4sD,eAAec,GACjC,GAAIzqB,GAAQ,IAAoBA,GAAQ,GACtC,MAAMjjC,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAO/H,0BAG1C,GACW,MAAT6nB,GACU,KAATA,GAAwCjjC,KAAK6R,UAAU,kBACxD,CAMA,GADA7R,KAAK4pD,aAAa,kBAC2C,SAAzD5pD,KAAK8R,gBAAgB,iBAAkB,cACzC,MAAM9R,KAAKge,MACThe,KAAK5Q,MAAMouB,IACF,MAATylB,EACI9f,EAAOnJ,6CACPmJ,EAAOlI,6CAIF,MAATgoB,EAEFjjC,KAAKiiC,YAAYziB,EAAGhT,YAGpBxM,KAAKiiC,YAAYziB,EAAGtT,cAEtBlM,KAAK5Q,MAAMouB,KAAO,CAzBpB,MA0BWkD,EAAkBuiB,MACzBjjC,KAAK5Q,MAAMouB,IACbxd,KAAKiiC,YAAYziB,EAAGzT,YAAa/L,KAAKmxC,UAAUlO,KAC9B,KAATA,KACPjjC,KAAK5Q,MAAMouB,IACbxd,KAAKiiC,YAAYziB,EAAGzT,YAAa/L,KAAKmxC,cAEtCnxC,KAAKqxC,SAAS7xB,EAAG/R,KAAM,EAE1B,CAEDkgD,gBACE,MAAM1qB,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAChDylB,GAAQ,IAAoBA,GAAQ,GACtCjjC,KAAK4tD,YAAW,GAKP,KAAT3qB,GACA,KAAAjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,IAEvCxd,KAAK5Q,MAAMouB,KAAO,EAClBxd,KAAKiiC,YAAYziB,EAAGnS,cAElBrN,KAAK5Q,MAAMouB,IACbxd,KAAKiiC,YAAYziB,EAAGvS,KAEvB,CAED4gD,kBAEE,GAAI7tD,KAAK5Q,MAAMswB,cAAgB1f,KAAK5Q,MAAMi2C,OAGxC,QAFErlC,KAAK5Q,MAAMouB,SACbxd,KAAK8tD,aAKM,KADA9tD,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAElDxd,KAAKqxC,SAAS7xB,EAAGt0B,OAAQ,GAEzB8U,KAAKqxC,SAAS7xB,EAAG5Q,MAAO,EAE3B,CAED6+C,wBACE,GAAuB,IAAnBztD,KAAK5Q,MAAMouB,KAAaxd,KAAKrU,OAAS,EAAG,OAAO,EAEpD,IAAIo2C,EAAK/hC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAChD,GAAW,KAAPukB,EAAkC,OAAO,EAE7C,MAAM95C,EAAQ+X,KAAK5Q,MAAMouB,IAGzB,IAFAxd,KAAK5Q,MAAMouB,KAAO,GAEVtM,EAAU6wB,MAAS/hC,KAAK5Q,MAAMouB,IAAMxd,KAAKrU,QAC/Co2C,EAAK/hC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KAGxC,MAAMr2B,EAAQ6Y,KAAK6d,MAAMzxB,MAAMnE,EAAQ,EAAG+X,KAAK5Q,MAAMouB,KAIrD,OAFAxd,KAAKiiC,YAAYziB,EAAG9R,qBAAsBvmB,IAEnC,CACR,CAEDkvD,sBAAsB/iD,GAEpB,IAAIoE,EAAgB,KAATpE,EAA8BksB,EAAG7Q,KAAO6Q,EAAG9Q,OAClDq/C,EAAQ,EACR9qB,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAClD,MAAMkC,EAAc1f,KAAK5Q,MAAMswB,YAGlB,KAATpsB,GAAwC,KAAT2vC,IACjC8qB,IACA9qB,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAC9C9lB,EAAO8nB,EAAG3Q,UAGC,KAATo0B,GAAgCvjB,IAClCquC,IACAr2D,EAAO8nB,EAAGt0B,QAGZ8U,KAAKqxC,SAAS35C,EAAMq2D,EACrB,CAEDvX,mBAAmBljD,GAEjB,MAAM2vC,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAEpD,GAAIylB,IAAS3vC,EAAb,CAYA,GAAa,MAATA,EAAgC,CAElC,GAAa,KAAT2vC,EAEF,YADAjjC,KAAKqxC,SAAS7xB,EAAGzR,SAAU,GAI7B,GACE/N,KAAK6R,UAAU,mBACN,MAAToxB,EACA,CACA,GAA6D,QAAzDjjC,KAAK8R,gBAAgB,iBAAkB,cACzC,MAAM9R,KAAKge,MACThe,KAAK5Q,MAAMouB,IACX2F,EAAOrJ,2CAKX,YADA9Z,KAAKqxC,SAAS7xB,EAAG9S,UAAW,EAE7B,CAGD,GACE1M,KAAK6R,UAAU,mBACN,KAAToxB,EACA,CACA,GAA6D,QAAzDjjC,KAAK8R,gBAAgB,iBAAkB,cACzC,MAAM9R,KAAKge,MACThe,KAAK5Q,MAAMouB,IACX2F,EAAOpI,0CAKX,YADA/a,KAAKqxC,SAAS7xB,EAAGnT,YAAa,EAE/B,CACF,CAEY,KAAT42B,EAKJjjC,KAAKqxC,SACM,MAAT/9C,EAAiCksB,EAAGrR,UAAYqR,EAAGnR,WACnD,GANArO,KAAKqxC,SAAS7xB,EAAGt0B,OAAQ,EA1C1B,MATK,KAAA8U,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GACzCxd,KAAKqxC,SAAS7xB,EAAGt0B,OAAQ,GAEzB8U,KAAKqxC,SACM,MAAT/9C,EAAiCksB,EAAGvR,UAAYuR,EAAGtR,WACnD,EAsDP,CAED8/C,kBAGe,KADAhuD,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAElDxd,KAAKqxC,SAAS7xB,EAAGt0B,OAAQ,GAEzB8U,KAAKqxC,SAAS7xB,EAAGpR,WAAY,EAEhC,CAED6/C,mBAAmB36D,GAEjB,MAAM2vC,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAEpD,GAAIylB,IAAS3vC,EACX,OACW,KAAT2vC,GACCjjC,KAAKghB,UACN,KAAAhhB,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,IACZ,IAA1Bxd,KAAK5Q,MAAMuuB,aAAoB3d,KAAKigB,6BAQvCjgB,KAAKqxC,SAAS7xB,EAAG5R,OAAQ,IALvB5N,KAAKqtD,gBAAgB,GACrBrtD,KAAKitD,iBACLjtD,KAAKu2C,aAOI,KAATtT,EACFjjC,KAAKqxC,SAAS7xB,EAAGt0B,OAAQ,GAEzB8U,KAAKqxC,SAAS7xB,EAAG/Q,QAAS,EAE7B,CAED45C,gBAAgB/0D,GAEd,MAAM2vC,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GACpD,IAAI0wC,EAAO,EAEX,OAAIjrB,IAAS3vC,GACX46D,EACW,KAAT56D,GACA,KAAA0M,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GACnC,EACA,EACF,KAAAxd,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM0wC,QACzCluD,KAAKqxC,SAAS7xB,EAAGt0B,OAAQgjE,EAAO,QAGlCluD,KAAKqxC,SAAS7xB,EAAGhR,SAAU0/C,IAKlB,KAATjrB,GACS,KAAT3vC,GACC0M,KAAKghB,UACN,KAAAhhB,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,IACvC,KAAAxd,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,IAS5B,KAATylB,IAEFirB,EAAO,QAGTluD,KAAKqxC,SAAS7xB,EAAGjR,WAAY2/C,KAX3BluD,KAAKqtD,gBAAgB,GACrBrtD,KAAKitD,iBACLjtD,KAAKu2C,YAUR,CAED4X,kBAAkB76D,GAEhB,MAAM2vC,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GACpD,GAAa,KAATylB,EASJ,OAAa,KAAT3vC,GAAwC,KAAT2vC,GAEjCjjC,KAAK5Q,MAAMouB,KAAO,OAClBxd,KAAKiiC,YAAYziB,EAAGpS,aAGtBpN,KAAKqxC,SAAkB,KAAT/9C,EAA8BksB,EAAG7R,GAAK6R,EAAG3R,KAAM,GAd3D7N,KAAKqxC,SACH7xB,EAAGlR,SACH,KAAAtO,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GACnC,EACA,EAWT,CAED4wC,qBAEE,MAAMnrB,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAC9C6wC,EAAQruD,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GACxC,KAATylB,EACY,KAAVorB,EAEFruD,KAAKqxC,SAAS7xB,EAAGt0B,OAAQ,GAGzB8U,KAAKqxC,SAAS7xB,EAAGxR,kBAAmB,GAG7B,KAATi1B,GACEorB,GAAS,IAAoBA,GAAS,MAMtCruD,KAAK5Q,MAAMouB,IACbxd,KAAKiiC,YAAYziB,EAAGtS,YAJpBlN,KAAK5Q,MAAMouB,KAAO,EAClBxd,KAAKiiC,YAAYziB,EAAGrS,aAKvB,CAED+0B,iBAAiB5uC,GACf,OAAQA,GAIN,QAEE,YADA0M,KAAK2tD,gBAIP,QAGE,QAFE3tD,KAAK5Q,MAAMouB,SACbxd,KAAKiiC,YAAYziB,EAAG7S,QAEtB,QAGE,QAFE3M,KAAK5Q,MAAMouB,SACbxd,KAAKiiC,YAAYziB,EAAG5S,QAEtB,QAGE,QAFE5M,KAAK5Q,MAAMouB,SACbxd,KAAKiiC,YAAYziB,EAAG1S,MAEtB,QAGE,QAFE9M,KAAK5Q,MAAMouB,SACbxd,KAAKiiC,YAAYziB,EAAG3S,OAEtB,QACE,GACE7M,KAAK6R,UAAU,mBACf,MAAA7R,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GACvC,CACA,GAA6D,QAAzDxd,KAAK8R,gBAAgB,iBAAkB,cACzC,MAAM9R,KAAKge,MACThe,KAAK5Q,MAAMouB,IACX2F,EAAOnI,4CAKXhb,KAAKiiC,YAAYziB,EAAGrT,aACpBnM,KAAK5Q,MAAMouB,KAAO,CAbpB,OAeIxd,KAAK5Q,MAAMouB,IACbxd,KAAKiiC,YAAYziB,EAAGvT,UAEtB,OACF,QAGE,QAFEjM,KAAK5Q,MAAMouB,SACbxd,KAAKiiC,YAAYziB,EAAGpT,UAEtB,SACE,GACEpM,KAAK6R,UAAU,mBACf,MAAA7R,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GACvC,CACA,GAA6D,QAAzDxd,KAAK8R,gBAAgB,iBAAkB,cACzC,MAAM9R,KAAKge,MACThe,KAAK5Q,MAAMouB,IACX2F,EAAOpJ,6CAKX/Z,KAAKiiC,YAAYziB,EAAGjT,WACpBvM,KAAK5Q,MAAMouB,KAAO,CAbpB,OAeIxd,KAAK5Q,MAAMouB,IACbxd,KAAKiiC,YAAYziB,EAAGlT,QAEtB,OACF,SAGE,QAFEtM,KAAK5Q,MAAMouB,SACbxd,KAAKiiC,YAAYziB,EAAG/S,QAGtB,QAUE,YAREzM,KAAK6R,UAAU,iBACf,KAAA7R,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAEvCxd,KAAKqxC,SAAS7xB,EAAGxS,YAAa,MAE5BhN,KAAK5Q,MAAMouB,IACbxd,KAAKiiC,YAAYziB,EAAGzS,SAIxB,QAEE,YADA/M,KAAKouD,qBAGP,QAGE,QAFEpuD,KAAK5Q,MAAMouB,SACbxd,KAAKiiC,YAAYziB,EAAGlS,WAGtB,QAAuB,CACrB,MAAM21B,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAEpD,GAAa,MAATylB,GAA0C,KAATA,EAEnC,YADAjjC,KAAKsuD,gBAAgB,IAIvB,GAAa,MAATrrB,GAA0C,KAATA,EAEnC,YADAjjC,KAAKsuD,gBAAgB,GAIvB,GAAa,KAATrrB,GAA0C,KAATA,EAEnC,YADAjjC,KAAKsuD,gBAAgB,EAGxB,CAGD,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAEE,YADAtuD,KAAK4tD,YAAW,GAIlB,QACA,QAEE,YADA5tD,KAAKuuD,WAAWj7D,GAQlB,QAEE,YADA0M,KAAK6tD,kBAGP,QACA,QAEE,YADA7tD,KAAKq2C,sBAAsB/iD,GAG7B,SACA,QAEE,YADA0M,KAAKw2C,mBAAmBljD,GAG1B,QAEE,YADA0M,KAAKguD,kBAGP,QACA,QAEE,YADAhuD,KAAKiuD,mBAAmB36D,GAG1B,QACA,QAEE,YADA0M,KAAKqoD,gBAAgB/0D,GAGvB,QACA,QAEE,YADA0M,KAAKmuD,kBAAkB76D,GAGzB,SAEE,YADA0M,KAAKqxC,SAAS7xB,EAAG1R,MAAO,GAG1B,QAGE,QAFE9N,KAAK5Q,MAAMouB,SACbxd,KAAKiiC,YAAYziB,EAAGhS,IAGtB,QAEE,YADAxN,KAAKwtD,uBAGP,QAEE,YADAxtD,KAAKwuD,WAGP,QACE,GAAI9tC,EAAkBptB,GAEpB,YADA0M,KAAKwuD,SAASl7D,GAKpB,MAAM0M,KAAKge,MACThe,KAAK5Q,MAAMouB,IACX2F,EAAO7L,yBACPprB,OAAO02C,cAActvC,GAExB,CAED+9C,SAAS35C,EAAiBw2D,GACxB,MAAM36D,EAAMyM,KAAK6d,MAAMzxB,MAAM4T,KAAK5Q,MAAMouB,IAAKxd,KAAK5Q,MAAMouB,IAAM0wC,GAC9DluD,KAAK5Q,MAAMouB,KAAO0wC,EAClBluD,KAAKiiC,YAAYvqC,EAAMnE,EACxB,CAEDu6D,aACE,MAAM7lE,EAAQ+X,KAAK5Q,MAAMouB,IACzB,IAAIixC,EAAStsC,EACb,OAAS,CACP,GAAIniB,KAAK5Q,MAAMouB,KAAOxd,KAAKrU,OACzB,MAAMqU,KAAKge,MAAM/1B,EAAOk7B,EAAO1G,oBAEjC,MAAMslB,EAAK/hC,KAAK6d,MAAM6wC,OAAO1uD,KAAK5Q,MAAMouB,KACxC,GAAIxM,EAAUvZ,KAAKsqC,GACjB,MAAM/hC,KAAKge,MAAM/1B,EAAOk7B,EAAO1G,oBAEjC,GAAIgyC,EACFA,GAAU,MACL,CACL,GAAW,MAAP1sB,EACF5f,GAAU,OACL,GAAW,MAAP4f,GAAc5f,EACvBA,GAAU,OACL,GAAW,MAAP4f,IAAe5f,EACxB,MAEFssC,EAAiB,OAAP1sB,CACX,GACC/hC,KAAK5Q,MAAMouB,GACd,CACD,MAAMmxC,EAAU3uD,KAAK6d,MAAMzxB,MAAMnE,EAAO+X,KAAK5Q,MAAMouB,OACjDxd,KAAK5Q,MAAMouB,IAEb,IAAIoxC,EAAO,GAEX,KAAO5uD,KAAK5Q,MAAMouB,IAAMxd,KAAKrU,QAAQ,CACnC,MAAM4b,EAAOvH,KAAK6d,MAAM7d,KAAK5Q,MAAMouB,KAC7BqxC,EAAW7uD,KAAK4sD,eAAe5sD,KAAK5Q,MAAMouB,KAEhD,GAAIsuC,GAAkBljE,IAAI2e,GACpBqnD,EAAK74D,QAAQwR,IAAS,GACxBvH,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAM,EAAG2F,EAAO1N,0BAEnC,KACLkL,EAAiBkuC,IACJ,KAAbA,EAIA,MAFA7uD,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAM,EAAG2F,EAAOpL,qBAGvC,GAEC/X,KAAK5Q,MAAMouB,IACboxC,GAAQrnD,CACT,CAEDvH,KAAKiiC,YAAYziB,EAAG1T,OAAQ,CAC1Bpd,QAASigE,EACThgE,MAAOigE,GAEV,CAWDE,QACEC,EACAx+D,EACAy+D,EACAC,GAA6B,GAE7B,MAAMhnE,EAAQ+X,KAAK5Q,MAAMouB,IACnB0xC,EACM,KAAVH,EACIhD,GAAkC/nD,IAClC+nD,GAAkCC,UAClCmD,EACM,KAAVJ,EACI9C,GAAgCjoD,IACtB,KAAV+qD,EACA9C,GAAgCG,IACtB,IAAV2C,EACA9C,GAAgCC,IAChCD,GAAgCE,IAEtC,IAAIrd,GAAU,EACVsgB,EAAQ,EAEZ,IAAK,IAAIvjE,EAAI,EAAG+M,EAAW,MAAPrI,EAAc6U,IAAW7U,EAAK1E,EAAI+M,IAAK/M,EAAG,CAC5D,MAAMyH,EAAO0M,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KAC9C,IAAI7X,EAEJ,GAAa,KAATrS,EAAJ,CA+BA,GAREqS,EADErS,GAAQ,GACJA,EAAO,GAAP,GACGA,GAAQ,GACXA,EAAO,GAAP,GACG+7D,GAAkB/7D,GACrBA,EAAO,GAEP8R,IAEJO,GAAOopD,EAIT,GAAI/uD,KAAKL,QAAQye,eAAiBzY,GAAO,EACvCA,EAAM,EACN3F,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAQ4D,EAAI,EAAGs3B,EAAOtM,aAAck4C,OACrD,KAAIC,EAIT,MAHArpD,EAAM,EACNmpC,GAAU,CAGX,GAED9uC,KAAK5Q,MAAMouB,IACb4xC,EAAQA,EAAQL,EAAQppD,CA1BvB,KApBD,CACE,MAAM2pD,EAAOtvD,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAC9CylB,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,KACb,IAAnC2xC,EAAgBp5D,QAAQktC,IAG1BisB,EAAkBn5D,QAAQu5D,IAAS,GACnCJ,EAAkBn5D,QAAQktC,IAAS,GACnCxgC,OAAOL,MAAM6gC,KAJbjjC,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAOzH,4BAS/BuzC,GACHjvD,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAOrK,oCAIlC9Y,KAAK5Q,MAAMouB,GAEd,CA2BF,CACD,OACExd,KAAK5Q,MAAMouB,MAAQv1B,GACX,MAAPsI,GAAeyP,KAAK5Q,MAAMouB,IAAMv1B,IAAUsI,GAC3Cu+C,EAEO,KAGFsgB,CACR,CAEDd,gBAAgBS,GACd,MAAM9mE,EAAQ+X,KAAK5Q,MAAMouB,IACzB,IAAI+xC,GAAW,EAEfvvD,KAAK5Q,MAAMouB,KAAO,EAClB,MAAM7X,EAAM3F,KAAK8uD,QAAQC,GACd,MAAPppD,GACF3F,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAQ,EAAGk7B,EAAOtM,aAAck4C,GAExD,MAAM9rB,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KAE9C,GAAa,MAATylB,IACAjjC,KAAK5Q,MAAMouB,IACb+xC,GAAW,OACN,GAAa,MAATtsB,EACT,MAAMjjC,KAAKge,MAAM/1B,EAAOk7B,EAAOvM,gBAGjC,GAAI8J,EAAkB1gB,KAAK4sD,eAAe5sD,KAAK5Q,MAAMouB,MACnD,MAAMxd,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAOtK,kBAG1C,GAAI02C,EAAJ,CACE,MAAMh8D,EAAMyM,KAAK6d,MAAMzxB,MAAMnE,EAAO+X,KAAK5Q,MAAMouB,KAAK1wB,QAAQ,QAAS,IACrEkT,KAAKiiC,YAAYziB,EAAG5T,OAAQrY,EAE7B,MAEDyM,KAAKiiC,YAAYziB,EAAG7T,IAAKhG,EAC1B,CAIDioD,WAAW4B,GACT,MAAMvnE,EAAQ+X,KAAK5Q,MAAMouB,IACzB,IAAIiyC,GAAU,EACVF,GAAW,EACXG,GAAY,EACZC,GAAc,EACdC,GAAU,EAETJ,GAAsC,OAArBxvD,KAAK8uD,QAAQ,KACjC9uD,KAAKge,MAAM/1B,EAAOk7B,EAAO/L,eAE3B,MAAMy4C,EACJ7vD,KAAK5Q,MAAMouB,IAAMv1B,GAAS,GAC1B,KAAA+X,KAAK6d,MAAMmkB,WAAW/5C,GAExB,GAAI4nE,EAAgB,CAClB,MAAMroD,EAAUxH,KAAK6d,MAAMzxB,MAAMnE,EAAO+X,KAAK5Q,MAAMouB,KAEnD,GADAxd,KAAK8vD,uBAAuB7nE,EAAOk7B,EAAOzI,qBACrC1a,KAAK5Q,MAAMw+C,OAAQ,CAEtB,MAAMmiB,EAAgBvoD,EAAQzR,QAAQ,KAClCg6D,EAAgB,GAClB/vD,KAAKge,MAAM+xC,EAAgB9nE,EAAOk7B,EAAOpG,0BAE5C,CACD6yC,EAAUC,IAAmB,OAAOp4D,KAAK+P,EAC1C,CAED,IAAIy7B,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KA2C5C,GA1Ca,KAATylB,GAA2B2sB,MAC3B5vD,KAAK5Q,MAAMouB,IACbxd,KAAK8uD,QAAQ,IACbW,GAAU,EACVxsB,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,MAI9B,KAATylB,GAA0C,MAATA,GACjC2sB,IAED3sB,EAAOjjC,KAAK6d,MAAMmkB,aAAahiC,KAAK5Q,MAAMouB,KAC7B,KAATylB,GAAwC,KAATA,KAC/BjjC,KAAK5Q,MAAMouB,IAEU,OAArBxd,KAAK8uD,QAAQ,KACf9uD,KAAKge,MAAM/1B,EAAOk7B,EAAO9L,0BAE3Bo4C,GAAU,EACVE,GAAc,EACd1sB,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,MAG7B,MAATylB,KAGEwsB,GAAWI,IACb7vD,KAAKge,MAAM/1B,EAAOk7B,EAAOzM,wBAEzB1W,KAAK5Q,MAAMouB,IACb+xC,GAAW,GAGA,MAATtsB,IACFjjC,KAAK4pD,aAAa,UAAW5pD,KAAK5Q,MAAMouB,MACpCmyC,GAAeE,IACjB7vD,KAAKge,MAAM/1B,EAAOk7B,EAAOvM,kBAEzB5W,KAAK5Q,MAAMouB,IACbkyC,GAAY,GAGVhvC,EAAkB1gB,KAAK4sD,eAAe5sD,KAAK5Q,MAAMouB,MACnD,MAAMxd,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAOtK,kBAI1C,MAAMtlB,EAAMyM,KAAK6d,MAAMzxB,MAAMnE,EAAO+X,KAAK5Q,MAAMouB,KAAK1wB,QAAQ,SAAU,IAEtE,GAAIyiE,EAEF,YADAvvD,KAAKiiC,YAAYziB,EAAG5T,OAAQrY,GAI9B,GAAIm8D,EAEF,YADA1vD,KAAKiiC,YAAYziB,EAAG3T,QAAStY,GAI/B,MAAMoS,EAAMiqD,EAAU/tD,SAAStO,EAAK,GAAKy8D,WAAWz8D,GACpDyM,KAAKiiC,YAAYziB,EAAG7T,IAAKhG,EAC1B,CAIDsqD,cAAcC,GAEZ,IAAI58D,EAEJ,GAAW,MAHA0M,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KAGP,CACnC,MAAM2yC,IAAYnwD,KAAK5Q,MAAMouB,IAO7B,GANAlqB,EAAO0M,KAAKowD,YACVpwD,KAAK6d,MAAM9nB,QAAQ,IAAKiK,KAAK5Q,MAAMouB,KAAOxd,KAAK5Q,MAAMouB,KACrD,EACA0yC,KAEAlwD,KAAK5Q,MAAMouB,IACA,OAATlqB,GAAiBA,EAAO,QAAU,CACpC,IAAI48D,EAGF,OAAO,KAFPlwD,KAAKge,MAAMmyC,EAAShtC,EAAOxM,iBAI9B,CAdH,MAgBErjB,EAAO0M,KAAKowD,YAAY,GAAG,EAAOF,GAEpC,OAAO58D,CACR,CAEDi7D,WAAW/rB,GACT,IAAI7iB,EAAM,GACRmiB,IAAe9hC,KAAK5Q,MAAMouB,IAC5B,OAAS,CACP,GAAIxd,KAAK5Q,MAAMouB,KAAOxd,KAAKrU,OACzB,MAAMqU,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOzG,oBAE5C,MAAMqlB,EAAK/hC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KAC5C,GAAIukB,IAAOS,EAAO,MAClB,GAAW,KAAPT,EACFpiB,GAAO3f,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,KAE/CmC,GAAO3f,KAAKqwD,iBAAgB,GAC5BvuB,EAAa9hC,KAAK5Q,MAAMouB,SACnB,GACE,OAAPukB,GACO,OAAPA,IAEE/hC,KAAK5Q,MAAMouB,MACXxd,KAAK5Q,MAAMkzC,QACbtiC,KAAK5Q,MAAM0uB,UAAY9d,KAAK5Q,MAAMouB,QAC7B,IAAItM,EAAU6wB,GACnB,MAAM/hC,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOzG,sBAExC1c,KAAK5Q,MAAMouB,GACd,CACF,CACDmC,GAAO3f,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,OAC/Cxd,KAAKiiC,YAAYziB,EAAG70B,OAAQg1B,EAC7B,CAIDN,gBACE,IAAIM,EAAM,GACRmiB,EAAa9hC,KAAK5Q,MAAMouB,IACxB8yC,GAAkB,EACpB,OAAS,CACP,GAAItwD,KAAK5Q,MAAMouB,KAAOxd,KAAKrU,OACzB,MAAMqU,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOxG,sBAE5C,MAAMolB,EAAK/hC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KAC5C,GACS,KAAPukB,GACQ,KAAPA,GACC,MAAA/hC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,IAAM,GAGzC,OAAIxd,KAAK5Q,MAAMouB,MAAQxd,KAAK5Q,MAAMnH,OAAS+X,KAAKqC,MAAMmd,EAAG1vB,UAC5C,KAAPiyC,GACF/hC,KAAK5Q,MAAMouB,KAAO,OAClBxd,KAAKiiC,YAAYziB,EAAGjS,kBAGlBvN,KAAK5Q,MAAMouB,SACbxd,KAAKiiC,YAAYziB,EAAGlS,aAIxBqS,GAAO3f,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,UAC/Cxd,KAAKiiC,YAAYziB,EAAG1vB,SAAUwgE,EAAkB,KAAO3wC,IAGzD,GAAW,KAAPoiB,EAA4B,CAC9BpiB,GAAO3f,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,KAC/C,MAAMixC,EAAUzuD,KAAKqwD,iBAAgB,GACrB,OAAZ5B,EACF6B,GAAkB,EAElB3wC,GAAO8uC,EAET3sB,EAAa9hC,KAAK5Q,MAAMouB,GAR1B,MASO,GAAItM,EAAU6wB,GAAK,CAGxB,OAFApiB,GAAO3f,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,OAC7Cxd,KAAK5Q,MAAMouB,IACLukB,GACN,QACM,KAAA/hC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,QACjCxd,KAAK5Q,MAAMouB,IAGjB,QACEmC,GAAO,KACP,MACF,QACEA,GAAOzzB,OAAO0V,aAAamgC,KAG7B/hC,KAAK5Q,MAAMkzC,QACbtiC,KAAK5Q,MAAM0uB,UAAY9d,KAAK5Q,MAAMouB,IAClCskB,EAAa9hC,KAAK5Q,MAAMouB,GAlBnB,OAoBHxd,KAAK5Q,MAAMouB,GAEhB,CACF,CAEDsyC,uBAAuBtyC,EAAa91B,GAC9BsY,KAAK5Q,MAAMw+C,SAAW5tC,KAAK5Q,MAAMq8D,aAAa7iE,IAAI40B,GACpDxd,KAAKge,MAAMR,EAAK91B,GAEhBsY,KAAK5Q,MAAMq8D,aAAaniE,IAAIk0B,EAAK91B,EAEpC,CAGD2oE,gBAAgBE,GACd,MAAML,GAAkBK,EAClBxuB,EAAK/hC,KAAK6d,MAAMmkB,aAAahiC,KAAK5Q,MAAMouB,KAE9C,SADExd,KAAK5Q,MAAMouB,IACLukB,GACN,SACE,MAAO,KACT,SACE,MAAO,KACT,SAA2B,CACzB,MAAMzuC,EAAO0M,KAAKowD,YAAY,GAAG,EAAOF,GACxC,OAAgB,OAAT58D,EAAgB,KAAOpH,OAAO0V,aAAatO,EACnD,CACD,SAA2B,CACzB,MAAMA,EAAO0M,KAAKiwD,cAAcC,GAChC,OAAgB,OAAT58D,EAAgB,KAAOpH,OAAO02C,cAActvC,EACpD,CACD,SACE,MAAO,KACT,QACE,MAAO,KACT,SACE,MAAO,KACT,SACE,MAAO,KACT,QACM,KAAA0M,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,QACjCxd,KAAK5Q,MAAMouB,IAGjB,QACExd,KAAK5Q,MAAM0uB,UAAY9d,KAAK5Q,MAAMouB,MAChCxd,KAAK5Q,MAAMkzC,QAEf,UACA,UACE,MAAO,GACT,QACA,QACE,GAAIiuB,EACF,OAAO,KAEPvwD,KAAK8vD,uBACH9vD,KAAK5Q,MAAMouB,IAAM,EACjB2F,EAAO1I,qBAIb,QACE,GAAIsnB,GAAM,IAAoBA,GAAM,GAAkB,CACpD,MAAMouB,EAAUnwD,KAAK5Q,MAAMouB,IAAM,EAOjC,IAAIgzC,EANUxwD,KAAK6d,MAChB8kB,OAAO3iC,KAAK5Q,MAAMouB,IAAM,EAAG,GAC3Bnb,MAAM,WAIY,GAEjBouD,EAAQ5uD,SAAS2uD,EAAU,GAC3BC,EAAQ,MACVD,EAAWA,EAASpkE,MAAM,GAAI,GAC9BqkE,EAAQ5uD,SAAS2uD,EAAU,IAE7BxwD,KAAK5Q,MAAMouB,KAAOgzC,EAAS7kE,OAAS,EACpC,MAAMs3C,EAAOjjC,KAAK6d,MAAMmkB,WAAWhiC,KAAK5Q,MAAMouB,KAC9C,GACe,MAAbgzC,GACS,KAATvtB,GACS,KAATA,EACA,CACA,GAAIstB,EACF,OAAO,KAEPvwD,KAAK8vD,uBAAuBK,EAAShtC,EAAO1I,oBAE/C,CAED,OAAOvuB,OAAO0V,aAAa6uD,EAC5B,CAED,OAAOvkE,OAAO0V,aAAamgC,GAEhC,CAIDquB,YACE7/D,EACAy+D,EACAkB,GAEA,MAAMC,EAAUnwD,KAAK5Q,MAAMouB,IACrBnf,EAAI2B,KAAK8uD,QAAQ,GAAIv+D,EAAKy+D,GAAU,GAQ1C,OAPU,OAAN3wD,IACE6xD,EACFlwD,KAAKge,MAAMmyC,EAAShtC,EAAOrM,uBAE3B9W,KAAK5Q,MAAMouB,IAAM2yC,EAAU,GAGxB9xD,CACR,CAWD8yC,UAAUuf,GACR1wD,KAAK5Q,MAAMiyD,aAAc,EACzB,IAAItgC,EAAO,GACX,MAAM94B,EAAQ+X,KAAK5Q,MAAMouB,IACzB,IAAIskB,EAAa9hC,KAAK5Q,MAAMouB,IAK5B,SAJkBxuB,IAAd0hE,IACF1wD,KAAK5Q,MAAMouB,KAAOkzC,GAAa,MAAS,EAAI,GAGvC1wD,KAAK5Q,MAAMouB,IAAMxd,KAAKrU,QAAQ,CACnC,MAAMo2C,EAAK/hC,KAAK4sD,eAAe5sD,KAAK5Q,MAAMouB,KAC1C,GAAImD,EAAiBohB,GACnB/hC,KAAK5Q,MAAMouB,KAAOukB,GAAM,MAAS,EAAI,MAChC,IAAW,KAAPA,EAyBT,MAzBqC,CACrC/hC,KAAK5Q,MAAMiyD,aAAc,EAEzBtgC,GAAQ/gB,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,KAChD,MAAMmzC,EAAW3wD,KAAK5Q,MAAMouB,IACtBozC,EACJ5wD,KAAK5Q,MAAMouB,MAAQv1B,EAAQy4B,EAAoBC,EAEjD,GAAI,MAAA3gB,KAAK6d,MAAMmkB,aAAahiC,KAAK5Q,MAAMouB,KAA+B,CACpExd,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAOhL,sBAClC2pB,EAAa9hC,KAAK5Q,MAAMouB,IAAM,EAC9B,QACD,GAECxd,KAAK5Q,MAAMouB,IACb,MAAMqzC,EAAM7wD,KAAKiwD,eAAc,GACnB,OAARY,IACGD,EAAgBC,IACnB7wD,KAAKge,MAAM2yC,EAAUxtC,EAAOxN,4BAG9BoL,GAAQ70B,OAAO02C,cAAciuB,IAE/B/uB,EAAa9hC,KAAK5Q,MAAMouB,GAvBnB,CA0BN,CACF,CACD,OAAOuD,EAAO/gB,KAAK6d,MAAMzxB,MAAM01C,EAAY9hC,KAAK5Q,MAAMouB,IACvD,CAKDgxC,SAASkC,GACP,MAAM3vC,EAAO/gB,KAAKmxC,UAAUuf,GACtBh5D,EAAOo5D,EAAajoE,IAAIk4B,IAASvB,EAAG13B,KAC1CkY,KAAKiiC,YAAYvqC,EAAMqpB,EACxB,CAED0rC,sBACE,MAAMpM,EAAKrgD,KAAK5Q,MAAMsI,KAAKuM,QACvBo8C,GAAMrgD,KAAK5Q,MAAMiyD,aACnBrhD,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOnM,2BAA4BqpC,EAEnE,CAEDtgC,aAAaF,GACX,MAAMzyB,EAAS4S,KAAK4f,aACpB,OAAIxyB,IAAW26D,EAAGzoC,oBAAsBlyB,IAAW26D,EAAGxoC,oBAIpDM,IAAaL,EAAGzS,OACf3f,IAAW26D,EAAGhpC,gBAAkB3xB,IAAW26D,EAAG/oC,gBAS/Ca,IAAaL,EAAG/P,SACfoQ,IAAaL,EAAG13B,MAAQkY,KAAK5Q,MAAMswB,YAE7B1f,KAAKigB,wBAIZJ,IAAaL,EAAGpQ,OAChByQ,IAAaL,EAAG1S,MAChB+S,IAAaL,EAAGxT,KAChB6T,IAAaL,EAAG5S,QAChBiT,IAAaL,EAAGpS,QAKdyS,IAAaL,EAAGlT,OACXlf,IAAW26D,EAAGhpC,eAIrBc,IAAaL,EAAG3P,MAChBgQ,IAAaL,EAAG1P,QAChB+P,IAAaL,EAAG13B,OAKd+3B,IAAaL,EAAGjR,aAKZvO,KAAK5Q,MAAMswB,eAxCTtyB,EAAOwxB,OAyClB,CAEDvT,cAAcwU,GACZ,MAAMnoB,EAAOsI,KAAK5Q,MAAMsI,KACxB,IAAIq5D,GAEAr5D,EAAKuM,SAAY4b,IAAaL,EAAGvS,KAAO4S,IAAaL,EAAGrS,aAEhD4jD,EAASr5D,EAAK2T,eACxB0lD,EAAO3nE,KAAK4W,KAAM6f,GAElB7f,KAAK5Q,MAAMswB,YAAchoB,EAAKiT,WAJ9B3K,KAAK5Q,MAAMswB,aAAc,CAM5B,EC5iDI,MAAMsxC,GAAW7wD,cAAA,KAEtB8wD,aAA4B,IAAI58D,IAFV,KAKtB68D,cAAgD,IAAI91D,IAL9B,KAStBymB,sBAA6C,IAAIzmB,GAT3B,EAYT,MAAM+1D,GAKnBhxD,YAAY6d,GAAsB,KAJlClrB,MAA2B,GAIO,KAFlC+uB,sBAA6C,IAAIzmB,IAG/C4E,KAAKge,MAAQA,CACd,CAEDjb,UACE,OAAO/C,KAAKlN,MAAMkN,KAAKlN,MAAMnH,OAAS,EACvC,CAED+2B,QACE1iB,KAAKlN,MAAMrC,KAAK,IAAIugE,GACrB,CAEDruC,OACE,MAAMyuC,EAAgBpxD,KAAKlN,MAAMoQ,MAK3BH,EAAU/C,KAAK+C,UAGrB,IAAK,MAAOjb,EAAM01B,KAAQ7wB,MAAM+H,KAAK08D,EAAcvvC,uBAC7C9e,EACGA,EAAQ8e,sBAAsBj5B,IAAId,IACrCib,EAAQ8e,sBAAsBv4B,IAAIxB,EAAM01B,GAG1Cxd,KAAKge,MAAMR,EAAK2F,EAAO3L,8BAA+B1vB,EAG3D,CAEDupE,mBACEvpE,EACAglD,EACAtvB,GAEA,MAAM8zC,EAAatxD,KAAK+C,UACxB,IAAIwuD,EAAYD,EAAWL,aAAaroE,IAAId,GAE5C,GfkBuC0pE,EelBnC1kB,EAA2C,CAC7C,MAAM2kB,EAAWF,GAAaD,EAAWJ,cAAcroE,IAAIf,GACvD2pE,GAUFF,GfMmCC,EeZnBC,KfYmBD,EeXnB1kB,KfQiB,EeZf2kB,KfYe,EeXf3kB,GAUbykB,GAAWD,EAAWJ,cAAcjuC,OAAOn7B,IACtCypE,GACVD,EAAWJ,cAAc5nE,IAAIxB,EAAMglD,EAEtC,CAEGykB,GACFvxD,KAAKge,MAAMR,EAAK2F,EAAOtJ,yBAA0B/xB,GAGnDwpE,EAAWL,aAAa/4D,IAAIpQ,GAC5BwpE,EAAWzvC,sBAAsBoB,OAAOn7B,EACzC,CAED4pE,eAAe5pE,EAAc01B,GAC3B,IAAI8zC,EACJ,IAAKA,KAActxD,KAAKlN,MACtB,GAAIw+D,EAAWL,aAAaroE,IAAId,GAAO,OAGrCwpE,EACFA,EAAWzvC,sBAAsBv4B,IAAIxB,EAAM01B,GAG3Cxd,KAAKge,MAAMR,EAAK2F,EAAO3L,8BAA+B1vB,EAEzD,EClDH,MAAM6pE,GAGJxxD,YAAYzI,EAVM,GAUmC,KAFrDA,UAEqD,EACnDsI,KAAKtI,KAAOA,CACb,CAEDk6D,iCACE,OAbqC,IAcnC5xD,KAAKtI,MAfyB,IAgB9BsI,KAAKtI,IAER,CAEDm6D,kCACE,OAnBsB,IAmBf7xD,KAAKtI,IACb,EAGH,MAAMo6D,WAA8BH,GAElCxxD,YAAYzI,GACV8rB,MAAM9rB,GADiB,KADzB2mB,OAA6D,IAAIjjB,GAGhE,CACD22D,uBAAuBv0C,EAAa1tB,GAClCkQ,KAAKqe,OAAO/0B,IAAIk0B,EAAK1tB,EACtB,CACDkiE,sBAAsBx0C,GACpBxd,KAAKqe,OAAO4E,OAAOzF,EACpB,CACDy0C,cAAcC,GACZlyD,KAAKqe,OAAOlpB,QAAQ+8D,EACrB,EAGY,MAAMC,GAGnBhyD,YAAY6d,GAAsB,KAFlClrB,MAAgC,CAAC,IAAI6+D,IAGnC3xD,KAAKge,MAAQA,CACd,CACD0E,MAAMr1B,GACJ2S,KAAKlN,MAAMrC,KAAKpD,EACjB,CAEDs1B,OACE3iB,KAAKlN,MAAMoQ,KACZ,CAYDkvD,gCAAgC50C,EAAa1tB,GAC3C,MAAM,MAAEgD,GAAUkN,KAClB,IAAInU,EAAIiH,EAAMnH,OAAS,EACnB0B,EAAyByF,EAAMjH,GACnC,MAAQwB,EAAMwkE,mCAAmC,CAC/C,IAAIxkE,EAAMukE,iCAMR,OAJAvkE,EAAM0kE,uBAAuBv0C,EAAK1tB,GAMpCzC,EAAQyF,IAAQjH,EACjB,CAEDmU,KAAKge,MAAMR,EAAK1tB,EACjB,CAuBDuiE,mCACE70C,EACA1tB,GAEA,MAAM,MAAEgD,GAAUkN,KACZ3S,EAAyByF,EAAMA,EAAMnH,OAAS,GACpD,GAAI0B,EAAMwkE,kCACR7xD,KAAKge,MAAMR,EAAK1tB,OACX,KAAIzC,EAAMukE,iCAIf,OAFAvkE,EAAM0kE,uBAAuBv0C,EAAK1tB,EAGnC,CACF,CAWDwiE,gCAAgC90C,EAAa1tB,GAC3C,MAAM,MAAEgD,GAAUkN,KAClB,IAAInU,EAAIiH,EAAMnH,OAAS,EACnB0B,EAAyByF,EAAMjH,GACnC,KAAOwB,EAAMukE,kCArIwB,IAsI/BvkE,EAAMqK,MAERrK,EAAM0kE,uBAAuBv0C,EAAK1tB,GAEpCzC,EAAQyF,IAAQjH,EAEnB,CAED0mE,oBACE,MAAM,MAAEz/D,GAAUkN,KACZwiB,EAAe1vB,EAAMA,EAAMnH,OAAS,GACrC62B,EAAaovC,kCAElBpvC,EAAayvC,eAAc,CAACniE,EAAU0tB,KAEpCxd,KAAKge,MAAMR,EAAK1tB,GAEhB,IAAIjE,EAAIiH,EAAMnH,OAAS,EACnB0B,EAAQyF,EAAMjH,GAClB,KAAOwB,EAAMukE,kCAEXvkE,EAAM2kE,sBAAsBx0C,GAC5BnwB,EAAQyF,IAAQjH,EACjB,GAEJ,EAeI,SAAS2mE,KACd,OAAO,IAAIb,EACZ,CCrMc,MAAMc,WAAmBnG,GAQtC7tB,SAAStxC,EAAYlE,EAAa0c,GAC3BxY,KAEUA,EAAK4wC,MAAQ5wC,EAAK4wC,OAAS,CAAC,GACrC90C,GAAO0c,EACd,CAID++B,aAAaguB,GACX,OAAO1yD,KAAKqC,MAAMmd,EAAGjR,aAAevO,KAAK5Q,MAAMjI,QAAUurE,CAC1D,CAIDzoB,iBAAiByoB,GACX1yD,KAAK0kC,aAAaguB,GACpB1yD,KAAKijC,OAELjjC,KAAKgjC,WAAW,KAAMxjB,EAAGjR,WAE5B,CAIDy4B,aAAal/C,GACX,OACEkY,KAAKqC,MAAMmd,EAAG13B,OACdkY,KAAK5Q,MAAMjI,QAAUW,IACpBkY,KAAK5Q,MAAMiyD,WAEf,CAEDwI,qBAAqB8I,EAAmB7qE,GACtC,MAAM8qE,EAAUD,EAAY7qE,EAAK6D,OACjC,OACEqU,KAAK6d,MAAMzxB,MAAMumE,EAAWC,KAAa9qE,IACxC8qE,IAAY5yD,KAAK6d,MAAMlyB,SACrBg1B,EAAiB3gB,KAAK6d,MAAMmkB,WAAW4wB,IAE7C,CAEDhf,sBAAsB9rD,GACpB,MAAMm7C,EAAOjjC,KAAKw5C,iBAClB,OAAOx5C,KAAK6pD,qBAAqB5mB,EAAMn7C,EACxC,CAID++C,cAAc/+C,GACZ,OAAOkY,KAAKgnC,aAAal/C,IAASkY,KAAKmjC,IAAI3jB,EAAG13B,KAC/C,CAID29C,iBAAiB39C,EAAcgI,GACxBkQ,KAAK6mC,cAAc/+C,IAAOkY,KAAKgjC,WAAW,KAAMlzC,EACtD,CAID+8C,qBACE,OACE7sC,KAAKqC,MAAMmd,EAAGxT,MACdhM,KAAKqC,MAAMmd,EAAG/S,SACdzM,KAAKigB,uBAER,CAEDA,wBACE,OAAOjP,EAAUvZ,KACfuI,KAAK6d,MAAMzxB,MAAM4T,KAAK5Q,MAAMuuB,WAAY3d,KAAK5Q,MAAMnH,OAEtD,CAED28D,wBACE,OAAO5zC,EAAUvZ,KACfuI,KAAK6d,MAAMzxB,MAAM4T,KAAK5Q,MAAMtE,IAAKkV,KAAKw5C,kBAEzC,CAID4D,mBACE,OAAOp9C,KAAKmjC,IAAI3jB,EAAG1S,OAAS9M,KAAK6sC,oBAClC,CAKDrG,UAAUqsB,GAAoB,IACxBA,EAAW7yD,KAAKo9C,mBAAqBp9C,KAAKmjC,IAAI3jB,EAAG1S,QACrD9M,KAAKge,MAAMhe,KAAK5Q,MAAMuuB,WAAYwF,EAAOjL,iBAC1C,CAKDyrB,OAAOjsC,EAAiB8lB,GACtBxd,KAAKmjC,IAAIzrC,IAASsI,KAAKgjC,WAAWxlB,EAAK9lB,EACxC,CAGDyxD,cAAczhE,EAAkB,qBAC1BsY,KAAK5Q,MAAMnH,MAAQ+X,KAAK5Q,MAAMuuB,YAEhC3d,KAAKge,MAAMhe,KAAK5Q,MAAMuuB,WAAY,CAChCrqB,KAAMigB,EAAWE,YACjB4J,WAAY,kBACZvtB,SAAUpI,GAIf,CAKDs7C,WACExlB,EACAs1C,EAA2C,CACzCx/D,KAAMigB,EAAWE,YACjB4J,WAAY,kBACZvtB,SAAU,qBAWZ,MARIgjE,aAAyBhoD,IAC3BgoD,EAAgB,CACdx/D,KAAMigB,EAAWE,YACjB4J,WAAY,kBACZvtB,SAAW,+BAA8BgjE,EAAc/nD,WAIrD/K,KAAKge,MAAa,MAAPR,EAAcA,EAAMxd,KAAK5Q,MAAMnH,MAAO6qE,EAExD,CAEDlJ,aAAa9hE,EAAc01B,GACzB,IAAKxd,KAAK6R,UAAU/pB,GAClB,MAAMkY,KAAKie,cACF,MAAPT,EAAcA,EAAMxd,KAAK5Q,MAAMnH,MAC/B,CAAE8qE,cAAe,CAACjrE,IACjB,kEAAiEA,MAItE,OAAO,CACR,CAEDkrE,gBAAgBh/D,EAAsBwpB,GACpC,IAAKxpB,EAAMc,MAAKuJ,GAAK2B,KAAK6R,UAAUxT,KAClC,MAAM2B,KAAKie,cACF,MAAPT,EAAcA,EAAMxd,KAAK5Q,MAAMnH,MAC/B,CAAE8qE,cAAe/+D,GAChB,sFAAqFA,EAAM/G,KAC1F,SAIP,CAIDohD,SACE17C,EACAsgE,EAAkBjzD,KAAK5Q,MAAMm/C,SAK7B,MAAM2kB,EAAkC,CAAE/lE,KAAM,MAChD,IACE,MAAMA,EAAOwF,GAAG,CAACxF,EAAO,QAEtB,MADA+lE,EAAY/lE,KAAOA,EACb+lE,CAAN,IAEF,GAAIlzD,KAAK5Q,MAAMivB,OAAO1yB,OAASsnE,EAAS50C,OAAO1yB,OAAQ,CACrD,MAAM2iD,EAAYtuC,KAAK5Q,MAMvB,OALA4Q,KAAK5Q,MAAQ6jE,EAIbjzD,KAAK5Q,MAAMu8D,aAAerd,EAAUqd,aAC7B,CACLx+D,OACA0F,MAAQy7C,EAAUjwB,OAAO40C,EAAS50C,OAAO1yB,QACzCypD,QAAQ,EACRF,SAAS,EACT5G,YAEH,CAED,MAAO,CACLnhD,OACA0F,MAAO,KACPuiD,QAAQ,EACRF,SAAS,EACT5G,UAAW,KA1Bf,CA4BE,MAAOz7C,GACP,MAAMy7C,EAAYtuC,KAAK5Q,MAEvB,GADA4Q,KAAK5Q,MAAQ6jE,EACTpgE,aAAiB4gB,YACnB,MAAO,CAAEtmB,KAAM,KAAM0F,QAAOuiD,QAAQ,EAAMF,SAAS,EAAO5G,aAE5D,GAAIz7C,IAAUqgE,EACZ,MAAO,CACL/lE,KAAM+lE,EAAY/lE,KAClB0F,MAAO,KACPuiD,QAAQ,EACRF,SAAS,EACT5G,aAIJ,MAAMz7C,CACP,CACF,CAEDsgE,sBACE9zB,EACA+zB,GAEA,IAAK/zB,EAAqB,OAAO,EACjC,MAAM,gBAAEg0B,EAAF,YAAmBC,GAAgBj0B,EACzC,IAAK+zB,EAAU,OAAOC,GAAmB,GAAKC,GAAe,EACzDD,GAAmB,GACrBrzD,KAAKgjC,WAAWqwB,GAEdC,GAAe,GACjBtzD,KAAKge,MAAMs1C,EAAanwC,EAAO3N,eAElC,CAWDqkC,wBACE,OACE75C,KAAKqC,MAAMmd,EAAG13B,SACZkY,KAAK5Q,MAAMsI,KAAKuM,SAClBjE,KAAKqC,MAAMmd,EAAG70B,SACdqV,KAAKqC,MAAMmd,EAAG7T,MACd3L,KAAKqC,MAAMmd,EAAG5T,SACd5L,KAAKqC,MAAMmd,EAAG3T,QAEjB,CAMD4zB,cAActyC,GACZ,MAAqB,gBAAdA,EAAKuK,IACb,CAOD8nC,iBAAiBryC,GACf,OAAOA,EAAKG,GAAGxF,IAChB,CAOD45C,yBAAyBv0C,GACvB,OACiB,qBAAdA,EAAKuK,MACU,6BAAdvK,EAAKuK,OACPsI,KAAKy/B,cAActyC,EAAK0qC,SAE3B,CAED8J,gBAAgBx0C,GACd,MACgB,6BAAdA,EAAKuK,MACS,2BAAdvK,EAAKuK,IAER,CAEDjK,iBAAiBN,GACf,MAAqB,mBAAdA,EAAKuK,IACb,CAEDhK,eAAeP,GACb,MAAqB,iBAAdA,EAAKuK,IACb,CAED67D,iBACEvyC,EAAgD,WAA5BhhB,KAAKL,QAAQnJ,YAGjC,MAAMg9D,EAAYxzD,KAAK5Q,MAAMoU,OAC7BxD,KAAK5Q,MAAMoU,OAAS,GAEpB,MAAMiwD,EAAyBzzD,KAAK5Q,MAAMs8D,oBAC1C1rD,KAAK5Q,MAAMs8D,oBAAsB,GAGjC,MAAMgI,EAAc1zD,KAAKghB,SACzBhhB,KAAKghB,SAAWA,EAEhB,MAAM2yC,EAAW3zD,KAAK3S,MAChBq0B,EAAe1hB,KAAK+kC,kBAC1B/kC,KAAK3S,MAAQ,IAAIq0B,EAAa1hB,KAAKge,MAAMlqB,KAAKkM,MAAOA,KAAKghB,UAE1D,MAAM4yC,EAAe5zD,KAAKojD,UAC1BpjD,KAAKojD,UAAY,IAAIxqB,GAErB,MAAMw4B,EAAgBpxD,KAAKsxD,WAC3BtxD,KAAKsxD,WAAa,IAAIH,GAAkBnxD,KAAKge,MAAMlqB,KAAKkM,OAExD,MAAM6zD,EAAqB7zD,KAAK8zD,gBAGhC,OAFA9zD,KAAK8zD,gBAAkB,IAAI3B,GAAuBnyD,KAAKge,MAAMlqB,KAAKkM,OAE3D,KAELA,KAAK5Q,MAAMoU,OAASgwD,EACpBxzD,KAAK5Q,MAAMs8D,oBAAsB+H,EAGjCzzD,KAAKghB,SAAW0yC,EAChB1zD,KAAK3S,MAAQsmE,EACb3zD,KAAKojD,UAAYwQ,EACjB5zD,KAAKsxD,WAAaF,EAClBpxD,KAAK8zD,gBAAkBD,CAAvB,CAEH,CAEDE,qBACE,IAAIC,EX3Xa,EW4Xbh0D,KAAK6R,UAAU,kBAAoB7R,KAAKghB,WAC1CgzC,GX3XU,GW6XZh0D,KAAK3S,MAAMq1B,MjB3XmB,GiB4X9B1iB,KAAKojD,UAAU1gC,MAAMsxC,EACtB,EAcI,MAAMC,GAAiB9zD,cAAA,KAC5BkzD,iBAAmB,EADS,KAE5BC,aAAe,CAFa,ECvY9B,MAAMY,GACJ/zD,YAAY5L,EAAgBipB,EAAa7zB,GAAe,KASxD+N,UATwD,OAUxDzP,WAVwD,OAWxD6C,SAXwD,OAYxDnB,SAZwD,OAaxDwqE,WAbwD,OAcxD9hD,qBAdwD,OAexDD,sBAfwD,OAgBxDgB,mBAhBwD,OAiBxD2qB,WAjBwD,EACtD/9B,KAAKtI,KAAO,GACZsI,KAAK/X,MAAQu1B,EACbxd,KAAKlV,IAAM,EACXkV,KAAKrW,IAAM,IAAI4nB,EAAe5nB,GAC9B,MAAI4K,GAAAA,EAAQoL,QAAQirD,SAAQ5qD,KAAKm0D,MAAQ,CAAC32C,EAAK,IAC/C,MAAIjpB,GAAAA,EAAQid,WAAUxR,KAAKrW,IAAI6nB,SAAWjd,EAAOid,SAClD,CAYDuiC,UAEE,MAAM1Q,EAAe,IAAI6wB,GACnB3+D,EAAOvO,OAAOuO,KAAKyK,MACzB,IAAK,IAAInU,EAAI,EAAGF,EAAS4J,EAAK5J,OAAQE,EAAIF,EAAQE,IAAK,CACrD,MAAM5C,EAAMsM,EAAK1J,GAGP,oBAAR5C,GACQ,qBAARA,GACQ,kBAARA,IAGAo6C,EAAQp6C,GAAO+W,KAAK/W,GAEvB,CAED,OAAOo6C,CACR,EAGI,MAAM+wB,WAAkB3B,GAC7BzyB,YAEE,OAAO,IAAIk0B,GAAKl0D,KAAMA,KAAK5Q,MAAMnH,MAAO+X,KAAK5Q,MAAMnE,SACpD,CAED6yC,YAAyBtgB,EAAa7zB,GAEpC,OAAO,IAAIuqE,GAAKl0D,KAAMwd,EAAK7zB,EAC5B,CAGD83C,gBAA6B/pC,GAC3B,OAAOsI,KAAK89B,YAAYpmC,EAAKzP,MAAOyP,EAAK/N,IAAI1B,MAC9C,CAIDg4C,WAAwB9yC,EAASuK,GAC/B,OAAOsI,KAAKi+B,aACV9wC,EACAuK,EACAsI,KAAK5Q,MAAMuuB,WACX3d,KAAK5Q,MAAMwuB,cAEd,CAIDqgB,aACE9wC,EACAuK,EACA8lB,EACA7zB,GAaA,OALAwD,EAAKuK,KAAOA,EACZvK,EAAKrC,IAAM0yB,EACXrwB,EAAKxD,IAAImB,IAAMnB,EACXqW,KAAKL,QAAQirD,SAAQz9D,EAAKgnE,MAAM,GAAK32C,GACzCxd,KAAK8S,eAAe3lB,GACbA,CACR,CAEDo6D,mBAAmBp6D,EAAgBlF,EAAegD,GAChDkC,EAAKlF,MAAQA,EACbkF,EAAKxD,IAAI1B,MAAQgD,EACb+U,KAAKL,QAAQirD,SAAQz9D,EAAKgnE,MAAM,GAAKlsE,EAC1C,CAEDs+C,iBACEp5C,EACArC,EAAekV,KAAK5Q,MAAMuuB,WAC1BxyB,EAAoB6U,KAAK5Q,MAAMwuB,eAE/BzwB,EAAKrC,IAAMA,EACXqC,EAAKxD,IAAImB,IAAMK,EACX6U,KAAKL,QAAQirD,SAAQz9D,EAAKgnE,MAAM,GAAKrpE,EAC1C,CAKDkqD,2BAA2B7nD,EAAgBknE,GACzCr0D,KAAKunD,mBAAmBp6D,EAAMknE,EAAapsE,MAAOosE,EAAa1qE,IAAI1B,MACpE,EC7FH,MAAMqsE,GAAiCnnE,GAChB,4BAAdA,EAAKuK,KACR48D,GAA8BnnE,EAAKgD,YACnChD,EAGS,MAAMonE,WAAmBH,GAuCtC1zB,aAAavzC,EAAYwzC,GAAiB,GAAa,IAAAiP,EAAA4kB,EACrD,IAAIj2B,EAwBJ,QAvBkB,4BAAdpxC,EAAKuK,MAAL,OAAAk4C,EAA2CziD,EAAK4wC,QAAL6R,EAAYrR,iBACzDA,EAAgB+1B,GAA8BnnE,GAC1CwzC,EAKyB,eAAvBpC,EAAc7mC,KAChBsI,KAAK8zD,gBAAgBzB,mCACnBllE,EAAKlF,MACLk7B,EAAO5L,gCAEuB,qBAAvBgnB,EAAc7mC,MAIvBsI,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAO5L,gCAGhCvX,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAO5L,iCAI1BpqB,EAAKuK,MACX,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,oBACH,MAEF,IAAK,mBACHvK,EAAKuK,KAAO,gBACZ,IACE,IAAI7L,EAAI,EAAGF,EAASwB,EAAKgmB,WAAWxnB,OAAQqmB,EAAOrmB,EAAS,EAC5DE,EAAIF,EACJE,IACA,KAAA4oE,EACA,MAAM9/B,EAAOxnC,EAAKgmB,WAAWtnB,GACvB6oE,EAAS7oE,IAAMmmB,EACrBhS,KAAK4gC,iCAAiCjM,EAAM+/B,EAAQ/zB,GAGlD+zB,GACc,gBAAd//B,EAAKj9B,MADL,OAAA+8D,EAEAtnE,EAAK4wC,QAAL02B,EAAY3kB,eAEZ9vC,KAAK20D,iBAAiBxnE,EAAK4wC,MAAM+R,cAEpC,CACD,MAEF,IAAK,iBACH9vC,KAAK0gC,aAAavzC,EAAKhG,MAAOw5C,GAC9B,MAEF,IAAK,gBAAiB,CACpB3gC,KAAK40D,sBAAsBznE,GAE3BA,EAAKuK,KAAO,cACZ,MAAM3E,EAAM5F,EAAK02C,SACjB7jC,KAAK0gC,aAAa3tC,EAAK4tC,GACvB,KACD,CAED,IAAK,kBACHxzC,EAAKuK,KAAO,eACZsI,KAAK6vC,iBAAiB1iD,EAAKolB,SAA3B,OAAAiiD,EAAqCrnE,EAAK4wC,YAA1C,EAAqCy2B,EAAY1kB,cAAenP,GAChE,MAEF,IAAK,uBACmB,MAAlBxzC,EAAKmB,UACP0R,KAAKge,MAAM7wB,EAAKoB,KAAKzD,IAAKq4B,EAAOlL,uBAGnC9qB,EAAKuK,KAAO,2BACLvK,EAAKmB,SACZ0R,KAAK0gC,aAAavzC,EAAKoB,KAAMoyC,GAC7B,MAEF,IAAK,0BAEH3gC,KAAK0gC,aAAanC,EAAeoC,GAOrC,OAAOxzC,CACR,CAEDyzC,iCACEjM,EACA+/B,EACA/zB,GAEA,GAAkB,iBAAdhM,EAAKj9B,KAAyB,CAChC,MAAM7E,EACU,QAAd8hC,EAAKhnC,MAAgC,QAAdgnC,EAAKhnC,KACxBw1B,EAAO/J,mBACP+J,EAAO9J,iBAGbrZ,KAAKge,MAAM2W,EAAK1rC,IAAIhB,MAAO4K,EAP7B,KASyB,kBAAd8hC,EAAKj9B,MAA6Bg9D,EAG3C10D,KAAK0gC,aAAa/L,EAAMgM,GAFxB3gC,KAAK20D,iBAAiBhgC,EAAK1sC,MAI9B,CAID4nD,iBACE4B,EACAC,EACA/Q,GAEA,IAAI71C,EAAM2mD,EAAS9lD,OACnB,GAAIb,EAAK,CACP,MAAMknB,EAAOy/B,EAAS3mD,EAAM,GAC5B,GAAmB,iBAAX,MAAJknB,OAAA,EAAAA,EAAMta,QACN5M,OACG,GAAmB,mBAAX,MAAJknB,OAAA,EAAAA,EAAMta,MAA0B,CACzCsa,EAAKta,KAAO,cACZ,IAAI3E,EAAMif,EAAK6xB,SACf7jC,KAAK0gC,aAAa3tC,EAAK4tC,GACvB5tC,EAAMuhE,GAA8BvhE,GAErB,eAAbA,EAAI2E,MACS,qBAAb3E,EAAI2E,MACS,iBAAb3E,EAAI2E,MACS,kBAAb3E,EAAI2E,MAEJsI,KAAKgjC,WAAWjwC,EAAI9K,OAGlBypD,GACF1xC,KAAK60D,4BAA4BnjB,KAGjC5mD,CACH,CACF,CACD,IAAK,IAAIe,EAAI,EAAGA,EAAIf,EAAKe,IAAK,CAC5B,MAAMs5D,EAAM1T,EAAS5lD,GACjBs5D,IACFnlD,KAAK0gC,aAAaykB,EAAKxkB,GACN,gBAAbwkB,EAAIztD,MACNsI,KAAK20D,iBAAiBxP,EAAIl9D,OAG/B,CACD,OAAOwpD,CACR,CAIDE,iBACEF,EACAG,GAEA,OAAOH,CACR,CAEDqjB,qBACErjB,EACAG,GAEA5xC,KAAK2xC,iBAAiBF,EAAUG,GAEhC,IAAK,MAAM7D,KAAQ0D,EACE,qBAAX,MAAJ1D,OAAA,EAAAA,EAAMr2C,OACRsI,KAAK80D,qBAAqB/mB,EAAKx7B,SAGpC,CAIDwiD,YACE11B,EACA+O,GAEA,MAAMjhD,EAAO6S,KAAKggC,YAOlB,OANAhgC,KAAKijC,OACL91C,EAAK02C,SAAW7jC,KAAK8jC,wBACnBzE,OACArwC,EACAo/C,GAEKpuC,KAAKigC,WAAW9yC,EAAM,gBAC9B,CAID6nE,mBACE,MAAM7nE,EAAO6S,KAAKggC,YAGlB,OAFAhgC,KAAKijC,OACL91C,EAAK02C,SAAW7jC,KAAKm0C,mBACdn0C,KAAKigC,WAAW9yC,EAAM,cAC9B,CAGDgnD,mBAEE,OAAQn0C,KAAK5Q,MAAMsI,MACjB,KAAK8nB,EAAGvT,SAAU,CAChB,MAAM9e,EAAO6S,KAAKggC,YAOlB,OANAhgC,KAAKijC,OACL91C,EAAKolB,SAAWvS,KAAKk9C,iBACnB19B,EAAGpT,SADW,IAGd,GAEKpM,KAAKigC,WAAW9yC,EAAM,eAC9B,CAED,KAAKqyB,EAAGlT,OACN,OAAOtM,KAAKi1D,gBAAgBz1C,EAAG/S,QAAQ,GAI3C,OAAOzM,KAAK+lC,iBACb,CAGDmX,iBACE/+C,EACA+2D,EACAC,EACA9gB,GAEA,MAAM+gB,EAA6C,GACnD,IAAIhpB,GAAQ,EACZ,MAAQpsC,KAAKmjC,IAAIhlC,IAMf,GALIiuC,EACFA,GAAQ,EAERpsC,KAAK2jC,OAAOnkB,EAAG3S,OAEbsoD,GAAcn1D,KAAKqC,MAAMmd,EAAG3S,OAE9BuoD,EAAK3kE,KAAK,UACL,IAAIuP,KAAKmjC,IAAIhlC,GAClB,MACK,GAAI6B,KAAKqC,MAAMmd,EAAGnS,UAAW,CAClC+nD,EAAK3kE,KAAKuP,KAAK+yC,6BAA6B/yC,KAAKg1D,qBACjDh1D,KAAKooD,oBAAoB8M,GACzBl1D,KAAK2jC,OAAOxlC,GACZ,KAJK,CAKA,CACL,MAAM8mD,EAAa,GAKnB,IAJIjlD,KAAKqC,MAAMmd,EAAGhS,KAAOxN,KAAK6R,UAAU,eACtC7R,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAO9G,+BAG/Brc,KAAKqC,MAAMmd,EAAGhS,KACnBy3C,EAAWx0D,KAAKuP,KAAKq1D,kBAEvBD,EAAK3kE,KAAKuP,KAAKglD,wBAAwB3Q,EAAgB4Q,GACxD,EAEH,OAAOmQ,CACR,CAEDpQ,wBACE3Q,EACA4Q,GAEA,MAAM12D,EAAOyR,KAAKgzC,oBAClBhzC,KAAK+yC,6BAA6BxkD,GAClC,MAAM42D,EAAMnlD,KAAKgzC,kBAAkBzkD,EAAKtG,MAAOsG,EAAK5E,IAAI1B,MAAOsG,GAI/D,OAHI02D,EAAWt5D,SACb4C,EAAK02D,WAAaA,GAEbE,CACR,CAGDpS,6BAA6Bl6C,GAC3B,OAAOA,CACR,CAIDm6C,kBACEtT,EACAz0C,EACAsD,GACS,IAAA+mE,EAAAC,EAAAC,EAKT,GAJAvqE,EAAQ,OAAAqqE,EAAGrqE,GAAHqqE,EAAet1D,KAAK5Q,MAAMnE,SAClCy0C,EAAQ,OAAA61B,EAAG71B,GAAH61B,EAAev1D,KAAK5Q,MAAMnH,MAElCsG,EAAI,OAAAinE,EAAGjnE,GAAHinE,EAAWx1D,KAAKm0C,oBACfn0C,KAAKmjC,IAAI3jB,EAAG7R,IAAK,OAAOpf,EAE7B,MAAMpB,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAGxC,OAFAkC,EAAKoB,KAAOA,EACZpB,EAAKi8C,MAAQppC,KAAK8jC,0BACX9jC,KAAKigC,WAAW9yC,EAAM,oBAC9B,CAkBD+kD,UACEnE,EACAqF,EACAvwB,EnBlV8B,GmBmV9B4yC,EACAC,EACAC,GAA8B,GAE9B,OAAQ5nB,EAAKr2C,MACX,IAAK,aAAc,CACjB,MAAM,KAAE5P,GAASimD,EAEf/tC,KAAK5Q,MAAMw+C,SAIV+nB,EACGx0C,EAAyBr5B,EAAMkY,KAAKghB,UACpCE,EAA6Bp5B,KAEjCkY,KAAKge,MACH+vB,EAAK9lD,MnBpWiB,KmBqWtB46B,EACIM,EAAO7I,oBACP6I,EAAO5I,2BACXzyB,GAIA2tE,IACEA,EAAa7sE,IAAId,GACnBkY,KAAKge,MAAM+vB,EAAK9lD,MAAOk7B,EAAOhK,WAE9Bs8C,EAAav9D,IAAIpQ,IAGjB4tE,GAA+B,QAAT5tE,GACxBkY,KAAKge,MAAM+vB,EAAK9lD,MAAOk7B,EAAOtL,qBnBpXN,GmBsXpBgL,GACJ7iB,KAAK3S,MAAMu1B,YAAY96B,EAAM+6B,EAAakrB,EAAK9lD,OAEjD,KACD,CAED,IAAK,mBnB5XuB,KmB6XtB46B,GACF7iB,KAAKge,MAAM+vB,EAAK9lD,MAAOk7B,EAAO1L,+BAEhC,MAEF,IAAK,gBACH,IAAK,IAAIkd,KAAQoZ,EAAK56B,WAAY,CAChC,GAAInT,KAAKvS,iBAAiBknC,GAAOA,EAAOA,EAAKxtC,WAIxC,GAAI6Y,KAAKtS,eAAeinC,GAAO,SAEpC30B,KAAKkyC,UACHvd,EACA,+BACA9R,EACA4yC,EACAC,EAEH,CACD,MAEF,IAAK,eACH,IAAK,MAAME,KAAQ7nB,EAAKx7B,SAClBqjD,GACF51D,KAAKkyC,UACH0jB,EACA,8BACA/yC,EACA4yC,EACAC,GAIN,MAEF,IAAK,oBACH11D,KAAKkyC,UACHnE,EAAKx/C,KACL,qBACAs0B,EACA4yC,GAEF,MAEF,IAAK,cACHz1D,KAAKkyC,UACHnE,EAAKlK,SACL,eACAhhB,EACA4yC,GAEF,MAEF,IAAK,0BACHz1D,KAAKkyC,UACHnE,EAAK59C,WACL,2BACA0yB,EACA4yC,GAEF,MAEF,QACEz1D,KAAKge,MACH+vB,EAAK9lD,MnB/bmB,KmBgcxB46B,EACIM,EAAOjM,WACPiM,EAAOhM,kBACXi8B,GAIP,CAEDwhB,sBAAsBznE,GAEK,eAAvBA,EAAK02C,SAASnsC,MACS,qBAAvBvK,EAAK02C,SAASnsC,MAEdsI,KAAKge,MAAM7wB,EAAK02C,SAAS57C,MAAOk7B,EAAOxL,6BAE1C,CAEDywC,oBAAoBjqD,GACd6B,KAAKqC,MAAMmd,EAAG3S,SACZ7M,KAAK8/C,sBAAwB3hD,EAC/B6B,KAAK60D,4BAA4B70D,KAAK5Q,MAAMnH,OAE5C+X,KAAK20D,iBAAiB30D,KAAK5Q,MAAMnH,OAGtC,CAED0sE,iBAAiBn3C,GACf,MAAMxd,KAAKge,MAAMR,EAAK2F,EAAOzN,iBAC9B,CAEDm/C,4BAA4Br3C,GAC1Bxd,KAAKge,MAAMR,EAAK2F,EAAOjJ,kBACxB,EC9dY,MAAM27C,WAAyBtB,GAwC5CuB,WACEnhC,EACAohC,EACAC,EACA32B,GAEA,GACgB,kBAAd1K,EAAKj9B,MACLsI,KAAKtS,eAAeinC,IACpBA,EAAK/mC,UAEL+mC,EAAK6L,UAEL,OAGF,MAAMv3C,EAAM0rC,EAAK1rC,IAIjB,GAAa,eAFa,eAAbA,EAAIyO,KAAwBzO,EAAInB,KAAOmB,EAAI9B,OAE9B,CACxB,GAAI4uE,EAEF,YADA/1D,KAAKge,MAAM/0B,EAAIhB,MAAOk7B,EAAOlJ,eAG3B+7C,EAASC,OACP52B,GAGuC,IAArCA,EAAoBi0B,cACtBj0B,EAAoBi0B,YAAcrqE,EAAIhB,OAGxC+X,KAAKge,MAAM/0B,EAAIhB,MAAOk7B,EAAO3N,iBAIjCwgD,EAASC,MAAO,CACjB,CACF,CAEDC,qBAAqBnoB,EAAoBid,GACvC,MACgB,4BAAdjd,EAAKr2C,MAAsCq2C,EAAK9lD,QAAU+iE,CAE7D,CAGDlC,gBACE,IAAIkL,EdvJa,EcwJbh0D,KAAK6R,UAAU,kBAAoB7R,KAAKghB,WAC1CgzC,GdvJU,GcyJZh0D,KAAK3S,MAAMq1B,MpBvJmB,GoBwJ9B1iB,KAAKojD,UAAU1gC,MAAMsxC,GACrBh0D,KAAKu2C,YACL,MAAMxI,EAAO/tC,KAAK0jC,kBASlB,OARK1jC,KAAKqC,MAAMmd,EAAGxT,MACjBhM,KAAKgjC,aAEP+K,EAAKyd,SAAWxrD,KAAK5Q,MAAMo8D,SAC3Bzd,EAAK1vB,OAASre,KAAK5Q,MAAMivB,OACrBre,KAAKL,QAAQkrD,SACf9c,EAAK8c,OAAS7qD,KAAK6qD,QAEd9c,CACR,CAqBDrK,gBACEyyB,EACA92B,GAEA,OAAI82B,EACKn2D,KAAKo2D,eAAc,IACxBp2D,KAAKq2D,oBAAoBh3B,KAGtBr/B,KAAKs2D,YAAW,IAAMt2D,KAAKq2D,oBAAoBh3B,IACvD,CAGDg3B,oBAAoBh3B,GAClB,MAAMK,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SACtB8iD,EAAO/tC,KAAKivC,iBAAiB5P,GACnC,GAAIr/B,KAAKqC,MAAMmd,EAAG3S,OAAQ,CACxB,MAAM1f,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAExC,IADAkC,EAAKopE,YAAc,CAACxoB,GACb/tC,KAAKmjC,IAAI3jB,EAAG3S,QACjB1f,EAAKopE,YAAY9lE,KAAKuP,KAAKivC,iBAAiB5P,IAG9C,OADAr/B,KAAK2xC,iBAAiBxkD,EAAKopE,aACpBv2D,KAAKigC,WAAW9yC,EAAM,qBAC9B,CACD,OAAO4gD,CACR,CAGDyoB,2BACEn3B,EACAoV,EACArG,GAEA,OAAOpuC,KAAKo2D,eAAc,IACxBp2D,KAAKivC,iBACH5P,EACAoV,EACArG,IAGL,CAGDtK,wBACEzE,EACAoV,EACArG,GAEA,OAAOpuC,KAAKs2D,YAAW,IACrBt2D,KAAKivC,iBACH5P,EACAoV,EACArG,IAGL,CAMDa,iBACE5P,EACAoV,EACArG,GAEA,MAAM1O,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAC5B,GAAI+U,KAAKgnC,aAAa,UAChBhnC,KAAKojD,UAAUpqB,SAAU,CAI3Bh5B,KAAK5Q,MAAMswB,aAAc,EACzB,IAAInxB,EAAOyR,KAAKy2D,aAIhB,OAHIhiB,IACFlmD,EAAOkmD,EAAerrD,KAAK4W,KAAMzR,EAAMmxC,EAAUz0C,IAE5CsD,CACR,CAGH,IAAImoE,EACAr3B,EACFq3B,GAAsB,GAEtBr3B,EAAsB,IAAI40B,GAC1ByC,GAAsB,IAGpB12D,KAAKqC,MAAMmd,EAAG7S,SAAW3M,KAAKqC,MAAMmd,EAAG13B,SACzCkY,KAAK5Q,MAAM47D,iBAAmBhrD,KAAK5Q,MAAMnH,OAG3C,IAAIsG,EAAOyR,KAAK22D,sBACdt3B,EACA+O,GAKF,GAHIqG,IACFlmD,EAAOkmD,EAAerrD,KAAK4W,KAAMzR,EAAMmxC,EAAUz0C,IAE/C+U,KAAK5Q,MAAMsI,KAAKwT,SAAU,CAC5B,MAAM/d,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAClCqD,EAAW0R,KAAK5Q,MAAMjI,MAkB5B,OAjBAgG,EAAKmB,SAAWA,EAEZ0R,KAAKqC,MAAMmd,EAAG7R,KAChBxgB,EAAKoB,KAAOyR,KAAK0gC,aAAanyC,GAAkB,GAChD8wC,EAAoBi0B,aAAe,GAEnCnmE,EAAKoB,KAAOA,EAGV8wC,EAAoBg0B,iBAAmBlmE,EAAKoB,KAAKtG,QACnDo3C,EAAoBg0B,iBAAmB,GAGzCrzD,KAAKkyC,UAAU3jD,EAAM,yBAErByR,KAAKijC,OACL91C,EAAKi8C,MAAQppC,KAAKivC,mBACXjvC,KAAKigC,WAAW9yC,EAAM,uBApB/B,CAyBA,OAJWupE,GACT12D,KAAKmzD,sBAAsB9zB,GAAqB,GAG3C9wC,CACR,CAKDooE,sBACEt3B,EACA+O,GAEA,MAAM1O,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SACtB+/D,EAAmBhrD,KAAK5Q,MAAM47D,iBAC9Bjd,EAAO/tC,KAAK42D,aAAav3B,GAE/B,OAAIr/B,KAAKk2D,qBAAqBnoB,EAAMid,GAC3Bjd,EAGF/tC,KAAKmuC,iBAAiBJ,EAAMrO,EAAUz0C,EAAUmjD,EACxD,CAEDD,iBACEJ,EACArO,EACAz0C,EAGAmjD,GAEA,GAAIpuC,KAAKmjC,IAAI3jB,EAAGtS,UAAW,CACzB,MAAM/f,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAKxC,OAJAkC,EAAKsK,KAAOs2C,EACZ5gD,EAAKuhD,WAAa1uC,KAAK8jC,0BACvB9jC,KAAK2jC,OAAOnkB,EAAGzS,OACf5f,EAAK6hD,UAAYhvC,KAAKivC,mBACfjvC,KAAKigC,WAAW9yC,EAAM,wBAC9B,CACD,OAAO4gD,CACR,CAKD6oB,aAAav3B,GACX,MAAMK,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SACtB+/D,EAAmBhrD,KAAK5Q,MAAM47D,iBAC9Bjd,EAAO/tC,KAAK+/C,gBAAgB1gB,GAElC,OAAIr/B,KAAKk2D,qBAAqBnoB,EAAMid,GAC3Bjd,EAGF/tC,KAAK+lD,YAAYhY,EAAMrO,EAAUz0C,GAAW,EACpD,CAQD86D,YACEx3D,EACAy3D,EACAC,EACAC,GAEA,IAAI2Q,EAAO72D,KAAK5Q,MAAMsI,KAAK0T,MAC3B,GAAY,MAARyrD,IAAiB72D,KAAKojD,UAAUlqB,QAAUl5B,KAAKqC,MAAMmd,EAAG7O,OACtDkmD,EAAO3Q,EAAS,CAClB,MAAMwM,EAAK1yD,KAAK5Q,MAAMsI,KACtB,GAAIg7D,IAAOlzC,EAAGzR,SAAU,CAEtB,GADA/N,KAAK4pD,aAAa,oBACd5pD,KAAK5Q,MAAMk8D,2BACb,OAAO/8D,EAETyR,KAAK5Q,MAAM67D,YAAa,EACxBjrD,KAAK82D,6BAA6BvoE,EAAMy3D,EACzC,CACD,MAAM74D,EAAO6S,KAAK89B,YAAYkoB,EAAcC,GAC5C94D,EAAKoB,KAAOA,EACZpB,EAAKmB,SAAW0R,KAAK5Q,MAAMjI,MAE3B,MAAM4vE,EAAUrE,IAAOlzC,EAAGvR,WAAaykD,IAAOlzC,EAAGtR,WAC3C8oD,EAAWtE,IAAOlzC,EAAGxR,kBAU3B,GARIgpD,IAGFH,EAASr3C,EAAGtR,WAAqC9C,OAGnDpL,KAAKijC,OAGHyvB,IAAOlzC,EAAGzR,UAC+C,YAAzD/N,KAAK8R,gBAAgB,mBAAoB,aAGvC9R,KAAKqC,MAAMmd,EAAG13B,OACO,UAArBkY,KAAK5Q,MAAMjI,OACX6Y,KAAKojD,UAAUrqB,SAEf,MAAM/4B,KAAKge,MACThe,KAAK5Q,MAAMnH,MACXk7B,EAAOhI,kCAKbhuB,EAAKi8C,MAAQppC,KAAKi3D,qBAAqBvE,EAAImE,GAC3C72D,KAAKigC,WACH9yC,EACA4pE,GAAWC,EAAW,oBAAsB,oBAO9C,MAAME,EAASl3D,KAAK5Q,MAAMsI,KAC1B,GACGs/D,IAAaE,IAAW13C,EAAGvR,WAAaipD,IAAW13C,EAAGtR,aACtD6oD,GAAWG,IAAW13C,EAAGxR,kBAE1B,MAAMhO,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAO/K,2BAG5C,OAAOpY,KAAK+lD,YAAY54D,EAAM64D,EAAcC,EAAcC,EAC3D,CAEH,OAAO33D,CACR,CAKD0oE,qBAAqBvE,EAAemE,GAClC,MAAMn3B,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAC5B,GAAQynE,IACDlzC,EAAGzR,SACN,OAAQ/N,KAAK8R,gBAAgB,mBAAoB,aAC/C,IAAK,QACH,OAAO9R,KAAKm3D,4BAA2B,IAC9Bn3D,KAAKo3D,uBACVp3D,KAAKq3D,yBAAyB3E,EAAImE,GAClCn3B,EACAz0C,KAGN,IAAK,SACH,OAAO+U,KAAKs3D,gCAA+B,IAClCt3D,KAAKu3D,wBAAwBV,KAM1C,OAAO72D,KAAKq3D,yBAAyB3E,EAAImE,EAE9C,CAKDQ,yBAAyB3E,EAAemE,GACtC,MAAMn3B,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAE5B,OAAO+U,KAAK+lD,YACV/lD,KAAK+/C,kBACLrgB,EACAz0C,EACAynE,EAAGznD,iBAAmB4rD,EAAO,EAAIA,EAEpC,CAEDW,2BAA2BrqE,GACrB6S,KAAKqC,MAAMmd,EAAG3Q,WAChB7O,KAAKge,MACH7wB,EAAK02C,SAAS57C,MACdk7B,EAAOpH,mCAGZ,CAIDgkC,gBACE1gB,EACAo4B,GAEA,MAAM/3B,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SACtBysE,EAAU13D,KAAKgnC,aAAa,SAElC,GAAI0wB,GAAW13D,KAAK23D,iBAAkB,CACpC33D,KAAKijC,OACL,MAAM8K,EAAO/tC,KAAK43D,WAAWl4B,EAAUz0C,GAEvC,OADKwsE,GAAUz3D,KAAKw3D,2BAA2BzpB,GACxCA,CACR,CACD,GACE/tC,KAAKgnC,aAAa,WAClB,MAAAhnC,KAAK8/C,sBACJ9/C,KAAK4kD,wBAEN,OAAO5kD,KAAK63D,wBAEd,MAAM9G,EAAS/wD,KAAKqC,MAAMmd,EAAG5R,QACvBzgB,EAAO6S,KAAKggC,YAClB,GAAIhgC,KAAK5Q,MAAMsI,KAAKxD,OAAQ,CAC1B/G,EAAKmB,SAAW0R,KAAK5Q,MAAMjI,MAC3BgG,EAAK+G,QAAS,EAEV8L,KAAKqC,MAAMmd,EAAG7P,SAChB3P,KAAK4pD,aAAa,oBAEpB,MAAMkO,EAAW93D,KAAKqC,MAAMmd,EAAGzO,SAO/B,GANA/Q,KAAKijC,OAEL91C,EAAK02C,SAAW7jC,KAAK+/C,gBAAgB,MAAM,GAE3C//C,KAAKmzD,sBAAsB9zB,GAAqB,GAE5Cr/B,KAAK5Q,MAAMw+C,QAAUkqB,EAAU,CACjC,MAAM/kE,EAAM5F,EAAK02C,SAEA,eAAb9wC,EAAI2E,KACNsI,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAO9I,cACrBra,KAAK0hC,yBAAyB3uC,IACvCiN,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAOhO,mBAEjC,CAED,IAAK47C,EAEH,OADK0G,GAAUz3D,KAAKw3D,2BAA2BrqE,GACxC6S,KAAKigC,WAAW9yC,EAAM,kBAEhC,CAED,MAAM4gD,EAAO/tC,KAAK+3D,YAAY5qE,EAAM4jE,EAAQ1xB,GAE5C,OAAIq4B,IACiB13D,KAAK6R,UAAU,eAC9B7R,KAAK5Q,MAAMsI,KAAKkT,WAChB5K,KAAK5Q,MAAMsI,KAAKkT,aAAe5K,KAAKqC,MAAMmd,EAAG9Q,WAC9B1O,KAAKg4D,oBACtBh4D,KAAKke,eACHwhB,EACA1/B,KAAK6R,UAAU,iBACXsR,EAAOhP,uBACPgP,EAAO/O,yBAENpU,KAAK43D,WAAWl4B,EAAUz0C,IAI9B8iD,CACR,CAGDgqB,YACE5qE,EACA4jE,EACA1xB,GAEA,GAAI0xB,EAEF,OADA/wD,KAAKkyC,UAAU/kD,EAAK02C,SAAU,oBACvB7jC,KAAKigC,WAAW9yC,EAAM,oBAG/B,MAAMuyC,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAC5B,IAAI8iD,EAAO/tC,KAAKi4D,oBAAoB54B,GACpC,GAAIr/B,KAAKmzD,sBAAsB9zB,GAAqB,GAAQ,OAAO0O,EACnE,KAAO/tC,KAAK5Q,MAAMsI,KAAKyT,UAAYnL,KAAK6sC,sBAAsB,CAC5D,MAAM1/C,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GACxCkC,EAAKmB,SAAW0R,KAAK5Q,MAAMjI,MAC3BgG,EAAK+G,QAAS,EACd/G,EAAK02C,SAAWkK,EAChB/tC,KAAKkyC,UAAUnE,EAAM,qBACrB/tC,KAAKijC,OACL8K,EAAO/tC,KAAKigC,WAAW9yC,EAAM,mBAC9B,CACD,OAAO4gD,CACR,CAIDkqB,oBAAoB54B,GAClB,MAAMK,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SACtB+/D,EAAmBhrD,KAAK5Q,MAAM47D,iBAC9Bjd,EAAO/tC,KAAKo/B,cAAcC,GAEhC,OAAIr/B,KAAKk2D,qBAAqBnoB,EAAMid,GAC3Bjd,EAGF/tC,KAAK41C,gBAAgB7H,EAAMrO,EAAUz0C,EAC7C,CAED2qD,gBACEvU,EACA3B,EACAz0C,EACAq2C,GAEA,MAAMlyC,EAAQ,CACZmyC,qBAAqB,EACrB22B,gBAAiBl4D,KAAK4lD,qBAAqBvkB,GAC3C7vC,MAAM,GAER,GACE6vC,EAAOrhC,KAAKohC,eAAeC,EAAM3B,EAAUz0C,EAAUq2C,EAASlyC,GAG9DA,EAAM8oE,iBAAkB,SAChB9oE,EAAMoC,MAChB,OAAO6vC,CACR,CAMDD,eACEC,EACA3B,EACAz0C,EACAq2C,EACAlyC,GAEA,IAAKkyC,GAAWthC,KAAKmjC,IAAI3jB,EAAGxS,aAC1B,OAAOhN,KAAKm4D,UAAU92B,EAAM3B,EAAUz0C,EAAUq2C,EAASlyC,GACpD,GAAI4Q,KAAKqC,MAAMmd,EAAGlS,WACvB,OAAOtN,KAAK8lD,8BACVzkB,EACA3B,EACAz0C,EACAmE,GAIJ,IAAI0xC,GAAW,EACf,GAAI9gC,KAAKqC,MAAMmd,EAAGrS,aAAc,CAC9B,GAAIm0B,GAAW,KAAAthC,KAAK8/C,oBAGlB,OADA1wD,EAAMoC,MAAO,EACN6vC,EAETjyC,EAAMmyC,oBAAsBT,GAAW,EACvC9gC,KAAKijC,MACN,CAED,OAAK3B,GAAWthC,KAAKqC,MAAMmd,EAAG7S,QACrB3M,KAAKo4D,gCACV/2B,EACA3B,EACAz0C,EACAmE,EACA0xC,GAEOA,GAAY9gC,KAAKqC,MAAMmd,EAAGvT,WAAajM,KAAKmjC,IAAI3jB,EAAGvS,KACrDjN,KAAKq4D,YAAYh3B,EAAM3B,EAAUz0C,EAAUmE,EAAO0xC,IAEzD1xC,EAAMoC,MAAO,EACN6vC,EAEV,CAMDg3B,YACEh3B,EACA3B,EACAz0C,EACAmE,EACA0xC,GAEA,MAAM3zC,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAClC2C,EAAWoS,KAAKmjC,IAAI3jB,EAAGvT,UAC7B9e,EAAKuqC,OAAS2J,EACdl0C,EAAKS,SAAWA,EAChB,MAAMme,GACHne,GAAYoS,KAAKqC,MAAMmd,EAAGzT,cAAgB/L,KAAK5Q,MAAMjI,MAClD0wC,EAAWjqC,EACboS,KAAK0jC,kBACL33B,EACA/L,KAAKs4D,mBACLt4D,KAAK+lC,iBAAgB,GAczB,OAZoB,IAAhBh6B,IACuB,UAArB5e,EAAKuqC,OAAOhgC,MACdsI,KAAKge,MAAM0hB,EAAUvc,EAAOtI,mBAE9B7a,KAAKsxD,WAAWI,eAAe3lD,EAAa8rB,EAAS5vC,QAEvDkF,EAAK0qC,SAAWA,EAEZjqC,GACFoS,KAAK2jC,OAAOnkB,EAAGpT,UAGbhd,EAAMmyC,qBACRp0C,EAAK2zC,SAAWA,EACT9gC,KAAKigC,WAAW9yC,EAAM,6BAEtB6S,KAAKigC,WAAW9yC,EAAM,mBAEhC,CAGDgrE,UACE92B,EACA3B,EACAz0C,EACAq2C,EACAlyC,GAEA,MAAMjC,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAIxC,OAHAkC,EAAKuqC,OAAS2J,EACdl0C,EAAKkD,OAAS2P,KAAKu4D,kBACnBnpE,EAAMoC,MAAO,EACNwO,KAAK41C,gBACV51C,KAAKigC,WAAW9yC,EAAM,kBACtBuyC,EACAz0C,EACAq2C,EAEH,CAMD82B,gCACE/2B,EACA3B,EACAz0C,EACAmE,EACA0xC,GAEA,MAAMgkB,EAA4B9kD,KAAK5Q,MAAM6iD,uBAC7CjyC,KAAK5Q,MAAM6iD,wBAAyB,EAEpCjyC,KAAKijC,OAEL,IAAI91C,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAuCtC,OAtCAkC,EAAKkD,OAASgxC,EACVjyC,EAAM8oE,iBACRl4D,KAAK8zD,gBAAgBpxC,MJziBlB,IAAIovC,GA3K4B,IIutBjC1iE,EAAMmyC,sBACRp0C,EAAK2zC,SAAWA,GAGhB3zC,EAAK0N,UADHimC,EACe9gC,KAAK61C,6BAA6Br2B,EAAG5S,QAAQ,GAE7C5M,KAAK61C,6BACpBr2B,EAAG5S,OACHxd,EAAM8oE,gBACQ,WAAd72B,EAAK3pC,KACS,UAAd2pC,EAAK3pC,KACLvK,GAGJ6S,KAAK6gC,qBAAqB1zC,EAAMiC,EAAMmyC,qBAElCnyC,EAAM8oE,iBAAmBl4D,KAAKw0C,0BAA4B1T,GAC5D1xC,EAAMoC,MAAO,EACbwO,KAAK8zD,gBAAgBvB,oBACrBvyD,KAAK8zD,gBAAgBnxC,OACrBx1B,EAAO6S,KAAKu0C,kCACVv0C,KAAK89B,YAAY4B,EAAUz0C,GAC3BkC,KAGEiC,EAAM8oE,iBACRl4D,KAAK8zD,gBAAgBnxC,OAEvB3iB,KAAKihC,sBAAsB9zC,IAG7B6S,KAAK5Q,MAAM6iD,uBAAyB6S,EAE7B33D,CACR,CAED8zC,sBACE9zC,EACAykD,GAEA5xC,KAAK80D,qBAAqB3nE,EAAK0N,UAAW+2C,EAC3C,CAIDkU,8BACEzkB,EACA3B,EACAz0C,EACAmE,GAEA,MAAMjC,EAAmC6S,KAAK89B,YAC5C4B,EACAz0C,GAOF,OALAkC,EAAKqrE,IAAMn3B,EACXl0C,EAAK2B,MAAQkR,KAAKw/C,eAAc,GAC5BpwD,EAAMmyC,qBACRvhC,KAAKge,MAAM0hB,EAAUvc,EAAOlK,4BAEvBjZ,KAAKigC,WAAW9yC,EAAM,2BAC9B,CAEDy4D,qBAAqBvkB,GACnB,MACgB,eAAdA,EAAK3pC,MACS,UAAd2pC,EAAKv5C,MACLkY,KAAK5Q,MAAMuuB,aAAe0jB,EAAKv2C,MAC9BkV,KAAK6sC,sBAENxL,EAAKv2C,IAAMu2C,EAAKp5C,OAAU,GAC1Bo5C,EAAKp5C,QAAU+X,KAAK5Q,MAAM47D,gBAE7B,CAEDnqB,qBACE1zC,EACA2zC,GAEA,GAAyB,WAArB3zC,EAAKkD,OAAOqH,KAUd,GAT8B,IAA1BvK,EAAK0N,UAAUlP,SAIVqU,KAAK6R,UAAU,qBAClB7R,KAAK4pD,aAAa,qBAIM,IAA1Bz8D,EAAK0N,UAAUlP,QAAgBwB,EAAK0N,UAAUlP,OAAS,EACzDqU,KAAKge,MACH7wB,EAAKlF,MACLk7B,EAAO5M,gBACPvW,KAAK6R,UAAU,qBACb7R,KAAK6R,UAAU,oBACb,uBACA,qBAGN,IAAK,MAAM9e,KAAO5F,EAAK0N,UACJ,kBAAb9H,EAAI2E,MACNsI,KAAKge,MAAMjrB,EAAI9K,MAAOk7B,EAAO1M,0BAKrC,OAAOzW,KAAKigC,WACV9yC,EACA2zC,EAAW,yBAA2B,iBAEzC,CAED+U,6BACE13C,EACAs6D,EACAC,EACAC,EACAC,GAEA,MAAMxD,EAAO,GACb,IAAIhpB,GAAQ,EACZ,MAAMysB,EAAgC74D,KAAK5Q,MAAMk8D,2BAGjD,IAFAtrD,KAAK5Q,MAAMk8D,4BAA6B,GAEhCtrD,KAAKmjC,IAAIhlC,IAAQ,CACvB,GAAIiuC,EACFA,GAAQ,OAGR,GADApsC,KAAK2jC,OAAOnkB,EAAG3S,OACX7M,KAAKqC,MAAMlE,GAAQ,EAEnBu6D,GACC14D,KAAK6R,UAAU,qBACf7R,KAAK6R,UAAU,qBAEhB7R,KAAKge,MACHhe,KAAK5Q,MAAMquB,aACX0F,EAAO7M,iCAGPsiD,GACF54D,KAAKy+B,SACHm6B,EACA,gBACA54D,KAAK5Q,MAAMquB,cAGfzd,KAAKijC,OACL,KACD,CAGHmyB,EAAK3kE,KACHuP,KAAK84D,mBACH,EACAL,EAAqB,IAAIxE,QAAqBjlE,EAC9CypE,EAAqB,CAAExwE,MAAO,QAAM+G,EACpC2pE,GAGL,CAID,OAFA34D,KAAK5Q,MAAMk8D,2BAA6BuN,EAEjCzD,CACR,CAED5gB,wBACE,OAAOx0C,KAAKqC,MAAMmd,EAAGpS,SAAWpN,KAAK6sC,oBACtC,CAED0H,kCACEpnD,EACA/D,GAC2B,IAAA2vE,EAQ3B,OAPA/4D,KAAK2jC,OAAOnkB,EAAGpS,OACfpN,KAAKo2C,qBACHjpD,EACA/D,EAAKyR,WACL,EAHF,OAAAk+D,EAIE3vE,EAAK20C,YAJP,EAIEg7B,EAAYjpB,eAEP3iD,CACR,CAIDorE,kBACE,MAAM74B,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAC5B,OAAO+U,KAAK41C,gBAAgB51C,KAAKo/B,gBAAiBM,EAAUz0C,GAAU,EACvE,CAcDm0C,cAAcC,GAGRr/B,KAAK5Q,MAAMsI,OAAS8nB,EAAG5Q,OAAO5O,KAAK8tD,aAEvC,MAAMnY,EAAa31C,KAAK5Q,MAAM47D,mBAAqBhrD,KAAK5Q,MAAMnH,MAC9D,IAAIkF,EAEJ,OAAQ6S,KAAK5Q,MAAMsI,MACjB,KAAK8nB,EAAGrP,OACN,OAAOnQ,KAAKg5D,aAEd,KAAKx5C,EAAGjP,QAIN,OAHApjB,EAAO6S,KAAKggC,YACZhgC,KAAKijC,OAEDjjC,KAAKqC,MAAMmd,EAAGvS,KACTjN,KAAKi5D,wBAAwB9rE,IAGjC6S,KAAKqC,MAAMmd,EAAG7S,SACjB3M,KAAKge,MAAMhe,KAAK5Q,MAAMquB,aAAc0F,EAAOhH,mBAEtCnc,KAAKigC,WAAW9yC,EAAM,WAC/B,KAAKqyB,EAAGtP,MAGN,OAFA/iB,EAAO6S,KAAKggC,YACZhgC,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,kBAE/B,KAAKqyB,EAAG13B,KAAM,CACZ,MAAMu5D,EAAcrhD,KAAK5Q,MAAMiyD,YACzB/zD,EAAK0S,KAAK+lC,kBAEhB,IAAKsb,GAA2B,UAAZ/zD,EAAGxF,OAAqBkY,KAAK6sC,qBAAsB,CACrE,GAAI7sC,KAAKqC,MAAMmd,EAAGjQ,WAAY,CAC5B,MAAMyC,EAAOhS,KAAK5Q,MAAMqwB,QAAQ9zB,OAAS,EACzC,GAAIqU,KAAK5Q,MAAMqwB,QAAQzN,KAAU+1C,EAAGxoC,kBAQlC,MAAM,IAAI13B,MAAM,kBAKlB,OAHAmY,KAAK5Q,MAAMqwB,QAAQzN,GAAQ+1C,EAAGzoC,mBAE9Btf,KAAKijC,OACEjjC,KAAKk5D,cACVl5D,KAAKyhC,gBAAgBn0C,QACrB0B,GACA,EAlBJ,CAoBO,GAAIgR,KAAKqC,MAAMmd,EAAG13B,MAIvB,OAAI,KAAAkY,KAAK8/C,oBACA9/C,KAAKm5D,6BAA6B7rE,GAIlCA,EAEJ,GAAI0S,KAAKqC,MAAMmd,EAAGrQ,KACvB,OAAOnP,KAAKo5D,SAAQ,EAEvB,CAED,OAAIzjB,GAAc31C,KAAKqC,MAAMmd,EAAGpS,SAAWpN,KAAK6sC,sBAC9C7sC,KAAKijC,OACEjjC,KAAKo2C,qBACVp2C,KAAKyhC,gBAAgBn0C,GACrB,CAACA,IACD,IAIGA,CACR,CAED,KAAKkyB,EAAGrQ,IACN,OAAOnP,KAAKo5D,SAAQ,GAGtB,KAAK55C,EAAG1T,OAAQ,CACd,MAAM3kB,EAAQ6Y,KAAK5Q,MAAMjI,MAIzB,OAHAgG,EAAO6S,KAAK09B,aAAav2C,EAAMA,MAAO,iBACtCgG,EAAKuB,QAAUvH,EAAMuH,QACrBvB,EAAKwB,MAAQxH,EAAMwH,MACZxB,CACR,CAED,KAAKqyB,EAAG7T,IACN,OAAO3L,KAAK09B,aAAa19B,KAAK5Q,MAAMjI,MAAO,kBAE7C,KAAKq4B,EAAG5T,OACN,OAAO5L,KAAK09B,aAAa19B,KAAK5Q,MAAMjI,MAAO,iBAE7C,KAAKq4B,EAAG3T,QACN,OAAO7L,KAAK09B,aAAa19B,KAAK5Q,MAAMjI,MAAO,kBAE7C,KAAKq4B,EAAG70B,OACN,OAAOqV,KAAK09B,aAAa19B,KAAK5Q,MAAMjI,MAAO,iBAE7C,KAAKq4B,EAAGhP,MAGN,OAFArjB,EAAO6S,KAAKggC,YACZhgC,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,eAE/B,KAAKqyB,EAAG/O,MACR,KAAK+O,EAAG9O,OACN,OAAO1Q,KAAKi4C,sBAEd,KAAKz4B,EAAG7S,OACN,OAAO3M,KAAK01C,mCAAmCC,GAEjD,KAAKn2B,EAAGrT,YACR,KAAKqT,EAAGtT,aACN,OAAOlM,KAAK8xC,eACV9xC,KAAK5Q,MAAMsI,OAAS8nB,EAAGrT,YAAcqT,EAAGnT,YAAcmT,EAAGpT,UACtC,GACL,EACdizB,GAGJ,KAAK7f,EAAGvT,SACN,OAAOjM,KAAK8xC,eACVtyB,EAAGpT,UACgB,GACL,EACdizB,GAGJ,KAAK7f,EAAGjT,UACR,KAAKiT,EAAGhT,WACN,OAAOxM,KAAKi1D,gBACVj1D,KAAK5Q,MAAMsI,OAAS8nB,EAAGjT,UAAYiT,EAAG9S,UAAY8S,EAAG/S,QACrC,GACD,EACf4yB,GAGJ,KAAK7f,EAAGlT,OACN,OAAOtM,KAAKi1D,gBACVz1C,EAAG/S,QACa,GACD,EACf4yB,GAGJ,KAAK7f,EAAGjQ,UACN,OAAOvP,KAAKq5D,8BAEd,KAAK75C,EAAGhS,GACNxN,KAAKs5D,kBAEP,KAAK95C,EAAGpP,OAGN,OAFAjjB,EAAO6S,KAAKggC,YACZhgC,KAAKypD,eAAet8D,GACb6S,KAAKokD,WAAWj3D,GAAM,GAE/B,KAAKqyB,EAAGvP,KACN,OAAOjQ,KAAKu5D,sBAEd,KAAK/5C,EAAGlS,UACN,OAAOtN,KAAKw/C,eAAc,GAI5B,KAAKhgC,EAAGxS,YAAa,CACnB7f,EAAO6S,KAAKggC,YACZhgC,KAAKijC,OACL91C,EAAKuqC,OAAS,KACd,MAAMrnC,EAAUlD,EAAKkD,OAAS2P,KAAKu4D,kBACnC,GAAoB,qBAAhBloE,EAAOqH,KACT,OAAOsI,KAAKigC,WAAW9yC,EAAM,kBAE7B,MAAM6S,KAAKge,MAAM3tB,EAAOpI,MAAOk7B,EAAOnH,gBAEzC,CAED,KAAKwD,EAAGzT,YAAa,CAInB,MAAM9jB,EAAQ+X,KAAK5Q,MAAMnH,MACnBd,EAAQ6Y,KAAK5Q,MAAMjI,MAEzB,GADAgG,EAAO6S,KAAKs4D,mBACRt4D,KAAKqC,MAAMmd,EAAG7O,KAChB3Q,KAAK4pD,aAAa,aAClB5pD,KAAKsxD,WAAWI,eAAevqE,EAAOgG,EAAKlF,WACtC,KAAI+X,KAAK6R,UAAU,aAGxB,MAAM7R,KAAKgjC,WAAW/6C,GAFtB+X,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOvJ,oBAAqBzyB,EAG1D,CACD,OAAOgG,CACR,CACD,KAAKqyB,EAAG/R,KACN,GAAIzN,KAAK5Q,MAAM67D,WAgBb,OAfA99D,EAAO6S,KAAKggC,YAG+C,UAAzDhgC,KAAK8R,gBAAgB,mBAAoB,aAEzC9R,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAOxJ,mCAGhC3Z,KAAKijC,OAEAjjC,KAAKw5D,uDACRx5D,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAOzJ,wBAGhC1Z,KAAKy5D,yBACEz5D,KAAKigC,WAAW9yC,EAAM,iCAIjC,KAAKqyB,EAAGjR,WACN,GAAyB,MAArBvO,KAAK5Q,MAAMjI,MAAe,CAC5B,MAAMuyE,EAAc15D,KAAK6d,MAAM87C,YAAY35D,KAAKw5C,mBAE9C94B,EAAkBg5C,IACF,KAAhBA,IAEA15D,KAAKgzD,gBAAgB,CAAC,MAAO,OAAQ,cAExC,CAGH,QACE,MAAMhzD,KAAKgjC,aAEhB,CAGDm2B,6BAA6B7rE,GAC3B,MAAMH,EAAO6S,KAAKyhC,gBAAgBn0C,GAGlC0S,KAAKojD,UAAU1gC,MAAMyW,IAAc,EAAMn5B,KAAKojD,UAAUpqB,WACxD,MAAM5oC,EAAS,CAAC4P,KAAK+lC,mBAQrB,OAPA/lC,KAAKojD,UAAUzgC,OACX3iB,KAAKigB,yBACPjgB,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAOrL,2BAEpC9X,KAAK2jC,OAAOnkB,EAAGpS,OAEfpN,KAAKo2C,qBAAqBjpD,EAAMiD,GAAQ,GACjCjD,CACR,CAIDisE,QAAQhgC,GACNp5B,KAAK4pD,aAAa,iBACdxwB,GACFp5B,KAAK4pD,aAAa,sBAEpB,MAAMz8D,EAAO6S,KAAKggC,YAClB7yC,EAAKgoD,MAAQ/b,EACbp5B,KAAKijC,OACL,MAAMuwB,EAAYxzD,KAAK5Q,MAAMoU,OAa7B,OAZAxD,KAAK5Q,MAAMoU,OAAS,GAChB41B,GAGFp5B,KAAKojD,UAAU1gC,MdluCL,GcmuCVv1B,EAAKmD,KAAO0P,KAAKupD,aACjBvpD,KAAKojD,UAAUzgC,QAEfx1B,EAAKmD,KAAO0P,KAAKupD,aAGnBvpD,KAAK5Q,MAAMoU,OAASgwD,EACbxzD,KAAKigC,WAAW9yC,EAAM,eAC9B,CAGD6rE,aACE,MAAM7rE,EAAO6S,KAAKggC,YAuBlB,OAtBAhgC,KAAKijC,QAEHjjC,KAAKqC,MAAMmd,EAAG7S,SACb3M,KAAK3S,MAAM60B,kBACXliB,KAAKL,QAAQpJ,wBAIbyJ,KAAK3S,MAAM20B,YACXhiB,KAAKL,QAAQpJ,yBAEdyJ,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAOtH,iBAL9B7b,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAOvI,iBAS7B5a,KAAKqC,MAAMmd,EAAG7S,SACd3M,KAAKqC,MAAMmd,EAAGvT,WACdjM,KAAKqC,MAAMmd,EAAGvS,MAEfjN,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAO5G,kBAGzBvc,KAAKigC,WAAW9yC,EAAM,QAC9B,CAED8qD,sBACE,MAAM9qD,EAAO6S,KAAKggC,YAGlB,OAFA7yC,EAAKhG,MAAQ6Y,KAAKqC,MAAMmd,EAAG/O,OAC3BzQ,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,iBAC9B,CAEDmyC,sBACEuT,GAIA,OAFkB7yC,KAAKqC,MAAMmd,EAAGzT,cAGzB8mC,GACH7yC,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAQ,EAAGk7B,EAAOxH,wBAEnC3b,KAAKs4D,oBAELt4D,KAAK+lC,iBAAgB,EAE/B,CAEDuyB,mBACE,MAAMnrE,EAAO6S,KAAKggC,YACZ1yC,EAAK0S,KAAK89B,YACd99B,KAAK5Q,MAAMnH,MAAQ,EAGnB,IAAIopB,EACFrR,KAAK5Q,MAAMkzC,QACXtiC,KAAK5Q,MAAMnH,MAAQ,EAAI+X,KAAK5Q,MAAM0uB,YAGhCh2B,EAAOkY,KAAK5Q,MAAMjI,MAGxB,OAFA6Y,KAAKijC,OACL91C,EAAKG,GAAK0S,KAAK0sC,iBAAiBp/C,EAAIxF,GAC7BkY,KAAKigC,WAAW9yC,EAAM,cAC9B,CAEDksE,8BACE,MAAMlsE,EAAO6S,KAAKggC,YASlB,GAFAhgC,KAAKijC,OAEDjjC,KAAKojD,UAAUpqB,UAAYh5B,KAAKqC,MAAMmd,EAAGvS,KAAM,CACjD,MAAM2sD,EAAO55D,KAAK0sC,iBAChB1sC,KAAKyhC,gBAAgBt0C,GACrB,YAGF,OADA6S,KAAKijC,OACEjjC,KAAK65D,kBAAkB1sE,EAAMysE,EAAM,OAC3C,CACD,OAAO55D,KAAKk5D,cAAc/rE,EAC3B,CAED0sE,kBACE1sE,EACAysE,EACAE,GAEA3sE,EAAKysE,KAAOA,EAEM,aAAdA,EAAK9xE,MAAwC,SAAjBgyE,IAE1B95D,KAAKgnC,aAAa8yB,GACpB95D,KAAK4pD,aAAa,gBACR5pD,KAAK6R,UAAU,iBAEzB7R,KAAKgjC,cAIT,MAAMqe,EAAcrhD,KAAK5Q,MAAMiyD,YAa/B,OAXAl0D,EAAK0qC,SAAW73B,KAAK+lC,iBAAgB,IAEjC54C,EAAK0qC,SAAS/vC,OAASgyE,GAAgBzY,IACzCrhD,KAAKge,MACH7wB,EAAK0qC,SAAS5vC,MACdk7B,EAAO/G,wBACPw9C,EAAK9xE,KACLgyE,GAIG95D,KAAKigC,WAAW9yC,EAAM,eAC9B,CAGD8rE,wBAAwB9rE,GACtB,MAAMG,EAAK0S,KAAK0sC,iBAAiB1sC,KAAKyhC,gBAAgBt0C,GAAO,UAU7D,OATA6S,KAAKijC,OAEDjjC,KAAKgnC,aAAa,UACfhnC,KAAKghB,UACRhhB,KAAKge,MAAM1wB,EAAGrF,MAAO8xE,EAAuB98C,yBAE9Cjd,KAAK2R,mBAAoB,GAGpB3R,KAAK65D,kBAAkB1sE,EAAMG,EAAI,OACzC,CAEDowC,aACEv2C,EACAuQ,EACAgoC,EACAz0C,GAEAy0C,EAAWA,GAAY1/B,KAAK5Q,MAAMnH,MAClCgD,EAAWA,GAAY+U,KAAK5Q,MAAMnE,SAElC,MAAMkC,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAKxC,OAJA+U,KAAKy+B,SAAStxC,EAAM,WAAYhG,GAChC6Y,KAAKy+B,SAAStxC,EAAM,MAAO6S,KAAK6d,MAAMzxB,MAAMszC,EAAU1/B,KAAK5Q,MAAMtE,MACjEqC,EAAKhG,MAAQA,EACb6Y,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAMuK,EAC9B,CAGDg+C,mCAAmCC,GACjC,MAAMjW,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAE5B,IAAI0a,EACJ3F,KAAKijC,OACLjjC,KAAK8zD,gBAAgBpxC,MJtrChB,IAAIovC,GAxKuB,IIg2ChC,MAAMhN,EAA4B9kD,KAAK5Q,MAAM6iD,uBACvC4mB,EAAgC74D,KAAK5Q,MAAMk8D,2BACjDtrD,KAAK5Q,MAAM6iD,wBAAyB,EACpCjyC,KAAK5Q,MAAMk8D,4BAA6B,EAExC,MAAM0O,EAAgBh6D,KAAK5Q,MAAMnH,MAC3BgyE,EAAgBj6D,KAAK5Q,MAAMnE,SAC3BwmD,EAAW,GACXpS,EAAsB,IAAI40B,GAC1B7lB,EAAmB,CAAEnmD,MAAO,GAClC,IACIiyE,EACAC,EAFA/tB,GAAQ,EAIZ,MAAQpsC,KAAKqC,MAAMmd,EAAG5S,SAAS,CAC7B,GAAIw/B,EACFA,GAAQ,OAGR,GADApsC,KAAK2jC,OAAOnkB,EAAG3S,MAAOuhC,EAAiBnmD,OAAS,MAC5C+X,KAAKqC,MAAMmd,EAAG5S,QAAS,CACzButD,EAAqBn6D,KAAK5Q,MAAMnH,MAChC,KACD,CAGH,GAAI+X,KAAKqC,MAAMmd,EAAGnS,UAAW,CAC3B,MAAM+sD,EAAqBp6D,KAAK5Q,MAAMnH,MAChCoyE,EAAqBr6D,KAAK5Q,MAAMnE,SACtCivE,EAAcl6D,KAAK5Q,MAAMnH,MACzBwpD,EAAShhD,KACPuP,KAAKiwC,eACHjwC,KAAKg1D,mBACLoF,EACAC,IAIJr6D,KAAKooD,oBAAL,IAEA,KAdF,CAgBE3W,EAAShhD,KACPuP,KAAK8jC,wBACHzE,EACAr/B,KAAKiwC,eACL7B,GAIP,CAED,MAAMksB,EAAct6D,KAAK5Q,MAAMuuB,WACzB48C,EAAcv6D,KAAK5Q,MAAMwuB,cAC/B5d,KAAK2jC,OAAOnkB,EAAG5S,QAEf5M,KAAK5Q,MAAM6iD,uBAAyB6S,EACpC9kD,KAAK5Q,MAAMk8D,2BAA6BuN,EAExC,IAAI2B,EAAYx6D,KAAK89B,YAAY4B,EAAUz0C,GAC3C,GACE0qD,GACA31C,KAAKs1C,qBACJklB,EAAYx6D,KAAKq1C,WAAWmlB,IAK7B,OAHAx6D,KAAK8zD,gBAAgBvB,oBACrBvyD,KAAK8zD,gBAAgBnxC,OACrB3iB,KAAKo2C,qBAAqBokB,EAAW/oB,GAAU,GACxC+oB,EAqBT,GAnBAx6D,KAAK8zD,gBAAgBnxC,OAEhB8uB,EAAS9lD,QACZqU,KAAKgjC,WAAWhjC,KAAK5Q,MAAMquB,cAEzB08C,GAAoBn6D,KAAKgjC,WAAWm3B,GACpCD,GAAal6D,KAAKgjC,WAAWk3B,GACjCl6D,KAAKmzD,sBAAsB9zB,GAAqB,GAC5C+O,EAAiBnmD,OAAO+X,KAAKgjC,WAAWoL,EAAiBnmD,OAE7D+X,KAAK80D,qBAAqBrjB,GAAoC,GAC1DA,EAAS9lD,OAAS,GACpBga,EAAM3F,KAAK89B,YAAYk8B,EAAeC,GACtCt0D,EAAI4wD,YAAc9kB,EAClBzxC,KAAKi+B,aAAat4B,EAAK,qBAAsB20D,EAAaC,IAE1D50D,EAAM8rC,EAAS,IAGZzxC,KAAKL,QAAQmrD,+BAGhB,OAFA9qD,KAAKy+B,SAAS94B,EAAK,iBAAiB,GACpC3F,KAAKy+B,SAAS94B,EAAK,aAAc+5B,GAC1B/5B,EAGT,MAAMyZ,EAAkBpf,KAAK89B,YAAY4B,EAAUz0C,GAGnD,OAFAm0B,EAAgBjvB,WAAawV,EAC7B3F,KAAKigC,WAAW7gB,EAAiB,2BAC1BA,CACR,CAEDk2B,mBACE,OAAQt1C,KAAK6sC,oBACd,CAEDwI,WAAWloD,GACT,GAAI6S,KAAKmjC,IAAI3jB,EAAGpS,OACd,OAAOjgB,CAEV,CAED8iD,eACE9iD,EACAuyC,EACAz0C,GAEA,OAAOkC,CACR,CAEDosE,sBACE,MAAMpsE,EAAO6S,KAAKggC,YAElB,GADAhgC,KAAKijC,OACDjjC,KAAKqC,MAAMmd,EAAGvS,KAAM,CAEtB,MAAM2sD,EAAO55D,KAAK0sC,iBAAiB1sC,KAAKyhC,gBAAgBt0C,GAAO,OAC/D6S,KAAKijC,OACL,MAAMw3B,EAAWz6D,KAAK65D,kBAAkB1sE,EAAMysE,EAAM,UAMpD,OAJK55D,KAAK3S,MAAMg1B,oBAAuBriB,KAAK3S,MAAM80B,SAChDniB,KAAKge,MAAMy8C,EAASxyE,MAAOk7B,EAAO1H,qBAG7Bg/C,CACR,CAED,OAAOz6D,KAAK06D,SAASvtE,EACtB,CAQDutE,SAASvtE,GAWP,OAVAA,EAAKkD,OAAS2P,KAAKu4D,kBACM,WAArBprE,EAAKkD,OAAOqH,KACdsI,KAAKge,MAAM7wB,EAAKkD,OAAOpI,MAAOk7B,EAAO3M,4BAC5BxW,KAAK2hC,gBAAgBx0C,EAAKkD,QACnC2P,KAAKge,MAAMhe,KAAK5Q,MAAMuuB,WAAYwF,EAAOnK,uBAChChZ,KAAKmjC,IAAI3jB,EAAGrS,cACrBnN,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOnK,uBAGtChZ,KAAKk2C,kBAAkB/oD,GAChB6S,KAAKigC,WAAW9yC,EAAM,gBAC9B,CAED+oD,kBAAkB/oD,GAChB,GAAI6S,KAAKmjC,IAAI3jB,EAAG7S,QAAS,CACvB,MAAMza,EAAO8N,KAAK26D,cAAcn7C,EAAG5S,QACnC5M,KAAK2xC,iBAAiBz/C,GAEtB/E,EAAK0N,UAAY3I,CAJnB,MAME/E,EAAK0N,UAAY,EAEpB,CAID+/D,qBAAqBC,GACnB,MAAMjF,EAAO51D,KAAKggC,YAclB,OAbyB,OAArBhgC,KAAK5Q,MAAMjI,QACR0zE,GACH76D,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAQ,EAAGk7B,EAAOpM,gCAG5C6+C,EAAKzuE,MAAQ,CACX4H,IAAKiR,KAAK6d,MACPzxB,MAAM4T,KAAK5Q,MAAMnH,MAAO+X,KAAK5Q,MAAMtE,KACnCgC,QAAQ,SAAU,MACrBguE,OAAQ96D,KAAK5Q,MAAMjI,OAErB6Y,KAAKijC,OACL2yB,EAAKmF,KAAO/6D,KAAKqC,MAAMmd,EAAGlS,WACnBtN,KAAKigC,WAAW21B,EAAM,kBAC9B,CAGDpW,cAAcqb,GACZ,MAAM1tE,EAAO6S,KAAKggC,YAClBhgC,KAAKijC,OACL91C,EAAKopE,YAAc,GACnB,IAAIyE,EAASh7D,KAAK46D,qBAAqBC,GAEvC,IADA1tE,EAAK0B,OAAS,CAACmsE,IACPA,EAAOD,MACb/6D,KAAK2jC,OAAOnkB,EAAGjS,cACfpgB,EAAKopE,YAAY9lE,KAAKuP,KAAKy/C,6BAC3Bz/C,KAAK2jC,OAAOnkB,EAAG/S,QACftf,EAAK0B,OAAO4B,KAAMuqE,EAASh7D,KAAK46D,qBAAqBC,IAGvD,OADA76D,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAGDsyD,4BACE,OAAOz/C,KAAK0jC,iBACb,CAIDuxB,gBACE92D,EACAmiC,EACAy1B,EACA12B,GAEI02B,GACF/1D,KAAK4pD,aAAa,kBAEpB,MAAMiP,EAAgC74D,KAAK5Q,MAAMk8D,2BACjDtrD,KAAK5Q,MAAMk8D,4BAA6B,EACxC,MAAM2P,EAAgBj0E,OAAOyY,OAAO,MACpC,IAAI2sC,GAAQ,EACZ,MAAMj/C,EAAO6S,KAAKggC,YAKlB,IAHA7yC,EAAKgmB,WAAa,GAClBnT,KAAKijC,QAEGjjC,KAAKqC,MAAMlE,IAAQ,CACzB,GAAIiuC,EACFA,GAAQ,OAGR,GADApsC,KAAK2jC,OAAOnkB,EAAG3S,OACX7M,KAAKqC,MAAMlE,GAAQ,CACrB6B,KAAKy+B,SAAStxC,EAAM,gBAAiB6S,KAAK5Q,MAAMquB,cAChD,KACD,CAGH,MAAMkX,EAAO30B,KAAKk7D,wBAAwB56B,EAAWjB,GAChDiB,GAEHtgC,KAAK81D,WAAWnhC,EAAMohC,EAAUkF,EAAU57B,GAI1C02B,IACC/1D,KAAKvS,iBAAiBknC,IACT,kBAAdA,EAAKj9B,MAELsI,KAAKge,MAAM2W,EAAK1sC,MAAOk7B,EAAOzL,uBAI5Bid,EAAK6L,WACPxgC,KAAKy+B,SAAS9J,EAAM,aAAa,GAGnCxnC,EAAKgmB,WAAW1iB,KAAKkkC,EACtB,CAMD30B,KAAK5Q,MAAMswB,aAAc,EACzB1f,KAAKijC,OAELjjC,KAAK5Q,MAAMk8D,2BAA6BuN,EACxC,IAAInhE,EAAO,mBAMX,OALI4oC,EACF5oC,EAAO,gBACEq+D,IACTr+D,EAAO,oBAEFsI,KAAKigC,WAAW9yC,EAAMuK,EAC9B,CAKDyjE,yBAAyBxmC,GACvB,OACGA,EAAK/mC,UACY,eAAlB+mC,EAAK1rC,IAAIyO,OACRsI,KAAK65C,yBACJ75C,KAAKqC,MAAMmd,EAAGvT,WACdjM,KAAKqC,MAAMmd,EAAG7Q,MAEnB,CAGDusD,wBACE56B,EACAjB,GAEA,IAAI4lB,EAAa,GACjB,GAAIjlD,KAAKqC,MAAMmd,EAAGhS,IAOhB,IANIxN,KAAK6R,UAAU,eACjB7R,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAO7G,8BAK/Btc,KAAKqC,MAAMmd,EAAGhS,KACnBy3C,EAAWx0D,KAAKuP,KAAKq1D,kBAIzB,MAAM1gC,EAAO30B,KAAKggC,YAClB,IAGIN,EACAz0C,EAJAouC,GAAc,EACdD,GAAU,EACVmH,GAAa,EAIjB,GAAIvgC,KAAKqC,MAAMmd,EAAGnS,UAEhB,OADI43C,EAAWt5D,QAAQqU,KAAKgjC,aACxB1C,GACFtgC,KAAKijC,OAELtO,EAAKkP,SAAW7jC,KAAK+lC,kBACrB/lC,KAAKooD,oBAAL,KACOpoD,KAAKigC,WAAWtL,EAAM,gBAGxB30B,KAAK+0D,cAGV9P,EAAWt5D,SACbgpC,EAAKswB,WAAaA,EAClBA,EAAa,IAGftwB,EAAKtlC,QAAS,GAEVixC,GAAajB,KACfK,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,UAGnBq1C,IACHjH,EAAcr5B,KAAKmjC,IAAI3jB,EAAG7Q,OAG5B,MAAM0yC,EAAcrhD,KAAK5Q,MAAMiyD,YACzBp4D,EAAM+W,KAAK4yC,kBAAkBje,GAAiC,GAEpE,IACG2L,IACAjH,IACAgoB,GACDrhD,KAAKm7D,yBAAyBxmC,GAC9B,CACA,MAAMymC,EAAUnyE,EAAInB,KAGJ,UAAZszE,GAAwBp7D,KAAKigB,0BAC/BmZ,GAAU,EACVC,EAAcr5B,KAAKmjC,IAAI3jB,EAAG7Q,MAC1B3O,KAAK4yC,kBAAkBje,GAAiC,IAI1C,QAAZymC,GAAiC,QAAZA,IACvB76B,GAAa,EACb5L,EAAKhnC,KAAOytE,EACRp7D,KAAKqC,MAAMmd,EAAG7Q,QAChB0qB,GAAc,EACdr5B,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAOtP,oBAAqBunD,GACvDp7D,KAAKijC,QAEPjjC,KAAK4yC,kBAAkBje,GAAiC,GAE3D,CAaD,OAXA30B,KAAK8yC,kBACHne,EACA+K,EACAz0C,EACAouC,EACAD,EACAkH,EACAC,EACAlB,GAGK1K,CACR,CAED4zB,kCACEl5D,GAEA,MAAuB,QAAhBA,EAAO1B,KAAiB,EAAI,CACpC,CAGDywC,6BAA6B/uC,GAC3B,OAAOA,EAAOe,MACf,CAIDuiD,wBAAwBtjD,GAA8C,IAAAgsE,EACpE,MAAMxvB,EAAa7rC,KAAKuoD,kCAAkCl5D,GACpDe,EAAS4P,KAAKo+B,6BAA6B/uC,GAE3CpH,EAAQoH,EAAOpH,MAEjBmI,EAAOzE,SAAWkgD,IACA,QAAhBx8C,EAAO1B,KACTqS,KAAKge,MAAM/1B,EAAOk7B,EAAO9O,gBAEzBrU,KAAKge,MAAM/1B,EAAOk7B,EAAO7O,iBAKX,QAAhBjlB,EAAO1B,MAC6B,iBAApC,OAAA0tE,EAAAjrE,EAAOA,EAAOzE,OAAS,SAAvB,EAAA0vE,EAA2B3jE,OAE3BsI,KAAKge,MAAM/1B,EAAOk7B,EAAO5O,uBAE5B,CAGD8rB,kBACE1L,EACA0E,EACAD,EACAkH,EACAC,GAEA,OAAIA,GAEFvgC,KAAKk/B,YACHvK,EAGA0E,GACc,GACM,GACpB,EACA,gBAEFr5B,KAAK2yC,wBAAwBhe,GACtBA,GAGLyE,GAAWC,GAAer5B,KAAKqC,MAAMmd,EAAG7S,SACtC2zB,GAAWtgC,KAAKgjC,aACpBrO,EAAKhnC,KAAO,SACZgnC,EAAKtlC,QAAS,EACP2Q,KAAKk/B,YACVvK,EACA0E,EACAD,GACoB,GACpB,EACA,sBAVJ,CAaD,CAIDqH,oBACE9L,EACA+K,EACAz0C,EACAq1C,EACAjB,GAIA,OAFA1K,EAAK6L,WAAY,EAEbxgC,KAAKmjC,IAAI3jB,EAAGzS,QACd4nB,EAAKxtC,MAAQm5C,EACTtgC,KAAKgzC,kBAAkBhzC,KAAK5Q,MAAMnH,MAAO+X,KAAK5Q,MAAMnE,UACpD+U,KAAK8jC,wBAAwBzE,GAE1Br/B,KAAKigC,WAAWtL,EAAM,mBAG1BA,EAAK/mC,UAA8B,eAAlB+mC,EAAK1rC,IAAIyO,UAA/B,GAKEsI,KAAKk0C,kBAAkBvf,EAAK1rC,IAAInB,KAAM6sC,EAAK1rC,IAAIhB,OAAO,GAAM,GAExDq4C,EACF3L,EAAKxtC,MAAQ6Y,KAAKgzC,kBAChBtT,EACAz0C,EACA0pC,EAAK1rC,IAAI8qD,WAEF/zC,KAAKqC,MAAMmd,EAAG7R,KAAO0xB,IACe,IAAzCA,EAAoBg0B,kBACtBh0B,EAAoBg0B,gBAAkBrzD,KAAK5Q,MAAMnH,OAEnD0sC,EAAKxtC,MAAQ6Y,KAAKgzC,kBAChBtT,EACAz0C,EACA0pC,EAAK1rC,IAAI8qD,YAGXpf,EAAKxtC,MAAQwtC,EAAK1rC,IAAI8qD,UAExBpf,EAAK6L,WAAY,EAEVxgC,KAAKigC,WAAWtL,EAAM,kBAEhC,CAEDme,kBACEne,EACA+K,EACAz0C,EACAouC,EACAD,EACAkH,EACAC,EACAlB,GAEA,MAAMlyC,EACJ6S,KAAKqgC,kBACH1L,EACA0E,EACAD,EACAkH,EACAC,IAEFvgC,KAAKygC,oBACH9L,EACA+K,EACAz0C,EACAq1C,EACAjB,GAMJ,OAHKlyC,GAAM6S,KAAKgjC,aAGT71C,CACR,CAEDylD,kBACEje,EACAke,GAEA,GAAI7yC,KAAKmjC,IAAI3jB,EAAGvT,UACb0oB,EAA2C/mC,UAAW,EACvD+mC,EAAK1rC,IAAM+W,KAAK8jC,0BAChB9jC,KAAK2jC,OAAOnkB,EAAGpT,cACV,CACL,MAAMkvD,EAAoBt7D,KAAK5Q,MAAMw1C,eACrC5kC,KAAK5Q,MAAMw1C,gBAAiB,EAE5B,MAAMltC,EAAOsI,KAAK5Q,MAAMsI,KACvBi9B,EAAkB1rC,IACjByO,IAAS8nB,EAAG7T,KACZjU,IAAS8nB,EAAG70B,QACZ+M,IAAS8nB,EAAG5T,QACZlU,IAAS8nB,EAAG3T,QACR7L,KAAKo/B,gBACLp/B,KAAKs/B,sBAAsBuT,GAE7Bn7C,IAAS8nB,EAAGzT,cAEd4oB,EAAK/mC,UAAW,GAGlBoS,KAAK5Q,MAAMw1C,eAAiB02B,CAC7B,CAED,OAAO3mC,EAAK1rC,GACb,CAIDi1C,aAAa/wC,EAAsCisC,GACjDjsC,EAAKG,GAAK,KACVH,EAAKyC,WAAY,EACjBzC,EAAKgoD,QAAU/b,CAChB,CAID8F,YACE/xC,EACAksC,EACAD,EACA4F,EACA9c,EACAxqB,EACAooC,GAAwB,GAExB9/B,KAAKk+B,aAAa/wC,EAAMisC,GACxBjsC,EAAKyC,YAAcypC,EACnB,MAAMgb,EAAiBrV,EAavB,OAZAh/B,KAAK3S,MAAMq1B,MACTqtB,IAEGjQ,EpBp+DyB,GoBo+DI,IAC7B5d,EpBt+DyB,GoBs+De,IAE7CliB,KAAKojD,UAAU1gC,MAAMyW,GAAcC,EAASjsC,EAAKyC,YACjDoQ,KAAKo0C,oBAAqBjnD,EAAYknD,GACtCr0C,KAAKytC,2BAA2BtgD,EAAMuK,GAAM,GAC5CsI,KAAKojD,UAAUzgC,OACf3iB,KAAK3S,MAAMs1B,OAEJx1B,CACR,CAKD2kD,eACE3zC,EACA4zC,EACAC,EACA3S,GAEI2S,GACFhyC,KAAK4pD,aAAa,kBAEpB,MAAMiP,EAAgC74D,KAAK5Q,MAAMk8D,2BACjDtrD,KAAK5Q,MAAMk8D,4BAA6B,EACxC,MAAMn+D,EAAO6S,KAAKggC,YASlB,OARAhgC,KAAKijC,OACL91C,EAAKolB,SAAWvS,KAAK26D,cACnBx8D,GACkB6zC,EAClB3S,EACAlyC,GAEF6S,KAAK5Q,MAAMk8D,2BAA6BuN,EACjC74D,KAAKigC,WACV9yC,EACA6kD,EAAU,kBAAoB,kBAEjC,CAKDoE,qBACEjpD,EACAiD,EACAgpC,EACAsY,GAEA1xC,KAAK3S,MAAMq1B,MAAMqtB,GACjB,IAAIphD,EAAQwqC,GAAcC,GAAS,IAE9Bp5B,KAAKqC,MAAMmd,EAAGvT,WAAajM,KAAKojD,UAAUlqB,QAC7CvqC,GdhiEO,GckiETqR,KAAKojD,UAAU1gC,MAAM/zB,GACrBqR,KAAKk+B,aAAa/wC,EAAMisC,GACxB,MAAM0rB,EAA4B9kD,KAAK5Q,MAAM6iD,uBAa7C,OAXI7hD,IACF4P,KAAK5Q,MAAM6iD,wBAAyB,EACpCjyC,KAAKu1C,2BAA2BpoD,EAAMiD,EAAQshD,IAEhD1xC,KAAK5Q,MAAM6iD,wBAAyB,EACpCjyC,KAAK2/B,kBAAkBxyC,GAAM,GAE7B6S,KAAKojD,UAAUzgC,OACf3iB,KAAK3S,MAAMs1B,OACX3iB,KAAK5Q,MAAM6iD,uBAAyB6S,EAE7B9kD,KAAKigC,WAAW9yC,EAAM,0BAC9B,CAEDooD,2BACEpoD,EACAiD,EACAshD,GAEAvkD,EAAKiD,OAAS4P,KAAK6vC,iBAAiBz/C,EAAQshD,GAAkB,EAC/D,CAEDjE,2BACEtgD,EACAuK,EACAmoC,GAAqB,GAGrB7/B,KAAK2/B,kBAAkBxyC,GAAM,EAAO0yC,GACpC7/B,KAAKigC,WAAW9yC,EAAMuK,EACvB,CAGDioC,kBACExyC,EACAyyC,EACAC,GAAqB,GAErB,MAAM07B,EAAe37B,IAAoB5/B,KAAKqC,MAAMmd,EAAGlT,QAGvD,GAFAtM,KAAK8zD,gBAAgBpxC,MAAM8vC,MAEvB+I,EAEFpuE,EAAKmD,KAAO0P,KAAKivC,mBACjBjvC,KAAKgwC,YAAY7iD,GAAM,EAAOyyC,GAAiB,OAC1C,CACL,MAAM8pB,EAAY1pD,KAAK5Q,MAAMw+C,OAGvB4lB,EAAYxzD,KAAK5Q,MAAMoU,OAC7BxD,KAAK5Q,MAAMoU,OAAS,GAIpBxD,KAAKojD,UAAU1gC,Md7lEJ,Ec6lEU1iB,KAAKojD,UAAUtqB,gBACpC3rC,EAAKmD,KAAO0P,KAAKupD,YACf,GACA,GAECiS,IACC,MAAMC,GAAaz7D,KAAK07D,kBAAkBvuE,EAAKiD,QAE/C,GAAIorE,GAA0BC,EAAW,CAEvC,MAAME,EAEW,WAAdxuE,EAAKQ,MAAmC,gBAAdR,EAAKQ,OAE9BR,EAAKlE,IAEHkE,EAAKlF,MADLkF,EAAKlE,IAAI6B,IAEfkV,KAAKge,MAAM29C,EAAUx4C,EAAOhN,6BAC7B,CAED,MAAMw/C,GAAqBjM,GAAa1pD,KAAK5Q,MAAMw+C,OAInD5tC,KAAKgwC,YACH7iD,IACC6S,KAAK5Q,MAAMw+C,QAAWhO,GAAoBC,GAAa47B,GACxD77B,EACA+1B,GAIE31D,KAAK5Q,MAAMw+C,QAAUzgD,EAAKG,IAC5B0S,KAAKkyC,UACH/kD,EAAKG,GACL,gBpBxkEoBg6C,QoB0kEpBt4C,OACAA,EACA2mE,EAEH,IAGL31D,KAAKojD,UAAUzgC,OACf3iB,KAAK8zD,gBAAgBnxC,OACrB3iB,KAAK5Q,MAAMoU,OAASgwD,CACrB,CACF,CAEDkI,kBACEtrE,GAEA,IAAK,IAAIvE,EAAI,EAAG0E,EAAMH,EAAOzE,OAAQE,EAAI0E,EAAK1E,IAC5C,GAAuB,eAAnBuE,EAAOvE,GAAG6L,KAAuB,OAAO,EAE9C,OAAO,CACR,CAEDs4C,YACE7iD,EACAqoD,EAEAC,EACAkgB,GAA8B,GAE9B,MAAMF,EAAe,IAAIphE,IACzB,IAAK,MAAMwE,KAAS1L,EAAKiD,OACvB4P,KAAKkyC,UACHr5C,EACA,0BpBpnE0ByuC,EoBsnE1BkO,EAAkB,KAAOigB,OACzBzmE,EACA2mE,EAGL,CAQDgF,cACEx8D,EACAg3D,EACA91B,EACAu5B,GAEA,MAAMxD,EAAO,GACb,IAAIhpB,GAAQ,EAEZ,MAAQpsC,KAAKmjC,IAAIhlC,IAAQ,CACvB,GAAIiuC,EACFA,GAAQ,OAGR,GADApsC,KAAK2jC,OAAOnkB,EAAG3S,OACX7M,KAAKqC,MAAMlE,GAAQ,CACjBy6D,GACF54D,KAAKy+B,SACHm6B,EACA,gBACA54D,KAAK5Q,MAAMquB,cAGfzd,KAAKijC,OACL,KACD,CAGHmyB,EAAK3kE,KAAKuP,KAAK84D,kBAAkB3D,EAAY91B,GAC9C,CACD,OAAO+1B,CACR,CAED0D,kBACE3D,EACA91B,EACA+O,EACAuqB,GAEA,IAAIxT,EACJ,GAAInlD,KAAKqC,MAAMmd,EAAG3S,OACXsoD,GACHn1D,KAAKge,MAAMhe,KAAK5Q,MAAMouB,IAAK2F,EAAOrH,gBAAiB,KAErDqpC,EAAM,UACD,GAAInlD,KAAKqC,MAAMmd,EAAGnS,UAAW,CAClC,MAAM+sD,EAAqBp6D,KAAK5Q,MAAMnH,MAChCoyE,EAAqBr6D,KAAK5Q,MAAMnE,SACtCk6D,EAAMnlD,KAAKiwC,eACTjwC,KAAK+0D,YAAY11B,EAAqB+O,GACtCgsB,EACAC,EANG,MAQA,GAAIr6D,KAAKqC,MAAMmd,EAAGtS,UAAW,CAClClN,KAAK4pD,aAAa,sBACb+O,GACH34D,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOjI,+BAEtC,MAAM/tB,EAAO6S,KAAKggC,YAClBhgC,KAAKijC,OACLkiB,EAAMnlD,KAAKigC,WAAW9yC,EAAM,sBAPvB,MASLg4D,EAAMnlD,KAAK8jC,wBACTzE,EACAr/B,KAAKiwC,eACL7B,GAGJ,OAAO+W,CACR,CAQDpf,gBAAgBoD,GACd,MAAMh8C,EAAO6S,KAAKggC,YACZl4C,EAAOkY,KAAKq8C,oBAAoBlvD,EAAKlF,MAAOkhD,GAElD,OAAOnpC,KAAK0sC,iBAAiBv/C,EAAMrF,EACpC,CAED4kD,iBAAiBv/C,EAAoBrF,GAInC,OAHAqF,EAAKrF,KAAOA,EACZqF,EAAKxD,IAAI8nB,eAAiB3pB,EAEnBkY,KAAKigC,WAAW9yC,EAAM,aAC9B,CAEDkvD,oBAAoB7+B,EAAa2rB,GAC/B,IAAIrhD,EAEJ,MAAM,MAAEG,EAAF,KAASyP,GAASsI,KAAK5Q,MAE7B,GAAIsI,IAAS8nB,EAAG13B,KACdA,EAAOkY,KAAK5Q,MAAMjI,UACb,KAAIuQ,EAAKuM,QAed,MAAMjE,KAAKgjC,aAfY,CACvBl7C,EAAO4P,EAAKuM,QAKZ,MAAM2b,EAAa5f,KAAK4f,aAErBloB,IAAS8nB,EAAGpP,QAAU1Y,IAAS8nB,EAAGjQ,WAClCqQ,IAAemoC,EAAGxoC,mBACjBK,IAAemoC,EAAGzoC,oBAEpBtf,KAAK5Q,MAAMqwB,QAAQvc,KAZhB,CAgBN,CAYD,OAVIimC,EAGFnpC,KAAK5Q,MAAMsI,KAAO8nB,EAAG13B,KAErBkY,KAAKk0C,kBAAkBpsD,EAAMG,IAASyP,EAAKuM,SAAS,GAGtDjE,KAAKijC,OAEEn7C,CACR,CAEDosD,kBACEnzB,EACA91B,EACAm7D,EACA7U,GAEA,GAAIvxC,KAAKojD,UAAUpqB,UAAqB,UAATjY,EAC7B/gB,KAAKge,MAAM/yB,EAAUk4B,EAAOtG,4BAD9B,CAKA,GAAa,UAATkE,EAAkB,CACpB,GAAI/gB,KAAKojD,UAAUrqB,SAEjB,YADA/4B,KAAKge,MAAM/yB,EAAUk4B,EAAOnP,wBAEvB,GAAIhU,KAAK3S,MAAM+0B,gBAAkBpiB,KAAK3S,MAAMg1B,mBAEjD,YADAriB,KAAKge,MAAM/yB,EAAUk4B,EAAOlP,qCAG5BjU,KAAK8zD,gBAAgBxB,gCACnBrnE,EACAk4B,EAAOnP,uBAGZ,EAGChU,KAAK3S,MAAM80B,SACVniB,KAAK3S,MAAMg1B,oBACH,cAATtB,EAKEqlC,GAAiBhlC,EAAUL,GAC7B/gB,KAAKge,MAAM/yB,EAAUk4B,EAAO7H,kBAAmByF,IAI3B/gB,KAAK5Q,MAAMw+C,OAE7B2D,EACApwB,EACAF,EAHAH,GAKaC,EAAM/gB,KAAKghB,WAC1BhhB,KAAKge,MAAM/yB,EAAUk4B,EAAOvH,uBAAwBmF,GAfpD/gB,KAAKge,MAAM/yB,EAAUk4B,EAAOrP,iBAtB7B,CAuCF,CAED6jD,iBACE,QAAI33D,KAAKojD,UAAUrqB,aACf/4B,KAAKL,QAAQ6qD,2BAA8BxqD,KAAK3S,MAAMy0B,WAI3D,CAID81C,WAAWl4B,EAAkBz0C,GAC3B,MAAMkC,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GAuBxC,OArBA+U,KAAK8zD,gBAAgB1B,gCACnBjlE,EAAKlF,MACLk7B,EAAOjP,gCAGLlU,KAAKmjC,IAAI3jB,EAAG7Q,OACd3O,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAOpK,mBAG3B/Y,KAAK3S,MAAMy0B,YAAe9hB,KAAKL,QAAQ6qD,4BACtCxqD,KAAKg4D,mBACPh4D,KAAK4R,6BAA8B,EAEnC5R,KAAK2R,mBAAoB,GAIxB3R,KAAK5Q,MAAMi8D,YACdl+D,EAAK02C,SAAW7jC,KAAK+/C,gBAAgB,MAAM,IAGtC//C,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAED6qE,mBACE,OACEh4D,KAAKigB,yBAGLjgB,KAAKqC,MAAMmd,EAAG/Q,UACdzO,KAAKqC,MAAMmd,EAAG7S,SACd3M,KAAKqC,MAAMmd,EAAGvT,WACdjM,KAAKqC,MAAMmd,EAAGlS,YAGdtN,KAAKqC,MAAMmd,EAAG1T,SACd9L,KAAKqC,MAAMmd,EAAG5Q,QAGb5O,KAAK6R,UAAU,gBAAkB7R,KAAKqC,MAAMmd,EAAG9Q,OAEnD,CAID+nD,aACE,MAAMtpE,EAAO6S,KAAKggC,YAmBlB,OAjBAhgC,KAAK8zD,gBAAgB1B,gCACnBjlE,EAAKlF,MACLk7B,EAAOrG,kBAGT9c,KAAKijC,OAEHjjC,KAAKqC,MAAMmd,EAAG1S,QACZ9M,KAAKqC,MAAMmd,EAAG7Q,QAAU3O,KAAK5Q,MAAMsI,KAAKkT,YAC1C5K,KAAKigB,yBAEL9yB,EAAKyuE,UAAW,EAChBzuE,EAAK02C,SAAW,OAEhB12C,EAAKyuE,SAAW57D,KAAKmjC,IAAI3jB,EAAG7Q,MAC5BxhB,EAAK02C,SAAW7jC,KAAKivC,oBAEhBjvC,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAKD2pE,6BAA6BvoE,EAAoBy3D,GACc,UAAzDhmD,KAAK8R,gBAAgB,mBAAoB,aACzB,uBAAdvjB,EAAKmJ,MAGPsI,KAAKge,MAAMgoC,EAAc7iC,EAAO3J,+BAGrC,CAED49C,uBACEyE,EACAn8B,EACAz0C,GAIA,OAFA+U,KAAK87D,kCAAkCD,EAAiBn8B,GAEjD1/B,KAAK+7D,8BACVF,EACAn8B,EACAz0C,EAEH,CAED6wE,kCACED,EACAn8B,GAEA,GAAI1/B,KAAKqC,MAAMmd,EAAGpS,OAGhB,MAAMpN,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAO7J,qBACR,uBAAzBuiD,EAAgBnkE,MACzBsI,KAAKge,MAAM0hB,EAAUvc,EAAO5J,+BAE/B,CAEDwiD,8BACEF,EACAn8B,EACAz0C,GAEA,MAAMs8C,EAAWvnC,KAAK89B,YAAY4B,EAAUz0C,GACtC+wE,EAAoBh8D,KAAKg8D,kBAAkBH,GASjD,OARIG,EACFz0B,EAASl3C,OAASwrE,GAEb77D,KAAKi8D,8CACRj8D,KAAKge,MAAM0hB,EAAUvc,EAAO1J,qBAE9B8tB,EAASp3C,WAAa0rE,GAEjB77D,KAAKigC,WACVsH,EACAy0B,EAAoB,uBAAyB,0BAEhD,CAEDA,kBAAkB7rE,GAChB,OAAQA,EAAWuH,MACjB,IAAK,mBACH,OACGvH,EAAWvC,UAAYoS,KAAKg8D,kBAAkB7rE,EAAWunC,QAE9D,IAAK,aACH,OAAO,EACT,QACE,OAAO,EAEZ,CAQDy/B,2BAA8B+E,GAC5B,MAAMC,EAAyBn8D,KAAK5Q,MAAM87D,aAC1ClrD,KAAK5Q,MAAM87D,aAAe,CAExBC,yBAA0B,EAE1BC,cAAe,MAGjB,IACE,OAAO8Q,GADT,SAGEl8D,KAAK5Q,MAAM87D,aAAeiR,CAC3B,CACF,CASDC,2BAA8BF,GAC5B,MAAMC,EAAyBn8D,KAAK5Q,MAAM87D,aAC1ClrD,KAAK5Q,MAAM87D,aAAe,CAExBC,yBAA0B,EAE1BC,cAAe,MAGjB,IACE,OAAO8Q,GADT,SAGEl8D,KAAK5Q,MAAM87D,aAAeiR,CAC3B,CACF,CAED7E,+BAAkC4E,GAChC,MAAMG,EAA6Br8D,KAAK5Q,MAAMi8D,UAC9CrrD,KAAK5Q,MAAMi8D,WAAY,EAEvB,IACE,OAAO6Q,GADT,SAGEl8D,KAAK5Q,MAAMi8D,UAAYgR,CACxB,CACF,CAED/F,WAAc4F,GACZ,MAAMvtE,EAAQqR,KAAKojD,UAAUtqB,eAE7B,GdzjFS,GcwjF0BnqC,EACf,CAClBqR,KAAKojD,UAAU1gC,Md1jFR,Ec0jFc/zB,GACrB,IACE,OAAOutE,GADT,SAGEl8D,KAAKojD,UAAUzgC,MAChB,CACF,CACD,OAAOu5C,GACR,CAED9F,cAAiB8F,GACf,MAAMvtE,EAAQqR,KAAKojD,UAAUtqB,eAE7B,GdvkFS,EcskF2BnqC,EACd,CACpBqR,KAAKojD,UAAU1gC,OAAc,EAAR/zB,GACrB,IACE,OAAOutE,GADT,SAGEl8D,KAAKojD,UAAUzgC,MAChB,CACF,CACD,OAAOu5C,GACR,CAIDzC,yBACEz5D,KAAK5Q,MAAM87D,aAAaE,cAAgB,CACzC,CAEDoO,sDACE,OAAOx5D,KAAK5Q,MAAM87D,aAAaC,0BAA4B,CAC5D,CAED8Q,6CACE,OAC2C,MAAzCj8D,KAAK5Q,MAAM87D,aAAaE,eACxBprD,KAAK5Q,MAAM87D,aAAaE,eAAiB,CAE5C,CAEDmM,wBAAwBV,GACtB,MAAMn3B,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAE5B+U,KAAK5Q,MAAM47D,iBAAmBhrD,KAAK5Q,MAAMnH,MACzC,MAAM4wE,EAAgC74D,KAAK5Q,MAAMk8D,2BACjDtrD,KAAK5Q,MAAMk8D,4BAA6B,EAExC,MAAMgR,EAAMt8D,KAAK+lD,YACf/lD,KAAK+/C,kBACLrgB,EACAz0C,EACA4rE,GAKF,OAFA72D,KAAK5Q,MAAMk8D,2BAA6BuN,EAEjCyD,CACR,CAGDzE,wBACE73D,KAAK4pD,aAAa,gBAClB,MAAMz8D,EAAO6S,KAAKggC,YAClBhgC,KAAKijC,OACLjjC,KAAKmjC,IAAI3jB,EAAGlT,QAEZ,MAAMiwD,EAAev8D,KAAKuzD,kBAAiC,GAC3DvzD,KAAK+zD,qBAEL,MAAM9gE,EAAU+M,KAAKggC,YACrB,IACE7yC,EAAKmD,KAAO0P,KAAKw8D,aAAavpE,EAASusB,EAAG/S,OAAQ,SADpD,SAGE8vD,GACD,CAED,OADAv8D,KAAKmjC,IAAI3jB,EAAG/S,QACLzM,KAAKigC,WAA+B9yC,EAAM,mBAClD,ECrmFH,MAAMsvE,GAAY,CAAE9uE,KAAM,QACxB+uE,GAAc,CAAE/uE,KAAM,UAOlBgvE,GAAgB,mBA4CP,MAAMC,WAAwB/G,GAQ3Cpf,cAAcC,EAAczjD,GAM1B,OALAyjD,EAAKzjD,QAAU+M,KAAKw8D,aAAavpE,GACjCyjD,EAAK8U,SAAWxrD,KAAK5Q,MAAMo8D,SAEvBxrD,KAAKL,QAAQkrD,SAAQnU,EAAKmU,OA/ClC,SAA4BA,GAExB,IAAK,IAAIh/D,EAAI,EAAGA,EAAIg/D,EAAOl/D,OAAQE,IAAK,CACtC,MAAM2f,EAAQq/C,EAAOh/D,GACrB,GAAI2f,EAAM9T,OAAS8nB,EAAGzT,YAAa,CACjC,MAAM,IAAEpiB,EAAF,MAAO1B,EAAP,MAAcd,EAAd,IAAqB2D,GAAQ0gB,EAC7BqxD,EAAa50E,EAAQ,EACrB60E,EAAa,IAAIzrD,EAAS1nB,EAAI1B,MAAMI,KAAMsB,EAAI1B,MAAMC,OAAS,GACnE2iE,EAAOnyD,OACL7M,EACA,EAEA,IAAIwgE,GAAM,CACR30D,KAAM8nB,EAAG/R,KACTtmB,MAAO,IACPc,MAAOA,EACP6C,IAAK+xE,EACL5xE,SAAUtB,EAAI1B,MACdkD,OAAQ2xE,IAGV,IAAIzQ,GAAM,CACR30D,KAAM8nB,EAAG13B,KACTX,MAAOA,EACPc,MAAO40E,EACP/xE,IAAKA,EACLG,SAAU6xE,EACV3xE,OAAQxB,EAAImB,MAGjB,CACF,CAEH,OAAO+/D,CACR,CAa0CkS,CAAmB/8D,KAAK6qD,SAExD7qD,KAAKigC,WAAWyW,EAAM,OAC9B,CAED8lB,aACEvpE,EACAnI,EAAiB00B,EAAGxT,IACpBxV,EAAyBwJ,KAAKL,QAAQnJ,YAKtC,GAHAvD,EAAQuD,WAAaA,EACrBvD,EAAQ+pE,YAAch9D,KAAKi9D,4BAC3Bj9D,KAAK0+B,eAAezrC,GAAS,GAAM,EAAMnI,GAEvCkV,KAAKghB,WACJhhB,KAAKL,QAAQ+qD,wBACd1qD,KAAK3S,MAAMu0B,iBAAiBssC,KAAO,EAEnC,IAAK,MAAOpmE,KAAS6E,MAAM+H,KAAKsL,KAAK3S,MAAMu0B,kBAAmB,CAC5D,MAAMpE,EAAMxd,KAAK3S,MAAMu0B,iBAAiB/4B,IAAIf,GAE5CkY,KAAKge,MAAMR,EAAK2F,EAAO1K,sBAAuB3wB,EAC/C,CAEH,OAAOkY,KAAKigC,WAAsBhtC,EAAS,UAC5C,CAIDurC,gBAAgB/qC,GACd,MAAMs6C,EAAOt6C,EAAKtD,WAEZ0tC,EAAmB79B,KAAK89B,YAAYiQ,EAAK9lD,MAAO8lD,EAAKpkD,IAAI1B,OACzD21C,EAAY59B,KAAK89B,YAAYrqC,EAAKxL,MAAOwL,EAAK9J,IAAI1B,OAElD8G,EAAMiR,KAAK6d,MAAMzxB,MAAM2hD,EAAK9lD,MAAO8lD,EAAKjjD,KACxC6a,EAAOk4B,EAAiB12C,MAAQ4H,EAAI3C,MAAM,GAAI,GAYpD,OAVA4T,KAAKy+B,SAASZ,EAAkB,MAAO9uC,GACvCiR,KAAKy+B,SAASZ,EAAkB,WAAYl4B,GAE5Ci4B,EAAUz2C,MAAQ6Y,KAAKi+B,aACrBJ,EACA,mBACAkQ,EAAKjjD,IACLijD,EAAKpkD,IAAImB,KAGJkV,KAAKi+B,aAAaL,EAAW,YAAanqC,EAAK3I,IAAK2I,EAAK9J,IAAImB,IACrE,CAEDmyE,4BACE,IAAKj9D,KAAKqC,MAAMmd,EAAG9R,sBACjB,OAAO,KAGT,MAAMvgB,EAAO6S,KAAKggC,YAGlB,OAFA7yC,EAAKhG,MAAQ6Y,KAAK5Q,MAAMjI,MACxB6Y,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,uBAC9B,CAEDy6C,MAAMnoB,GACJ,QAAKzf,KAAKgnC,aAAa,QAGhBhnC,KAAKk9D,aAAaz9C,EAC1B,CAWDy9C,aAAaz9C,GACX,MAAMwjB,EAAOjjC,KAAKw5C,iBACZ2jB,EAASn9D,KAAK6d,MAAMmkB,WAAWiB,GAMrC,GACa,KAAXk6B,GACW,KAAXA,EAEA,OAAO,EAET,GAAI19C,EAAS,OAAO,EAEpB,GAAe,MAAX09C,EAAqC,OAAO,EAEhD,GAAIz8C,EAAkBy8C,GAAS,CAC7B,IAAI3/C,EAAMylB,EAAO,EACjB,KAAOtiB,EAAiB3gB,KAAK6d,MAAMmkB,WAAWxkB,OAC1CA,EAEJ,MAAMqsB,EAAQ7pC,KAAK6d,MAAMzxB,MAAM62C,EAAMzlB,GACrC,IAAK6D,EAA0B5pB,KAAKoyC,GAAQ,OAAO,CACpD,CACD,OAAO,CACR,CAWD6D,eAAejuB,EAAkBkuB,GAI/B,OAHI3tC,KAAKqC,MAAMmd,EAAGhS,KAChBxN,KAAKs5D,iBAAgB,GAEhBt5D,KAAK0mD,sBAAsBjnC,EAASkuB,EAC5C,CAED+Y,sBAAsBjnC,EAAkBkuB,GACtC,IAAIsW,EAAYjkD,KAAK5Q,MAAMsI,KAC3B,MAAMvK,EAAO6S,KAAKggC,YAClB,IAAIryC,EAWJ,OATIqS,KAAK4nC,MAAMnoB,KACbwkC,EAAYzkC,EAAG3P,KACfliB,EAAO,OAODs2D,GACN,KAAKzkC,EAAG1Q,OACR,KAAK0Q,EAAGvQ,UAEN,OAAOjP,KAAKo9D,4BAA4BjwE,EAAM82D,EAAUhgD,SAC1D,KAAKub,EAAGtQ,UACN,OAAOlP,KAAKq9D,uBAAuBlwE,GACrC,KAAKqyB,EAAGrQ,IACN,OAAOnP,KAAKs9D,iBAAiBnwE,GAC/B,KAAKqyB,EAAGlQ,KACN,OAAOtP,KAAKu9D,kBAAkBpwE,GAChC,KAAKqyB,EAAGjQ,UACN,GAAI,KAAAvP,KAAK8/C,oBAAuC,MAQhD,OAPIrgC,IACEzf,KAAK5Q,MAAMw+C,OACb5tC,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAO3I,gBACf,OAAZiF,GAAgC,UAAZA,GAC7Bzf,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOhJ,iBAGjCna,KAAKmkD,uBAAuBh3D,GAAM,GAAQsyB,GAEnD,KAAKD,EAAGpP,OAEN,OADIqP,GAASzf,KAAKgjC,aACXhjC,KAAKokD,WAAWj3D,GAAM,GAE/B,KAAKqyB,EAAGhQ,IACN,OAAOxP,KAAKw9D,iBAAiBrwE,GAC/B,KAAKqyB,EAAG/P,QACN,OAAOzP,KAAKy9D,qBAAqBtwE,GACnC,KAAKqyB,EAAG9P,QACN,OAAO1P,KAAK09D,qBAAqBvwE,GACnC,KAAKqyB,EAAG7P,OACN,OAAO3P,KAAK29D,oBAAoBxwE,GAClC,KAAKqyB,EAAG5P,KACN,OAAO5P,KAAK49D,kBAAkBzwE,GAEhC,KAAKqyB,EAAG1P,OACR,KAAK0P,EAAG3P,KAKN,OAJAliB,EAAOA,GAAQqS,KAAK5Q,MAAMjI,MACtBs4B,GAAoB,QAAT9xB,GACbqS,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAO3H,8BAE/Bxb,KAAKqkD,kBAAkBl3D,EAAMQ,GAEtC,KAAK6xB,EAAGzP,OACN,OAAO/P,KAAK69D,oBAAoB1wE,GAClC,KAAKqyB,EAAGxP,MACN,OAAOhQ,KAAK89D,mBAAmB3wE,GACjC,KAAKqyB,EAAGlT,OACN,OAAOtM,KAAKupD,aACd,KAAK/pC,EAAG1S,KACN,OAAO9M,KAAK+9D,oBAAoB5wE,GAClC,KAAKqyB,EAAGjP,QAAS,CACf,MAAMytD,EAAoBh+D,KAAK8/C,oBAC/B,GACwB,KAAtBke,GACsB,KAAtBA,EAEA,KAEH,CAED,KAAKx+C,EAAGlP,QAAS,CAOf,IAAInc,EA0BJ,OAhCK6L,KAAKL,QAAQ8qD,6BAAgC9c,GAChD3tC,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAO9H,wBAGtCrb,KAAKijC,OAGDghB,IAAczkC,EAAGjP,SACnBpc,EAAS6L,KAAKwnC,YAAYr6C,GAGR,sBAAhBgH,EAAOuD,MACLvD,EAAOyyB,YAAoC,UAAtBzyB,EAAOyyB,aAE9B5mB,KAAK2R,mBAAoB,KAG3Bxd,EAAS6L,KAAKkhC,YAAY/zC,IAGP,2BAAhBgH,EAAOuD,MACJvD,EAAO2zC,YAAoC,UAAtB3zC,EAAO2zC,cACf,yBAAhB3zC,EAAOuD,MACJvD,EAAO2zC,YAAoC,UAAtB3zC,EAAO2zC,aAChB,6BAAhB3zC,EAAOuD,OAEPsI,KAAK2R,mBAAoB,IAI7B3R,KAAKmwC,wBAAwBhjD,GAEtBgH,CACR,CAED,QACE,GAAI6L,KAAKi+D,kBAQP,OAPIx+C,GACFzf,KAAKge,MACHhe,KAAK5Q,MAAMnH,MACXk7B,EAAOpP,uCAGX/T,KAAKijC,OACEjjC,KAAKmkD,uBAAuBh3D,GAAM,GAAOsyB,GAUtD,MAAMy+C,EAAYl+D,KAAK5Q,MAAMjI,MACvB4mD,EAAO/tC,KAAK0jC,kBAElB,OACEugB,IAAczkC,EAAG13B,MACH,eAAdimD,EAAKr2C,MACLsI,KAAKmjC,IAAI3jB,EAAGzS,OAEL/M,KAAKm+D,sBAAsBhxE,EAAM+wE,EAAWnwB,EAAMtuB,GAElDzf,KAAK8tC,yBAAyB3gD,EAAM4gD,EAE9C,CAEDoC,wBAAwBhjD,GACjB6S,KAAKL,QAAQ8qD,6BAAgCzqD,KAAKghB,UACrDhhB,KAAKge,MAAM7wB,EAAKlF,MAAO8xE,EAAuB78C,oBAEjD,CAEDusC,eAAet8D,GACb,MAAM83D,EACJjlD,KAAK5Q,MAAMm8D,eAAevrD,KAAK5Q,MAAMm8D,eAAe5/D,OAAS,GAC3Ds5D,EAAWt5D,SACbwB,EAAK83D,WAAaA,EAClBjlD,KAAKg1C,2BAA2B7nD,EAAM83D,EAAW,IACjDjlD,KAAK5Q,MAAMm8D,eAAevrD,KAAK5Q,MAAMm8D,eAAe5/D,OAAS,GAAK,GAErE,CAED28D,0BACE,OAAOtoD,KAAKqC,MAAMmd,EAAGpP,OACtB,CAEDkpD,gBAAgB8E,GACd,MAAMC,EACJr+D,KAAK5Q,MAAMm8D,eAAevrD,KAAK5Q,MAAMm8D,eAAe5/D,OAAS,GAC/D,KAAOqU,KAAKqC,MAAMmd,EAAGhS,KAAK,CACxB,MAAM8wD,EAAYt+D,KAAKq1D,iBACvBgJ,EAAyB5tE,KAAK6tE,EAC/B,CAED,GAAIt+D,KAAKqC,MAAMmd,EAAGlP,SACX8tD,GACHp+D,KAAKgjC,aAILhjC,KAAK6R,UAAU,gBACd7R,KAAK8R,gBAAgB,aAAc,2BAEpC9R,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOnO,2BAEjC,IAAKhV,KAAKsoD,0BACf,MAAMtoD,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAO5H,2BAE7C,CAED85C,iBACEr1D,KAAKgzD,gBAAgB,CAAC,oBAAqB,eAE3C,MAAM7lE,EAAO6S,KAAKggC,YAGlB,GAFAhgC,KAAKijC,OAEDjjC,KAAK6R,UAAU,cAAe,CAGhC7R,KAAK5Q,MAAMm8D,eAAe96D,KAAK,IAE/B,MAAMivC,EAAW1/B,KAAK5Q,MAAMnH,MACtBgD,EAAW+U,KAAK5Q,MAAMnE,SAC5B,IAAI8iD,EAEJ,GAAI/tC,KAAKmjC,IAAI3jB,EAAG7S,QACdohC,EAAO/tC,KAAK0jC,kBACZ1jC,KAAK2jC,OAAOnkB,EAAG5S,aAIf,IAFAmhC,EAAO/tC,KAAK+lC,iBAAgB,GAErB/lC,KAAKmjC,IAAI3jB,EAAGvS,MAAM,CACvB,MAAM9f,EAAO6S,KAAK89B,YAAY4B,EAAUz0C,GACxCkC,EAAKuqC,OAASqW,EACd5gD,EAAK0qC,SAAW73B,KAAK+lC,iBAAgB,GACrC54C,EAAKS,UAAW,EAChBmgD,EAAO/tC,KAAKigC,WAAW9yC,EAAM,mBAC9B,CAGHA,EAAKgD,WAAa6P,KAAKmoD,6BAA6Bpa,GACpD/tC,KAAK5Q,MAAMm8D,eAAeroD,KAzB5B,MA2BE/V,EAAKgD,WAAa6P,KAAKi4D,sBAEzB,OAAOj4D,KAAKigC,WAAW9yC,EAAM,YAC9B,CAEDg7D,6BAA6Bpa,GAC3B,GAAI/tC,KAAKmjC,IAAI3jB,EAAG7S,QAAS,CACvB,MAAMxf,EAAO6S,KAAKyhC,gBAAgBsM,GAIlC,OAHA5gD,EAAKkD,OAAS09C,EACd5gD,EAAK0N,UAAYmF,KAAK61C,6BAA6Br2B,EAAG5S,QAAQ,GAC9D5M,KAAK2xC,iBAAiBxkD,EAAK0N,WACpBmF,KAAKigC,WAAW9yC,EAAM,iBAC9B,CAED,OAAO4gD,CACR,CAEDqvB,4BACEjwE,EACA8W,GAEA,MAAMs6D,EAAsB,UAAZt6D,EAYhB,OAXAjE,KAAKijC,OAEDjjC,KAAKo9C,mBACPjwD,EAAK4d,MAAQ,MAEb5d,EAAK4d,MAAQ/K,KAAK+lC,kBAClB/lC,KAAKwmC,aAGPxmC,KAAKspD,oBAAoBn8D,EAAM8W,GAExBjE,KAAKigC,WACV9yC,EACAoxE,EAAU,iBAAmB,oBAEhC,CAEDjV,oBACEn8D,EACA8W,GAEA,MAAMs6D,EAAsB,UAAZt6D,EAChB,IAAIpY,EACJ,IAAKA,EAAI,EAAGA,EAAImU,KAAK5Q,MAAMoU,OAAO7X,SAAUE,EAAG,CAC7C,MAAMiY,EAAM9D,KAAK5Q,MAAMoU,OAAO3X,GAC9B,GAAkB,MAAdsB,EAAK4d,OAAiBjH,EAAIhc,OAASqF,EAAK4d,MAAMjjB,KAAM,CACtD,GAAgB,MAAZgc,EAAInW,OAAiB4wE,GAAwB,SAAbz6D,EAAInW,MAAkB,MAC1D,GAAIR,EAAK4d,OAASwzD,EAAS,KAC5B,CACF,CACG1yE,IAAMmU,KAAK5Q,MAAMoU,OAAO7X,QAC1BqU,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAOjN,qBAAsBjS,EAEvD,CAEDo5D,uBAAuBlwE,GAGrB,OAFA6S,KAAKijC,OACLjjC,KAAKwmC,YACExmC,KAAKigC,WAAW9yC,EAAM,oBAC9B,CAEDqxE,wBACEx+D,KAAK2jC,OAAOnkB,EAAG7S,QACf,MAAMhH,EAAM3F,KAAK0jC,kBAEjB,OADA1jC,KAAK2jC,OAAOnkB,EAAG5S,QACRjH,CACR,CAED23D,iBAAiBnwE,GAkBf,OAjBA6S,KAAKijC,OACLjjC,KAAK5Q,MAAMoU,OAAO/S,KAAKgsE,IAEvBtvE,EAAKmD,KAIH0P,KAAKo8D,4BAA2B,IAE9Bp8D,KAAK0tC,eAAe,QAGxB1tC,KAAK5Q,MAAMoU,OAAON,MAElBlD,KAAK2jC,OAAOnkB,EAAGzP,QACf5iB,EAAKsK,KAAOuI,KAAKw+D,wBACjBx+D,KAAKmjC,IAAI3jB,EAAG1S,MACL9M,KAAKigC,WAAW9yC,EAAM,mBAC9B,CAUDowE,kBAAkBpwE,GAChB6S,KAAKijC,OACLjjC,KAAK5Q,MAAMoU,OAAO/S,KAAKgsE,IAEvB,IAAIgC,GAAW,EAOf,GANIz+D,KAAK23D,kBAAoB33D,KAAK6mC,cAAc,WAC9C43B,EAAUz+D,KAAK5Q,MAAMquB,cAEvBzd,KAAK3S,MAAMq1B,MrB1iBmB,GqB2iB9B1iB,KAAK2jC,OAAOnkB,EAAG7S,QAEX3M,KAAKqC,MAAMmd,EAAG1S,MAIhB,OAHI2xD,GAAW,GACbz+D,KAAKgjC,WAAWy7B,GAEXz+D,KAAK0+D,SAASvxE,EAAM,MAG7B,MAAMwxE,EAAgB3+D,KAAKgnC,aAAa,OAClCY,EAAQ+2B,GAAiB3+D,KAAKk9D,eACpC,GAAIl9D,KAAKqC,MAAMmd,EAAG3P,OAAS7P,KAAKqC,MAAMmd,EAAG1P,SAAW83B,EAAO,CACzD,MAAMuQ,EAAOn4C,KAAKggC,YACZryC,EAAOi6C,EAAQ,MAAQ5nC,KAAK5Q,MAAMjI,MAKxC,OAJA6Y,KAAKijC,OACLjjC,KAAK4+D,SAASzmB,GAAM,EAAMxqD,GAC1BqS,KAAKigC,WAAWkY,EAAM,wBAGnBn4C,KAAKqC,MAAMmd,EAAG7O,MAAQ3Q,KAAKgnC,aAAa,QACZ,IAA7BmR,EAAK0mB,aAAalzE,OAEXqU,KAAK8+D,WAAW3xE,EAAMgrD,EAAMsmB,IAEjCA,GAAW,GACbz+D,KAAKgjC,WAAWy7B,GAEXz+D,KAAK0+D,SAASvxE,EAAMgrD,GAC5B,CAID,MAAM4mB,EACJ/+D,KAAKqC,MAAMmd,EAAG13B,QAAUkY,KAAK5Q,MAAMiyD,YAE/BhiB,EAAsB,IAAI40B,GAC1B9b,EAAOn4C,KAAK0jC,iBAAgB,EAAMrE,GAClC2/B,EAAUh/D,KAAKgnC,aAAa,MAmBlC,GAlBIg4B,IAEEL,EACF3+D,KAAKge,MAAMm6B,EAAKlwD,MAAOk7B,EAAOnN,WAGjB,IAAbyoD,GACAM,GACc,eAAd5mB,EAAKzgD,MACS,UAAdygD,EAAKrwD,MAMLkY,KAAKge,MAAMm6B,EAAKlwD,MAAOk7B,EAAOpN,aAG9BipD,GAAWh/D,KAAKqC,MAAMmd,EAAG7O,KAAM,CACjC3Q,KAAK0gC,aAAayX,GAAkB,GACpC,MAAM8mB,EAAcD,EAAU,mBAAqB,mBAEnD,OADAh/D,KAAKkyC,UAAUiG,EAAM8mB,GACdj/D,KAAK8+D,WAAW3xE,EAAMgrD,EAAMsmB,EAJrC,CAWA,OALEz+D,KAAKmzD,sBAAsB9zB,GAAqB,GAE9Co/B,GAAW,GACbz+D,KAAKgjC,WAAWy7B,GAEXz+D,KAAK0+D,SAASvxE,EAAMgrD,EAC5B,CAEDgM,uBACEh3D,EACAisC,EACA8lC,GAGA,OADAl/D,KAAKijC,OACEjjC,KAAKk5D,cACV/rE,EA/kBa,GAglBK+xE,EAAsB,EA/kBnB,GAglBrB9lC,EAEH,CAEDokC,iBAAiBrwE,GAKf,OAJA6S,KAAKijC,OACL91C,EAAKsK,KAAOuI,KAAKw+D,wBACjBrxE,EAAKuhD,WAAa1uC,KAAK0tC,eAAe,MACtCvgD,EAAK6hD,UAAYhvC,KAAKmjC,IAAI3jB,EAAGpQ,OAASpP,KAAK0tC,eAAe,MAAQ,KAC3D1tC,KAAKigC,WAAW9yC,EAAM,cAC9B,CAEDswE,qBAAqBtwE,GAkBnB,OAjBK6S,KAAKojD,UAAUnqB,WAAcj5B,KAAKL,QAAQrJ,4BAC7C0J,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAO/M,eAGtCpW,KAAKijC,OAMDjjC,KAAKo9C,mBACPjwD,EAAK02C,SAAW,MAEhB12C,EAAK02C,SAAW7jC,KAAK0jC,kBACrB1jC,KAAKwmC,aAGAxmC,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAEDuwE,qBAAqBvwE,GACnB6S,KAAKijC,OACL91C,EAAKgyE,aAAen/D,KAAKw+D,wBACzB,MAAMY,EAASjyE,EAAKiyE,MAAQ,GAS5B,IAAIz2D,EARJ3I,KAAK2jC,OAAOnkB,EAAGlT,QACftM,KAAK5Q,MAAMoU,OAAO/S,KAAKisE,IACvB18D,KAAK3S,MAAMq1B,MrBjqBmB,GqBwqB9B,IAAK,IAAI28C,GAAar/D,KAAKqC,MAAMmd,EAAG/S,SAClC,GAAIzM,KAAKqC,MAAMmd,EAAGzQ,QAAU/O,KAAKqC,MAAMmd,EAAG3rB,UAAW,CACnD,MAAMyrE,EAASt/D,KAAKqC,MAAMmd,EAAGzQ,OACzBpG,GAAK3I,KAAKigC,WAAWt3B,EAAK,cAC9By2D,EAAM3uE,KAAMkY,EAAM3I,KAAKggC,aACvBr3B,EAAI+lC,WAAa,GACjB1uC,KAAKijC,OACDq8B,EACF32D,EAAIlR,KAAOuI,KAAK0jC,mBAEZ27B,GACFr/D,KAAKge,MACHhe,KAAK5Q,MAAMquB,aACX0F,EAAOzK,0BAGX2mD,GAAa,EACb12D,EAAIlR,KAAO,MAEbuI,KAAK2jC,OAAOnkB,EAAGzS,MAlBjB,MAoBMpE,EACFA,EAAI+lC,WAAWj+C,KAAKuP,KAAK0tC,eAAe,OAExC1tC,KAAKgjC,aAQX,OAJAhjC,KAAK3S,MAAMs1B,OACPha,GAAK3I,KAAKigC,WAAWt3B,EAAK,cAC9B3I,KAAKijC,OACLjjC,KAAK5Q,MAAMoU,OAAON,MACXlD,KAAKigC,WAAW9yC,EAAM,kBAC9B,CAEDwwE,oBAAoBxwE,GAOlB,OANA6S,KAAKijC,OACDjjC,KAAKigB,yBACPjgB,KAAKge,MAAMhe,KAAK5Q,MAAMuuB,WAAYwF,EAAOxK,mBAE3CxrB,EAAK02C,SAAW7jC,KAAK0jC,kBACrB1jC,KAAKwmC,YACExmC,KAAKigC,WAAW9yC,EAAM,iBAC9B,CAEDu7D,wBACE,MAAM7vD,EAAQmH,KAAKm0C,mBAEborB,EAAwB,eAAf1mE,EAAMnB,KAIrB,OAHAsI,KAAK3S,MAAMq1B,MAAM68C,ErBrtBa,EqBqtBiB,GAC/Cv/D,KAAKkyC,UAAUr5C,EAAO,erB5qBQyuC,GqB8qBvBzuC,CACR,CAED+kE,kBAAkBzwE,GAMhB,GALA6S,KAAKijC,OAEL91C,EAAKggE,MAAQntD,KAAKupD,aAClBp8D,EAAKqyE,QAAU,KAEXx/D,KAAKqC,MAAMmd,EAAGxQ,QAAS,CACzB,MAAMywD,EAASz/D,KAAKggC,YACpBhgC,KAAKijC,OACDjjC,KAAKqC,MAAMmd,EAAG7S,SAChB3M,KAAK2jC,OAAOnkB,EAAG7S,QACf8yD,EAAO5mE,MAAQmH,KAAK0oD,wBACpB1oD,KAAK2jC,OAAOnkB,EAAG5S,UAEf6yD,EAAO5mE,MAAQ,KACfmH,KAAK3S,MAAMq1B,MrB9uBe,IqBivB5B+8C,EAAOnvE,KAGL0P,KAAKo8D,4BAA2B,IAE9Bp8D,KAAKupD,YAAW,GAAO,KAE3BvpD,KAAK3S,MAAMs1B,OAEXx1B,EAAKqyE,QAAUx/D,KAAKigC,WAAWw/B,EAAQ,cACxC,CAQD,OANAtyE,EAAKuyE,UAAY1/D,KAAKmjC,IAAI3jB,EAAGnQ,UAAYrP,KAAKupD,aAAe,KAExDp8D,EAAKqyE,SAAYryE,EAAKuyE,WACzB1/D,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAOvK,kBAGzB5Y,KAAKigC,WAAW9yC,EAAM,eAC9B,CAEDk3D,kBACEl3D,EACAQ,GAKA,OAHAqS,KAAKijC,OACLjjC,KAAK4+D,SAASzxE,GAAM,EAAOQ,GAC3BqS,KAAKwmC,YACExmC,KAAKigC,WAAW9yC,EAAM,sBAC9B,CAED0wE,oBAAoB1wE,GAgBlB,OAfA6S,KAAKijC,OACL91C,EAAKsK,KAAOuI,KAAKw+D,wBACjBx+D,KAAK5Q,MAAMoU,OAAO/S,KAAKgsE,IAEvBtvE,EAAKmD,KAIH0P,KAAKo8D,4BAA2B,IAE9Bp8D,KAAK0tC,eAAe,WAGxB1tC,KAAK5Q,MAAMoU,OAAON,MAEXlD,KAAKigC,WAAW9yC,EAAM,iBAC9B,CAED2wE,mBAAmB3wE,GAiBjB,OAhBI6S,KAAK5Q,MAAMw+C,QACb5tC,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOxI,YAEtC3a,KAAKijC,OACL91C,EAAKuqC,OAAS13B,KAAKw+D,wBAEnBrxE,EAAKmD,KAKH0P,KAAKo8D,4BAA2B,IAE9Bp8D,KAAK0tC,eAAe,UAGjB1tC,KAAKigC,WAAW9yC,EAAM,gBAC9B,CAED4wE,oBAAoB5wE,GAElB,OADA6S,KAAKijC,OACEjjC,KAAKigC,WAAW9yC,EAAM,iBAC9B,CAEDgxE,sBACEhxE,EACA+wE,EACAnwB,EACAtuB,GAEA,IAAK,MAAM1U,KAAS/K,KAAK5Q,MAAMoU,OACzBuH,EAAMjjB,OAASo2E,GACjBl+D,KAAKge,MAAM+vB,EAAK9lD,MAAOk7B,EAAOvL,mBAAoBsmD,GAItD,MAAMvwE,EAAOqS,KAAK5Q,MAAMsI,KAAKmT,OACzB,OACA7K,KAAKqC,MAAMmd,EAAG9P,SACd,SACA,KACJ,IAAK,IAAI7jB,EAAImU,KAAK5Q,MAAMoU,OAAO7X,OAAS,EAAGE,GAAK,EAAGA,IAAK,CACtD,MAAMkf,EAAQ/K,KAAK5Q,MAAMoU,OAAO3X,GAChC,GAAIkf,EAAM40D,iBAAmBxyE,EAAKlF,MAIhC,MAHA8iB,EAAM40D,eAAiB3/D,KAAK5Q,MAAMnH,MAClC8iB,EAAMpd,KAAOA,CAIhB,CAiBD,OAfAqS,KAAK5Q,MAAMoU,OAAO/S,KAAK,CACrB3I,KAAMo2E,EACNvwE,KAAMA,EACNgyE,eAAgB3/D,KAAK5Q,MAAMnH,QAE7BkF,EAAKmD,KAAO0P,KAAK0tC,eACfjuB,GACkC,IAA9BA,EAAQ1pB,QAAQ,SACd0pB,EAAU,QACVA,EACF,SAGNzf,KAAK5Q,MAAMoU,OAAON,MAClB/V,EAAK4d,MAAQgjC,EACN/tC,KAAKigC,WAAW9yC,EAAM,mBAC9B,CAED2gD,yBACE3gD,EACA4gD,GAIA,OAFA5gD,EAAKgD,WAAa49C,EAClB/tC,KAAKwmC,YACExmC,KAAKigC,WAAW9yC,EAAM,sBAC9B,CAMDo8D,WACEqW,GAA4B,EAC5BC,GAAkC,EAClCC,GAEA,MAAM3yE,EAAO6S,KAAKggC,YAkBlB,OAjBI4/B,GACF5/D,KAAK5Q,MAAMq8D,aAAauB,QAE1BhtD,KAAK2jC,OAAOnkB,EAAGlT,QACXuzD,GACF7/D,KAAK3S,MAAMq1B,MrBj4BiB,GqBm4B9B1iB,KAAK0+B,eACHvxC,EACAyyE,GACA,EACApgD,EAAG/S,OACHqzD,GAEED,GACF7/D,KAAK3S,MAAMs1B,OAEN3iB,KAAKigC,WAAW9yC,EAAM,iBAC9B,CAEDkxC,iBAAiB5qC,GACf,MACgB,wBAAdA,EAAKiE,MACoB,kBAAzBjE,EAAKtD,WAAWuH,OACfjE,EAAKtD,WAAW4tC,MAAMQ,aAE1B,CAEDG,eACEvxC,EACAyyE,EACAjyB,EACA7iD,EACAg1E,GAEA,MAAMxvE,EAAQnD,EAAKmD,KAAO,GACpBsuC,EAAczxC,EAAKyxC,WAAa,GACtC5+B,KAAKgjD,4BACH1yD,EACAsvE,EAAkBhhC,OAAa5vC,EAC/B2+C,EACA7iD,EACAg1E,EAEH,CAKD9c,4BACE1yD,EACAsuC,EACA+O,EACA7iD,EACAg1E,GAEA,MAAMpW,EAAY1pD,KAAK5Q,MAAMw+C,OAC7B,IAAI4tB,GAAyB,EACzBuE,GAAqB,EAEzB,MAAQ//D,KAAKqC,MAAMvX,IAAM,CACvB,MAAM2I,EAAOuM,KAAK0tC,eAAe,KAAMC,GAEvC,GAAI/O,IAAemhC,EAAoB,CACrC,GAAI//D,KAAKq+B,iBAAiB5qC,GAAO,CAC/B,MAAMmqC,EAAY59B,KAAKw+B,gBAAgB/qC,GACvCmrC,EAAWnuC,KAAKmtC,GAGb49B,GACyB,eAA1B59B,EAAUz2C,MAAMA,QAEhBq0E,GAAyB,EACzBx7D,KAAK+sD,WAAU,IAGjB,QACD,CACDgT,GAAqB,EAErB//D,KAAK5Q,MAAMq8D,aAAauB,OACzB,CACD18D,EAAKG,KAAKgD,EACX,CAEGqsE,GACFA,EAAgB12E,KAAK4W,KAAMw7D,GAGxB9R,GACH1pD,KAAK+sD,WAAU,GAGjB/sD,KAAKijC,MACN,CAMDy7B,SACEvxE,EACAgrD,GAqBA,OAnBAhrD,EAAKgrD,KAAOA,EACZn4C,KAAKwmC,WAAyB,GAC9Br5C,EAAKsK,KAAOuI,KAAKqC,MAAMmd,EAAG1S,MAAQ,KAAO9M,KAAK0jC,kBAC9C1jC,KAAKwmC,WAAyB,GAC9Br5C,EAAK4jE,OAAS/wD,KAAKqC,MAAMmd,EAAG5S,QAAU,KAAO5M,KAAK0jC,kBAClD1jC,KAAK2jC,OAAOnkB,EAAG5S,QAEfzf,EAAKmD,KAIH0P,KAAKo8D,4BAA2B,IAE9Bp8D,KAAK0tC,eAAe,SAGxB1tC,KAAK3S,MAAMs1B,OACX3iB,KAAK5Q,MAAMoU,OAAON,MAEXlD,KAAKigC,WAAW9yC,EAAM,eAC9B,CAKD2xE,WACE3xE,EACAgrD,EACAsmB,GAEA,MAAMuB,EAAUhgE,KAAKqC,MAAMmd,EAAG7O,KA4C9B,OA3CA3Q,KAAKijC,OAED+8B,EACEvB,GAAW,GAAGz+D,KAAKgjC,WAAWy7B,GAElCtxE,EAAK8yE,MAAQxB,GAAW,EAIV,wBAAdtmB,EAAKzgD,MACwB,MAA7BygD,EAAK0mB,aAAa,GAAG1mB,MACnB6nB,IACAhgE,KAAK5Q,MAAMw+C,QACG,QAAduK,EAAKxqD,MAC4B,eAAjCwqD,EAAK0mB,aAAa,GAAGvxE,GAAGoK,KAOH,sBAAdygD,EAAKzgD,MACdsI,KAAKge,MAAMm6B,EAAKlwD,MAAOk7B,EAAOjM,WAAY,YAN1ClX,KAAKge,MACHm6B,EAAKlwD,MACLk7B,EAAOrN,uBACPkqD,EAAU,SAAW,UAMzB7yE,EAAKoB,KAAO4pD,EACZhrD,EAAKi8C,MAAQ42B,EACThgE,KAAK0jC,kBACL1jC,KAAK8jC,0BACT9jC,KAAK2jC,OAAOnkB,EAAG5S,QAEfzf,EAAKmD,KAIH0P,KAAKo8D,4BAA2B,IAE9Bp8D,KAAK0tC,eAAe,SAGxB1tC,KAAK3S,MAAMs1B,OACX3iB,KAAK5Q,MAAMoU,OAAON,MAEXlD,KAAKigC,WAAW9yC,EAAM6yE,EAAU,iBAAmB,iBAC3D,CAIDpB,SACEzxE,EACA+yE,EACAvyE,GAEA,MAAMkxE,EAAgB1xE,EAAK0xE,aAAe,GACpCsB,EAAengE,KAAK6R,UAAU,cAEpC,IADA1kB,EAAKQ,KAAOA,IACH,CACP,MAAMyiD,EAAOpwC,KAAKggC,YAiClB,GAhCAhgC,KAAKs0C,WAAWlE,EAAMziD,GAClBqS,KAAKmjC,IAAI3jB,EAAG7R,IACdyiC,EAAK+H,KAAO+nB,EACRlgE,KAAKw2D,6BACLx2D,KAAK8jC,2BAGE,UAATn2C,GACEqS,KAAKqC,MAAMmd,EAAG7O,MAAQ3Q,KAAKgnC,aAAa,MAYzB,eAAjBoJ,EAAK9iD,GAAGoK,MACNwoE,IAAUlgE,KAAKqC,MAAMmd,EAAG7O,MAAQ3Q,KAAKgnC,aAAa,QAEpDhnC,KAAKge,MACHhe,KAAK5Q,MAAMuuB,WACXwF,EAAOtO,8BACP,4BAdGsrD,GACHngE,KAAKge,MACHhe,KAAK5Q,MAAMuuB,WACXwF,EAAOtO,8BACP,sBAaNu7B,EAAK+H,KAAO,MAEd0mB,EAAapuE,KAAKuP,KAAKigC,WAAWmQ,EAAM,wBACnCpwC,KAAKmjC,IAAI3jB,EAAG3S,OAAQ,KAC1B,CACD,OAAO1f,CACR,CAEDmnD,WAAWlE,EAA4BziD,GACrCyiD,EAAK9iD,GAAK0S,KAAKm0C,mBACfn0C,KAAKkyC,UACH9B,EAAK9iD,GACL,uBACS,QAATK,ErBxjC4B25C,EADAA,OqB0jC5Bt4C,EACS,QAATrB,EAEH,CAKDurE,cACE/rE,EACA+F,EA1kCkB,EA2kClBkmC,GAAoB,GAEpB,MAAMrhC,EA5kCS,EA4kCK7E,EACdktE,EA5kCiB,EA4kCIltE,EACrBmtE,KAActoE,GA5kCH,EA4kCoB7E,GAErC8M,KAAKk+B,aAAa/wC,EAAMisC,GAEpBp5B,KAAKqC,MAAMmd,EAAG7Q,OAASyxD,GACzBpgE,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOlN,mCAEtC9oB,EAAKyC,UAAYoQ,KAAKmjC,IAAI3jB,EAAG7Q,MAEzB5W,IACF5K,EAAKG,GAAK0S,KAAKwpD,gBAAgB6W,IAGjC,MAAMvb,EAA4B9kD,KAAK5Q,MAAM6iD,uBAiC7C,OAhCAjyC,KAAK5Q,MAAM6iD,wBAAyB,EACpCjyC,KAAK3S,MAAMq1B,MrBpoCmB,GqBqoC9B1iB,KAAKojD,UAAU1gC,MAAMyW,GAAcC,EAASjsC,EAAKyC,YAE5CmI,IACH5K,EAAKG,GAAK0S,KAAKwpD,mBAGjBxpD,KAAKo0C,oBAAoBjnD,GAA2B,GAKpD6S,KAAKo8D,4BAA2B,KAE9Bp8D,KAAKytC,2BACHtgD,EACA4K,EAAc,sBAAwB,qBAFxC,IAMFiI,KAAKojD,UAAUzgC,OACf3iB,KAAK3S,MAAMs1B,OAEP5qB,IAAgBqoE,GAIlBpgE,KAAKwlD,4BAA4Br4D,GAGnC6S,KAAK5Q,MAAM6iD,uBAAyB6S,EAC7B33D,CACR,CAEDq8D,gBAAgB6W,GACd,OAAOA,GAAargE,KAAKqC,MAAMmd,EAAG13B,MAAQkY,KAAK+lC,kBAAoB,IACpE,CAEDqO,oBAAoBjnD,EAAkBknD,GACpCr0C,KAAK2jC,OAAOnkB,EAAG7S,QACf3M,KAAK8zD,gBAAgBpxC,ML59BhB,IAAIivC,GAlKa,IK+nCtBxkE,EAAKiD,OAAS4P,KAAKk9C,iBACjB19B,EAAG5S,OADS,IAGK,EACjBynC,GAGFr0C,KAAK8zD,gBAAgBnxC,MACtB,CAED6iC,4BAA4Br4D,GACrBA,EAAKG,IAMV0S,KAAK3S,MAAMu1B,YACTz1B,EAAKG,GAAGxF,KACRkY,KAAK5Q,MAAMw+C,QAAUzgD,EAAKyC,WAAazC,EAAKgoD,MACxCn1C,KAAK3S,MAAMi1B,oBrBppCaglB,EADAA,EAEAA,GqBupC5Bn6C,EAAKG,GAAGrF,MAEX,CAKDm8D,WACEj3D,EACA4K,EACA84C,GAEA7wC,KAAKijC,OACLjjC,KAAKypD,eAAet8D,GAGpB,MAAMu8D,EAAY1pD,KAAK5Q,MAAMw+C,OAQ7B,OAPA5tC,KAAK5Q,MAAMw+C,QAAS,EAEpB5tC,KAAK4wC,aAAazjD,EAAM4K,EAAa84C,GACrC7wC,KAAKwyC,gBAAgBrlD,GAErBA,EAAKmD,KAAO0P,KAAK2pD,iBAAiBx8D,EAAK8vC,WAAYysB,GAE5C1pD,KAAKigC,WACV9yC,EACA4K,EAAc,mBAAqB,kBAEtC,CAEDq6C,kBACE,OAAOpyC,KAAKqC,MAAMmd,EAAG7R,KAAO3N,KAAKqC,MAAMmd,EAAG1S,OAAS9M,KAAKqC,MAAMmd,EAAG/S,OAClE,CAED0lC,gBACE,OAAOnyC,KAAKqC,MAAMmd,EAAG7S,OACtB,CAED0lC,uBAAuBhjD,GACrB,QACGA,EAAOzB,UACPyB,EAAOq7C,QACa,gBAApBr7C,EAAOpG,IAAInB,MACW,gBAArBuH,EAAOpG,IAAI9B,MAEhB,CAGDwiE,eAAexC,EAAwBuC,GACrC1pD,KAAKsxD,WAAW5uC,QAEhB,MAAMtzB,EAAiC,CACrCkxE,gBAAgB,EAChBnZ,iBAEF,IAAIlC,EAA4B,GAChC,MAAMlmB,EAAyB/+B,KAAKggC,YA8CpC,GA7CAjB,EAAUzuC,KAAO,GAEjB0P,KAAK2jC,OAAOnkB,EAAGlT,QAIftM,KAAKo8D,4BAA2B,KAC9B,MAAQp8D,KAAKqC,MAAMmd,EAAG/S,SAAS,CAC7B,GAAIzM,KAAKmjC,IAAI3jB,EAAG1S,MAAO,CACrB,GAAIm4C,EAAWt5D,OAAS,EACtB,MAAMqU,KAAKge,MAAMhe,KAAK5Q,MAAMuuB,WAAYwF,EAAOlO,oBAEjD,QACD,CAED,GAAIjV,KAAKqC,MAAMmd,EAAGhS,IAAK,CACrBy3C,EAAWx0D,KAAKuP,KAAKq1D,kBACrB,QACD,CAED,MAAMtkB,EAAS/wC,KAAKggC,YAGhBilB,EAAWt5D,SACbolD,EAAOkU,WAAaA,EACpBjlD,KAAKg1C,2BAA2BjE,EAAQkU,EAAW,IACnDA,EAAa,IAGfjlD,KAAK8wC,iBAAiB/R,EAAWgS,EAAQ3hD,GAGvB,gBAAhB2hD,EAAOpjD,MACPojD,EAAOkU,YACPlU,EAAOkU,WAAWt5D,OAAS,GAE3BqU,KAAKge,MAAM+yB,EAAO9oD,MAAOk7B,EAAOpO,qBAEnC,KAGH/U,KAAK5Q,MAAMw+C,OAAS8b,EAEpB1pD,KAAKijC,OAEDgiB,EAAWt5D,OACb,MAAMqU,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOrI,mBAK5C,OAFA9a,KAAKsxD,WAAW3uC,OAET3iB,KAAKigC,WAAWlB,EAAW,YACnC,CAIDiS,6BACEjS,EACAgS,GAEA,MAAM9nD,EAAM+W,KAAK+lC,iBAAgB,GAEjC,GAAI/lC,KAAKmyC,gBAAiB,CACxB,MAAM9iD,EAAyB0hD,EAe/B,OAZA1hD,EAAO1B,KAAO,SACd0B,EAAOzB,UAAW,EAClByB,EAAOpG,IAAMA,EACboG,EAAOq7C,QAAS,EAChB1qC,KAAK8+B,gBACHC,EACA1vC,GACA,GACA,GACoB,GACpB,IAEK,CAhBT,CAiBO,GAAI2Q,KAAKoyC,kBAAmB,CACjC,MAAMzd,EAAyBoc,EAO/B,OAJApc,EAAK/mC,UAAW,EAChB+mC,EAAK1rC,IAAMA,EACX0rC,EAAK+V,QAAS,EACd3L,EAAUzuC,KAAKG,KAAKuP,KAAKkgC,mBAAmBvL,KACrC,CACR,CACD,OAAO,CACR,CAEDmc,iBACE/R,EACAgS,EACA3hD,GAEA,MAAMq7C,EAAWzqC,KAAKgnC,aAAa,UAEnC,GAAIyD,EAAU,CACZ,GAAIzqC,KAAKgxC,6BAA6BjS,EAAWgS,GAE/C,OAEF,GAAI/wC,KAAKmjC,IAAI3jB,EAAGlT,QAEd,YADAtM,KAAK+mD,sBAAsBhoB,EAAagS,EAG3C,CAED/wC,KAAKgnD,6BAA6BjoB,EAAWgS,EAAQ3hD,EAAOq7C,EAC7D,CAEDuc,6BACEjoB,EACAgS,EACA3hD,EACAq7C,GAEA,MAAM81B,EAA4CxvB,EAC5CyvB,EAAoDzvB,EACpD0vB,EAA0C1vB,EAC1C2vB,EAAkD3vB,EAElD1hD,EAAqDkxE,EACrDI,EAAwDJ,EAI9D,GAFAxvB,EAAOrG,OAASD,EAEZzqC,KAAKmjC,IAAI3jB,EAAG7Q,MAAO,CAErBtf,EAAO1B,KAAO,SACd,MAAM8xC,EAAgBz/B,KAAKqC,MAAMmd,EAAGzT,aAGpC,OAFA/L,KAAK4gE,sBAAsBvxE,GAEvBowC,OAEFz/B,KAAKuyC,uBAAuBxT,EAAWyhC,GAAe,GAAM,IAI1DxgE,KAAKqyC,uBAAuBkuB,IAC9BvgE,KAAKge,MAAMuiD,EAAat3E,IAAIhB,MAAOk7B,EAAOvO,6BAG5C5U,KAAK8+B,gBACHC,EACAwhC,GACA,GACA,GACoB,GACpB,GAIH,CAED,MAAMlf,EAAcrhD,KAAK5Q,MAAMiyD,YACzBwf,EAAY7gE,KAAKqC,MAAMmd,EAAGzT,aAC1B9iB,EAAM+W,KAAK4gE,sBAAsB7vB,GAEjC+vB,EAAwB,eAAb73E,EAAIyO,KACfqpE,EAA0B/gE,KAAK5Q,MAAMnH,MAI3C,GAFA+X,KAAKonD,6BAA6BuZ,GAE9B3gE,KAAKmyC,gBAAiB,CAGxB,GAFA9iD,EAAO1B,KAAO,SAEVkzE,EAEF,YADA7gE,KAAKuyC,uBAAuBxT,EAAWyhC,GAAe,GAAO,GAK/D,MAAMxhC,EAAgBh/B,KAAKqyC,uBAAuBkuB,GAClD,IAAIthC,GAAoB,EACpBD,IACFuhC,EAAa5yE,KAAO,cAGhByB,EAAMkxE,iBAAmBtgE,KAAK6R,UAAU,eAC1C7R,KAAKge,MAAM/0B,EAAIhB,MAAOk7B,EAAO9N,sBAE3B2pB,GAAiBh/B,KAAK6R,UAAU,eAAiBk/B,EAAOjyB,UAC1D9e,KAAKge,MAAM/0B,EAAIhB,MAAOk7B,EAAOjK,uBAE/B9pB,EAAMkxE,gBAAiB,EACvBrhC,EAAoB7vC,EAAM+3D,eAG5BnnD,KAAK8+B,gBACHC,EACAwhC,GACA,GACA,EACAvhC,EACAC,EA/BJ,MAiCO,GAAIj/B,KAAKoyC,kBACVyuB,EACF7gE,KAAKghE,yBAAyBjiC,EAAW2hC,GAEzC1gE,KAAKihE,kBAAkBliC,EAAW0hC,QAE/B,IACLK,GACa,UAAb73E,EAAInB,MACHu5D,GACArhD,KAAKo9C,mBAqCD,IACL0jB,GACc,QAAb73E,EAAInB,MAA+B,QAAbmB,EAAInB,MAC1Bu5D,GACCrhD,KAAKqC,MAAMmd,EAAG7Q,OAAS3O,KAAKo9C,mBA2BrBp9C,KAAKo9C,mBAEVyjB,EACF7gE,KAAKghE,yBAAyBjiC,EAAW2hC,GAEzC1gE,KAAKihE,kBAAkBliC,EAAW0hC,GAGpCzgE,KAAKgjC,iBAlCL,CAGA3zC,EAAO1B,KAAO1E,EAAInB,KAElB,MAAM+4E,EAAY7gE,KAAKqC,MAAMmd,EAAGzT,aAChC/L,KAAK4gE,sBAAsBL,GAEvBM,EAEF7gE,KAAKuyC,uBAAuBxT,EAAWyhC,GAAe,GAAO,IAEzDxgE,KAAKqyC,uBAAuBkuB,IAC9BvgE,KAAKge,MAAMuiD,EAAat3E,IAAIhB,MAAOk7B,EAAOzO,uBAE5C1U,KAAK8+B,gBACHC,EACAwhC,GACA,GACA,GACoB,GACpB,IAIJvgE,KAAK2yC,wBAAwB4tB,EA9BxB,KApCL,CAEA,MAAMlnC,EAAcr5B,KAAKmjC,IAAI3jB,EAAG7Q,MAE5BgyD,EAAa7/B,UACf9gC,KAAKgjC,WAAW+9B,GAGlB1xE,EAAO1B,KAAO,SAEd,MAAMkzE,EAAY7gE,KAAKqC,MAAMmd,EAAGzT,aAChC/L,KAAK4gE,sBAAsBvxE,GAC3B2Q,KAAKonD,6BAA6BuZ,GAE9BE,EAEF7gE,KAAKuyC,uBACHxT,EACAyhC,EACAnnC,GACA,IAGEr5B,KAAKqyC,uBAAuBkuB,IAC9BvgE,KAAKge,MAAMuiD,EAAat3E,IAAIhB,MAAOk7B,EAAOxO,oBAG5C3U,KAAK8+B,gBACHC,EACAwhC,EACAlnC,GACA,GACoB,GACpB,GAtCC,CAkFR,CAGDunC,sBAAsB7vB,GACpB,MAAM,KAAEr5C,EAAF,MAAQvQ,EAAR,MAAec,GAAU+X,KAAK5Q,MAapC,OAXGsI,IAAS8nB,EAAG13B,MAAQ4P,IAAS8nB,EAAG70B,SACjComD,EAAOrG,QACG,cAAVvjD,GAEA6Y,KAAKge,MAAM/1B,EAAOk7B,EAAO/I,iBAGvB1iB,IAAS8nB,EAAGzT,aAAyB,gBAAV5kB,GAC7B6Y,KAAKge,MAAM/1B,EAAOk7B,EAAO1O,8BAGpBzU,KAAK4yC,kBAAkB7B,GAAmC,EAClE,CAEDgW,sBACEhoB,EACAgS,GACA,IAAAmwB,EACAlhE,KAAK4pD,aAAa,mBAAoB7Y,EAAO9oD,OAE7C+X,KAAK3S,MAAMq1B,MAAMy+C,KAEjB,MAAM3N,EAAYxzD,KAAK5Q,MAAMoU,OAC7BxD,KAAK5Q,MAAMoU,OAAS,GAGpBxD,KAAKojD,UAAU1gC,MflkDE,GemkDjB,MAAMpyB,EAAQygD,EAAOzgD,KAAO,GAC5B0P,KAAKgjD,4BAA4B1yD,OAAMtB,GAAW,EAAOwwB,EAAG/S,QAC5DzM,KAAKojD,UAAUzgC,OACf3iB,KAAK3S,MAAMs1B,OACX3iB,KAAK5Q,MAAMoU,OAASgwD,EACpBz0B,EAAUzuC,KAAKG,KAAKuP,KAAKigC,WAA0B8Q,EAAQ,gBAC3D,OAAAmwB,EAAInwB,EAAOkU,aAAPic,EAAmBv1E,QACrBqU,KAAKge,MAAM+yB,EAAO9oD,MAAOk7B,EAAOjO,qBAEnC,CAED+rD,kBAAkBliC,EAAwBpK,GAErCA,EAAK/mC,UACa,gBAAlB+mC,EAAK1rC,IAAInB,MAA6C,gBAAnB6sC,EAAK1rC,IAAI9B,OAI7C6Y,KAAKge,MAAM2W,EAAK1rC,IAAIhB,MAAOk7B,EAAO3O,uBAGpCuqB,EAAUzuC,KAAKG,KAAKuP,KAAKkgC,mBAAmBvL,GAC7C,CAEDqsC,yBACEjiC,EACApK,GAEA,MAAMxnC,EAAO6S,KAAKogC,0BAA0BzL,GAC5CoK,EAAUzuC,KAAKG,KAAKtD,GAEpB6S,KAAKsxD,WAAWD,mBACdrxD,KAAKw/B,iBAAiBryC,EAAKlE,KrBzgDY,EqB2gDvCkE,EAAKlE,IAAIhB,MAEZ,CAED62C,gBACEC,EACA1vC,EACAgqC,EACAD,EACA4F,EACAC,GAEAF,EAAUzuC,KAAKG,KACbuP,KAAKk/B,YACH7vC,EACAgqC,EACAD,EACA4F,EACAC,EACA,eACA,GAGL,CAEDsT,uBACExT,EACA1vC,EACAgqC,EACAD,GAEA,MAAMjsC,EAAO6S,KAAKk/B,YAChB7vC,EACAgqC,EACAD,GACoB,GACpB,EACA,sBACA,GAEF2F,EAAUzuC,KAAKG,KAAKtD,GAEpB,MAAMQ,EACU,QAAdR,EAAKQ,KACDR,EAAKu9C,OrB3jD8B8mB,EALJ,EqBmkDjB,QAAdrkE,EAAKQ,KACLR,EAAKu9C,OrB9jD8B02B,EALJ,EAQI,EqB+jDzCphE,KAAKsxD,WAAWD,mBACdrxD,KAAKw/B,iBAAiBryC,EAAKlE,KAC3B0E,EACAR,EAAKlE,IAAIhB,MAEZ,CAGDm/D,6BAEEC,GACO,CAGTjnB,0BACEjzC,GAIA,OAFA6S,KAAKqhE,iBAAiBl0E,GACtB6S,KAAKwmC,YACExmC,KAAKigC,WAAW9yC,EAAM,uBAC9B,CAGD+yC,mBAAmB/yC,GAGjB,OAFA6S,KAAKqhE,iBAAiBl0E,GACtB6S,KAAKwmC,YACExmC,KAAKigC,WAAW9yC,EAAM,gBAC9B,CAGDk0E,iBAAiBl0E,GACf6S,KAAK3S,MAAMq1B,MAAMy+C,IACjBnhE,KAAK8zD,gBAAgBpxC,MAAM8vC,MAC3BxyD,KAAKojD,UAAU1gC,Mf1rDE,Ge2rDjBv1B,EAAKhG,MAAQ6Y,KAAKmjC,IAAI3jB,EAAG7R,IAAM3N,KAAK8jC,0BAA4B,KAChE9jC,KAAK8zD,gBAAgBnxC,OACrB3iB,KAAKojD,UAAUzgC,OACf3iB,KAAK3S,MAAMs1B,MACZ,CAEDiuB,aACEzjD,EACA4K,EACA84C,EACAhuB,ErBrpD8BykB,KqBupD1BtnC,KAAKqC,MAAMmd,EAAG13B,OAChBqF,EAAKG,GAAK0S,KAAK+lC,kBACXhuC,GACFiI,KAAKkyC,UAAU/kD,EAAKG,GAAI,aAAcu1B,IAGpCguB,IAAe94C,EACjB5K,EAAKG,GAAK,KAEV0S,KAAKgjC,WAAW,KAAM7f,EAAOnL,iBAGlC,CAGDw6B,gBAAgBrlD,GACdA,EAAK8vC,WAAaj9B,KAAKmjC,IAAI3jB,EAAGnP,UAAYrQ,KAAKi4D,sBAAwB,IACxE,CAKD/2B,YAAY/zC,GACV,MAAMm0E,EAAathE,KAAK+pD,iCAAiC58D,GACnDo0E,GAAqBD,GAActhE,KAAKmjC,IAAI3jB,EAAG3S,OAC/C20D,EAAUD,GAAqBvhE,KAAKywC,cAActjD,GAClDwjD,EACJ6wB,GAAWxhE,KAAK0wC,mCAAmCvjD,GAC/Cs0E,EACJF,KAAuB5wB,GAAgB3wC,KAAKmjC,IAAI3jB,EAAG3S,QAC/C60D,EAAiBJ,GAAcE,EAErC,GAAIA,IAAY7wB,EAId,OAHI2wB,GAAYthE,KAAKgjC,aACrBhjC,KAAKwwC,gBAAgBrjD,GAAM,GAEpB6S,KAAKigC,WAAW9yC,EAAM,wBAG/B,MAAMw0E,EAAgB3hE,KAAK4hE,gCAAgCz0E,GAE3D,GACGm0E,GAAcC,IAAsBC,IAAYG,GAChDhxB,GAAgB8wB,IAAwBE,EAEzC,MAAM3hE,KAAKgjC,WAAW,KAAMxjB,EAAGlT,QAGjC,IAAIu1D,EAQJ,GAPIH,GAAkBC,GACpBE,GAAiB,EACjB7hE,KAAKwwC,gBAAgBrjD,EAAMu0E,IAE3BG,EAAiB7hE,KAAK8hE,4BAA4B30E,GAGhDu0E,GAAkBC,GAAiBE,EAErC,OADA7hE,KAAKgqD,YAAY78D,GAAM,GAAM,IAASA,EAAKnC,QACpCgV,KAAKigC,WAAW9yC,EAAM,0BAG/B,GAAI6S,KAAKmjC,IAAI3jB,EAAG3rB,UAKd,OAHA1G,EAAKiM,YAAc4G,KAAKkuC,+BACxBluC,KAAKgqD,YAAY78D,GAAM,GAAM,GAEtB6S,KAAKigC,WAAW9yC,EAAM,4BAG/B,MAAM6S,KAAKgjC,WAAW,KAAMxjB,EAAGlT,OAChC,CAGDmkC,cAActjD,GACZ,OAAO6S,KAAKmjC,IAAI3jB,EAAG7Q,KACpB,CAEDo7C,iCAAiC58D,GAC/B,GAAI6S,KAAKiuC,2BAA4B,CAEnCjuC,KAAK4pD,aAAa,qBAClB,MAAMzW,EAAYnzC,KAAKggC,YAGvB,OAFAmT,EAAUhS,SAAWnhC,KAAK+lC,iBAAgB,GAC1C54C,EAAKoN,WAAa,CAACyF,KAAKigC,WAAWkT,EAAW,4BACvC,CACR,CACD,OAAO,CACR,CAEDzC,mCAAmCvjD,GACjC,GAAI6S,KAAKgnC,aAAa,MAAO,CACtB75C,EAAKoN,aAAYpN,EAAKoN,WAAa,IAExC,MAAM44C,EAAYnzC,KAAK89B,YACrB99B,KAAK5Q,MAAMquB,aACXzd,KAAK5Q,MAAMsuB,iBASb,OANA1d,KAAKijC,OAELkQ,EAAUhS,SAAWnhC,KAAK0zC,wBAC1BvmD,EAAKoN,WAAW9J,KACduP,KAAKigC,WAAWkT,EAAW,8BAEtB,CACR,CACD,OAAO,CACR,CAEDyuB,gCAAgCz0E,GAC9B,QAAI6S,KAAKqC,MAAMmd,EAAGlT,UACXnf,EAAKoN,aAAYpN,EAAKoN,WAAa,IACxCpN,EAAKoN,WAAW9J,QAAQuP,KAAKuwC,yBAE7BpjD,EAAKnC,OAAS,KACdmC,EAAKiM,YAAc,MAEZ,EAGV,CAED0oE,4BAA4B30E,GAC1B,QAAI6S,KAAKguC,iCACP7gD,EAAKoN,WAAa,GAClBpN,EAAKnC,OAAS,KACdmC,EAAKiM,YAAc4G,KAAKqwC,uBAAuBljD,IACxC,EAGV,CAED8wE,kBACE,IAAKj+D,KAAKgnC,aAAa,SAAU,OAAO,EACxC,MAAM/D,EAAOjjC,KAAKw5C,iBAClB,OACGxoC,EAAUvZ,KAAKuI,KAAK6d,MAAMzxB,MAAM4T,KAAK5Q,MAAMouB,IAAKylB,KACjDjjC,KAAK6pD,qBAAqB5mB,EAAM,WAEnC,CAEDiL,+BACE,MAAMH,EAAO/tC,KAAKggC,YAEZ5G,EAAUp5B,KAAKi+D,kBAErB,GAAIj+D,KAAKqC,MAAMmd,EAAGjQ,YAAc6pB,EAM9B,OALAp5B,KAAKijC,OACD7J,GACFp5B,KAAKijC,OAGAjjC,KAAKk5D,cACVnrB,EACAg0B,EACA3oC,GAEG,GAAIp5B,KAAKqC,MAAMmd,EAAGpP,QACvB,OAAOpQ,KAAKokD,WAAWrW,GAAM,GAAM,GAC9B,GAAI/tC,KAAKqC,MAAMmd,EAAGhS,IAQvB,OANExN,KAAK6R,UAAU,eACf7R,KAAK8R,gBAAgB,aAAc,2BAEnC9R,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOrO,uBAEtC9U,KAAKs5D,iBAAgB,GACdt5D,KAAKokD,WAAWrW,GAAM,GAAM,GAC9B,GAAI/tC,KAAKqC,MAAMmd,EAAG1P,SAAW9P,KAAKqC,MAAMmd,EAAG3P,OAAS7P,KAAK4nC,QAC9D,MAAM5nC,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAOjH,0BACrC,CACL,MAAM2nC,EAAM7jD,KAAK8jC,0BAEjB,OADA9jC,KAAKwmC,YACEqd,CACR,CACF,CAGDxT,uBAAuBljD,GACrB,OAAO6S,KAAK0tC,eAAe,KAC5B,CAEDO,2BACE,GAAIjuC,KAAKqC,MAAMmd,EAAG13B,MAAO,CACvB,MAAMX,EAAQ6Y,KAAK5Q,MAAMjI,MACzB,GAAe,UAAVA,IAAsB6Y,KAAK5Q,MAAMiyD,aAA0B,QAAVl6D,EACpD,OAAO,EAET,IACa,SAAVA,GAA8B,cAAVA,KACpB6Y,KAAK5Q,MAAMiyD,YACZ,CACA,MAAMh9C,EAAIrE,KAAK2qC,YAKf,GACGtmC,EAAE3M,OAAS8nB,EAAG13B,MAAoB,SAAZuc,EAAEld,OACzBkd,EAAE3M,OAAS8nB,EAAGlT,OAGd,OADAtM,KAAKgzD,gBAAgB,CAAC,OAAQ,gBACvB,CAEV,CArBH,MAsBO,IAAKhzD,KAAKqC,MAAMmd,EAAG3rB,UACxB,OAAO,EAGT,MAAMovC,EAAOjjC,KAAKw5C,iBACZwoB,EAAUhiE,KAAK6pD,qBAAqB5mB,EAAM,QAChD,GACE,KAAAjjC,KAAK6d,MAAMmkB,WAAWiB,IACrBjjC,KAAKqC,MAAMmd,EAAG13B,OAASk6E,EAExB,OAAO,EAGT,GAAIhiE,KAAKqC,MAAMmd,EAAG3rB,WAAamuE,EAAS,CACtC,MAAMC,EAAgBjiE,KAAK6d,MAAMmkB,WAC/BhiC,KAAK8pD,oBAAoB7mB,EAAO,IAElC,OACoB,KAAlBg/B,GACkB,KAAlBA,CAEH,CACD,OAAO,CACR,CAEDzxB,gBAAgBrjD,EAAgCw2C,GAC9C,GAAI3jC,KAAK6mC,cAAc,QAAS,CAC9B15C,EAAKnC,OAASgV,KAAKoqD,oBACnBpqD,KAAKgqD,YAAY78D,GACjB,MAAM+0E,EAAaliE,KAAKmiE,6BACpBD,IACF/0E,EAAK+0E,WAAaA,EALtB,MAQMv+B,EACF3jC,KAAKgjC,aAEL71C,EAAKnC,OAAS,KAIlBgV,KAAKwmC,WACN,CAEDwH,+BACE,GAAIhuC,KAAKqC,MAAMmd,EAAGhS,MAChBxN,KAAKgzD,gBAAgB,CAAC,aAAc,sBAChChzD,KAAK6R,UAAU,eAAe,CAChC,IAAI7R,KAAK8R,gBAAgB,aAAc,0BAGrC,OAAO,EAFP9R,KAAKgjC,WAAWhjC,KAAK5Q,MAAMnH,MAAOk7B,EAAOrO,sBAI5C,CAGH,MAC8B,QAA5B9U,KAAK5Q,MAAMsI,KAAKuM,SACY,UAA5BjE,KAAK5Q,MAAMsI,KAAKuM,SACY,aAA5BjE,KAAK5Q,MAAMsI,KAAKuM,SACY,UAA5BjE,KAAK5Q,MAAMsI,KAAKuM,SAChBjE,KAAK4nC,SACL5nC,KAAKi+D,iBAER,CAEDjU,YACE78D,EACAi1E,EACAlpE,EACAmpE,GAEA,GAAID,EAEF,GAAIlpE,GAGF,GADA8G,KAAKqmD,sBAAsBl5D,EAAM,WAC7B6S,KAAK6R,UAAU,qBAAsB,KAAAywD,EACvC,MAAMlpE,EAAgBjM,EACnBiM,YAEoB,eAArBA,EAAY1B,MACS,SAArB0B,EAAYtR,MACZsR,EAAYtO,IAAMsO,EAAYnR,OAAU,GACxC,OAAAq6E,EAAClpE,EAAY2kC,QAAZukC,EAAmB/jC,eAEpBv+B,KAAKge,MAAM5kB,EAAYnR,MAAOk7B,EAAOtN,8BAExC,OACI,GAAI1oB,EAAKoN,YAAcpN,EAAKoN,WAAW5O,OAE5C,IAAK,MAAMwnD,KAAahmD,EAAKoN,WAAY,CACvC,MAAM,SAAE4mC,GAAagS,EACfovB,EACc,eAAlBphC,EAASzpC,KAAwBypC,EAASr5C,KAAOq5C,EAASh6C,MAG5D,GAFA6Y,KAAKqmD,sBAAsBlT,EAAWovB,IAEjCF,GAAUlvB,EAAUE,MAAO,CAC9B,MAAM,MAAEA,GAAUF,EACC,kBAAfE,EAAM37C,KACRsI,KAAKge,MACHm1B,EAAUlrD,MACVk7B,EAAOvN,sBACPy9B,EAAMlsD,MACNo7E,IAIFviE,KAAKk0C,kBAAkBb,EAAMvrD,KAAMurD,EAAMprD,OAAO,GAAM,GAEtD+X,KAAK3S,MAAM+1B,iBAAiBiwB,GAE/B,CACF,MACI,GAAIlmD,EAAKiM,YAEd,GAC4B,wBAA1BjM,EAAKiM,YAAY1B,MACS,qBAA1BvK,EAAKiM,YAAY1B,KACjB,CACA,MAAMpK,EAAKH,EAAKiM,YAAY9L,GAC5B,IAAKA,EAAI,MAAM,IAAIzF,MAAM,qBAEzBmY,KAAKqmD,sBAAsBl5D,EAAMG,EAAGxF,KAPtC,MAQO,GAA8B,wBAA1BqF,EAAKiM,YAAY1B,KAC1B,IAAK,MAAM0B,KAAejM,EAAKiM,YAAYylE,aACzC7+D,KAAKm+B,iBAAiB/kC,EAAY9L,IAU1C,GAHE0S,KAAK5Q,MAAMm8D,eAAevrD,KAAK5Q,MAAMm8D,eAAe5/D,OAAS,GAGlCA,OAC3B,MAAMqU,KAAKge,MAAM7wB,EAAKlF,MAAOk7B,EAAOlH,2BAEvC,CAEDkiB,iBAAiBhxC,GACf,GAAkB,eAAdA,EAAKuK,KACPsI,KAAKqmD,sBAAsBl5D,EAAMA,EAAKrF,WACjC,GAAkB,kBAAdqF,EAAKuK,KACd,IAAK,MAAMi9B,KAAQxnC,EAAKgmB,WACtBnT,KAAKm+B,iBAAiBxJ,QAEnB,GAAkB,iBAAdxnC,EAAKuK,KACd,IAAK,MAAMk+D,KAAQzoE,EAAKolB,SAClBqjD,GACF51D,KAAKm+B,iBAAiBy3B,OAGH,mBAAdzoE,EAAKuK,KACdsI,KAAKm+B,iBAAiBhxC,EAAKhG,OACJ,gBAAdgG,EAAKuK,KACdsI,KAAKm+B,iBAAiBhxC,EAAK02C,UACJ,sBAAd12C,EAAKuK,MACdsI,KAAKm+B,iBAAiBhxC,EAAKoB,KAE9B,CAED83D,sBACEl5D,EAMArF,GAEIkY,KAAK5Q,MAAMs8D,oBAAoB31D,QAAQjO,IAAS,GAClDkY,KAAKge,MACH7wB,EAAKlF,MACI,YAATH,EACIq7B,EAAO7N,uBACP6N,EAAO5N,gBACXztB,GAGJkY,KAAK5Q,MAAMs8D,oBAAoBj7D,KAAK3I,EACrC,CAIDyoD,wBACE,MAAMiyB,EAAQ,GACd,IAAIp2B,GAAQ,EAKZ,IAFApsC,KAAK2jC,OAAOnkB,EAAGlT,SAEPtM,KAAKmjC,IAAI3jB,EAAG/S,SAAS,CAC3B,GAAI2/B,EACFA,GAAQ,OAGR,GADApsC,KAAK2jC,OAAOnkB,EAAG3S,OACX7M,KAAKmjC,IAAI3jB,EAAG/S,QAAS,MAG3B,MAAMtf,EAAO6S,KAAKggC,YAClB7yC,EAAKkmD,MAAQrzC,KAAK0zC,wBAClBvmD,EAAKg0C,SAAWnhC,KAAK6mC,cAAc,MAC/B7mC,KAAK0zC,wBACLvmD,EAAKkmD,MAAMU,UACfyuB,EAAM/xE,KAAKuP,KAAKigC,WAAW9yC,EAAM,mBAClC,CAED,OAAOq1E,CACR,CAGD9uB,wBACE,GAAI1zC,KAAKqC,MAAMmd,EAAG70B,QAAS,CACzB,MAAMwJ,EAAS6L,KAAK09B,aAClB19B,KAAK5Q,MAAMjI,MACX,iBAEIs7E,EAAYtuE,EAAOhN,MAAMkb,MAAMs6D,IAQrC,OAPI8F,GACFziE,KAAKge,MACH7pB,EAAOlM,MACPk7B,EAAO3K,iCACPiqD,EAAU,GAAGzgC,WAAW,GAAG56B,SAAS,KAGjCjT,CACR,CACD,OAAO6L,KAAK+lC,iBAAgB,EAC7B,CAKDyB,YAAYr6C,GAGV,GADAA,EAAKoN,WAAa,IACbyF,KAAKqC,MAAMmd,EAAG70B,QAAS,CAG1B,MAOM+3E,GAPa1iE,KAAKszC,iCAAiCnmD,IAOxB6S,KAAKmjC,IAAI3jB,EAAG3S,OAGvC20D,EAAUkB,GAAa1iE,KAAKkqD,8BAA8B/8D,GAG5Du1E,IAAclB,GAASxhE,KAAKmqD,2BAA2Bh9D,GAC3D6S,KAAKylC,iBAAiB,OACvB,CACDt4C,EAAKnC,OAASgV,KAAKoqD,oBAInB,MAAM8X,EAAaliE,KAAKmiE,6BACxB,GAAID,EACF/0E,EAAK+0E,WAAaA,MACsB,CACxC,MAAMlhC,EAAahhC,KAAK2iE,6BACpB3hC,IACF7zC,EAAK6zC,WAAaA,EAErB,CAGD,OADAhhC,KAAKwmC,YACExmC,KAAKigC,WAAW9yC,EAAM,oBAC9B,CAEDi9D,oBAEE,OADKpqD,KAAKqC,MAAMmd,EAAG70B,SAASqV,KAAKgjC,aAC1BhjC,KAAKo/B,eACb,CAGD6T,yBAAyB9lD,GACvB,OAAO6S,KAAKqC,MAAMmd,EAAG13B,KACtB,CAEDorD,0BACE/lD,EACAgmD,EACAz7C,EACA07C,GAEAD,EAAUE,MAAQrzC,KAAK+lC,kBACvB/lC,KAAKkyC,UAAUiB,EAAUE,MAAOD,ErBvoEF9L,GqBwoE9Bn6C,EAAKoN,WAAW9J,KAAKuP,KAAKigC,WAAWkT,EAAWz7C,GACjD,CASDkrE,qBACE,MAAMC,EAAQ,GACRC,EAAY,IAAIzuE,IAEtB,EAAG,CACD,GAAI2L,KAAKqC,MAAMmd,EAAG/S,QAChB,MAGF,MAAMtf,EAAO6S,KAAKggC,YAGZo7B,EAAUp7D,KAAK5Q,MAAMjI,MA4B3B,GA3BI6Y,KAAKqC,MAAMmd,EAAG70B,QAChBwC,EAAKlE,IAAM+W,KAAK09B,aAA8B09B,EAAS,iBAEvDjuE,EAAKlE,IAAM+W,KAAK+lC,iBAAgB,GAElC/lC,KAAK2jC,OAAOnkB,EAAGzS,OAGC,SAAZquD,GACFp7D,KAAKge,MACH7wB,EAAKlE,IAAIhB,MACTk7B,EAAO9K,iCACP+iD,GAMA0H,EAAUl6E,IAAIwyE,IAChBp7D,KAAKge,MACH7wB,EAAKlE,IAAIhB,MACTk7B,EAAO5K,kCACP6iD,GAGJ0H,EAAU5qE,IAAIkjE,IAETp7D,KAAKqC,MAAMmd,EAAG70B,QACjB,MAAMqV,KAAKgjC,WACThjC,KAAK5Q,MAAMnH,MACXk7B,EAAO7K,6BAGXnrB,EAAKhG,MAAQ6Y,KAAK09B,aAChB19B,KAAK5Q,MAAMjI,MACX,iBAEF6Y,KAAKigC,WAA8B9yC,EAAM,mBACzC01E,EAAMpyE,KAAKtD,EA/Cb,OAgDS6S,KAAKmjC,IAAI3jB,EAAG3S,QAErB,OAAOg2D,CACR,CAQDF,6BACE,IAAI3iE,KAAKqC,MAAMmd,EAAGxP,QAAWhQ,KAAKigB,wBAIhC,OAAIjgB,KAAK6R,UAAU,oBAA4B,GACxC,KAJP7R,KAAK4pD,aAAa,oBAClB5pD,KAAKijC,OAKP,MAAM4/B,EAAQ,GACR7hC,EAAa,IAAI3sC,IACvB,EAAG,CACD,MAAMlH,EAAO6S,KAAKggC,YAoBlB,GAnBA7yC,EAAKlE,IAAM+W,KAAK+lC,iBAAgB,GAEV,SAAlB54C,EAAKlE,IAAInB,MACXkY,KAAKge,MACH7wB,EAAKlE,IAAIhB,MACTk7B,EAAO9K,iCACPlrB,EAAKlE,IAAInB,MAITk5C,EAAWp4C,IAAIuE,EAAKlE,IAAInB,OAC1BkY,KAAKge,MACH7wB,EAAKlE,IAAIhB,MACTk7B,EAAO5K,kCACPprB,EAAKlE,IAAInB,MAGbk5C,EAAW9oC,IAAI/K,EAAKlE,IAAInB,MACxBkY,KAAK2jC,OAAOnkB,EAAGzS,QACV/M,KAAKqC,MAAMmd,EAAG70B,QACjB,MAAMqV,KAAKgjC,WACThjC,KAAK5Q,MAAMnH,MACXk7B,EAAO7K,6BAGXnrB,EAAKhG,MAAQ6Y,KAAK09B,aAAa19B,KAAK5Q,MAAMjI,MAAO,iBACjD6Y,KAAKigC,WAAW9yC,EAAM,mBACtB01E,EAAMpyE,KAAKtD,EA7Bb,OA8BS6S,KAAKmjC,IAAI3jB,EAAG3S,QAErB,OAAOg2D,CACR,CAEDV,6BAEE,IAAIniE,KAAKgnC,aAAa,WAAchnC,KAAKigB,wBAIvC,OAAIjgB,KAAK6R,UAAU,oBAA4B,GACxC,KAJP7R,KAAK4pD,aAAa,oBAClB5pD,KAAKijC,OAMPjjC,KAAKmjC,IAAI3jB,EAAGlT,QACZ,MAAMu2D,EAAQ7iE,KAAK4iE,qBAGnB,OAFA5iE,KAAKmjC,IAAI3jB,EAAG/S,QAELo2D,CACR,CAEDvvB,iCAAiCnmD,GAC/B,QAAI6S,KAAKizC,yBAAyB9lD,KAEhC6S,KAAKkzC,0BACH/lD,EACA6S,KAAKggC,YACL,yBACA,6BAEK,EAGV,CAEDkqB,8BAA8B/8D,GAC5B,GAAI6S,KAAKqC,MAAMmd,EAAG7Q,MAAO,CACvB,MAAMwkC,EAAYnzC,KAAKggC,YAUvB,OATAhgC,KAAKijC,OACLjjC,KAAKylC,iBAAiB,MAEtBzlC,KAAKkzC,0BACH/lD,EACAgmD,EACA,2BACA,+BAEK,CACR,CACD,OAAO,CACR,CAEDgX,2BAA2Bh9D,GACzB,IAAIi/C,GAAQ,EAEZ,IADApsC,KAAK2jC,OAAOnkB,EAAGlT,SACPtM,KAAKmjC,IAAI3jB,EAAG/S,SAAS,CAC3B,GAAI2/B,EACFA,GAAQ,MACH,CAEL,GAAIpsC,KAAKmjC,IAAI3jB,EAAGzS,OACd,MAAM/M,KAAKge,MAAMhe,KAAK5Q,MAAMnH,MAAOk7B,EAAO/N,wBAI5C,GADApV,KAAK2jC,OAAOnkB,EAAG3S,OACX7M,KAAKmjC,IAAI3jB,EAAG/S,QAAS,KAC1B,CAEDzM,KAAKuzC,qBAAqBpmD,EAC3B,CACF,CAGDomD,qBAAqBpmD,GACnB,MAAMgmD,EAAYnzC,KAAKggC,YAEvB,GADAmT,EAAUW,SAAW9zC,KAAK0zC,wBACtB1zC,KAAK6mC,cAAc,MACrBsM,EAAUE,MAAQrzC,KAAK+lC,sBAClB,CACL,MAAM,SAAE+N,GAAaX,EACrB,GAAsB,kBAAlBW,EAASp8C,KACX,MAAMsI,KAAKge,MACTm1B,EAAUlrD,MACVk7B,EAAO9M,sBACPy9B,EAAS3sD,OAGb6Y,KAAKk0C,kBAAkBJ,EAAShsD,KAAMqrD,EAAUlrD,OAAO,GAAM,GAC7DkrD,EAAUE,MAAQS,EAASC,SAC5B,CACD/zC,KAAKkyC,UAAUiB,EAAUE,MAAO,mBrBp1EF/L,GqBq1E9Bn6C,EAAKoN,WAAW9J,KAAKuP,KAAKigC,WAAWkT,EAAW,mBACjD,CAIDb,YACEz5C,GAEA,MAAsB,eAAfA,EAAMnB,MAAwC,SAAfmB,EAAM/Q,IAC7C,ECr4EY,MAAMi7E,WAAenG,GAQlCz8D,YAAYR,EAAmBke,GAE7B2F,MADA7jB,EVoDG,SAAoBnY,GACzB,MAAMmY,EAAe,CAAC,EACtB,IAAK,MAAM1W,KAAOjC,OAAOuO,KAAK+0D,IAC5B3qD,EAAQ1W,GAAOzB,GAAqB,MAAbA,EAAKyB,GAAezB,EAAKyB,GAAOqhE,GAAerhE,GAExE,OAAO0W,CACR,CU1DaqjE,CAAWrjE,GACNke,GAEf7d,KAAKL,QAAUA,EACfK,KAAKuzD,mBACLvzD,KAAK3J,QAqBT,SAAoBA,GAClB,MAAM4sE,EAAwB,IAAI7nE,IAClC,IAAK,MAAM2W,KAAU1b,EAAS,CAC5B,MAAOvO,EAAM6X,GAAWhT,MAAMC,QAAQmlB,GAAUA,EAAS,CAACA,EAAQ,CAAC,GAC9DkxD,EAAUr6E,IAAId,IAAOm7E,EAAU35E,IAAIxB,EAAM6X,GAAW,CAAC,EAC3D,CACD,OAAOsjE,CACR,CA5BkBC,CAAWljE,KAAKL,QAAQtJ,SACvC2J,KAAKwR,SAAW7R,EAAQ4qD,cACzB,CAGDxlB,kBACE,OAAOrjB,CACR,CAEDhrB,QACEsJ,KAAK+zD,qBACL,MAAMrd,EAAO12C,KAAKggC,YACZ/sC,EAAU+M,KAAKggC,YAKrB,OAJAhgC,KAAKu2C,YACLG,EAAKr4B,OAAS,KACdre,KAAKy2C,cAAcC,EAAMzjD,GACzByjD,EAAKr4B,OAASre,KAAK5Q,MAAMivB,OAClBq4B,CACR,EC4BH,SAASysB,GAAUxjE,EAAmBke,GACpC,IAAI4oC,EAAMsc,GAMV,OALA,MAAIpjE,GAAAA,EAAStJ,Ud9BR,SAAyBA,GAC9B,GAAIwb,GAAUxb,EAAS,cAAe,CACpC,GAAIwb,GAAUxb,EAAS,qBACrB,MAAM,IAAIxO,MACR,mEAIJ,MAAMu7E,EAAyBtxD,GAC7Bzb,EACA,aACA,0BAEF,GAA8B,MAA1B+sE,EACF,MAAM,IAAIv7E,MACR,mQAKG,GAAsC,kBAA3Bu7E,EAChB,MAAM,IAAIv7E,MAAM,8CAEnB,CAED,GAAIgqB,GAAUxb,EAAS,SAAWwb,GAAUxb,EAAS,cACnD,MAAM,IAAIxO,MAAM,+CAGlB,GAAIgqB,GAAUxb,EAAS,iBAAmBwb,GAAUxb,EAAS,eAC3D,MAAM,IAAIxO,MAAM,wDAGlB,GACEgqB,GAAUxb,EAAS,sBAClBwmC,GAAmBpZ,SAClB3R,GAAgBzb,EAAS,mBAAoB,aAG/C,MAAM,IAAIxO,MACR,+EACEg1C,GAAmBxwC,KAAI4Z,GAAM,IAAGA,OAAMhZ,KAAK,OAIjD,GAAI4kB,GAAUxb,EAAS,oBAKd,CACL,GAAIwb,GAAUxb,EAAS,oBACrB,MAAM,IAAIxO,MACR,iEAQJ,GAA2C,aALAiqB,GACzCzb,EACA,mBACA,WAGA,MAAM,IAAIxO,MACR,uJAKL,CAGH,GACEgqB,GAAUxb,EAAS,oBAClBymC,GAA8BrZ,SAC7B3R,GAAgBzb,EAAS,iBAAkB,eAG7C,MAAM,IAAIxO,MACR,+EACEi1C,GAA8BzwC,KAAI4Z,GAAM,IAAGA,OAAMhZ,KAAK,OAI5D,GACE4kB,GAAUxb,EAAS,wBAClBwb,GAAUxb,EAAS,iBACpB,CACA,MAAMxD,EAAQ,IAAIhL,MAChB,gGAIF,MADAgL,EAAMwwE,eAAiB,gBACjBxwE,CACP,CACF,Cc/DGywE,CAAgB3jE,EAAQtJ,SACxBowD,EASJ,SAAwB8c,GACtB,MAAMC,EAAanZ,GAAiBJ,QAAOniE,GACzC+pB,GAAU0xD,EAAoBz7E,KAG1BmB,EAAMu6E,EAAWv2E,KAAK,KAC5B,IAAIw5D,EAAMgd,GAAiBx6E,GAC3B,IAAKw9D,EAAK,CACRA,EAAMsc,GACN,IAAK,MAAMhxD,KAAUyxD,EACnB/c,EAAM1pB,GAAahrB,GAAQ00C,GAE7Bgd,GAAiBx6E,GAAOw9D,CACzB,CACD,OAAOA,CACR,CAxBSid,CAAe/jE,EAAQtJ,UAGxB,IAAIowD,EAAI9mD,EAASke,EACzB,CAED,MAAM4lD,GAAqD,CAAC,E,QAhErD,SAAe5lD,EAAele,GAAyB,IAAA5N,EAC5D,GAA4B,iBAAjB,OAAPA,EAAA4N,QAAA,EAAA5N,EAASyE,YAuCX,OAAO2sE,GAAUxjE,EAASke,GAAOnnB,QAtCjCiJ,EAAO3Y,OAAAkE,OAAA,GACFyU,GAEL,IACEA,EAAQnJ,WAAa,SACrB,MAAMjC,EAAS4uE,GAAUxjE,EAASke,GAC5BrrB,EAAM+B,EAAOmC,QAEnB,GAAInC,EAAOod,kBACT,OAAOnf,EAGT,GAAI+B,EAAOqd,4BAMT,IAEE,OADAjS,EAAQnJ,WAAa,SACd2sE,GAAUxjE,EAASke,GAAOnnB,OAFnC,CAGE,MAAA8mC,GAAO,MAIThrC,EAAIS,QAAQuD,WAAa,SAG3B,OAAOhE,CAzBT,CA0BE,MAAOmxE,GACP,IAEE,OADAhkE,EAAQnJ,WAAa,SACd2sE,GAAUxjE,EAASke,GAAOnnB,OAFnC,CAGE,MAAAktE,GAAO,CAET,MAAMD,CACP,CAIJ,E,kBAEM,SAAyB9lD,EAAele,GAC7C,MAAMpL,EAAS4uE,GAAUxjE,EAASke,GAIlC,OAHItpB,EAAOoL,QAAQgrD,aACjBp2D,EAAOnF,MAAMw+C,QAAS,GAEjBr5C,EAAOu0D,eACf,E,uBC/DD,IAAIpkD,EAAI,IACJpC,EAAQ,GAAJoC,EACJN,EAAQ,GAAJ9B,EACJu8B,EAAQ,GAAJz6B,EAuJR,SAASy/D,EAAOC,EAAIC,EAAO1lE,EAAGvW,GAC5B,IAAIk8E,EAAWD,GAAa,IAAJ1lE,EACxB,OAAOlW,KAAK8e,MAAM68D,EAAKzlE,GAAK,IAAMvW,GAAQk8E,EAAW,IAAM,GAC5D,CAxID/oE,EAAO/T,QAAU,SAASye,EAAKhG,GAC7BA,EAAUA,GAAW,CAAC,EACtB,IA8GemkE,EACXC,EA/GArsE,SAAciO,EAClB,GAAa,WAATjO,GAAqBiO,EAAIha,OAAS,EACpC,OAkBJ,SAAe4H,GAEb,MADAA,EAAMrH,OAAOqH,IACL5H,OAAS,KAAjB,CAGA,IAAI0W,EAAQ,mIAAmIO,KAC7IrP,GAEF,GAAK8O,EAAL,CAGA,IAAIhE,EAAI2xD,WAAW3tD,EAAM,IAEzB,QADYA,EAAM,IAAM,MAAMhD,eAE5B,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAzDEw/B,SAyDKxgC,EACT,IAAK,QACL,IAAK,OACL,IAAK,IACH,OA9DEwgC,OA8DKxgC,EACT,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOA,EAAIwgC,EACb,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAOxgC,EAAI+F,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAO/F,EAAIiE,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOjE,EAAIqG,EACb,IAAK,eACL,IAAK,cACL,IAAK,QACL,IAAK,OACL,IAAK,KACH,OAAOrG,EACT,QACE,OA3CH,CANA,CAmDF,CAzEU3H,CAAMiP,GACR,GAAa,WAATjO,GAAqBusE,SAASt+D,GACvC,OAAOhG,EAAQukE,MA0GFJ,EA1GiBn+D,GA2G5Bo+D,EAAQ57E,KAAKg8E,IAAIL,KACRjlC,EACJglC,EAAOC,EAAIC,EAAOllC,EAAG,OAE1BklC,GAAS3/D,EACJy/D,EAAOC,EAAIC,EAAO3/D,EAAG,QAE1B2/D,GAASzhE,EACJuhE,EAAOC,EAAIC,EAAOzhE,EAAG,UAE1ByhE,GAASr/D,EACJm/D,EAAOC,EAAIC,EAAOr/D,EAAG,UAEvBo/D,EAAK,OAvCd,SAAkBA,GAChB,IAAIC,EAAQ57E,KAAKg8E,IAAIL,GACrB,OAAIC,GAASllC,EACJ12C,KAAK8e,MAAM68D,EAAKjlC,GAAK,IAE1BklC,GAAS3/D,EACJjc,KAAK8e,MAAM68D,EAAK1/D,GAAK,IAE1B2/D,GAASzhE,EACJna,KAAK8e,MAAM68D,EAAKxhE,GAAK,IAE1ByhE,GAASr/D,EACJvc,KAAK8e,MAAM68D,EAAKp/D,GAAK,IAEvBo/D,EAAK,IACb,CAhGwCM,CAASz+D,GAEhD,MAAM,IAAI9d,MACR,wDACEw8E,KAAKC,UAAU3+D,GAEpB,C,8BC/BDze,EAAQq9E,WA2IR,SAAoBryE,GAQnB,GAPAA,EAAK,IAAM8N,KAAKwkE,UAAY,KAAO,IAClCxkE,KAAK43B,WACJ53B,KAAKwkE,UAAY,MAAQ,KAC1BtyE,EAAK,IACJ8N,KAAKwkE,UAAY,MAAQ,KAC1B,IAAMvpE,EAAO/T,QAAQu9E,SAASzkE,KAAK4E,OAE/B5E,KAAKwkE,UACT,OAGD,MAAM7iE,EAAI,UAAY3B,KAAKnE,MAC3B3J,EAAKwG,OAAO,EAAG,EAAGiJ,EAAG,kBAKrB,IAAIrV,EAAQ,EACRo4E,EAAQ,EACZxyE,EAAK,GAAGpF,QAAQ,eAAeuV,IAChB,OAAVA,IAGJ/V,IACc,OAAV+V,IAGHqiE,EAAQp4E,GACR,IAGF4F,EAAKwG,OAAOgsE,EAAO,EAAG/iE,EACtB,EA3KDza,EAAQy9E,KA6LR,SAAcC,GACb,IACKA,EACH19E,EAAQ29E,QAAQC,QAAQ,QAASF,GAEjC19E,EAAQ29E,QAAQE,WAAW,QAE5B,CAAC,MAAOlyE,GAGR,CACD,EAvMD3L,EAAQ89E,KA+MR,WACC,IAAIzmE,EACJ,IACCA,EAAIrX,EAAQ29E,QAAQI,QAAQ,QAC5B,CAAC,MAAOpyE,GAGR,CAOD,OAJK0L,QAAwB,IAAZ5W,GAA2B,QAASA,IACpD4W,EAAI5W,EAAQwX,IAAI+lE,OAGV3mE,CACP,EA7NDrX,EAAQs9E,UAyGR,WAIC,QAAsB,oBAAXW,SAA0BA,OAAOx9E,SAAoC,aAAxBw9E,OAAOx9E,QAAQ+P,OAAuBytE,OAAOx9E,QAAQy9E,UAKpF,oBAAdC,YAA6BA,UAAUC,YAAaD,UAAUC,UAAUjmE,cAAcgD,MAAM,4BAM3E,oBAAbkjE,UAA4BA,SAASC,iBAAmBD,SAASC,gBAAgBvnE,OAASsnE,SAASC,gBAAgBvnE,MAAMwnE,kBAEpH,oBAAXN,QAA0BA,OAAOp9E,UAAYo9E,OAAOp9E,QAAQ29E,SAAYP,OAAOp9E,QAAQ49E,WAAaR,OAAOp9E,QAAQ69E,QAGrG,oBAAdP,WAA6BA,UAAUC,WAAaD,UAAUC,UAAUjmE,cAAcgD,MAAM,mBAAqBR,SAAS5L,OAAO4vE,GAAI,KAAO,IAE9H,oBAAdR,WAA6BA,UAAUC,WAAaD,UAAUC,UAAUjmE,cAAcgD,MAAM,sBACrG,EA/HDnb,EAAQ29E,QAyOR,WACC,IAGC,OAAOiB,YACP,CAAC,MAAOjzE,GAGR,CACD,CAlPiBkzE,GAClB7+E,EAAQ8+E,QAAU,MACjB,IAAIC,GAAS,EAEb,MAAO,KACDA,IACJA,GAAS,EACTl+E,QAAQC,KAAK,yIACb,CAPe,KAelBd,EAAQg/E,OAAS,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAsFDh/E,EAAQi/E,IAAMp+E,QAAQq+E,OAASr+E,QAAQo+E,KAAzB,SAkEdlrE,EAAO/T,QAAUsC,EAAQ,KAARA,CAAoBtC,GAErC,MAAM,WAACyM,GAAcsH,EAAO/T,QAM5ByM,EAAW+e,EAAI,SAAU/N,GACxB,IACC,OAAO0/D,KAAKC,UAAU3/D,EACtB,CAAC,MAAO9R,GACR,MAAO,+BAAiCA,EAAMnL,OAC9C,CACD,C,iBCKDuT,EAAO/T,QA3QP,SAAeiY,GAqDd,SAASknE,EAAYzuC,GACpB,IAAI0uC,EAEAC,EACAC,EAFAC,EAAiB,KAIrB,SAASL,KAASl0E,GAEjB,IAAKk0E,EAAMtmE,QACV,OAGD,MAAMe,EAAOulE,EAGPzZ,EAAOlqD,OAAO,IAAIikE,MAClB5C,EAAKnX,GAAQ2Z,GAAY3Z,GAC/B9rD,EAAK+D,KAAOk/D,EACZjjE,EAAKyuD,KAAOgX,EACZzlE,EAAK8rD,KAAOA,EACZ2Z,EAAW3Z,EAEXz6D,EAAK,GAAKm0E,EAAYM,OAAOz0E,EAAK,IAEX,iBAAZA,EAAK,IAEfA,EAAK0W,QAAQ,MAId,IAAItc,EAAQ,EACZ4F,EAAK,GAAKA,EAAK,GAAGpF,QAAQ,iBAAiB,CAACuV,EAAOukE,KAElD,GAAc,OAAVvkE,EACH,MAAO,IAER/V,IACA,MAAMoF,EAAY20E,EAAY1yE,WAAWizE,GACzC,GAAyB,mBAAdl1E,EAA0B,CACpC,MAAMiU,EAAMzT,EAAK5F,GACjB+V,EAAQ3Q,EAAUtI,KAAKyX,EAAM8E,GAG7BzT,EAAKwG,OAAOpM,EAAO,GACnBA,GACA,CACD,OAAO+V,CAAP,IAIDgkE,EAAY9B,WAAWn7E,KAAKyX,EAAM3O,IAEpB2O,EAAKslE,KAAOE,EAAYF,KAChCvrE,MAAMiG,EAAM3O,EAClB,CAgCD,OA9BAk0E,EAAMxuC,UAAYA,EAClBwuC,EAAM5B,UAAY6B,EAAY7B,YAC9B4B,EAAMvqE,MAAQwqE,EAAYQ,YAAYjvC,GACtCwuC,EAAMU,OAASA,EACfV,EAAMJ,QAAUK,EAAYL,QAE5Bh/E,OAAOC,eAAem/E,EAAO,UAAW,CACvClrE,YAAY,EACZ6rE,cAAc,EACdl+E,IAAK,IACmB,OAAnB49E,EACIA,GAEJF,IAAoBF,EAAYzB,aACnC2B,EAAkBF,EAAYzB,WAC9B4B,EAAeH,EAAYvmE,QAAQ83B,IAG7B4uC,GAERl9E,IAAKqb,IACJ8hE,EAAiB9hE,CAAjB,IAK8B,mBAArB0hE,EAAYluB,MACtBkuB,EAAYluB,KAAKiuB,GAGXA,CACP,CAED,SAASU,EAAOlvC,EAAWovC,GAC1B,MAAMC,EAAWZ,EAAYrmE,KAAK43B,gBAAkC,IAAdovC,EAA4B,IAAMA,GAAapvC,GAErG,OADAqvC,EAASd,IAAMnmE,KAAKmmE,IACbc,CACP,CAwFD,SAASC,EAAYp7D,GACpB,OAAOA,EAAO1E,WACZC,UAAU,EAAGyE,EAAO1E,WAAWzb,OAAS,GACxCmB,QAAQ,UAAW,IACrB,CA0BD,OAvQAu5E,EAAYD,MAAQC,EACpBA,EAAY59E,QAAU49E,EACtBA,EAAYM,OAoPZ,SAAgBhhE,GACf,OAAIA,aAAe9d,MACX8d,EAAI7S,OAAS6S,EAAIje,QAElBie,CACP,EAxPD0gE,EAAYc,QAwLZ,WACC,MAAMvC,EAAa,IACfyB,EAAYryE,MAAM3H,IAAI66E,MACtBb,EAAYe,MAAM/6E,IAAI66E,GAAa76E,KAAIurC,GAAa,IAAMA,KAC5D3qC,KAAK,KAEP,OADAo5E,EAAYgB,OAAO,IACZzC,CACP,EA9LDyB,EAAYgB,OAsJZ,SAAgBzC,GAOf,IAAI/4E,EANJw6E,EAAY1B,KAAKC,GACjByB,EAAYzB,WAAaA,EAEzByB,EAAYryE,MAAQ,GACpBqyE,EAAYe,MAAQ,GAGpB,MAAMv8E,GAA+B,iBAAf+5E,EAA0BA,EAAa,IAAI/5E,MAAM,UACjE0F,EAAM1F,EAAMc,OAElB,IAAKE,EAAI,EAAGA,EAAI0E,EAAK1E,IACfhB,EAAMgB,KAOW,OAFtB+4E,EAAa/5E,EAAMgB,GAAGiB,QAAQ,MAAO,QAEtB,GACdu5E,EAAYe,MAAM32E,KAAK,IAAIwF,OAAO,IAAM2uE,EAAWx4E,MAAM,GAAK,MAE9Di6E,EAAYryE,MAAMvD,KAAK,IAAIwF,OAAO,IAAM2uE,EAAa,MAGvD,EA9KDyB,EAAYvmE,QAsMZ,SAAiBhY,GAChB,GAA8B,MAA1BA,EAAKA,EAAK6D,OAAS,GACtB,OAAO,EAGR,IAAIE,EACA0E,EAEJ,IAAK1E,EAAI,EAAG0E,EAAM81E,EAAYe,MAAMz7E,OAAQE,EAAI0E,EAAK1E,IACpD,GAAIw6E,EAAYe,MAAMv7E,GAAG4L,KAAK3P,GAC7B,OAAO,EAIT,IAAK+D,EAAI,EAAG0E,EAAM81E,EAAYryE,MAAMrI,OAAQE,EAAI0E,EAAK1E,IACpD,GAAIw6E,EAAYryE,MAAMnI,GAAG4L,KAAK3P,GAC7B,OAAO,EAIT,OAAO,CACP,EA1NDu+E,EAAY5B,SAAWj7E,EAAQ,MAC/B68E,EAAYL,QA0PZ,WACCj+E,QAAQC,KAAK,wIACb,EA1PDhB,OAAOuO,KAAK4J,GAAKhK,SAAQlM,IACxBo9E,EAAYp9E,GAAOkW,EAAIlW,EAAvB,IAODo9E,EAAYryE,MAAQ,GACpBqyE,EAAYe,MAAQ,GAOpBf,EAAY1yE,WAAa,CAAC,EAkB1B0yE,EAAYQ,YAVZ,SAAqBjvC,GACpB,IAAInqB,EAAO,EAEX,IAAK,IAAI5hB,EAAI,EAAGA,EAAI+rC,EAAUjsC,OAAQE,IACrC4hB,GAASA,GAAQ,GAAKA,EAAQmqB,EAAUoK,WAAWn2C,GACnD4hB,GAAQ,EAGT,OAAO44D,EAAYH,OAAO/9E,KAAKg8E,IAAI12D,GAAQ44D,EAAYH,OAAOv6E,OAC9D,EA2ND06E,EAAYgB,OAAOhB,EAAYrB,QAExBqB,CACP,C,mCC1QsB,IAAZ1+E,GAA4C,aAAjBA,EAAQ+P,OAA2C,IAApB/P,EAAQ2/E,SAAoB3/E,EAAQy9E,OACxGnqE,EAAO/T,QAAU,EAAjB+T,MAEAA,EAAO/T,QAAU,EAAjB+T,I,6BCJD,MAAMssE,EAAM/9E,EAAQ,MACdg+E,EAAOh+E,EAAQ,MAMrBtC,EAAQixD,KA2NR,SAAciuB,GACbA,EAAMqB,YAAc,CAAC,EAErB,MAAMlyE,EAAOvO,OAAOuO,KAAKrO,EAAQugF,aACjC,IAAK,IAAI57E,EAAI,EAAGA,EAAI0J,EAAK5J,OAAQE,IAChCu6E,EAAMqB,YAAYlyE,EAAK1J,IAAM3E,EAAQugF,YAAYlyE,EAAK1J,GAEvD,EAjOD3E,EAAQi/E,IAoLR,YAAgBj0E,GACf,OAAOvK,EAAQ+iB,OAAOg9D,MAAMF,EAAKZ,UAAU10E,GAAQ,KACnD,EArLDhL,EAAQq9E,WAyJR,SAAoBryE,GACnB,MAAO0lC,UAAW9vC,EAAZ,UAAkB08E,GAAaxkE,KAErC,GAAIwkE,EAAW,CACd,MAAM7iE,EAAI3B,KAAKnE,MACT8rE,EAAY,OAAchmE,EAAI,EAAIA,EAAI,OAASA,GAC/CzN,EAAU,KAAIyzE,OAAe7/E,SAEnCoK,EAAK,GAAKgC,EAAShC,EAAK,GAAGrH,MAAM,MAAMoC,KAAK,KAAOiH,GACnDhC,EAAKzB,KAAKk3E,EAAY,KAAO1sE,EAAO/T,QAAQu9E,SAASzkE,KAAK4E,MAAQ,OAClE,MACA1S,EAAK,IAKFhL,EAAQugF,YAAYG,SAChB,IAED,IAAIlB,MAAOmB,cAAgB,KARX//E,EAAO,IAAMoK,EAAK,EAEzC,EArKDhL,EAAQy9E,KA4LR,SAAcC,GACTA,EACHj9E,EAAQwX,IAAI+lE,MAAQN,SAIbj9E,EAAQwX,IAAI+lE,KAEpB,EAnMDh+E,EAAQ89E,KA4MR,WACC,OAAOr9E,EAAQwX,IAAI+lE,KACnB,EA7MDh+E,EAAQs9E,UA0IR,WACC,MAAO,WAAYt9E,EAAQugF,YAC1BK,QAAQ5gF,EAAQugF,YAAYvB,QAC5BqB,EAAIQ,OAAOpgF,EAAQ+iB,OAAOs9D,GAC3B,EA7ID9gF,EAAQ8+E,QAAUwB,EAAKS,WACtB,QACA,yIAOD/gF,EAAQg/E,OAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAEjC,IAGC,MAAM9kE,EAAgB5X,EAAQ,MAE1B4X,IAAkBA,EAAcsJ,QAAUtJ,GAAevB,OAAS,IACrE3Y,EAAQg/E,OAAS,CAChB,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGF,CAAC,MAAOrzE,GAER,CAQD3L,EAAQugF,YAAczgF,OAAOuO,KAAK5N,EAAQwX,KAAK8qD,QAAOhhE,GAC9C,WAAWwO,KAAKxO,KACrBiN,QAAO,CAAC3N,EAAKU,KAEf,MAAM0rC,EAAO1rC,EACXoe,UAAU,GACVhI,cACAvS,QAAQ,aAAa,CAACqxB,EAAGrZ,IAClBA,EAAErE,gBAIX,IAAIkF,EAAMhe,EAAQwX,IAAIlW,GAYtB,OAVC0c,IADG,2BAA2BlO,KAAKkO,KAEzB,6BAA6BlO,KAAKkO,KAE1B,SAARA,EACJ,KAEAlD,OAAOkD,IAGdpd,EAAIosC,GAAQhvB,EACLpd,CAAP,GACE,CAAC,GA2FJ0S,EAAO/T,QAAUsC,EAAQ,KAARA,CAAoBtC,GAErC,MAAM,WAACyM,GAAcsH,EAAO/T,QAM5ByM,EAAWu0E,EAAI,SAAUvjE,GAExB,OADA3E,KAAKynE,YAAYvB,OAASlmE,KAAKwkE,UACxBgD,EAAKW,QAAQxjE,EAAG3E,KAAKynE,aAC1B58E,MAAM,MACNwB,KAAIkH,GAAOA,EAAI0O,SACfhV,KAAK,IACP,EAMD0G,EAAWy0E,EAAI,SAAUzjE,GAExB,OADA3E,KAAKynE,YAAYvB,OAASlmE,KAAKwkE,UACxBgD,EAAKW,QAAQxjE,EAAG3E,KAAKynE,YAC5B,C,uBCtQA,oBAASY,EAAMC,GACZ,aAKIC,EAA6B,CAAC,cAAxB,4BAMN,SAA0BC,GAG9B,IAAIC,EAA8B,eAC9BC,EAAyB,iCACzBC,EAA4B,8BAEhC,MAAO,CAOHjyE,MAAO,SAAiC7D,GACpC,QAAgC,IAArBA,EAAM+1E,iBAAkE,IAA7B/1E,EAAM,mBACxD,OAAOmN,KAAK6oE,WAAWh2E,GACpB,GAAIA,EAAMC,OAASD,EAAMC,MAAMuP,MAAMqmE,GACxC,OAAO1oE,KAAK8oE,YAAYj2E,GACrB,GAAIA,EAAMC,MACb,OAAOkN,KAAK+oE,gBAAgBl2E,GAE5B,MAAM,IAAIhL,MAAM,kCAEvB,EAGDmhF,gBAAiB,SAA2CC,GAExD,IAA8B,IAA1BA,EAAQlzE,QAAQ,KAChB,MAAO,CAACkzE,GAGZ,IACI9nE,EADS,+BACMyB,KAAKqmE,EAAQn8E,QAAQ,QAAS,KACjD,MAAO,CAACqU,EAAM,GAAIA,EAAM,SAAMnS,EAAWmS,EAAM,SAAMnS,EACxD,EAED85E,YAAa,SAAuCj2E,GAKhD,OAJeA,EAAMC,MAAMjI,MAAM,MAAMo/D,QAAO,SAAS5hE,GACnD,QAASA,EAAKga,MAAMqmE,EACvB,GAAE1oE,MAEa3T,KAAI,SAAShE,GACrBA,EAAK0N,QAAQ,WAAa,IAE1B1N,EAAOA,EAAKyE,QAAQ,aAAc,QAAQA,QAAQ,+BAAgC,KAEtF,IAAIo8E,EAAgB7gF,EAAKyE,QAAQ,OAAQ,IAAIA,QAAQ,eAAgB,KAIjEq8E,EAAWD,EAAc7mE,MAAM,4BAK/BwoD,GAFJqe,EAAgBC,EAAWD,EAAcp8E,QAAQq8E,EAAS,GAAI,IAAMD,GAEzCr+E,MAAM,OAAOuB,MAAM,GAE1Cg9E,EAAgBppE,KAAKgpE,gBAAgBG,EAAWA,EAAS,GAAKte,EAAO3nD,OACrEmmE,EAAexe,EAAO59D,KAAK,WAAQ+B,EACnCs6E,EAAW,CAAC,OAAQ,eAAevzE,QAAQqzE,EAAc,KAAO,OAAIp6E,EAAYo6E,EAAc,GAElG,OAAO,IAAIZ,EAAW,CAClBa,aAAcA,EACdC,SAAUA,EACVhiF,WAAY8hF,EAAc,GAC1BG,aAAcH,EAAc,GAC5Bp+E,OAAQ3C,GAEf,GAAE2X,KACN,EAED+oE,gBAAiB,SAA2Cl2E,GAKxD,OAJeA,EAAMC,MAAMjI,MAAM,MAAMo/D,QAAO,SAAS5hE,GACnD,OAAQA,EAAKga,MAAMsmE,EACtB,GAAE3oE,MAEa3T,KAAI,SAAShE,GAMzB,GAJIA,EAAK0N,QAAQ,YAAc,IAC3B1N,EAAOA,EAAKyE,QAAQ,mDAAoD,SAGjD,IAAvBzE,EAAK0N,QAAQ,OAAsC,IAAvB1N,EAAK0N,QAAQ,KAEzC,OAAO,IAAIyyE,EAAW,CAClBa,aAAchhF,IAGlB,IAAImhF,EAAoB,6BACpBtnE,EAAU7Z,EAAKga,MAAMmnE,GACrBH,EAAennE,GAAWA,EAAQ,GAAKA,EAAQ,QAAKlT,EACpDo6E,EAAgBppE,KAAKgpE,gBAAgB3gF,EAAKyE,QAAQ08E,EAAmB,KAEzE,OAAO,IAAIhB,EAAW,CAClBa,aAAcA,EACdC,SAAUF,EAAc,GACxB9hF,WAAY8hF,EAAc,GAC1BG,aAAcH,EAAc,GAC5Bp+E,OAAQ3C,GAGnB,GAAE2X,KACN,EAED6oE,WAAY,SAAsCjwE,GAC9C,OAAKA,EAAEgwE,YAAehwE,EAAElR,QAAQqO,QAAQ,OAAS,GAC7C6C,EAAElR,QAAQmD,MAAM,MAAMc,OAASiN,EAAEgwE,WAAW/9E,MAAM,MAAMc,OACjDqU,KAAKypE,YAAY7wE,GAChBA,EAAE9F,MAGHkN,KAAK0pE,aAAa9wE,GAFlBoH,KAAK2pE,aAAa/wE,EAIhC,EAED6wE,YAAa,SAAuC7wE,GAKhD,IAJA,IAAIgxE,EAAS,oCACTh/E,EAAQgO,EAAElR,QAAQmD,MAAM,MACxBsJ,EAAS,GAEJtI,EAAI,EAAG0E,EAAM3F,EAAMe,OAAQE,EAAI0E,EAAK1E,GAAK,EAAG,CACjD,IAAIwW,EAAQunE,EAAOhnE,KAAKhY,EAAMiB,IAC1BwW,GACAlO,EAAO1D,KAAK,IAAI+3E,EAAW,CACvBc,SAAUjnE,EAAM,GAChB/a,WAAY+a,EAAM,GAClBrX,OAAQJ,EAAMiB,KAGzB,CAED,OAAOsI,CACV,EAEDw1E,aAAc,SAAwC/wE,GAKlD,IAJA,IAAIgxE,EAAS,6DACTh/E,EAAQgO,EAAEgwE,WAAW/9E,MAAM,MAC3BsJ,EAAS,GAEJtI,EAAI,EAAG0E,EAAM3F,EAAMe,OAAQE,EAAI0E,EAAK1E,GAAK,EAAG,CACjD,IAAIwW,EAAQunE,EAAOhnE,KAAKhY,EAAMiB,IAC1BwW,GACAlO,EAAO1D,KACH,IAAI+3E,EAAW,CACXa,aAAchnE,EAAM,SAAMrT,EAC1Bs6E,SAAUjnE,EAAM,GAChB/a,WAAY+a,EAAM,GAClBrX,OAAQJ,EAAMiB,KAI7B,CAED,OAAOsI,CACV,EAGDu1E,aAAc,SAAwC72E,GAKlD,OAJeA,EAAMC,MAAMjI,MAAM,MAAMo/D,QAAO,SAAS5hE,GACnD,QAASA,EAAKga,MAAMomE,KAAiCpgF,EAAKga,MAAM,oBACnE,GAAErC,MAEa3T,KAAI,SAAShE,GACzB,IAMIwhF,EANAhf,EAASxiE,EAAKwC,MAAM,KACpBu+E,EAAgBppE,KAAKgpE,gBAAgBne,EAAO3nD,OAC5C4mE,EAAgBjf,EAAOkf,SAAW,GAClCV,EAAeS,EACdh9E,QAAQ,iCAAkC,MAC1CA,QAAQ,aAAc,UAAOkC,EAE9B86E,EAAaznE,MAAM,iBACnBwnE,EAAUC,EAAah9E,QAAQ,qBAAsB,OAEzD,IAAIoF,OAAoBlD,IAAZ66E,GAAqC,8BAAZA,OACjC76E,EAAY66E,EAAQh/E,MAAM,KAE9B,OAAO,IAAI29E,EAAW,CAClBa,aAAcA,EACdn3E,KAAMA,EACNo3E,SAAUF,EAAc,GACxB9hF,WAAY8hF,EAAc,GAC1BG,aAAcH,EAAc,GAC5Bp+E,OAAQ3C,GAEf,GAAE2X,KACN,EAER,GAnMa,8BANb,G,8BCCD/E,EAAO/T,QAAU,EAAjB+T,I,2CCAAA,EAAO/T,QAAU,CAAC8iF,EAAMC,KACvBA,EAAOA,GAAQtiF,EAAQsiF,KACvB,MAAM/1E,EAAS81E,EAAK1qE,WAAW,KAAO,GAAsB,IAAhB0qE,EAAKr+E,OAAe,IAAM,KAChE6xB,EAAMysD,EAAKl0E,QAAQ7B,EAAS81E,GAC5BE,EAAgBD,EAAKl0E,QAAQ,MACnC,OAAgB,IAATynB,KAAkC,IAAnB0sD,GAA8B1sD,EAAM0sD,EAA1D,C,eCHDljF,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAKTD,EAAAA,QAAkB,umBAElBA,EAAQijF,aAAe,SAAS9nE,GAC9B,IAAImJ,EAAQ,CAAC9T,KAAM,UAAWvQ,MAAOkb,EAAM,GAAI+nE,YAAQp7E,GASvD,OARSqT,EAAO,IAAImJ,EAAM9T,KAAO,SAAW8T,EAAM4+D,UAAY/nE,EAAM,KAAMA,EAAM,KACvEA,EAAO,GAAImJ,EAAM9T,KAAO,UACxB2K,EAAO,IAAImJ,EAAM9T,KAAO,UAAW8T,EAAM4+D,SAAW/nE,EAAM,IAC1DA,EAAO,GAAImJ,EAAM9T,KAAO,QACxB2K,EAAO,GAAImJ,EAAM9T,KAAO,SACxB2K,EAAM,IAAKmJ,EAAM9T,KAAO,OACxB2K,EAAM,IAAKmJ,EAAM9T,KAAO,aACxB2K,EAAM,MAAKmJ,EAAM9T,KAAO,cAC1B8T,CACR,C,uBCpBD,MAAMksB,EAAS,CAAC,EACVvuC,EAAiBuuC,EAAOvuC,eACxBkhF,EAAS,CAAC3yC,EAAQwkC,KACvB,IAAK,MAAMjzE,KAAOyuC,EACbvuC,EAAeC,KAAKsuC,EAAQzuC,IAC/BizE,EAASjzE,EAAKyuC,EAAOzuC,GAEtB,EAqBIme,EAAWswB,EAAOtwB,SAClBxa,EAAUD,MAAMC,QAChB09E,EAAWC,OAAOD,SA0BlBE,EAAgB,CACrB,IAAK,MACL,IAAM,MACN,KAAM,OACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,OAIDC,EAAoB,mBAEpBC,EAAa,QACbC,EAAiB,sBAEjBC,EAAQ,CAAC/mC,EAAUlkC,KACxB,MAAMkrE,EAAsB,KAC3BC,EAAYC,IACVprE,EAAQqrE,YACVD,EAASprE,EAAQorE,OAAO/9E,OAAO2S,EAAQqrE,YAAvC,EAGKC,EAAW,CAChB,kBAAoB,EACpB,SAAW,EACX,iBAAmB,EACnB,OAAU,SACV,MAAQ,EACR,KAAO,EACP,MAAQ,EACR,SAAW,EACX,cAAgB,EAChB,QAAW,UACX,OAAU,KACV,YAAe,EACf,aAAe,EACf,aAAe,GAEVC,EAAOvrE,GAAWA,EAAQurE,KAtFlB,IAACC,EAAangF,EAuFxBkgF,IACHD,EAASG,OAAS,SAClBH,EAASp6E,MAAO,GAzFFs6E,EA2FEF,EAAjBtrE,GA3F4B3U,EA2FD2U,IAvF3B0qE,EAAOr/E,GAAQ,CAAC/B,EAAK9B,KACpBgkF,EAAYliF,GAAO9B,CAAnB,IAEMgkF,GALCA,EA2FW,UAAlBxrE,EAAQyrE,QACU,UAAlBzrE,EAAQyrE,QACU,YAAlBzrE,EAAQyrE,SAERzrE,EAAQyrE,OAAS,UAElB,MAAM5oC,EAA0B,UAAlB7iC,EAAQyrE,OACrB,IACmB,YAAlBzrE,EAAQyrE,OACR,IACA,IAEIC,EAAU1rE,EAAQ0rE,QAClBC,EAAe3rE,EAAQ2rE,aAC7B,IAAIP,EAASprE,EAAQorE,OAAO/9E,OAAO2S,EAAQqrE,aACvCF,EAAY,GAChB,MAAMS,EAAU5rE,EAAQ6rE,YAClBC,EAAU9rE,EAAQ+rE,YAClBC,EAAUN,EAAU,GAAK,KAC/B,IAAIl3E,EACAy3E,GAAU,EACd,MAAMC,EAAmC,UAAnBlsE,EAAQmsE,QACxBC,EAAmC,SAAnBpsE,EAAQmsE,QACxBE,EAAmC,WAAnBrsE,EAAQmsE,QACxBG,EAAmC,eAAnBtsE,EAAQmsE,QAM9B,GAJIZ,GAAQrnC,GArFW,mBAqFYA,EAASqoC,SAC3CroC,EAAWA,EAASqoC,UA9FE,iBADN/kF,EAkGH08C,IAhGW,mBAAxBz8B,EAAShe,KAAKjC,GAgGU,CACxB,GAxFaA,IACiB,gBAAxBigB,EAAShe,KAAKjC,GAuFhBglF,CAAMtoC,GACT,OAAqB,GAAjBA,EAASqqB,KACL,aAEHmd,IACJ1rE,EAAQ6rE,aAAc,EACtB7rE,EAAQ+rE,aAAc,GAEhB,WAAad,EAAMj+E,MAAM+H,KAAKmvC,GAAWlkC,GAAW,KAE5D,GA/FaxY,IACiB,gBAAxBigB,EAAShe,KAAKjC,GA8FhBilF,CAAMvoC,GACT,OAAqB,GAAjBA,EAASqqB,KACL,YAED,WAAa0c,EAAMj+E,MAAM+H,KAAKmvC,GAAWlkC,GAAW,IAE5D,GAAI2qE,EAASzmC,GACZ,OAAuB,GAAnBA,EAASl4C,OACL,kBAED,eAAiBi/E,EAAMj+E,MAAM+H,KAAKmvC,GAAWlkC,GAAW,IAEhE,GAAI/S,EAAQi3C,GAoBX,OAnBA1vC,EAAS,GACTwL,EAAQ9O,MAAO,EACX06E,IACH5rE,EAAQ6rE,aAAc,EACtB7rE,EAAQ+rE,aAAc,GAElBD,GACJZ,IAhJY,EAACwB,EAAOnQ,KACvB,MAAMvwE,EAAS0gF,EAAM1gF,OACrB,IAAIW,GAAS,EACb,OAASA,EAAQX,GAChBuwE,EAASmQ,EAAM//E,GACf,EA6IC6I,CAAQ0uC,GAAW18C,IAClBykF,GAAU,EACNH,IACH9rE,EAAQ+rE,aAAc,GAEvBv3E,EAAO1D,MACL46E,GAAWI,EAAU,GAAKV,GAC3BH,EAAMzjF,EAAOwY,GAFd,IAKGisE,EACI,KAEJH,EACI,IAAMt3E,EAAOlH,KAAK,MAAQ,IAE3B,IAAM0+E,EAAUx3E,EAAOlH,KAAK,IAAM0+E,GAAWA,GAClDN,EAAU,GAAKP,GAAa,IACxB,IAjJS3jF,IACM,iBAATA,GACW,mBAAxBigB,EAAShe,KAAKjC,GA+IHmlF,CAASzoC,GAqBb,MA9KS18C,IAEc,mBAAxBigB,EAAShe,KAAKjC,GA4KRolF,CAAS1oC,IASpB1vC,EAAS,GACTwL,EAAQ9O,MAAO,EACfg6E,IACAR,EAAOxmC,GAAU,CAAC56C,EAAK9B,KACtBykF,GAAU,EACVz3E,EAAO1D,MACL46E,EAAU,GAAKN,GAChBH,EAAM3hF,EAAK0W,GAAW,KACrB0rE,EAAU,GAAK,KAChBT,EAAMzjF,EAAOwY,GAJd,IAOGisE,EACI,KAED,IAAMD,EAAUx3E,EAAOlH,KAAK,IAAM0+E,GAAWA,GAClDN,EAAU,GAAKP,GAAa,KAxB1BI,EAII7G,KAAKC,UAAUzgC,IAAa,OAE7B33C,OAAO23C,GA3Bd,GAAIqnC,EAEH,OAAO7G,KAAKC,UAAUzgC,GAEvB,GAAImoC,EACH,OAAO9/E,OAAO23C,GAEf,GAAIooC,EAAe,CAClB,IAAIO,EAAc3oC,EAASz8B,SAAS,IAIpC,OAHKkkE,IACJkB,EAAcA,EAAY/rE,eAEpB,KAAO+rE,CACd,CACD,GAAIX,EACH,MAAO,KAAOhoC,EAASz8B,SAAS,GAEjC,GAAI2kE,EACH,MAAO,KAAOloC,EAASz8B,SAAS,EA6BlC,CArMgBjgB,MAuMjB,MAAMwD,EAASk5C,EAEf,IAAIv3C,GAAS,EACb,MAAMX,EAAShB,EAAOgB,OAEtB,IADAwI,EAAS,KACA7H,EAAQX,GAAQ,CACxB,MAAM8gF,EAAY9hF,EAAO+jE,OAAOpiE,GAChC,GAAIqT,EAAQ+sE,IAAK,CAChB,MAAMtgC,EAAQzhD,EAAOq3C,WAAW11C,GAChC,GACC8/C,GAAS,OAAUA,GAAS,OAC5BzgD,EAASW,EAAQ,EAChB,CACD,MAAMqgF,EAAShiF,EAAOq3C,WAAW11C,EAAQ,GACzC,GAAIqgF,GAAU,OAAUA,GAAU,MAAQ,CAGzC,IAAIH,GADiC,MAAlBpgC,EAAQ,OAAkBugC,EAAS,MAAS,OACnCvlE,SAAS,IAChCkkE,IACJkB,EAAcA,EAAY/rE,eAE3BtM,GAAU,OAASq4E,EAAc,MAC/BlgF,EACF,QACA,CACD,CACD,CACD,IAAKqT,EAAQitE,iBAAkB,CAC9B,GAAIjC,EAAelzE,KAAKg1E,GAAY,CAGnCt4E,GAAUs4E,EACV,QACA,CACD,GAAiB,KAAbA,EAAkB,CACrBt4E,GAAUquC,GAASiqC,EAAY,MAAQA,EACvC,QACA,CACD,GAAiB,KAAbA,EAAkB,CACrBt4E,GAAUquC,GAASiqC,EAAY,MAAQA,EACvC,QACA,CACD,GAAiB,KAAbA,EAAmB,CACtBt4E,GAAUquC,GAASiqC,EAAY,MAASA,EACxC,QACA,CACD,CACD,GACc,MAAbA,IACCvB,IACAR,EAAWjzE,KAAK9M,EAAO+jE,OAAOpiE,EAAQ,IACtC,CACD6H,GAAU,MACV,QACA,CACD,GAAIs2E,EAAkBhzE,KAAKg1E,GAAY,CAEtCt4E,GAAUq2E,EAAciC,GACxB,QACA,CACD,MAAM5d,EAAW4d,EAAUzqC,WAAW,GACtC,GAAIriC,EAAQktE,SAAuB,MAAZhe,GAAkC,MAAZA,EAAoB,CAChE16D,GAAUs4E,EACV,QACA,CACD,IAAID,EAAc3d,EAASznD,SAAS,IAC/BkkE,IACJkB,EAAcA,EAAY/rE,eAE3B,MAAMqsE,EAAWN,EAAY7gF,OAAS,GAAKu/E,EACrCzc,EAAU,MAAQqe,EAAW,IAAM,MACvC,OAASN,GAAapgF,MAAM0gF,GAAY,GAAK,GAC/C34E,GAAUs6D,CAEV,CAOD,OANI9uD,EAAQ9O,OACXsD,EAASquC,EAAQruC,EAASquC,GAEd,KAATA,IACHruC,EAASA,EAAOrH,QAAQ,QAAS,SAE9B6S,EAAQotE,gBAEJ54E,EACLrH,QAAQ,sBAAuB,UAC/BA,QAAQ,QAASo+E,EAAO,aAAe,YAEnC/2E,CAAP,EAGDy2E,EAAM3gE,QAAU,QAEhBhP,EAAO/T,QAAU0jF,C,8BCrUjB,MAAMoC,EAAUxjF,EAAQ,MAElByjF,EAAMC,OAAO,OACbC,EAASD,OAAO,UAChBE,EAAoBF,OAAO,oBAC3BG,EAAcH,OAAO,cACrBI,EAAUJ,OAAO,UACjBK,EAAUL,OAAO,WACjBM,EAAoBN,OAAO,kBAC3BO,EAAWP,OAAO,WAClBQ,EAAQR,OAAO,SACfS,EAAoBT,OAAO,kBAE3BU,EAAc,IAAM,EAkPpB/kF,EAAM,CAACgY,EAAM5X,EAAK4kF,KACtB,MAAM1gF,EAAO0T,EAAK6sE,GAAO7kF,IAAII,GAC7B,GAAIkE,EAAM,CACR,MAAM2gF,EAAM3gF,EAAKhG,MACjB,GAAI4mF,EAAQltE,EAAMitE,IAEhB,GADAE,EAAIntE,EAAM1T,IACL0T,EAAKwsE,GACR,YAEEQ,IACEhtE,EAAK8sE,KACPxgF,EAAKhG,MAAM8mF,IAAMvH,KAAKuH,OACxBptE,EAAK4sE,GAAUS,YAAY/gF,IAG/B,OAAO2gF,EAAI3mF,KACZ,GAGG4mF,EAAU,CAACltE,EAAMitE,KACrB,IAAKA,IAASA,EAAIK,SAAWttE,EAAKysE,GAChC,OAAO,EAET,MAAM1oE,EAAO8hE,KAAKuH,MAAQH,EAAIG,IAC9B,OAAOH,EAAIK,OAASvpE,EAAOkpE,EAAIK,OAC3BttE,EAAKysE,IAAa1oE,EAAO/D,EAAKysE,EADlC,EAIIrrE,EAAOpB,IACX,GAAIA,EAAKssE,GAAUtsE,EAAKosE,GACtB,IAAK,IAAImB,EAASvtE,EAAK4sE,GAAU1S,KAC/Bl6D,EAAKssE,GAAUtsE,EAAKosE,IAAmB,OAAXmB,GAAkB,CAI9C,MAAM9e,EAAO8e,EAAO9e,KACpB0e,EAAIntE,EAAMutE,GACVA,EAAS9e,CACV,CACF,EAGG0e,EAAM,CAACntE,EAAM1T,KACjB,GAAIA,EAAM,CACR,MAAM2gF,EAAM3gF,EAAKhG,MACb0Z,EAAK0sE,IACP1sE,EAAK0sE,GAASO,EAAI7kF,IAAK6kF,EAAI3mF,OAE7B0Z,EAAKssE,IAAWW,EAAIniF,OACpBkV,EAAK6sE,GAAOzqD,OAAO6qD,EAAI7kF,KACvB4X,EAAK4sE,GAAUY,WAAWlhF,EAC3B,GAGH,MAAMmhF,EACJnuE,YAAalX,EAAK9B,EAAOwE,EAAQsiF,EAAKE,GACpCnuE,KAAK/W,IAAMA,EACX+W,KAAK7Y,MAAQA,EACb6Y,KAAKrU,OAASA,EACdqU,KAAKiuE,IAAMA,EACXjuE,KAAKmuE,OAASA,GAAU,CACzB,EAGH,MAAMI,EAAc,CAAC1tE,EAAMlO,EAAIxF,EAAMqhF,KACnC,IAAIV,EAAM3gF,EAAKhG,MACX4mF,EAAQltE,EAAMitE,KAChBE,EAAIntE,EAAM1T,GACL0T,EAAKwsE,KACRS,OAAM9+E,IAEN8+E,GACFn7E,EAAGvJ,KAAKolF,EAAOV,EAAI3mF,MAAO2mF,EAAI7kF,IAAK4X,EAAnC,EAGJ5F,EAAO/T,QAnTP,MACEiZ,YAAaR,GAOX,GANuB,iBAAZA,IACTA,EAAU,CAAEvX,IAAKuX,IAEdA,IACHA,EAAU,CAAC,GAETA,EAAQvX,MAA+B,iBAAhBuX,EAAQvX,KAAoBuX,EAAQvX,IAAM,GACnE,MAAM,IAAIghB,UAAU,qCAEVpJ,KAAKitE,GAAOttE,EAAQvX,KAAOgd,IAAvC,MAEMqpE,EAAK9uE,EAAQhU,QAAUiiF,EAG7B,GAFA5tE,KAAKotE,GAAoC,mBAAPqB,EAAqBb,EAAca,EACrEzuE,KAAKqtE,GAAe1tE,EAAQ+uE,QAAS,EACjC/uE,EAAQwuE,QAAoC,iBAAnBxuE,EAAQwuE,OACnC,MAAM,IAAI/kE,UAAU,2BACtBpJ,KAAKstE,GAAW3tE,EAAQwuE,QAAU,EAClCnuE,KAAKutE,GAAW5tE,EAAQgvE,QACxB3uE,KAAKwtE,GAAqB7tE,EAAQivE,iBAAkB,EACpD5uE,KAAK2tE,GAAqBhuE,EAAQkvE,iBAAkB,EACpD7uE,KAAK9S,OACN,CAGG9E,QAAK0mF,GACP,GAAkB,iBAAPA,GAAmBA,EAAK,EACjC,MAAM,IAAI1lE,UAAU,qCAEtBpJ,KAAKitE,GAAO6B,GAAM1pE,IAClBnD,EAAKjC,KACN,CACG5X,UACF,OAAO4X,KAAKitE,EACb,CAEG8B,eAAYA,GACd/uE,KAAKqtE,KAAiB0B,CACvB,CACGA,iBACF,OAAO/uE,KAAKqtE,EACb,CAEGc,WAAQa,GACV,GAAkB,iBAAPA,EACT,MAAM,IAAI5lE,UAAU,wCAEtBpJ,KAAKstE,GAAW0B,EAChB/sE,EAAKjC,KACN,CACGmuE,aACF,OAAOnuE,KAAKstE,EACb,CAGG2B,qBAAkBC,GACF,mBAAPA,IACTA,EAAKtB,GAEHsB,IAAOlvE,KAAKotE,KACdptE,KAAKotE,GAAqB8B,EAC1BlvE,KAAKmtE,GAAU,EACfntE,KAAKytE,GAAUt4E,SAAQ24E,IACrBA,EAAIniF,OAASqU,KAAKotE,GAAmBU,EAAI3mF,MAAO2mF,EAAI7kF,KACpD+W,KAAKmtE,IAAWW,EAAIniF,MAApB,KAGJsW,EAAKjC,KACN,CACGivE,uBAAsB,OAAOjvE,KAAKotE,EAAoB,CAEtDzhF,aAAY,OAAOqU,KAAKmtE,EAAS,CACjCgC,gBAAe,OAAOnvE,KAAKytE,GAAU9hF,MAAQ,CAEjDyjF,SAAUz8E,EAAI67E,GACZA,EAAQA,GAASxuE,KACjB,IAAK,IAAIouE,EAASpuE,KAAKytE,GAAU1S,KAAiB,OAAXqT,GAAkB,CACvD,MAAM9e,EAAO8e,EAAO9e,KACpBif,EAAYvuE,KAAMrN,EAAIy7E,EAAQI,GAC9BJ,EAAS9e,CACV,CACF,CAEDn6D,QAASxC,EAAI67E,GACXA,EAAQA,GAASxuE,KACjB,IAAK,IAAIouE,EAASpuE,KAAKytE,GAAU4B,KAAiB,OAAXjB,GAAkB,CACvD,MAAMnrC,EAAOmrC,EAAOnrC,KACpBsrC,EAAYvuE,KAAMrN,EAAIy7E,EAAQI,GAC9BJ,EAASnrC,CACV,CACF,CAED1tC,OACE,OAAOyK,KAAKytE,GAAU6B,UAAUjjF,KAAIyY,GAAKA,EAAE7b,KAC5C,CAEDsmF,SACE,OAAOvvE,KAAKytE,GAAU6B,UAAUjjF,KAAIyY,GAAKA,EAAE3d,OAC5C,CAED+F,QACM8S,KAAKutE,IACLvtE,KAAKytE,IACLztE,KAAKytE,GAAU9hF,QACjBqU,KAAKytE,GAAUt4E,SAAQ24E,GAAO9tE,KAAKutE,GAASO,EAAI7kF,IAAK6kF,EAAI3mF,SAG3D6Y,KAAK0tE,GAAS,IAAItyE,IAClB4E,KAAKytE,GAAY,IAAIT,EACrBhtE,KAAKmtE,GAAU,CAChB,CAEDqC,OACE,OAAOxvE,KAAKytE,GAAUphF,KAAIyhF,IACxBC,EAAQ/tE,KAAM8tE,IAAe,CAC3BhpE,EAAGgpE,EAAI7kF,IACP0b,EAAGmpE,EAAI3mF,MACPyR,EAAGk1E,EAAIG,KAAOH,EAAIK,QAAU,MAC3BmB,UAAUrlB,QAAO7lD,GAAKA,GAC5B,CAEDqrE,UACE,OAAOzvE,KAAKytE,EACb,CAEDnkF,IAAKL,EAAK9B,EAAOgnF,GAGf,IAFAA,EAASA,GAAUnuE,KAAKstE,KAEQ,iBAAXa,EACnB,MAAM,IAAI/kE,UAAU,2BAEtB,MAAM6kE,EAAME,EAASzH,KAAKuH,MAAQ,EAC5B19E,EAAMyP,KAAKotE,GAAmBjmF,EAAO8B,GAE3C,GAAI+W,KAAK0tE,GAAO9kF,IAAIK,GAAM,CACxB,GAAIsH,EAAMyP,KAAKitE,GAEb,OADAe,EAAIhuE,KAAMA,KAAK0tE,GAAO7kF,IAAII,KACnB,EAGT,MACMymF,EADO1vE,KAAK0tE,GAAO7kF,IAAII,GACX9B,MAgBlB,OAZI6Y,KAAKutE,KACFvtE,KAAKwtE,IACRxtE,KAAKutE,GAAStkF,EAAKymF,EAAKvoF,QAG5BuoF,EAAKzB,IAAMA,EACXyB,EAAKvB,OAASA,EACduB,EAAKvoF,MAAQA,EACb6Y,KAAKmtE,IAAW58E,EAAMm/E,EAAK/jF,OAC3B+jF,EAAK/jF,OAAS4E,EACdyP,KAAKnX,IAAII,GACTgZ,EAAKjC,OACE,CACR,CAED,MAAM8tE,EAAM,IAAIQ,EAAMrlF,EAAK9B,EAAOoJ,EAAK09E,EAAKE,GAG5C,OAAIL,EAAIniF,OAASqU,KAAKitE,IAChBjtE,KAAKutE,IACPvtE,KAAKutE,GAAStkF,EAAK9B,IAEd,IAGT6Y,KAAKmtE,IAAWW,EAAIniF,OACpBqU,KAAKytE,GAAU7kE,QAAQklE,GACvB9tE,KAAK0tE,GAAOpkF,IAAIL,EAAK+W,KAAKytE,GAAU4B,MACpCptE,EAAKjC,OACE,EACR,CAEDpX,IAAKK,GACH,IAAK+W,KAAK0tE,GAAO9kF,IAAIK,GAAM,OAAO,EAClC,MAAM6kF,EAAM9tE,KAAK0tE,GAAO7kF,IAAII,GAAK9B,MACjC,OAAQ4mF,EAAQ/tE,KAAM8tE,EACvB,CAEDjlF,IAAKI,GACH,OAAOJ,EAAImX,KAAM/W,GAAK,EACvB,CAED0mF,KAAM1mF,GACJ,OAAOJ,EAAImX,KAAM/W,GAAK,EACvB,CAEDia,MACE,MAAM/V,EAAO6S,KAAKytE,GAAU1S,KAC5B,OAAK5tE,GAGL6gF,EAAIhuE,KAAM7S,GACHA,EAAKhG,OAHH,IAIV,CAED6mF,IAAK/kF,GACH+kF,EAAIhuE,KAAMA,KAAK0tE,GAAO7kF,IAAII,GAC3B,CAED+7E,KAAM4K,GAEJ5vE,KAAK9S,QAEL,MAAM+gF,EAAMvH,KAAKuH,MAEjB,IAAK,IAAI5pE,EAAIurE,EAAIjkF,OAAS,EAAG0Y,GAAK,EAAGA,IAAK,CACxC,MAAMypE,EAAM8B,EAAIvrE,GACVwrE,EAAY/B,EAAIl1E,GAAK,EAC3B,GAAkB,IAAdi3E,EAEF7vE,KAAK1W,IAAIwkF,EAAIhpE,EAAGgpE,EAAInpE,OACjB,CACH,MAAMwpE,EAAS0B,EAAY5B,EAEvBE,EAAS,GACXnuE,KAAK1W,IAAIwkF,EAAIhpE,EAAGgpE,EAAInpE,EAAGwpE,EAE1B,CACF,CACF,CAED2B,QACE9vE,KAAK0tE,GAAOv4E,SAAQ,CAAChO,EAAO8B,IAAQJ,EAAImX,KAAM/W,GAAK,IACpD,E,8BC/PH,IAAIs+E,EAAM/9E,EAAQ,MAEdumF,IACD,aAAcpoF,EAAQwX,KAAOxX,EAAQsiF,KAAKxmD,SAAS,iBACpD,gBAAiB97B,EAAQwX,KACzBxX,EAAQsiF,KAAKxmD,SAAS,YACD,UAArB97B,EAAQuX,UACPqoE,EAAIQ,OAAO,IAA2B,SAArBpgF,EAAQwX,IAAIC,MAC9B,OAAQzX,EAAQwX,KAEdzN,EACH,CAACwM,EAAMC,EAAOrR,EAAUoR,IACxB2f,IACC,IAAIlzB,EAAS,GAAKkzB,EACdvxB,EAAQ3B,EAAOoL,QAAQoI,EAAOD,EAAKvS,QACvC,OAAQW,EACL4R,EAAO8xE,EAAarlF,EAAQwT,EAAOrR,EAASR,GAAS6R,EACrDD,EAAOvT,EAASwT,CAFnB,EAKE6xE,EAAe,CAACrlF,EAAQwT,EAAOrR,EAASR,KAC3C,IAAIrE,EAAQ0C,EAAO0c,UAAU,EAAG/a,GAASQ,EACrChC,EAAMH,EAAO0c,UAAU/a,EAAQ6R,EAAMxS,QACrCskF,EAAYnlF,EAAIiL,QAAQoI,GAC5B,OAAQ8xE,EAAYhoF,EAAQ+nF,EAAallF,EAAKqT,EAAOrR,EAASmjF,GAAahoF,EAAQ6C,CAAnF,EAGGolF,EAAe,CAACpwE,EAAUiwE,KAAX,CAClBA,iBAAkBjwE,EAClB5S,MAAO4S,EAAU4E,GAAM,OAASA,QAAaxY,OAC7C3B,KAAMuV,EAAUpO,EAAU,OAAW,QAAY,aAAqBxF,OACtEqP,IAAKuE,EAAUpO,EAAU,OAAW,QAAY,aAAqBxF,OACrEsP,OAAQsE,EAAUpO,EAAU,OAAW,SAAcxF,OACrDuP,UAAWqE,EAAUpO,EAAU,OAAW,SAAcxF,OACxDwP,QAASoE,EAAUpO,EAAU,OAAW,SAAcxF,OACtDyP,OAAQmE,EAAUpO,EAAU,OAAW,SAAcxF,OACrD0P,cAAekE,EAAUpO,EAAU,OAAW,SAAcxF,OAC5D4P,MAAOgE,EAAUpO,EAAU,QAAY,SAAcxF,OACrD5B,IAAKwV,EAAUpO,EAAU,QAAY,SAAcxF,OACnD6P,MAAO+D,EAAUpO,EAAU,QAAY,SAAcxF,OACrD8P,OAAQ8D,EAAUpO,EAAU,QAAY,SAAcxF,OACtD+P,KAAM6D,EAAUpO,EAAU,QAAY,SAAcxF,OACpDgQ,QAAS4D,EAAUpO,EAAU,QAAY,SAAcxF,OACvDiQ,KAAM2D,EAAUpO,EAAU,QAAY,SAAcxF,OACpDkQ,MAAO0D,EAAUpO,EAAU,QAAY,SAAcxF,OACrDmQ,KAAMyD,EAAUpO,EAAU,QAAY,SAAcxF,OACpD4Q,QAASgD,EAAUpO,EAAU,QAAY,SAAcxF,OACvD6Q,MAAO+C,EAAUpO,EAAU,QAAY,SAAcxF,OACrD8Q,QAAS8C,EAAUpO,EAAU,QAAY,SAAcxF,OACvD+Q,SAAU6C,EAAUpO,EAAU,QAAY,SAAcxF,OACxDgR,OAAQ4C,EAAUpO,EAAU,QAAY,SAAcxF,OACtDiR,UAAW2C,EAAUpO,EAAU,QAAY,SAAcxF,OACzDkR,OAAQ0C,EAAUpO,EAAU,QAAY,SAAcxF,OACtDmR,QAASyC,EAAUpO,EAAU,QAAY,SAAcxF,SAGxD+O,EAAO/T,QAAUgpF,IACjBj1E,EAAO/T,QAAQgpF,aAAeA,C,UCxD9B,IAOIC,EACAC,EARAzoF,EAAUsT,EAAO/T,QAAU,CAAC,EAUhC,SAASmpF,IACL,MAAM,IAAIxoF,MAAM,kCACnB,CACD,SAASyoF,IACL,MAAM,IAAIzoF,MAAM,oCACnB,CAqBD,SAAS0oF,EAAWC,GAChB,GAAIL,IAAqBM,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKL,IAAqBE,IAAqBF,IAAqBM,WAEhE,OADAN,EAAmBM,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOL,EAAiBK,EAAK,EAChC,CAAC,MAAM53E,GACJ,IAEI,OAAOu3E,EAAiB/mF,KAAK,KAAMonF,EAAK,EAC3C,CAAC,MAAM53E,GAEJ,OAAOu3E,EAAiB/mF,KAAK4W,KAAMwwE,EAAK,EAC3C,CACJ,CAGJ,EA5CA,WACG,IAEQL,EADsB,mBAAfM,WACYA,WAEAJ,CAE1B,CAAC,MAAOz3E,GACLu3E,EAAmBE,CACtB,CACD,IAEQD,EADwB,mBAAjBM,aACcA,aAEAJ,CAE5B,CAAC,MAAO13E,GACLw3E,EAAqBE,CACxB,CAlBJ,IAwED,IAEIK,EAFA5nE,EAAQ,GACR6nE,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaD,IAGlBC,GAAW,EACPD,EAAahlF,OACbod,EAAQ4nE,EAAal8E,OAAOsU,GAE5B8nE,GAAc,EAEd9nE,EAAMpd,QACNolF,IAEP,CAED,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAII,EAAUT,EAAWO,GACzBF,GAAW,EAGX,IADA,IAAIrgF,EAAMwY,EAAMpd,OACV4E,GAAK,CAGP,IAFAogF,EAAe5nE,EACfA,EAAQ,KACC8nE,EAAatgF,GACdogF,GACAA,EAAaE,GAAYI,MAGjCJ,GAAc,EACdtgF,EAAMwY,EAAMpd,MACf,CACDglF,EAAe,KACfC,GAAW,EAnEf,SAAyBvmF,GACrB,GAAI+lF,IAAuBM,aAEvB,OAAOA,aAAarmF,GAGxB,IAAK+lF,IAAuBE,IAAwBF,IAAuBM,aAEvE,OADAN,EAAqBM,aACdA,aAAarmF,GAExB,IAEI,OAAO+lF,EAAmB/lF,EAC7B,CAAC,MAAOuO,GACL,IAEI,OAAOw3E,EAAmBhnF,KAAK,KAAMiB,EACxC,CAAC,MAAOuO,GAGL,OAAOw3E,EAAmBhnF,KAAK4W,KAAM3V,EACxC,CACJ,CAIJ,CA0CG6mF,CAAgBF,EAlBf,CAmBJ,CAgBD,SAASG,EAAKX,EAAKnE,GACfrsE,KAAKwwE,IAAMA,EACXxwE,KAAKqsE,MAAQA,CAChB,CAWD,SAAS+E,IAAS,CA5BlBzpF,EAAQ0pF,SAAW,SAAUb,GACzB,IAAIt+E,EAAO,IAAIvF,MAAMkO,UAAUlP,OAAS,GACxC,GAAIkP,UAAUlP,OAAS,EACnB,IAAK,IAAIE,EAAI,EAAGA,EAAIgP,UAAUlP,OAAQE,IAClCqG,EAAKrG,EAAI,GAAKgP,UAAUhP,GAGhCkd,EAAMtY,KAAK,IAAI0gF,EAAKX,EAAKt+E,IACJ,IAAjB6W,EAAMpd,QAAiBilF,GACvBL,EAAWQ,EAElB,EAODI,EAAKjoF,UAAU+nF,IAAM,WACjBjxE,KAAKwwE,IAAI51E,MAAM,KAAMoF,KAAKqsE,MAC7B,EACD1kF,EAAQ2pF,MAAQ,UAChB3pF,EAAQ2/E,SAAU,EAClB3/E,EAAQwX,IAAM,CAAC,EACfxX,EAAQsiF,KAAO,GACftiF,EAAQsiB,QAAU,GAClBtiB,EAAQiiB,SAAW,CAAC,EAIpBjiB,EAAQ4pF,GAAKH,EACbzpF,EAAQ6pF,YAAcJ,EACtBzpF,EAAQ8pF,KAAOL,EACfzpF,EAAQ+pF,IAAMN,EACdzpF,EAAQgqF,eAAiBP,EACzBzpF,EAAQiqF,mBAAqBR,EAC7BzpF,EAAQkqF,KAAOT,EACfzpF,EAAQmqF,gBAAkBV,EAC1BzpF,EAAQoqF,oBAAsBX,EAE9BzpF,EAAQqqF,UAAY,SAAUlqF,GAAQ,MAAO,EAAI,EAEjDH,EAAQqG,QAAU,SAAUlG,GACxB,MAAM,IAAID,MAAM,mCACnB,EAEDF,EAAQsqF,IAAM,WAAc,MAAO,GAAK,EACxCtqF,EAAQuqF,MAAQ,SAAUC,GACtB,MAAM,IAAItqF,MAAM,iCACnB,EACDF,EAAQyqF,MAAQ,WAAa,OAAO,CAAI,C,eC7JxClrF,EAAQmrF,OATR,SAAgBC,EAAOC,EAAOC,GAC5B,GAAID,KAASD,EACX,OAAOA,EAAMC,GACR,GAAyB,IAArB13E,UAAUlP,OACnB,OAAO6mF,EAEP,MAAM,IAAI3qF,MAAM,IAAM0qF,EAAQ,4BAEjC,EAGD,IAAIE,EAAY,iEACZC,EAAgB,gBAEpB,SAASC,EAASC,GAChB,IAAIvwE,EAAQuwE,EAAKvwE,MAAMowE,GACvB,OAAKpwE,EAGE,CACLwwE,OAAQxwE,EAAM,GACdywE,KAAMzwE,EAAM,GACZ0wE,KAAM1wE,EAAM,GACZ2wE,KAAM3wE,EAAM,GACZ9Q,KAAM8Q,EAAM,IAPL,IASV,CAGD,SAAS4wE,EAAYC,GACnB,IAAIC,EAAM,GAiBV,OAhBID,EAAWL,SACbM,GAAOD,EAAWL,OAAS,KAE7BM,GAAO,KACHD,EAAWJ,OACbK,GAAOD,EAAWJ,KAAO,KAEvBI,EAAWH,OACbI,GAAOD,EAAWH,MAEhBG,EAAWF,OACbG,GAAO,IAAMD,EAAWF,MAEtBE,EAAW3hF,OACb4hF,GAAOD,EAAW3hF,MAEb4hF,CACR,CArBDjsF,EAAQyrF,SAAWA,EAsBnBzrF,EAAQ+rF,YAAcA,EAkDtB,IAvCoBjtE,EACdtd,EAsCF0qF,GAvCgBptE,EAuCO,SAAmBqtE,GAC5C,IAAI9hF,EAAO8hF,EACPF,EAAMR,EAASU,GACnB,GAAIF,EAAK,CACP,IAAKA,EAAI5hF,KACP,OAAO8hF,EAET9hF,EAAO4hF,EAAI5hF,IACZ,CAOD,IANA,IAAI+hF,EAAapsF,EAAQosF,WAAW/hF,GAGhC4P,EAAQ,GACRlZ,EAAQ,EACR4D,EAAI,IACK,CAGX,GAFA5D,EAAQ4D,GAEG,KADXA,EAAI0F,EAAKwE,QAAQ,IAAK9N,IACR,CACZkZ,EAAM1Q,KAAKc,EAAKnF,MAAMnE,IACtB,KACD,CAEC,IADAkZ,EAAM1Q,KAAKc,EAAKnF,MAAMnE,EAAO4D,IACtBA,EAAI0F,EAAK5F,QAAsB,MAAZ4F,EAAK1F,IAC7BA,GAGL,CAEI,IAAIkoC,EAAMw/C,EAAK,EAApB,IAAuB1nF,EAAIsV,EAAMxV,OAAS,EAAGE,GAAK,EAAGA,IAEtC,OADbkoC,EAAO5yB,EAAMtV,IAEXsV,EAAMzI,OAAO7M,EAAG,GACE,OAATkoC,EACTw/C,IACSA,EAAK,IACD,KAATx/C,GAIF5yB,EAAMzI,OAAO7M,EAAI,EAAG0nF,GACpBA,EAAK,IAELpyE,EAAMzI,OAAO7M,EAAG,GAChB0nF,MAUN,MAJa,MAFbhiF,EAAO4P,EAAMlU,KAAK,QAGhBsE,EAAO+hF,EAAa,IAAM,KAGxBH,GACFA,EAAI5hF,KAAOA,EACJ0hF,EAAYE,IAEd5hF,CACR,EAjGK7I,EAAQ,GAEL,SAASm1B,GACd,IAAK,IAAIhyB,EAAI,EAAGA,EAAInD,EAAMiD,OAAQE,IAChC,GAAInD,EAAMmD,GAAGgyB,QAAUA,EAAO,CAC5B,IAAI21D,EAAO9qF,EAAM,GAGjB,OAFAA,EAAM,GAAKA,EAAMmD,GACjBnD,EAAMmD,GAAK2nF,EACJ9qF,EAAM,GAAGyL,MACjB,CAGH,IAAIA,EAAS6R,EAAE6X,GAWf,OATAn1B,EAAMkgB,QAAQ,CACZiV,QACA1pB,WAGEzL,EAAMiD,OA7BU,IA8BlBjD,EAAMwa,MAGD/O,CACR,GA4FH,SAASlH,EAAKwmF,EAAOJ,GACL,KAAVI,IACFA,EAAQ,KAEI,KAAVJ,IACFA,EAAQ,KAEV,IAAIK,EAAWf,EAASU,GACpBM,EAAWhB,EAASc,GAMxB,GALIE,IACFF,EAAQE,EAASpiF,MAAQ,KAIvBmiF,IAAaA,EAASb,OAIxB,OAHIc,IACFD,EAASb,OAASc,EAASd,QAEtBI,EAAYS,GAGrB,GAAIA,GAAYL,EAAMhxE,MAAMqwE,GAC1B,OAAOW,EAIT,GAAIM,IAAaA,EAASZ,OAASY,EAASpiF,KAE1C,OADAoiF,EAASZ,KAAOM,EACTJ,EAAYU,GAGrB,IAAIC,EAA6B,MAApBP,EAAM3kB,OAAO,GACtB2kB,EACAD,EAAUK,EAAM3mF,QAAQ,OAAQ,IAAM,IAAMumF,GAEhD,OAAIM,GACFA,EAASpiF,KAAOqiF,EACTX,EAAYU,IAEdC,CACR,CA1DD1sF,EAAQksF,UAAYA,EA2DpBlsF,EAAQ+F,KAAOA,EAEf/F,EAAQosF,WAAa,SAAUD,GAC7B,MAA2B,MAApBA,EAAM3kB,OAAO,IAAc+jB,EAAUh7E,KAAK47E,EAClD,EAwCDnsF,EAAQ2sF,SAhCR,SAAkBJ,EAAOJ,GACT,KAAVI,IACFA,EAAQ,KAGVA,EAAQA,EAAM3mF,QAAQ,MAAO,IAO7B,IADA,IAAI+S,EAAQ,EAC0B,IAA/BwzE,EAAMt9E,QAAQ09E,EAAQ,MAAY,CACvC,IAAInnF,EAAQmnF,EAAMK,YAAY,KAC9B,GAAIxnF,EAAQ,EACV,OAAO+mF,EAOT,IADAI,EAAQA,EAAMrnF,MAAM,EAAGE,IACb+V,MAAM,qBACd,OAAOgxE,IAGPxzE,CACH,CAGD,OAAOlT,MAAMkT,EAAQ,GAAG5S,KAAK,OAASomF,EAAM1wC,OAAO8wC,EAAM9nF,OAAS,EACnE,EAGD,IAAIooF,IAEO,cADC/sF,OAAOyY,OAAO,OAI1B,SAASu0E,EAAUtvE,GACjB,OAAOA,CACR,CA6BD,SAASuvE,EAAcvvE,GACrB,IAAKA,EACH,OAAO,EAGT,IAAI/Y,EAAS+Y,EAAE/Y,OAEf,GAAIA,EAAS,EACX,OAAO,EAGT,GAAiC,KAA7B+Y,EAAEs9B,WAAWr2C,EAAS,IACO,KAA7B+Y,EAAEs9B,WAAWr2C,EAAS,IACO,MAA7B+Y,EAAEs9B,WAAWr2C,EAAS,IACO,MAA7B+Y,EAAEs9B,WAAWr2C,EAAS,IACO,MAA7B+Y,EAAEs9B,WAAWr2C,EAAS,IACO,MAA7B+Y,EAAEs9B,WAAWr2C,EAAS,IACO,MAA7B+Y,EAAEs9B,WAAWr2C,EAAS,IACO,KAA7B+Y,EAAEs9B,WAAWr2C,EAAS,IACO,KAA7B+Y,EAAEs9B,WAAWr2C,EAAS,GACxB,OAAO,EAGT,IAAK,IAAIE,EAAIF,EAAS,GAAIE,GAAK,EAAGA,IAChC,GAAwB,KAApB6Y,EAAEs9B,WAAWn2C,GACf,OAAO,EAIX,OAAO,CACR,CAmID,SAASqoF,EAAOC,EAAOC,GACrB,OAAID,IAAUC,EACL,EAGK,OAAVD,EACK,EAGK,OAAVC,GACM,EAGND,EAAQC,EACH,GAGD,CACT,CA9LDltF,EAAQmtF,YAAcN,EAAoBC,EAP1C,SAAqBM,GACnB,OAAIL,EAAcK,GACT,IAAMA,EAGRA,CACR,EAUDptF,EAAQqtF,cAAgBR,EAAoBC,EAP5C,SAAuBM,GACrB,OAAIL,EAAcK,GACTA,EAAKloF,MAAM,GAGbkoF,CACR,EAuEDptF,EAAQstF,2BA5BR,SAAoCC,EAAUC,EAAUC,GACtD,IAAIC,EAAMV,EAAOO,EAASzpF,OAAQ0pF,EAAS1pF,QAC3C,OAAY,IAAR4pF,GAKQ,IADZA,EAAMH,EAASI,aAAeH,EAASG,eAM3B,IADZD,EAAMH,EAASK,eAAiBJ,EAASI,iBACxBH,GAKL,IADZC,EAAMH,EAASM,gBAAkBL,EAASK,kBAM9B,IADZH,EAAMH,EAASO,cAAgBN,EAASM,eAlB/BJ,EAuBFV,EAAOO,EAAS3sF,KAAM4sF,EAAS5sF,KACvC,EA4BDZ,EAAQ+tF,mCAzBR,SAA4CR,EAAUC,EAAUC,GAC9D,IAAIC,EAGJ,OAAY,IADZA,EAAMH,EAASI,aAAeH,EAASG,eAM3B,IADZD,EAAMH,EAASK,eAAiBJ,EAASI,iBACxBH,GAKL,IADZC,EAAMH,EAASM,gBAAkBL,EAASK,kBAM9B,IADZH,EAAMH,EAASO,cAAgBN,EAASM,eAb/BJ,EAkBFV,EAAOO,EAAS3sF,KAAM4sF,EAAS5sF,KACvC,EAwCDZ,EAAQguF,oCA5BR,SAA6CT,EAAUC,EAAUS,GAC/D,IAAIP,EAAMH,EAASO,cAAgBN,EAASM,cAC5C,OAAY,IAARJ,GAKQ,IADZA,EAAMH,EAASM,gBAAkBL,EAASK,kBACzBI,GAKL,KADZP,EAAMV,EAAOO,EAASzpF,OAAQ0pF,EAAS1pF,UAM3B,IADZ4pF,EAAMH,EAASI,aAAeH,EAASG,eAM3B,IADZD,EAAMH,EAASK,eAAiBJ,EAASI,gBAlBhCF,EAuBFV,EAAOO,EAAS3sF,KAAM4sF,EAAS5sF,KACvC,EA0BDZ,EAAQkuF,0CAvBR,SAAmDX,EAAUC,EAAUS,GACrE,IAAIP,EAAMH,EAASM,gBAAkBL,EAASK,gBAC9C,OAAY,IAARH,GAAaO,GAKL,KADZP,EAAMV,EAAOO,EAASzpF,OAAQ0pF,EAAS1pF,UAM3B,IADZ4pF,EAAMH,EAASI,aAAeH,EAASG,eAM3B,IADZD,EAAMH,EAASK,eAAiBJ,EAASI,gBAbhCF,EAkBFV,EAAOO,EAAS3sF,KAAM4sF,EAAS5sF,KACvC,EAuDDZ,EAAQmuF,oCA5BR,SAA6CZ,EAAUC,GACrD,IAAIE,EAAMH,EAASO,cAAgBN,EAASM,cAC5C,OAAY,IAARJ,GAKQ,IADZA,EAAMH,EAASM,gBAAkBL,EAASK,kBAM9B,KADZH,EAAMV,EAAOO,EAASzpF,OAAQ0pF,EAAS1pF,UAM3B,IADZ4pF,EAAMH,EAASI,aAAeH,EAASG,eAM3B,IADZD,EAAMH,EAASK,eAAiBJ,EAASI,gBAlBhCF,EAuBFV,EAAOO,EAAS3sF,KAAM4sF,EAAS5sF,KACvC,EAWDZ,EAAQouF,oBAHR,SAA6B/hF,GAC3B,OAAO8wE,KAAK3tE,MAAMnD,EAAIzG,QAAQ,iBAAkB,IACjD,EAsDD5F,EAAQquF,iBA/CR,SAA0BC,EAAYC,EAAWC,GA8B/C,GA7BAD,EAAYA,GAAa,GAErBD,IAEwC,MAAtCA,EAAWA,EAAW7pF,OAAS,IAA+B,MAAjB8pF,EAAU,KACzDD,GAAc,KAOhBC,EAAYD,EAAaC,GAiBvBC,EAAc,CAChB,IAAIC,EAAShD,EAAS+C,GACtB,IAAKC,EACH,MAAM,IAAI9tF,MAAM,oCAElB,GAAI8tF,EAAOpkF,KAAM,CAEf,IAAIjF,EAAQqpF,EAAOpkF,KAAKuiF,YAAY,KAChCxnF,GAAS,IACXqpF,EAAOpkF,KAAOokF,EAAOpkF,KAAK8V,UAAU,EAAG/a,EAAQ,GAElD,CACDmpF,EAAYxoF,EAAKgmF,EAAY0C,GAASF,EACvC,CAED,OAAOrC,EAAUqC,EAClB,C,qBChlBA,oBAASpN,EAAMC,GACZ,aAKIC,EAAqB,QAAf,4BAMN,WAMJ,SAASqN,EAAYriF,GACjB,OAAOA,EAAIm7D,OAAO,GAAGjuD,cAAgBlN,EAAI8T,UAAU,EACtD,CAED,SAASwuE,EAAQ5vE,GACb,OAAO,WACH,OAAOjG,KAAKiG,EACf,CACJ,CAED,IAAI6vE,EAAe,CAAC,gBAAiB,SAAU,WAAY,cACvDC,EAAe,CAAC,eAAgB,cAChCC,EAAc,CAAC,WAAY,eAAgB,UAG3CC,EAAQH,EAAarhF,OAAOshF,EAAcC,EAF7B,CAAC,SAIlB,SAASxN,EAAWjgF,GAChB,GAAKA,EACL,IAAK,IAAIsD,EAAI,EAAGA,EAAIoqF,EAAMtqF,OAAQE,SACRmD,IAAlBzG,EAAI0tF,EAAMpqF,KACVmU,KAAK,MAAQ41E,EAAYK,EAAMpqF,KAAKtD,EAAI0tF,EAAMpqF,IAGzD,CAED28E,EAAWt/E,UAAY,CACnBgtF,QAAS,WACL,OAAOl2E,KAAK9N,IACf,EACDikF,QAAS,SAASxxE,GACd,GAA0C,mBAAtC3d,OAAOkC,UAAUke,SAAShe,KAAKub,GAC/B,MAAM,IAAIyE,UAAU,yBAExBpJ,KAAK9N,KAAOyS,CACf,EAEDyxE,cAAe,WACX,OAAOp2E,KAAKq2E,UACf,EACDC,cAAe,SAAS3xE,GACpB,GAAIA,aAAa6jE,EACbxoE,KAAKq2E,WAAa1xE,MACf,MAAIA,aAAa3d,QAGpB,MAAM,IAAIoiB,UAAU,+CAFpBpJ,KAAKq2E,WAAa,IAAI7N,EAAW7jE,EAGpC,CACJ,EAEDyC,SAAU,WACN,IAAIkiE,EAAWtpE,KAAKu2E,eAAiB,GACjCjvF,EAAa0Y,KAAKw2E,iBAAmB,GACrCjN,EAAevpE,KAAKy2E,mBAAqB,GACzCpN,EAAerpE,KAAK02E,mBAAqB,GAC7C,OAAI12E,KAAK22E,YACDrN,EACO,WAAaA,EAAW,IAAMhiF,EAAa,IAAMiiF,EAAe,IAEpE,UAAYjiF,EAAa,IAAMiiF,EAEtCF,EACOA,EAAe,KAAOC,EAAW,IAAMhiF,EAAa,IAAMiiF,EAAe,IAE7ED,EAAW,IAAMhiF,EAAa,IAAMiiF,CAC9C,GAGLf,EAAWoO,WAAa,SAAgCrjF,GACpD,IAAIsjF,EAAiBtjF,EAAIwC,QAAQ,KAC7B+gF,EAAevjF,EAAIugF,YAAY,KAE/BzK,EAAe91E,EAAI8T,UAAU,EAAGwvE,GAChC3kF,EAAOqB,EAAI8T,UAAUwvE,EAAiB,EAAGC,GAAcjsF,MAAM,KAC7DksF,EAAiBxjF,EAAI8T,UAAUyvE,EAAe,GAElD,GAAoC,IAAhCC,EAAehhF,QAAQ,KACvB,IAAIoL,EAAQ,gCAAgCyB,KAAKm0E,EAAgB,IAC7DzN,EAAWnoE,EAAM,GACjB7Z,EAAa6Z,EAAM,GACnBooE,EAAepoE,EAAM,GAG7B,OAAO,IAAIqnE,EAAW,CAClBa,aAAcA,EACdn3E,KAAMA,QAAQlD,EACds6E,SAAUA,EACVhiF,WAAYA,QAAc0H,EAC1Bu6E,aAAcA,QAAgBv6E,GAErC,EAED,IAAK,IAAInD,EAAI,EAAGA,EAAIiqF,EAAanqF,OAAQE,IACrC28E,EAAWt/E,UAAU,MAAQ0sF,EAAYE,EAAajqF,KAAOgqF,EAAQC,EAAajqF,IAClF28E,EAAWt/E,UAAU,MAAQ0sF,EAAYE,EAAajqF,KAAQ,SAASoa,GACnE,OAAO,SAAStB,GACZ3E,KAAKiG,GAAK6hE,QAAQnjE,EACrB,CACJ,CAJ6D,CAI3DmxE,EAAajqF,IAGpB,IAAK,IAAI6mB,EAAI,EAAGA,EAAIqjE,EAAapqF,OAAQ+mB,IACrC81D,EAAWt/E,UAAU,MAAQ0sF,EAAYG,EAAarjE,KAAOmjE,EAAQE,EAAarjE,IAClF81D,EAAWt/E,UAAU,MAAQ0sF,EAAYG,EAAarjE,KAAQ,SAASzM,GACnE,OAAO,SAAStB,GACZ,GA7GOtG,EA6GQsG,EA5GfvC,MAAM4tD,WAAW3xD,MAAO4lE,SAAS5lE,GA6G7B,MAAM,IAAI+K,UAAUnD,EAAI,qBA9GxC,IAAmB5H,EAgHP2B,KAAKiG,GAAKxD,OAAOkC,EACpB,CACJ,CAP6D,CAO3DoxE,EAAarjE,IAGpB,IAAK,IAAI5N,EAAI,EAAGA,EAAIkxE,EAAYrqF,OAAQmZ,IACpC0jE,EAAWt/E,UAAU,MAAQ0sF,EAAYI,EAAYlxE,KAAO+wE,EAAQG,EAAYlxE,IAChF0jE,EAAWt/E,UAAU,MAAQ0sF,EAAYI,EAAYlxE,KAAQ,SAASmB,GAClE,OAAO,SAAStB,GACZ3E,KAAKiG,GAAK/Z,OAAOyY,EACpB,CACJ,CAJ4D,CAI1DqxE,EAAYlxE,IAGnB,OAAO0jE,CACV,GAvIa,8BANb,G,2CCCD,MAAMn/D,EAAK7f,EAAQ,MACb+9E,EAAM/9E,EAAQ,MACd8f,EAAU9f,EAAQ,OAElB,IAAC2V,GAAOxX,EAEd,IAAImC,EAuBJ,SAASygB,EAAe1K,GACvB,OAAc,IAAVA,GAIG,CACNA,QACAuK,UAAU,EACVC,OAAQxK,GAAS,EACjByK,OAAQzK,GAAS,EAElB,CAED,SAASuB,EAAc41E,EAAYC,GAClC,GAAmB,IAAfntF,EACH,OAAO,EAGR,GAAIwf,EAAQ,cACXA,EAAQ,eACRA,EAAQ,mBACR,OAAO,EAGR,GAAIA,EAAQ,aACX,OAAO,EAGR,GAAI0tE,IAAeC,QAA8BjoF,IAAflF,EACjC,OAAO,EAGR,MAAM4B,EAAM5B,GAAc,EAE1B,GAAiB,SAAbqV,EAAIC,KACP,OAAO1T,EAGR,GAAyB,UAArB/D,EAAQuX,SAAsB,CAGjC,MAAMwK,EAAYL,EAAGM,UAAU9e,MAAM,KACrC,OACC4X,OAAOiH,EAAU,KAAO,IACxBjH,OAAOiH,EAAU,KAAO,MAEjBjH,OAAOiH,EAAU,KAAO,MAAQ,EAAI,EAGrC,CACP,CAED,GAAI,OAAQvK,EACX,MAAI,CAAC,SAAU,WAAY,WAAY,YAAa,iBAAkB,aAAarK,MAAK+U,GAAQA,KAAQ1K,KAAwB,aAAhBA,EAAI2K,QAC5G,EAGDpe,EAGR,GAAI,qBAAsByT,EACzB,MAAO,gCAAgC1H,KAAK0H,EAAI4K,kBAAoB,EAAI,EAGzE,GAAsB,cAAlB5K,EAAI6K,UACP,OAAO,EAGR,GAAI,iBAAkB7K,EAAK,CAC1B,MAAM8K,EAAUpI,UAAU1C,EAAI+K,sBAAwB,IAAIrf,MAAM,KAAK,GAAI,IAEzE,OAAQsU,EAAIgL,cACX,IAAK,YACJ,OAAOF,GAAW,EAAI,EAAI,EAC3B,IAAK,iBACJ,OAAO,EAGT,CAED,MAAI,iBAAiBxS,KAAK0H,EAAIC,MACtB,EAGJ,8DAA8D3H,KAAK0H,EAAIC,OAIvE,cAAeD,EAHX,EAODzT,CACP,CAnHG4d,EAAQ,aACXA,EAAQ,cACRA,EAAQ,gBACRA,EAAQ,eACRxf,EAAa,GACHwf,EAAQ,UAClBA,EAAQ,WACRA,EAAQ,eACRA,EAAQ,mBACRxf,EAAa,GAGV,gBAAiBqV,IAEnBrV,EADuB,SAApBqV,EAAIqL,YACM,EACiB,UAApBrL,EAAIqL,YACD,EAE2B,IAA3BrL,EAAIqL,YAAY7e,OAAe,EAAIxD,KAAKuD,IAAImW,SAAS1C,EAAIqL,YAAa,IAAK,IAwG1FvP,EAAO/T,QAAU,CAChBka,cAND,SAAyBoI,GAExB,OAAOe,EADOnJ,EAAcoI,EAAQA,GAAUA,EAAOC,OAErD,EAIAgB,OAAQF,EAAenJ,GAAc,EAAMmmE,EAAIQ,OAAO,KACtDr9D,OAAQH,EAAenJ,GAAc,EAAMmmE,EAAIQ,OAAO,K,2CCnIvD9sE,EAAO/T,QAAU,CAAC8iF,EAAMC,EAAOtiF,EAAQsiF,QACtC,MAAM/1E,EAAS81E,EAAK1qE,WAAW,KAAO,GAAsB,IAAhB0qE,EAAKr+E,OAAe,IAAM,KAChEurF,EAAWjN,EAAKl0E,QAAQ7B,EAAS81E,GACjCmN,EAAqBlN,EAAKl0E,QAAQ,MACxC,OAAqB,IAAdmhF,KAA4C,IAAxBC,GAA6BD,EAAWC,EAAnE,C,wBCLDl8E,EAAO/T,QAAU,SAAU8lF,GACzBA,EAAQ9jF,UAAUgkF,OAAOhb,UAAY,YACnC,IAAK,IAAIkc,EAASpuE,KAAKqvE,KAAMjB,EAAQA,EAASA,EAAOnrC,WAC7CmrC,EAAOjnF,KAEhB,CACF,C,8BCDD,SAAS6lF,EAAS19B,GAChB,IAAIzuC,EAAOb,KASX,GARMa,aAAgBmsE,IACpBnsE,EAAO,IAAImsE,GAGbnsE,EAAKk6D,KAAO,KACZl6D,EAAKwuE,KAAO,KACZxuE,EAAKlV,OAAS,EAEV2jD,GAAgC,mBAAjBA,EAAKn6C,QACtBm6C,EAAKn6C,SAAQ,SAAUu6E,GACrB7uE,EAAKpQ,KAAKi/E,EACX,SACI,GAAI70E,UAAUlP,OAAS,EAC5B,IAAK,IAAIE,EAAI,EAAGwY,EAAIxJ,UAAUlP,OAAQE,EAAIwY,EAAGxY,IAC3CgV,EAAKpQ,KAAKoK,UAAUhP,IAIxB,OAAOgV,CACR,CAoXD,SAASqzD,EAAM/sE,EAAOmoE,EAAMrsB,EAAMqM,GAChC,KAAMtvC,gBAAgBk0D,GACpB,OAAO,IAAIA,EAAK/sE,EAAOmoE,EAAMrsB,EAAMqM,GAGrCtvC,KAAKsvC,KAAOA,EACZtvC,KAAK7Y,MAAQA,EAETmoE,GACFA,EAAKrsB,KAAOjjC,KACZA,KAAKsvD,KAAOA,GAEZtvD,KAAKsvD,KAAO,KAGVrsB,GACFA,EAAKqsB,KAAOtvD,KACZA,KAAKijC,KAAOA,GAEZjjC,KAAKijC,KAAO,IAEf,CAnaDhoC,EAAO/T,QAAU8lF,EAEjBA,EAAQ9Y,KAAOA,EACf8Y,EAAQvtE,OAASutE,EAyBjBA,EAAQ9jF,UAAUmlF,WAAa,SAAUlhF,GACvC,GAAIA,EAAKmiD,OAAStvC,KAChB,MAAM,IAAInY,MAAM,oDAGlB,IAAIo7C,EAAO91C,EAAK81C,KACZqsB,EAAOniE,EAAKmiE,KAsBhB,OApBIrsB,IACFA,EAAKqsB,KAAOA,GAGVA,IACFA,EAAKrsB,KAAOA,GAGV91C,IAAS6S,KAAKqvE,OAChBrvE,KAAKqvE,KAAOpsC,GAEV91C,IAAS6S,KAAK+6D,OAChB/6D,KAAK+6D,KAAOzL,GAGdniE,EAAKmiD,KAAK3jD,SACVwB,EAAK81C,KAAO,KACZ91C,EAAKmiE,KAAO,KACZniE,EAAKmiD,KAAO,KAELrM,CACR,EAED+pC,EAAQ9jF,UAAUglF,YAAc,SAAU/gF,GACxC,GAAIA,IAAS6S,KAAKqvE,KAAlB,CAIIliF,EAAKmiD,MACPniD,EAAKmiD,KAAK++B,WAAWlhF,GAGvB,IAAIkiF,EAAOrvE,KAAKqvE,KAChBliF,EAAKmiD,KAAOtvC,KACZ7S,EAAK81C,KAAOosC,EACRA,IACFA,EAAK/f,KAAOniE,GAGd6S,KAAKqvE,KAAOliF,EACP6S,KAAK+6D,OACR/6D,KAAK+6D,KAAO5tE,GAEd6S,KAAKrU,QAjBJ,CAkBF,EAEDqhF,EAAQ9jF,UAAUkuF,SAAW,SAAUjqF,GACrC,GAAIA,IAAS6S,KAAK+6D,KAAlB,CAII5tE,EAAKmiD,MACPniD,EAAKmiD,KAAK++B,WAAWlhF,GAGvB,IAAI4tE,EAAO/6D,KAAK+6D,KAChB5tE,EAAKmiD,KAAOtvC,KACZ7S,EAAKmiE,KAAOyL,EACRA,IACFA,EAAK93B,KAAO91C,GAGd6S,KAAK+6D,KAAO5tE,EACP6S,KAAKqvE,OACRrvE,KAAKqvE,KAAOliF,GAEd6S,KAAKrU,QAjBJ,CAkBF,EAEDqhF,EAAQ9jF,UAAUuH,KAAO,WACvB,IAAK,IAAI5E,EAAI,EAAGwY,EAAIxJ,UAAUlP,OAAQE,EAAIwY,EAAGxY,IAoR1B6jF,EAnRN70E,UAAUhP,IAmRVgV,EAnRNb,MAoRF+6D,KAAO,IAAI7G,EAAKwb,EAAM7uE,EAAKk6D,KAAM,KAAMl6D,GACvCA,EAAKwuE,OACRxuE,EAAKwuE,KAAOxuE,EAAKk6D,MAEnBl6D,EAAKlV,SALP,IAAekV,EAAM6uE,EAjRnB,OAAO1vE,KAAKrU,MACb,EAEDqhF,EAAQ9jF,UAAU0f,QAAU,WAC1B,IAAK,IAAI/c,EAAI,EAAGwY,EAAIxJ,UAAUlP,OAAQE,EAAIwY,EAAGxY,IAqRvB6jF,EApRN70E,UAAUhP,IAoRVgV,EApRNb,MAqRLqvE,KAAO,IAAInb,EAAKwb,EAAM,KAAM7uE,EAAKwuE,KAAMxuE,GACvCA,EAAKk6D,OACRl6D,EAAKk6D,KAAOl6D,EAAKwuE,MAEnBxuE,EAAKlV,SALP,IAAkBkV,EAAM6uE,EAlRtB,OAAO1vE,KAAKrU,MACb,EAEDqhF,EAAQ9jF,UAAUga,IAAM,WACtB,GAAKlD,KAAK+6D,KAAV,CAIA,IAAIlX,EAAM7jD,KAAK+6D,KAAK5zE,MAQpB,OAPA6Y,KAAK+6D,KAAO/6D,KAAK+6D,KAAKzL,KAClBtvD,KAAK+6D,KACP/6D,KAAK+6D,KAAK93B,KAAO,KAEjBjjC,KAAKqvE,KAAO,KAEdrvE,KAAKrU,SACEk4D,CAVN,CAWF,EAEDmpB,EAAQ9jF,UAAU6gF,MAAQ,WACxB,GAAK/pE,KAAKqvE,KAAV,CAIA,IAAIxrB,EAAM7jD,KAAKqvE,KAAKloF,MAQpB,OAPA6Y,KAAKqvE,KAAOrvE,KAAKqvE,KAAKpsC,KAClBjjC,KAAKqvE,KACPrvE,KAAKqvE,KAAK/f,KAAO,KAEjBtvD,KAAK+6D,KAAO,KAEd/6D,KAAKrU,SACEk4D,CAVN,CAWF,EAEDmpB,EAAQ9jF,UAAUiM,QAAU,SAAUxC,EAAI67E,GACxCA,EAAQA,GAASxuE,KACjB,IAAK,IAAIouE,EAASpuE,KAAKqvE,KAAMxjF,EAAI,EAAc,OAAXuiF,EAAiBviF,IACnD8G,EAAGvJ,KAAKolF,EAAOJ,EAAOjnF,MAAO0E,EAAGmU,MAChCouE,EAASA,EAAOnrC,IAEnB,EAED+pC,EAAQ9jF,UAAUmuF,eAAiB,SAAU1kF,EAAI67E,GAC/CA,EAAQA,GAASxuE,KACjB,IAAK,IAAIouE,EAASpuE,KAAK+6D,KAAMlvE,EAAImU,KAAKrU,OAAS,EAAc,OAAXyiF,EAAiBviF,IACjE8G,EAAGvJ,KAAKolF,EAAOJ,EAAOjnF,MAAO0E,EAAGmU,MAChCouE,EAASA,EAAO9e,IAEnB,EAED0d,EAAQ9jF,UAAUL,IAAM,SAAUwV,GAChC,IAAK,IAAIxS,EAAI,EAAGuiF,EAASpuE,KAAKqvE,KAAiB,OAAXjB,GAAmBviF,EAAIwS,EAAGxS,IAE5DuiF,EAASA,EAAOnrC,KAElB,GAAIp3C,IAAMwS,GAAgB,OAAX+vE,EACb,OAAOA,EAAOjnF,KAEjB,EAED6lF,EAAQ9jF,UAAUouF,WAAa,SAAUj5E,GACvC,IAAK,IAAIxS,EAAI,EAAGuiF,EAASpuE,KAAK+6D,KAAiB,OAAXqT,GAAmBviF,EAAIwS,EAAGxS,IAE5DuiF,EAASA,EAAO9e,KAElB,GAAIzjE,IAAMwS,GAAgB,OAAX+vE,EACb,OAAOA,EAAOjnF,KAEjB,EAED6lF,EAAQ9jF,UAAUmD,IAAM,SAAUsG,EAAI67E,GACpCA,EAAQA,GAASxuE,KAEjB,IADA,IAAI6jD,EAAM,IAAImpB,EACLoB,EAASpuE,KAAKqvE,KAAiB,OAAXjB,GAC3BvqB,EAAIpzD,KAAKkC,EAAGvJ,KAAKolF,EAAOJ,EAAOjnF,MAAO6Y,OACtCouE,EAASA,EAAOnrC,KAElB,OAAO4gB,CACR,EAEDmpB,EAAQ9jF,UAAUquF,WAAa,SAAU5kF,EAAI67E,GAC3CA,EAAQA,GAASxuE,KAEjB,IADA,IAAI6jD,EAAM,IAAImpB,EACLoB,EAASpuE,KAAK+6D,KAAiB,OAAXqT,GAC3BvqB,EAAIpzD,KAAKkC,EAAGvJ,KAAKolF,EAAOJ,EAAOjnF,MAAO6Y,OACtCouE,EAASA,EAAO9e,KAElB,OAAOzL,CACR,EAEDmpB,EAAQ9jF,UAAUgN,OAAS,SAAUvD,EAAI6kF,GACvC,IAAIrhF,EACAi4E,EAASpuE,KAAKqvE,KAClB,GAAIx0E,UAAUlP,OAAS,EACrBwK,EAAMqhF,MACD,KAAIx3E,KAAKqvE,KAId,MAAM,IAAIjmE,UAAU,8CAHpBglE,EAASpuE,KAAKqvE,KAAKpsC,KACnB9sC,EAAM6J,KAAKqvE,KAAKloF,KAGjB,CAED,IAAK,IAAI0E,EAAI,EAAc,OAAXuiF,EAAiBviF,IAC/BsK,EAAMxD,EAAGwD,EAAKi4E,EAAOjnF,MAAO0E,GAC5BuiF,EAASA,EAAOnrC,KAGlB,OAAO9sC,CACR,EAED62E,EAAQ9jF,UAAUuuF,cAAgB,SAAU9kF,EAAI6kF,GAC9C,IAAIrhF,EACAi4E,EAASpuE,KAAK+6D,KAClB,GAAIlgE,UAAUlP,OAAS,EACrBwK,EAAMqhF,MACD,KAAIx3E,KAAK+6D,KAId,MAAM,IAAI3xD,UAAU,8CAHpBglE,EAASpuE,KAAK+6D,KAAKzL,KACnBn5D,EAAM6J,KAAK+6D,KAAK5zE,KAGjB,CAED,IAAK,IAAI0E,EAAImU,KAAKrU,OAAS,EAAc,OAAXyiF,EAAiBviF,IAC7CsK,EAAMxD,EAAGwD,EAAKi4E,EAAOjnF,MAAO0E,GAC5BuiF,EAASA,EAAO9e,KAGlB,OAAOn5D,CACR,EAED62E,EAAQ9jF,UAAUomF,QAAU,WAE1B,IADA,IAAIM,EAAM,IAAIjjF,MAAMqT,KAAKrU,QAChBE,EAAI,EAAGuiF,EAASpuE,KAAKqvE,KAAiB,OAAXjB,EAAiBviF,IACnD+jF,EAAI/jF,GAAKuiF,EAAOjnF,MAChBinF,EAASA,EAAOnrC,KAElB,OAAO2sC,CACR,EAED5C,EAAQ9jF,UAAUwuF,eAAiB,WAEjC,IADA,IAAI9H,EAAM,IAAIjjF,MAAMqT,KAAKrU,QAChBE,EAAI,EAAGuiF,EAASpuE,KAAK+6D,KAAiB,OAAXqT,EAAiBviF,IACnD+jF,EAAI/jF,GAAKuiF,EAAOjnF,MAChBinF,EAASA,EAAO9e,KAElB,OAAOsgB,CACR,EAED5C,EAAQ9jF,UAAUkD,MAAQ,SAAUsI,EAAM8T,IACxCA,EAAKA,GAAMxI,KAAKrU,QACP,IACP6c,GAAMxI,KAAKrU,SAEb+I,EAAOA,GAAQ,GACJ,IACTA,GAAQsL,KAAKrU,QAEf,IAAI2wE,EAAM,IAAI0Q,EACd,GAAIxkE,EAAK9T,GAAQ8T,EAAK,EACpB,OAAO8zD,EAEL5nE,EAAO,IACTA,EAAO,GAEL8T,EAAKxI,KAAKrU,SACZ6c,EAAKxI,KAAKrU,QAEZ,IAAK,IAAIE,EAAI,EAAGuiF,EAASpuE,KAAKqvE,KAAiB,OAAXjB,GAAmBviF,EAAI6I,EAAM7I,IAC/DuiF,EAASA,EAAOnrC,KAElB,KAAkB,OAAXmrC,GAAmBviF,EAAI2c,EAAI3c,IAAKuiF,EAASA,EAAOnrC,KACrDq5B,EAAI7rE,KAAK29E,EAAOjnF,OAElB,OAAOm1E,CACR,EAED0Q,EAAQ9jF,UAAUyuF,aAAe,SAAUjjF,EAAM8T,IAC/CA,EAAKA,GAAMxI,KAAKrU,QACP,IACP6c,GAAMxI,KAAKrU,SAEb+I,EAAOA,GAAQ,GACJ,IACTA,GAAQsL,KAAKrU,QAEf,IAAI2wE,EAAM,IAAI0Q,EACd,GAAIxkE,EAAK9T,GAAQ8T,EAAK,EACpB,OAAO8zD,EAEL5nE,EAAO,IACTA,EAAO,GAEL8T,EAAKxI,KAAKrU,SACZ6c,EAAKxI,KAAKrU,QAEZ,IAAK,IAAIE,EAAImU,KAAKrU,OAAQyiF,EAASpuE,KAAK+6D,KAAiB,OAAXqT,GAAmBviF,EAAI2c,EAAI3c,IACvEuiF,EAASA,EAAO9e,KAElB,KAAkB,OAAX8e,GAAmBviF,EAAI6I,EAAM7I,IAAKuiF,EAASA,EAAO9e,KACvDgN,EAAI7rE,KAAK29E,EAAOjnF,OAElB,OAAOm1E,CACR,EAED0Q,EAAQ9jF,UAAUwP,OAAS,SAAUzQ,EAAO2vF,GACtC3vF,EAAQ+X,KAAKrU,SACf1D,EAAQ+X,KAAKrU,OAAS,GAEpB1D,EAAQ,IACVA,EAAQ+X,KAAKrU,OAAS1D,GAGxB,IAAK,IAAI4D,EAAI,EAAGuiF,EAASpuE,KAAKqvE,KAAiB,OAAXjB,GAAmBviF,EAAI5D,EAAO4D,IAChEuiF,EAASA,EAAOnrC,KAGlB,IAgCepiC,EAAM1T,EAAMhG,EACvB0wF,EAjCAvb,EAAM,GACV,IAASzwE,EAAI,EAAGuiF,GAAUviF,EAAI+rF,EAAa/rF,IACzCywE,EAAI7rE,KAAK29E,EAAOjnF,OAChBinF,EAASpuE,KAAKquE,WAAWD,GAU3B,IARe,OAAXA,IACFA,EAASpuE,KAAK+6D,MAGZqT,IAAWpuE,KAAKqvE,MAAQjB,IAAWpuE,KAAK+6D,OAC1CqT,EAASA,EAAO9e,MAGTzjE,EAAI,EAAGA,EAAIgP,UAAUlP,OAAQE,IAmBX1E,EAlBK0T,UAAUhP,GAmBtCgsF,SAIkB,QAJlBA,GADiB1qF,EAlBGihF,MAkBTvtE,EAlBGb,MAmBWqvE,KAC3B,IAAInb,EAAK/sE,EAAO,KAAMgG,EAAM0T,GAC5B,IAAIqzD,EAAK/sE,EAAOgG,EAAMA,EAAK81C,KAAMpiC,IAEtBoiC,OACXpiC,EAAKk6D,KAAO8c,GAEQ,OAAlBA,EAASvoB,OACXzuD,EAAKwuE,KAAOwI,GAGdh3E,EAAKlV,SA9BHyiF,EAgCKyJ,EA9BP,OAAOvb,CACR,EAED0Q,EAAQ9jF,UAAUkP,QAAU,WAG1B,IAFA,IAAIi3E,EAAOrvE,KAAKqvE,KACZtU,EAAO/6D,KAAK+6D,KACPqT,EAASiB,EAAiB,OAAXjB,EAAiBA,EAASA,EAAO9e,KAAM,CAC7D,IAAIrpD,EAAImoE,EAAO9e,KACf8e,EAAO9e,KAAO8e,EAAOnrC,KACrBmrC,EAAOnrC,KAAOh9B,CACf,CAGD,OAFAjG,KAAKqvE,KAAOtU,EACZ/6D,KAAK+6D,KAAOsU,EACLrvE,IACR,EA0DD,IAEExW,EAAQ,KAARA,CAAyBwjF,EAC1B,CAAC,MAAO8K,GAAM,C,4BCvaf9wF,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAAA,aAAkB,EAClB,MAAM6wF,EAAY,WA0PlB7wF,EAAAA,QAxPA,MACEiZ,YAAY9T,GACV2T,KAAKg4E,KAAO,KACZh4E,KAAKi4E,KAAO,GACZj4E,KAAKk4E,MAAQ,GACbl4E,KAAKm4E,OAAS,GACdn4E,KAAKo4E,UAAY,CACf/vF,KAAM,EACNH,OAAQ,GAEV8X,KAAKq4E,gBAAkB,CACrB5mE,eAAgB,KAChBppB,KAAM,KACNH,OAAQ,KACRspB,SAAU,MAEZxR,KAAKs4E,eAAiB,KACtBt4E,KAAKg4E,KAAO3rF,CACb,CAEDxD,MACEmX,KAAKu4E,SAEL,MAAMlsF,EAAM2T,KAAKg4E,KACX7jF,EAAS,CACbb,KAAM0M,KAAKi4E,KAAKhrF,KAAK,IAAIurF,YACzBnsF,IAAK,KACLosF,YAAoB,MAAPpsF,OAAc,EAASA,EAAIqsF,kBAsB1C,OAnBIrsF,GACFrF,OAAOC,eAAekN,EAAQ,MAAO,CACnC4yE,cAAc,EACd7rE,YAAY,EAEZrS,MACE,OAAOmX,KAAK3T,IAAMA,EAAIxD,KACvB,EAEDS,IAAInC,GACFH,OAAOC,eAAe+Y,KAAM,MAAO,CACjC7Y,QACAwxF,UAAU,GAEb,IAKExkF,CACR,CAEDykF,OAAOrlF,GACLyM,KAAKu4E,SAEL,MAAM,KACJlwF,EADI,OAEJH,EAFI,SAGJspB,EAHI,eAIJC,EAJI,MAKJonE,GACE74E,KAAKq4E,gBAETr4E,KAAK84E,QAAQvlF,EAAKlL,EAAMH,EAAQupB,EAAgBD,EAAUqnE,EAC3D,CAED9vE,MAAMxV,GACJ,GAAY,OAARA,EACF,KAAOyM,KAAKm4E,OAAOxsF,OAAS,GAAKosF,EAAUtgF,KAAKuI,KAAKm4E,OAAO,GAAG,KAC7Dn4E,KAAKm4E,OAAOpO,QAIhB,MAAM,KACJ1hF,EADI,OAEJH,EAFI,SAGJspB,EAHI,eAIJC,EAJI,MAKJonE,GACE74E,KAAKq4E,gBAETr4E,KAAKm4E,OAAOvvE,QAAQ,CAACrV,EAAKlL,EAAMH,EAAQupB,EAAgBD,EAAUqnE,GACnE,CAEDN,SACE,IAAI7I,EAEJ,KAAOA,EAAO1vE,KAAKm4E,OAAOj1E,OAAOlD,KAAK84E,WAAWpJ,EAClD,CAEDoJ,QAAQvlF,EAAKlL,EAAMH,EAAQupB,EAAgBD,EAAUqnE,GACnD74E,KAAKi4E,KAAKxnF,KAAK8C,GAEfyM,KAAKk4E,MAAQ3kF,EAAIA,EAAI5H,OAAS,GAC9B,IAAIE,EAAI0H,EAAIwC,QAAQ,MAChBic,EAAO,EAMX,IAJU,IAANnmB,GACFmU,KAAK+4E,MAAM1wF,EAAMH,EAAQupB,EAAgBD,EAAUqnE,IAGvC,IAAPhtF,GACLmU,KAAKo4E,UAAU/vF,OACf2X,KAAKo4E,UAAUlwF,OAAS,EACxB8pB,EAAOnmB,EAAI,EAEPmmB,EAAOze,EAAI5H,QACbqU,KAAK+4E,QAAQ1wF,EAAM,EAAGopB,EAAgBD,EAAUqnE,GAGlDhtF,EAAI0H,EAAIwC,QAAQ,KAAMic,GAGxBhS,KAAKo4E,UAAUlwF,QAAUqL,EAAI5H,OAASqmB,CACvC,CAED+mE,MAAM1wF,EAAMH,EAAQupB,EAAgBD,EAAUqnE,GAC5C,IAAIG,EAEwB,OAA3BA,EAAah5E,KAAKg4E,OAAyBgB,EAAWC,KAAKj5E,KAAKo4E,UAAU/vF,KAAM2X,KAAKo4E,UAAUlwF,OAAQG,EAAMH,EAAQupB,EAAgBD,EAAUqnE,EACjJ,CAEDK,wBACMl5E,KAAKm4E,OAAOxsF,OAAS,GAA2B,OAAtBqU,KAAKm4E,OAAO,GAAG,IAC3Cn4E,KAAKm4E,OAAOpO,OAEf,CAEDoP,sBACMn5E,KAAKm4E,OAAOxsF,OAAS,GAA2B,MAAtBqU,KAAKm4E,OAAO,GAAG,IAC3Cn4E,KAAKm4E,OAAOpO,OAEf,CAEDqP,SAASC,GACP,GAAsB,IAAlBA,EAAO1tF,OAAc,CACvB,IAAIqmB,EAEJ,GAAIhS,KAAKm4E,OAAOxsF,OAAS,EAAG,CAC1B,MAAM4H,EAAMyM,KAAKm4E,OAAO,GAAG,GAC3BnmE,EAAOze,EAAIA,EAAI5H,OAAS,EACzB,MACCqmB,EAAOhS,KAAKk4E,MAGd,OAAOlmE,IAASqnE,CACjB,CAED,MAAMvuF,EAAMkV,KAAKk4E,MAAQl4E,KAAKm4E,OAAOjiF,QAAO,CAACC,EAAKu5E,IAASA,EAAK,GAAKv5E,GAAK,IAE1E,OAAIkjF,EAAO1tF,QAAUb,EAAIa,QAChBb,EAAIsB,OAAOitF,EAAO1tF,UAAY0tF,CAIxC,CAEDC,aACE,OAAOt5E,KAAKm4E,OAAOxsF,OAAS,KAAOqU,KAAKk4E,KACzC,CAEDqB,YAAY5vF,EAAK44D,GACfviD,KAAKhV,OAAO,QAASrB,GAAK,GAC1B44D,IACAviD,KAAKhV,OAAO,MAAOrB,GAEnBqW,KAAKw5E,aAAa,QAAS7vF,EAC5B,CAEDqB,OAAO2pC,EAAMhrC,EAAKkvF,GACZlkD,IAAShrC,GAEbqW,KAAKy5E,mBAAmB9kD,EAAMhrC,EAAKqW,KAAKq4E,gBAAiBQ,EAC1D,CAEDa,WAAW/kD,EAAMhrC,EAAK44D,GACpB,IAAKviD,KAAKg4E,KAAM,OAAOz1B,IACvB,MAAMsyB,EAAe70E,KAAKq4E,gBAAgBhwF,KACpCysF,EAAiB90E,KAAKq4E,gBAAgBnwF,OACtCyxF,EAAmB35E,KAAKq4E,gBAAgB7mE,SACxCooE,EAAyB55E,KAAKq4E,gBAAgB5mE,eACpDzR,KAAKhV,OAAO2pC,EAAMhrC,GAClB44D,IAEMviD,KAAKq4E,gBAAgBQ,OAAS74E,KAAKq4E,gBAAgBhwF,OAASwsF,GAAgB70E,KAAKq4E,gBAAgBnwF,SAAW4sF,GAAkB90E,KAAKq4E,gBAAgB7mE,WAAamoE,GAAuB35E,KAAKs4E,gBAAkBt4E,KAAKs4E,eAAejwF,OAASwsF,GAAgB70E,KAAKs4E,eAAepwF,SAAW4sF,GAAkB90E,KAAKs4E,eAAe9mE,WAAamoE,IACjV35E,KAAKq4E,gBAAgBhwF,KAAOwsF,EAC5B70E,KAAKq4E,gBAAgBnwF,OAAS4sF,EAC9B90E,KAAKq4E,gBAAgB7mE,SAAWmoE,EAChC35E,KAAKq4E,gBAAgB5mE,eAAiBmoE,EACtC55E,KAAKq4E,gBAAgBQ,OAAQ,EAC7B74E,KAAKs4E,eAAiB,KAEzB,CAEDkB,aAAa7kD,EAAMhrC,GACbgrC,IAAShrC,IACbqW,KAAKs4E,eAAiBt4E,KAAKy5E,mBAAmB9kD,EAAMhrC,GACrD,CAED8vF,mBAAmB9kD,EAAMhrC,EAAKkwF,EAAWhB,GACvC,MAAMr7D,EAAM7zB,EAAMA,EAAIgrC,GAAQ,UAEZ3lC,IAAd6qF,IACFA,EAAY,CACVpoE,eAAgB,KAChBppB,KAAM,KACNH,OAAQ,KACRspB,SAAU,KACVqnE,OAAO,IAIX,MAAMiB,EAAWD,EAAUxxF,KACrB0xF,EAAaF,EAAU3xF,OACvB8xF,EAAeH,EAAUroE,SAU/B,OATAqoE,EAAUpoE,eAA0B,UAATkjB,IAA4B,MAAPhrC,OAAc,EAASA,EAAI8nB,iBAAmB,KAC9FooE,EAAUxxF,KAAc,MAAPm1B,OAAc,EAASA,EAAIn1B,KAC5CwxF,EAAU3xF,OAAgB,MAAPs1B,OAAc,EAASA,EAAIt1B,OAC9C2xF,EAAUroE,SAAkB,MAAP7nB,OAAc,EAASA,EAAI6nB,UAE5CqnE,GAASgB,EAAUxxF,OAASyxF,GAAYD,EAAU3xF,SAAW6xF,GAAcF,EAAUroE,WAAawoE,KACpGH,EAAUhB,MAAQA,GAGbgB,CACR,CAEDI,mBACE,MAAMl8C,EAAQ/9B,KAAKm4E,OAAOjiF,QAAO,CAACC,EAAKu5E,IAASA,EAAK,GAAKv5E,GAAK,IAEzDwM,EAAYo7B,EAAM+1C,YAAY,MACpC,OAAsB,IAAfnxE,EAAmB3C,KAAKo4E,UAAUlwF,OAAS61C,EAAMpyC,OAASoyC,EAAMpyC,OAAS,EAAIgX,CACrF,CAEDu3E,iBACE,MAAMn8C,EAAQ/9B,KAAKm4E,OAAOjiF,QAAO,CAACC,EAAKu5E,IAASA,EAAK,GAAKv5E,GAAK,IAE/D,IAAIusC,EAAQ,EAEZ,IAAK,IAAI72C,EAAI,EAAGA,EAAIkyC,EAAMpyC,OAAQE,IACf,OAAbkyC,EAAMlyC,IAAa62C,IAGzB,OAAO1iC,KAAKo4E,UAAU/vF,KAAOq6C,CAC9B,E,4BC1PH17C,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQizF,KASR,SAAchtF,GACRA,EAAK8F,SACP+M,KAAKo6E,MAAMjtF,EAAK8F,QAAQ+pE,YAAa7vE,GAGvC6S,KAAKo6E,MAAMjtF,EAAK8F,QAAS9F,EAC1B,EAdDjG,EAAQmzF,QAgBR,SAAiBltF,GACf6S,KAAKs6E,mBAAmBntF,GAAM,GAC9B6S,KAAKu6E,cAAcptF,EAAKyxC,WAAYzxC,GAChCA,EAAKyxC,YAAczxC,EAAKyxC,WAAWjzC,QAAQqU,KAAKw6E,UACpDx6E,KAAKu6E,cAAcptF,EAAKmD,KAAMnD,EAC/B,EApBDjG,EAAQuzF,eAsBR,SAAwBttF,GACtB,IAAIutF,EAEJ16E,KAAKwL,MAAM,KACXxL,KAAKs6E,mBAAmBntF,GACxB,MAAMwtF,EAAwD,OAAvCD,EAAmBvtF,EAAKyxC,iBAAsB,EAAS87C,EAAiB/uF,OAE3FwB,EAAKmD,KAAK3E,QAAUgvF,GACtB36E,KAAKw6E,UACLx6E,KAAKu6E,cAAcptF,EAAKyxC,WAAYzxC,EAAM,CACxC49E,QAAQ,IAEN4P,GAAe36E,KAAKw6E,UACxBx6E,KAAKu6E,cAAcptF,EAAKmD,KAAMnD,EAAM,CAClC49E,QAAQ,IAEV/qE,KAAKk5E,wBACLl5E,KAAKhV,OAAO,MAAOmC,EAAKxD,KACnBqW,KAAKo5E,SAAS,OAAOp5E,KAAKw6E,UAC/Bx6E,KAAK46E,eAEL56E,KAAKhV,OAAO,MAAOmC,EAAKxD,KACxBqW,KAAKwL,MAAM,KAEd,EA7CDtkB,EAAQ2zF,KA+CR,WAAkB,EA9ClB3zF,EAAQ4zF,UAgDR,SAAmB3tF,GACjB6S,KAAKo6E,MAAMjtF,EAAKhG,MAAOgG,GACvB6S,KAAKwmC,WACN,EAlDDt/C,EAAQ6zF,iBAuDR,SAA0B5tF,GACxB,MAAM4B,EAAMiR,KAAKg7E,eAAe7tF,GAEhC,GAAW,MAAP4B,EAEF,YADAiR,KAAKwL,MAAMzc,GAIb,MAAM,MACJ5H,GACEgG,EAEJ,GAAK8tF,EAAuBxjF,KAAKtQ,GAE1B,IAAK+zF,EAAuBzjF,KAAKtQ,GAGtC,MAAM,IAAIU,MAAM,8GAFhBmY,KAAKwL,MAAO,IAAGrkB,KAGhB,MALC6Y,KAAKwL,MAAO,IAAGrkB,KAMlB,EAzEDD,EAAQi0F,qBA2ER,SAA8BhuF,GAC5B6S,KAAKwL,MAAO,KAAIre,EAAKhG,UACtB,EA5EDD,EAAQk0F,YA8ER,SAAqBjuF,GACnB6S,KAAKwL,MAAM,MACXxL,KAAKo6E,MAAMjtF,EAAKrF,MAChBkY,KAAKwL,MAAM,MAEe,cAAtBre,EAAKwK,cACPqI,KAAKwmC,WAER,EApCD,MAAM00C,EAAyB,wBACzBD,EAAyB,uB,8BC7D/Bj0F,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQm0F,gBAAkBn0F,EAAQo0F,iBAelC,SAA0BnuF,EAAMC,GACzB4S,KAAK4mE,OAAOxD,yBAA2B51E,EAAE2L,2BAA2B/L,IAAYI,EAAE+tF,yBAAyBnuF,KAC9G4S,KAAKw7E,UAAUruF,EAAK83D,WAAY93D,GAG9BA,EAAKk8C,UACPrpC,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGHtuF,EAAKkyD,WACPr/C,KAAK+gB,KAAK,YACV/gB,KAAKy7E,SAGPz7E,KAAK+gB,KAAK,SAEN5zB,EAAKG,KACP0S,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKG,GAAIH,IAGtB6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,GAE5BA,EAAK8vC,aACPj9B,KAAKy7E,QACLz7E,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAK8vC,WAAY9vC,GAC5B6S,KAAKo6E,MAAMjtF,EAAKslD,oBAAqBtlD,IAGnCA,EAAKk7C,aACProC,KAAKy7E,QACLz7E,KAAK+gB,KAAK,cACV/gB,KAAKy7E,QACLz7E,KAAK07E,UAAUvuF,EAAKk7C,WAAYl7C,IAGlC6S,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,EACvB,EAvDDjG,EAAQy0F,UAyDR,SAAmBxuF,GACjB6S,KAAKwL,MAAM,KACXxL,KAAKs6E,mBAAmBntF,GAEC,IAArBA,EAAKmD,KAAK3E,OACZqU,KAAKwL,MAAM,MAEXxL,KAAKw6E,UACLx6E,KAAK+qE,SACL/qE,KAAKu6E,cAAcptF,EAAKmD,KAAMnD,GAC9B6S,KAAK47E,SACA57E,KAAKo5E,SAAS,OAAOp5E,KAAKw6E,UAC/Bx6E,KAAK46E,aAER,EAtED1zF,EAAQ20F,cAwER,SAAuB1uF,GACrB6S,KAAKw7E,UAAUruF,EAAK83D,WAAY93D,GAChC6S,KAAK87E,4BAA4B3uF,GAAM,GAEnCA,EAAKS,UACPoS,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKlE,IAAKkE,GACrB6S,KAAKwL,MAAM,OAEXxL,KAAK+7E,UAAU5uF,GAEf6S,KAAKo6E,MAAMjtF,EAAKlE,IAAKkE,IAGnBA,EAAK2zC,UACP9gC,KAAKwL,MAAM,KAGTre,EAAKs6D,UACPznD,KAAKwL,MAAM,KAGbxL,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,GAE5BA,EAAKhG,QACP6Y,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKhG,MAAOgG,IAGzB6S,KAAKwmC,WACN,EAvGDt/C,EAAQ80F,qBAyGR,SAA8B7uF,GAC5B6S,KAAKw7E,UAAUruF,EAAK83D,WAAY93D,GAE5BA,EAAKu9C,SACP1qC,KAAK+gB,KAAK,UACV/gB,KAAKy7E,SAGPz7E,KAAKo6E,MAAMjtF,EAAKlE,IAAKkE,GACrB6S,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,GAE5BA,EAAKhG,QACP6Y,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKhG,MAAOgG,IAGzB6S,KAAKwmC,WACN,EA3HDt/C,EAAQ+0F,YA6HR,SAAqB9uF,GACnB6S,KAAKk8E,iBAAiB/uF,GAEtB6S,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,EACvB,EAjIDjG,EAAQi1F,mBAmIR,SAA4BhvF,GAC1B6S,KAAKk8E,iBAAiB/uF,GAEtB6S,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,EACvB,EAvIDjG,EAAQg1F,iBAyIR,SAA0B/uF,GACxB6S,KAAKw7E,UAAUruF,EAAK83D,WAAY93D,GAChC6S,KAAK87E,4BAA4B3uF,GAAM,GAEvC6S,KAAKo8E,YAAYjvF,EAClB,EA7IDjG,EAAQm1F,YA+IR,SAAqBlvF,GACnB6S,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACLz7E,KAAKwL,MAAM,KAEc,IAArBre,EAAKmD,KAAK3E,OACZqU,KAAKwL,MAAM,MAEXxL,KAAKw6E,UACLx6E,KAAKu6E,cAAcptF,EAAKmD,KAAMnD,EAAM,CAClC49E,QAAQ,IAEV/qE,KAAK46E,aAER,EA3JD,IAAIptF,EAIJ,SAAiCjF,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,iBAARA,GAAmC,mBAARA,EAAsB,MAAO,CAAEE,QAASF,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,CAAC,EAAOC,EAAwB/B,OAAOC,gBAAkBD,OAAOgC,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIvB,OAAOkC,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwB/B,OAAOgC,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQtC,OAAOC,eAAe6B,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,EAAS,CAAgE,OAA7DH,EAAOL,QAAUF,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAkBA,CAAS,CAJ/tBS,CAAwBC,EAAQ,OAExC,SAASb,IAA6B,GAAuB,mBAAZc,QAAwB,OAAO,KAAM,IAAIf,EAAQ,IAAIe,QAAqE,OAA1Dd,EAA2B,WAAc,OAAOD,CAAQ,EAASA,CAAQ,C,8BCd1L1B,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQo1F,gBAiCR,SAAyBnvF,GACD,SAAlBA,EAAKmB,UAAyC,WAAlBnB,EAAKmB,UAA2C,WAAlBnB,EAAKmB,UAA2C,UAAlBnB,EAAKmB,UAC/F0R,KAAK+gB,KAAK5zB,EAAKmB,UACf0R,KAAKy7E,SAELz7E,KAAKwL,MAAMre,EAAKmB,UAGlB0R,KAAKo6E,MAAMjtF,EAAK02C,SAAU12C,EAC3B,EAzCDjG,EAAQq1F,aA2CR,SAAsBpvF,GACpB6S,KAAK+gB,KAAK,MACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,EACvB,EA9CDjG,EAAQs1F,wBAgDR,SAAiCrvF,GAC/B6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKgD,WAAYhD,GAC5B6S,KAAKwL,MAAM,IACZ,EAnDDtkB,EAAQu1F,iBAqDR,SAA0BtvF,GACpBA,EAAK+G,QACP8L,KAAKwL,MAAMre,EAAKmB,UAChB0R,KAAKo6E,MAAMjtF,EAAK02C,SAAU12C,KAE1B6S,KAAK08E,qBAAoB,GACzB18E,KAAKo6E,MAAMjtF,EAAK02C,SAAU12C,GAC1B6S,KAAK28E,oBACL38E,KAAKwL,MAAMre,EAAKmB,UAEnB,EA9DDpH,EAAQ01F,sBAgER,SAA+BzvF,GAC7B6S,KAAKo6E,MAAMjtF,EAAKsK,KAAMtK,GACtB6S,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKuhD,WAAYvhD,GAC5B6S,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAK6hD,UAAW7hD,EAC5B,EAzEDjG,EAAQ21F,cA2ER,SAAuB1vF,EAAMC,GAC3B4S,KAAK+gB,KAAK,OACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKkD,OAAQlD,KAEpB6S,KAAK4mE,OAAOkW,UAAsC,IAA1B3vF,EAAK0N,UAAUlP,QAAiBwB,EAAK2zC,UAAatzC,EAAEqK,iBAAiBzK,EAAQ,CACvGiD,OAAQlD,KACHK,EAAEuvF,mBAAmB3vF,IAAYI,EAAEoK,gBAAgBxK,MAI1D4S,KAAKo6E,MAAMjtF,EAAK8oD,cAAe9oD,GAC/B6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,GAE5BA,EAAK2zC,UACP9gC,KAAKwL,MAAM,MAGbxL,KAAKwL,MAAM,KACXxL,KAAK07E,UAAUvuF,EAAK0N,UAAW1N,GAC/B6S,KAAKwL,MAAM,KACZ,EA/FDtkB,EAAQ81F,mBAiGR,SAA4B7vF,GAC1B6S,KAAK07E,UAAUvuF,EAAKopE,YAAappE,EAClC,EAlGDjG,EAAQ+1F,eAoGR,WACEj9E,KAAK+gB,KAAK,OACX,EArGD75B,EAAQg2F,MAuGR,WACEl9E,KAAK+gB,KAAK,QACX,EAxGD75B,EAAQi2F,UA0GR,SAAmBhwF,GACjB6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKgD,WAAYhD,GAC5B6S,KAAKw6E,SACN,EA7GDtzF,EAAQk2F,yBA+GR,SAAkCjwF,GAGhC,GAFA6S,KAAKo6E,MAAMjtF,EAAKuqC,OAAQvqC,IAEnBA,EAAKS,UAAYJ,EAAEuvF,mBAAmB5vF,EAAK0qC,UAC9C,MAAM,IAAIzuB,UAAU,wDAGtB,IAAIxb,EAAWT,EAAKS,SAEhBJ,EAAEK,UAAUV,EAAK0qC,WAA4C,iBAAxB1qC,EAAK0qC,SAAS1wC,QACrDyG,GAAW,GAGTT,EAAK2zC,UACP9gC,KAAKwL,MAAM,MAGT5d,GACFoS,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAK0qC,SAAU1qC,GAC1B6S,KAAKwL,MAAM,OAENre,EAAK2zC,UACR9gC,KAAKwL,MAAM,KAGbxL,KAAKo6E,MAAMjtF,EAAK0qC,SAAU1qC,GAE7B,EA1IDjG,EAAQm2F,uBA4IR,SAAgClwF,GAC9B6S,KAAKo6E,MAAMjtF,EAAKkD,OAAQlD,GACxB6S,KAAKo6E,MAAMjtF,EAAK8oD,cAAe9oD,GAC/B6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,GAE5BA,EAAK2zC,UACP9gC,KAAKwL,MAAM,MAGbxL,KAAKwL,MAAM,KACXxL,KAAK07E,UAAUvuF,EAAK0N,UAAW1N,GAC/B6S,KAAKwL,MAAM,IACZ,EAvJDtkB,EAAQo2F,eAyJR,SAAwBnwF,GACtB6S,KAAKo6E,MAAMjtF,EAAKkD,OAAQlD,GACxB6S,KAAKo6E,MAAMjtF,EAAK8oD,cAAe9oD,GAC/B6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,GAChC6S,KAAKwL,MAAM,KACXxL,KAAK07E,UAAUvuF,EAAK0N,UAAW1N,GAC/B6S,KAAKwL,MAAM,IACZ,EA/JDtkB,EAAQq2F,OAiKR,WACEv9E,KAAK+gB,KAAK,SACX,EAlKD75B,EAAQs2F,eA0LR,WACEx9E,KAAKwmC,WAAU,EAChB,EA3LDt/C,EAAQu2F,oBA6LR,SAA6BtwF,GAC3B6S,KAAKo6E,MAAMjtF,EAAKgD,WAAYhD,GAC5B6S,KAAKwmC,WACN,EA/LDt/C,EAAQw2F,kBAiMR,SAA2BvwF,GACzB6S,KAAKo6E,MAAMjtF,EAAKoB,KAAMpB,GAClBA,EAAKoB,KAAKuyC,UAAU9gC,KAAKwL,MAAM,KACnCxL,KAAKo6E,MAAMjtF,EAAKoB,KAAK+3C,eAAgBn5C,GACrC6S,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKi8C,MAAOj8C,EACxB,EAxMDjG,EAAQy2F,kBAAoBz2F,EAAQ02F,iBAAmB12F,EAAQ22F,qBA0M/D,SAA8B1wF,EAAMC,GAClC,MAAM0wF,EAAS99E,KAAK+9E,2BAA+C,OAAlB5wF,EAAKmB,WAAsB+P,EAAE2/E,YAAY7wF,EAAMC,GAE5F0wF,GACF99E,KAAKwL,MAAM,KAGbxL,KAAKo6E,MAAMjtF,EAAKoB,KAAMpB,GACtB6S,KAAKy7E,QAEiB,OAAlBtuF,EAAKmB,UAAuC,eAAlBnB,EAAKmB,SACjC0R,KAAK+gB,KAAK5zB,EAAKmB,UAEf0R,KAAKwL,MAAMre,EAAKmB,UAGlB0R,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKi8C,MAAOj8C,GAEnB2wF,GACF99E,KAAKwL,MAAM,IAEd,EA/NDtkB,EAAQ+2F,eAiOR,SAAwB9wF,GACtB6S,KAAKo6E,MAAMjtF,EAAKuqC,OAAQvqC,GACxB6S,KAAKwL,MAAM,MACXxL,KAAKo6E,MAAMjtF,EAAKkD,OAAQlD,EACzB,EApODjG,EAAQg3F,iBAsOR,SAA0B/wF,GAGxB,GAFA6S,KAAKo6E,MAAMjtF,EAAKuqC,OAAQvqC,IAEnBA,EAAKS,UAAYJ,EAAEuvF,mBAAmB5vF,EAAK0qC,UAC9C,MAAM,IAAIzuB,UAAU,wDAGtB,IAAIxb,EAAWT,EAAKS,SAEhBJ,EAAEK,UAAUV,EAAK0qC,WAA4C,iBAAxB1qC,EAAK0qC,SAAS1wC,QACrDyG,GAAW,GAGTA,GACFoS,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAK0qC,SAAU1qC,GAC1B6S,KAAKwL,MAAM,OAEXxL,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAK0qC,SAAU1qC,GAE7B,EA1PDjG,EAAQi3F,aA4PR,SAAsBhxF,GACpB6S,KAAKo6E,MAAMjtF,EAAKysE,KAAMzsE,GACtB6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAK0qC,SAAU1qC,EAC3B,EA/PDjG,EAAQk3F,YAiQR,SAAqBjxF,GACnB6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKG,GAAIH,EACrB,EAnQDjG,EAAQm3F,sBAqQR,SAA+BlxF,GAC7B6S,KAAKwL,MAAM,KACXxL,KAAK+gB,KAAK5zB,EAAKrF,KAChB,EAvQDZ,EAAQo3F,gBAAkBp3F,EAAQq3F,qBAAkB,EAEpD,IAAI/wF,EAAIjE,EAAwBC,EAAQ,OAEpC6U,EAAI9U,EAAwBC,EAAQ,MAExC,SAASb,IAA6B,GAAuB,mBAAZc,QAAwB,OAAO,KAAM,IAAIf,EAAQ,IAAIe,QAAqE,OAA1Dd,EAA2B,WAAc,OAAOD,CAAQ,EAASA,CAAQ,CAE1L,SAASa,EAAwBhB,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,iBAARA,GAAmC,mBAARA,EAAsB,MAAO,CAAEE,QAASF,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,CAAC,EAAOC,EAAwB/B,OAAOC,gBAAkBD,OAAOgC,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIvB,OAAOkC,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwB/B,OAAOgC,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQtC,OAAOC,eAAe6B,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,EAAS,CAAgE,OAA7DH,EAAOL,QAAUF,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAkBA,CAAS,CAmJvuB,SAAS01F,EAAgBv6E,GACvB,OAAO,SAAU9W,GAOf,GANA6S,KAAK+gB,KAAK9c,GAEN9W,EAAKyuE,UACP57D,KAAKwL,MAAM,KAGTre,EAAK02C,SAAU,CACjB7jC,KAAKy7E,QACL,MAAMgD,EAAkBz+E,KAAK08E,sBAC7B18E,KAAKo6E,MAAMjtF,EAAK02C,SAAU12C,GAC1B6S,KAAK28E,kBAAkB8B,EACxB,CACF,CACF,CAED,MAAMF,EAAkBC,EAAgB,SACxCt3F,EAAQq3F,gBAAkBA,EAC1B,MAAMD,EAAkBE,EAAgB,SACxCt3F,EAAQo3F,gBAAkBA,C,6BCzM1Bt3F,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQw3F,kBAmFR,WACE1+E,KAAK+gB,KAAK,MACX,EApFD75B,EAAQy3F,oBAsFR,SAA6BxxF,GAC3B6S,KAAKo6E,MAAMjtF,EAAK2/C,YAAa3/C,GAC7B6S,KAAKwL,MAAM,KACXxL,KAAKwL,MAAM,IACZ,EAzFDtkB,EAAQ03F,sBA2FR,WACE5+E,KAAK+gB,KAAK,UACX,EA5FD75B,EAAQ23F,6BA8FR,SAAsC1xF,GACpC6S,KAAK+gB,KAAK5zB,EAAKhG,MAAQ,OAAS,QACjC,EA/FDD,EAAQ43F,0BAiGR,WACE9+E,KAAK+gB,KAAK,OACX,EAlGD75B,EAAQ63F,aAoGR,SAAsB5xF,EAAMC,GACrBI,EAAEwxF,2BAA2B5xF,KAChC4S,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGPz7E,KAAK+gB,KAAK,SACV/gB,KAAKy7E,QAELz7E,KAAKi/E,cAAc9xF,EACpB,EA7GDjG,EAAQg4F,gBA+GR,SAAyB/xF,EAAMC,GACxBI,EAAEwxF,2BAA2B5xF,KAChC4S,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGPz7E,KAAK+gB,KAAK,YACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKG,GAAIH,GACpB6S,KAAKo6E,MAAMjtF,EAAKG,GAAGg5C,eAAeA,eAAgBn5C,GAE9CA,EAAKw4C,YACP3lC,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKw4C,UAAWx4C,IAG7B6S,KAAKwmC,WACN,EA/HDt/C,EAAQi4F,kBAiIR,WACEn/E,KAAKwL,MAAM,KACXxL,KAAK+gB,KAAK,SACX,EAnID75B,EAAQk4F,kBAqIR,SAA2BjyF,GACzB6S,KAAKwL,MAAM,KACXxL,KAAK+gB,KAAK,UACV/gB,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKhG,MAAOgG,GACvB6S,KAAKwL,MAAM,IACZ,EA1IDtkB,EAAQm4F,iBA4IR,SAA0BlyF,GACxB6S,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACLz7E,KAAKs/E,qBAAqBnyF,EAC3B,EA/IDjG,EAAQq4F,cAiJR,SAAuBpyF,GACrB6S,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACLz7E,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKG,GAAIH,GACpB6S,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,EACvB,EAxJDjG,EAAQs4F,qBA0JR,SAA8BryF,GAC5B6S,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACLz7E,KAAK+gB,KAAK,UACV/gB,KAAKwL,MAAM,KACXxL,KAAK+gB,KAAK,WACV/gB,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,EACjC,EAhKDjG,EAAQu4F,iBAkKR,SAA0BtyF,GACxB6S,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACLz7E,KAAK0/E,UAAUvyF,EAChB,EArKDjG,EAAQy4F,kBAuKR,SAA2BxyF,EAAMC,GAC1BI,EAAEwxF,2BAA2B5xF,KAChC4S,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGPz7E,KAAK4/E,WAAWzyF,EACjB,EA7KDjG,EAAQ24F,gBA+KR,SAAyB1yF,EAAMC,GACxBI,EAAEwxF,2BAA2B5xF,KAChC4S,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGPz7E,KAAK+gB,KAAK,OACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKG,GAAIH,GACpB6S,KAAKo6E,MAAMjtF,EAAKG,GAAGg5C,eAAgBn5C,GACnC6S,KAAKwmC,WACN,EAzLDt/C,EAAQ44F,yBA2LR,SAAkC3yF,GAChC6S,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACLz7E,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QAEDtuF,EAAK1E,UACPuX,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGPsE,EAAsBnlF,MAAMoF,KAAMnF,UACnC,EAtMD3T,EAAQ84F,4BAwMR,WACEhgF,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QAELwE,EAASC,qBAAqBtlF,MAAMoF,KAAMnF,UAC3C,EA5MD3T,EAAQi5F,gBA8MR,SAAyBhzF,GACvB,MAAM,GACJG,EADI,KAEJgD,GACEnD,EACJ6S,KAAK+gB,KAAK,QACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAM9sF,EAAIH,GACf6S,KAAKo6E,MAAM9pF,EAAMnD,EAClB,EAtNDjG,EAAQk5F,gBAoPR,SAAyBjzF,GACvB,MAAM,aACJwqD,GACExqD,EACJkzF,EAAiBrgF,KAAM,UAAW23C,GAClC2oC,EAAStgF,KAAM7S,EAChB,EAzPDjG,EAAQq5F,eA2PR,SAAwBpzF,GACtB,MAAM,aACJwqD,GACExqD,EACJkzF,EAAiBrgF,KAAM,SAAU23C,GACjC2oC,EAAStgF,KAAM7S,EAChB,EAhQDjG,EAAQs5F,eAkQR,SAAwBrzF,GACtB,MAAM,aACJwqD,GACExqD,EACJkzF,EAAiBrgF,KAAM,SAAU23C,GACjC2oC,EAAStgF,KAAM7S,EAChB,EAvQDjG,EAAQu5F,eAyQR,SAAwBtzF,GACtBkzF,EAAiBrgF,KAAM,UAAU,GACjCsgF,EAAStgF,KAAM7S,EAChB,EA3QDjG,EAAQw5F,oBA6QR,SAA6BvzF,GAC3B,MAAM,GACJG,GACEH,EACJ6S,KAAKo6E,MAAM9sF,EAAIH,GACf6S,KAAKwL,MAAM,IACZ,EAlRDtkB,EAAQy5F,kBAiSR,SAA2BxzF,GACzByzF,EAAsB5gF,KAAM7S,EAC7B,EAlSDjG,EAAQ25F,iBAoSR,SAA0B1zF,GACxByzF,EAAsB5gF,KAAM7S,EAC7B,EArSDjG,EAAQ45F,iBAuSR,SAA0B3zF,GACxByzF,EAAsB5gF,KAAM7S,EAC7B,EAxSDjG,EAAQ65F,qBAqUR,WACE/gF,KAAKwL,MAAM,IACZ,EAtUDtkB,EAAQ85F,uBAwUR,SAAgC7zF,EAAMC,GACpC4S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,GAChC6S,KAAKwL,MAAM,KACXxL,KAAK07E,UAAUvuF,EAAKiD,OAAQjD,GAExBA,EAAKi5C,OACHj5C,EAAKiD,OAAOzE,SACdqU,KAAKwL,MAAM,KACXxL,KAAKy7E,SAGPz7E,KAAKwL,MAAM,OACXxL,KAAKo6E,MAAMjtF,EAAKi5C,KAAMj5C,IAGxB6S,KAAKwL,MAAM,KAES,2BAAhBpe,EAAOsK,MAAqD,oBAAhBtK,EAAOsK,MAA8C,uBAAhBtK,EAAOsK,MAAiCtK,EAAOiC,OAClI2Q,KAAKwL,MAAM,MAEXxL,KAAKy7E,QACLz7E,KAAKwL,MAAM,OAGbxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKk5C,WAAYl5C,EAC7B,EAjWDjG,EAAQ+5F,kBAmWR,SAA2B9zF,GACzB6S,KAAKo6E,MAAMjtF,EAAKrF,KAAMqF,GAClBA,EAAK2zC,UAAU9gC,KAAKwL,MAAM,KAE1Bre,EAAKrF,OACPkY,KAAKwL,MAAM,KACXxL,KAAKy7E,SAGPz7E,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,EACjC,EA5WDjG,EAAQg6F,sBAAwBh6F,EAAQi6F,gBAAkBj6F,EAAQk6F,iBA8WlE,SAA0Bj0F,GACxB6S,KAAKo6E,MAAMjtF,EAAKG,GAAIH,GACpB6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,EACjC,EAhXDjG,EAAQ+3F,cAkXR,SAAuB9xF,GACrB6S,KAAKo6E,MAAMjtF,EAAKG,GAAIH,GACpB6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,GAE5BA,EAAKi7C,QAAQz8C,SACfqU,KAAKy7E,QACLz7E,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACLz7E,KAAK07E,UAAUvuF,EAAKi7C,QAASj7C,IAG3BA,EAAKm7C,QAAUn7C,EAAKm7C,OAAO38C,SAC7BqU,KAAKy7E,QACLz7E,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACLz7E,KAAK07E,UAAUvuF,EAAKm7C,OAAQn7C,IAG1BA,EAAKk7C,YAAcl7C,EAAKk7C,WAAW18C,SACrCqU,KAAKy7E,QACLz7E,KAAK+gB,KAAK,cACV/gB,KAAKy7E,QACLz7E,KAAK07E,UAAUvuF,EAAKk7C,WAAYl7C,IAGlC6S,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,EACvB,EA5YDjG,EAAQ60F,UA8YR,SAAmB5uF,GACbA,EAAKw8C,WACoB,SAAvBx8C,EAAKw8C,SAASh8C,KAChBqS,KAAKwL,MAAM,KACqB,UAAvBre,EAAKw8C,SAASh8C,MACvBqS,KAAKwL,MAAM,KAGhB,EArZDtkB,EAAQo4F,qBAuZR,SAA8BnyF,GAC5B6S,KAAK+gB,KAAK,aACV/gB,KAAKy7E,QAELz7E,KAAKi/E,cAAc9xF,EACpB,EA3ZDjG,EAAQm6F,wBAmaR,SAAiCl0F,GAC/B6S,KAAK+gB,KAAK,aAEN5zB,EAAKi7C,SAAWj7C,EAAKi7C,QAAQz8C,SAC/BqU,KAAKy7E,QACLz7E,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACLz7E,KAAK07E,UAAUvuF,EAAKi7C,QAASj7C,IAG/B6S,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,EACvB,EA9aDjG,EAAQo6F,2BAgbR,SAAoCn0F,GAClC6S,KAAKw7E,UAAUruF,EAAKue,MAAOve,EAAM,CAC/Bo0F,UAAWC,GAEd,EAnbDt6F,EAAQu6F,oBAqbR,WACEzhF,KAAK+gB,KAAK,QACX,EAtbD75B,EAAQw6F,oBAwbR,WACE1hF,KAAK+gB,KAAK,QACX,EAzbD75B,EAAQy6F,uBA2bR,SAAgCx0F,GAC9B6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,EACjC,EA7bDjG,EAAQ06F,qBA+bR,WACE5hF,KAAK+gB,KAAK,SACX,EAhcD75B,EAAQ26F,qBAkcR,WACE7hF,KAAK+gB,KAAK,SACX,EAncD75B,EAAQ46F,mBAqcR,WACE9hF,KAAK+gB,KAAK,OACX,EAtcD75B,EAAQ66F,oBAwcR,SAA6B50F,GAC3B6S,KAAKwL,MAAM,KACXxL,KAAK07E,UAAUvuF,EAAKue,MAAOve,GAC3B6S,KAAKwL,MAAM,IACZ,EA3cDtkB,EAAQ86F,qBA6cR,SAA8B70F,GAC5B6S,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAK02C,SAAU12C,EAC3B,EAhdDjG,EAAQw4F,UAkdR,SAAmBvyF,GACjB6S,KAAK+gB,KAAK,QACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKG,GAAIH,GACpB6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,GAChC6S,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKi8C,MAAOj8C,GACvB6S,KAAKwmC,WACN,EA3dDt/C,EAAQ+6F,eA6dR,SAAwB90F,GACtB6S,KAAKwL,MAAM,KACXxL,KAAKy7E,QACDtuF,EAAK2zC,UAAU9gC,KAAKwL,MAAM,KAC9BxL,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,EACjC,EAjeDjG,EAAQg7F,yBAA2Bh7F,EAAQi7F,2BAme3C,SAAoCh1F,GAClC6S,KAAKwL,MAAM,KACXxL,KAAK07E,UAAUvuF,EAAKiD,OAAQjD,EAAM,CAAC,GACnC6S,KAAKwL,MAAM,IACZ,EAteDtkB,EAAQk7F,cAweR,SAAuBj1F,GACrB6S,KAAK+7E,UAAU5uF,GAEf6S,KAAK+gB,KAAK5zB,EAAKrF,MAEXqF,EAAK28C,OACP9pC,KAAKo6E,MAAMjtF,EAAK28C,MAAO38C,GAGrBA,EAAK1E,UACPuX,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAK1E,QAAS0E,GAE5B,EAtfDjG,EAAQ04F,WAwfR,SAAoBzyF,GAClB6S,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACLz7E,KAAK+gB,KAAK,QACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKG,GAAIH,GACpB6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,GAE5BA,EAAKm8C,YACPtpC,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKm8C,UAAWn8C,IAGzBA,EAAKo8C,WACPvpC,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKo8C,SAAUp8C,IAG5B6S,KAAKwmC,WACN,EA7gBDt/C,EAAQm7F,qBA+gBR,SAA8Bl1F,GACxBA,EAAK+9C,MACPlrC,KAAKwL,MAAM,MAEXxL,KAAKwL,MAAM,KAGb,MAAMyqE,EAAQ9oF,EAAKgmB,WAAW1e,OAAOtH,EAAKg+C,gBAAkB,GAAIh+C,EAAKi+C,UAAY,GAAIj+C,EAAKk+C,eAAiB,IAEvG4qC,EAAMtqF,SACRqU,KAAKy7E,QACLz7E,KAAKw7E,UAAUvF,EAAO9oF,EAAM,CAC1Bm1F,YAAYC,GACV,GAAIA,IAAYtM,EAAM,GAAI,OAAO,CAClC,EAEDlL,QAAQ,EACR73E,WAAW,EACXg/D,SAAU,MACa,IAAjB+jB,EAAMtqF,QAAgBwB,EAAKm+C,WAC7BtrC,KAAKwL,MAAM,KACXxL,KAAKy7E,QACN,IAGLz7E,KAAKy7E,SAGHtuF,EAAKm+C,UACPtrC,KAAK+qE,SACL/qE,KAAKwL,MAAM,OAEPyqE,EAAMtqF,QACRqU,KAAKw6E,UAGPx6E,KAAK47E,UAGHzuF,EAAK+9C,MACPlrC,KAAKwL,MAAM,MAEXxL,KAAKwL,MAAM,IAEd,EA1jBDtkB,EAAQs7F,uBA4jBR,SAAgCr1F,GAC1BA,EAAKu9C,SACP1qC,KAAK+gB,KAAK,UACV/gB,KAAKy7E,SAGPz7E,KAAKwL,MAAM,KACXxL,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKG,GAAIH,GACpB6S,KAAKwL,MAAM,KACXxL,KAAKwL,MAAM,KACPre,EAAK2zC,UAAU9gC,KAAKwL,MAAM,KAEzBre,EAAKkC,SACR2Q,KAAKwL,MAAM,KACXxL,KAAKy7E,SAGPz7E,KAAKo6E,MAAMjtF,EAAKhG,MAAOgG,EACxB,EA9kBDjG,EAAQu7F,uBAglBR,SAAgCt1F,GAC1BA,EAAKu9C,SACP1qC,KAAK+gB,KAAK,UACV/gB,KAAKy7E,SAGPz7E,KAAKo6E,MAAMjtF,EAAKhG,MAAOgG,EACxB,EAtlBDjG,EAAQw7F,kBAwlBR,SAA2Bv1F,GACrBA,EAAKu9C,SACP1qC,KAAK+gB,KAAK,UACV/gB,KAAKy7E,SAGPz7E,KAAK+7E,UAAU5uF,GAEf6S,KAAKwL,MAAM,KAEPre,EAAKG,KACP0S,KAAKo6E,MAAMjtF,EAAKG,GAAIH,GACpB6S,KAAKwL,MAAM,KACXxL,KAAKy7E,SAGPz7E,KAAKo6E,MAAMjtF,EAAKlE,IAAKkE,GACrB6S,KAAKwL,MAAM,KACXxL,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKhG,MAAOgG,EACxB,EA5mBDjG,EAAQy7F,mBA8mBR,SAA4Bx1F,GACtBA,EAAKuT,QACPV,KAAK+gB,KAAK,SACV/gB,KAAKy7E,SAGHtuF,EAAKu9C,SACP1qC,KAAK+gB,KAAK,UACV/gB,KAAKy7E,SAGW,QAAdtuF,EAAKQ,MAAgC,QAAdR,EAAKQ,OAC9BqS,KAAK+gB,KAAK5zB,EAAKQ,MACfqS,KAAKy7E,SAGPz7E,KAAK+7E,UAAU5uF,GAEf6S,KAAKo6E,MAAMjtF,EAAKlE,IAAKkE,GACjBA,EAAK2zC,UAAU9gC,KAAKwL,MAAM,KAEzBre,EAAKkC,SACR2Q,KAAKwL,MAAM,KACXxL,KAAKy7E,SAGPz7E,KAAKo6E,MAAMjtF,EAAKhG,MAAOgG,EACxB,EAxoBDjG,EAAQ07F,yBA0oBR,SAAkCz1F,GAChC6S,KAAKwL,MAAM,OACXxL,KAAKo6E,MAAMjtF,EAAK02C,SAAU12C,EAC3B,EA5oBDjG,EAAQ27F,wBA8oBR,SAAiC11F,GAC/B6S,KAAKo6E,MAAMjtF,EAAK4+C,cAAe5+C,GAC/B6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKG,GAAIH,EACrB,EAjpBDjG,EAAQ47F,qBAmpBR,WACE9iF,KAAK+gB,KAAK,SACX,EAppBD75B,EAAQ67F,oBA4pBR,SAA6B51F,GAC3B6S,KAAKw7E,UAAUruF,EAAKue,MAAOve,EAAM,CAC/Bo0F,UAAWyB,GAEd,EA/pBD97F,EAAQ+7F,mBAiqBR,SAA4B91F,GAC1B6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKgD,WAAYhD,GAC5B6S,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,GAChC6S,KAAKwL,MAAM,IACZ,EArqBDtkB,EAAQg8F,SAuqBR,SAAkB/1F,GACE,SAAdA,EAAKQ,KACPqS,KAAKwL,MAAM,KAEXxL,KAAKwL,MAAM,IAEd,EA5qBDtkB,EAAQi8F,mBA8qBR,WACEnjF,KAAK+gB,KAAK,OACX,EA/qBD/5B,OAAOC,eAAeC,EAAS,8BAA+B,CAC5DgU,YAAY,EACZrS,IAAK,WACH,OAAOu6F,EAAQC,cAChB,IAEHr8F,OAAOC,eAAeC,EAAS,8BAA+B,CAC5DgU,YAAY,EACZrS,IAAK,WACH,OAAOu6F,EAAQE,aAChB,IAGH,IAAI91F,EAQJ,SAAiCjF,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,iBAARA,GAAmC,mBAARA,EAAsB,MAAO,CAAEE,QAASF,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,CAAC,EAAOC,EAAwB/B,OAAOC,gBAAkBD,OAAOgC,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIvB,OAAOkC,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwB/B,OAAOgC,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQtC,OAAOC,eAAe6B,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,EAAS,CAAgE,OAA7DH,EAAOL,QAAUF,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAkBA,CAAS,CAR/tBS,CAAwBC,EAAQ,OAEpCy2F,EAAWz2F,EAAQ,MAEnB45F,EAAU55F,EAAQ,MAEtB,SAASb,IAA6B,GAAuB,mBAAZc,QAAwB,OAAO,KAAM,IAAIf,EAAQ,IAAIe,QAAqE,OAA1Dd,EAA2B,WAAc,OAAOD,CAAQ,EAASA,CAAQ,CA2J1L,SAAS23F,EAAiB5gE,EAAS33B,EAAMy7F,GACnCA,IACF9jE,EAAQg8D,QACRh8D,EAAQsB,KAAK,MACbtB,EAAQg8D,QACRh8D,EAAQsB,KAAKj5B,IAGf23B,EAAQg8D,OACT,CAED,SAAS6E,EAAS7gE,EAAStyB,GACzB,MAAM,QACJqrD,GACErrD,EACJsyB,EAAQjU,MAAM,KACdiU,EAAQsrD,SACRtrD,EAAQ+6D,UAER,IAAK,MAAMzpC,KAAUyH,EACnB/4B,EAAQ26D,MAAMrpC,EAAQ5jD,GACtBsyB,EAAQ+6D,UAGV/6D,EAAQm8D,SACRn8D,EAAQjU,MAAM,IACf,CAuCD,SAASo1E,EAAsBnhE,EAAStyB,GACtC,MAAM,GACJG,EADI,KAEJ6qD,GACEhrD,EACJsyB,EAAQ26D,MAAM9sF,EAAIH,GAClBsyB,EAAQg8D,QACRh8D,EAAQjU,MAAM,KACdiU,EAAQg8D,QACRh8D,EAAQ26D,MAAMjiC,EAAMhrD,GACpBsyB,EAAQjU,MAAM,IACf,CAcD,SAASu0E,EAAsB5yF,GAC7B,GAAIA,EAAKiM,YAAa,CACpB,MAAMoqF,EAASr2F,EAAKiM,YACpB4G,KAAKo6E,MAAMoJ,EAAQr2F,GACdK,EAAEuK,YAAYyrF,IAASxjF,KAAKwmC,WAClC,MACCxmC,KAAKwL,MAAM,KAEPre,EAAKoN,WAAW5O,SAClBqU,KAAKy7E,QACLz7E,KAAK07E,UAAUvuF,EAAKoN,WAAYpN,GAChC6S,KAAKy7E,SAGPz7E,KAAKwL,MAAM,KAEPre,EAAKnC,SACPgV,KAAKy7E,QACLz7E,KAAK+gB,KAAK,QACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKnC,OAAQmC,IAG1B6S,KAAKwmC,WAER,CAiGD,SAASg7C,IACPxhF,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,OACN,CA4QD,SAASuH,IACPhjF,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,OACN,C,8BCrtBDz0F,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAIs8F,EAAoBj6F,EAAQ,MAEhCxC,OAAOuO,KAAKkuF,GAAmBtuF,SAAQ,SAAUlM,GACnC,YAARA,GAA6B,eAARA,IACrBA,KAAO/B,GAAWA,EAAQ+B,KAASw6F,EAAkBx6F,IACzDjC,OAAOC,eAAeC,EAAS+B,EAAK,CAClCiS,YAAY,EACZrS,IAAK,WACH,OAAO46F,EAAkBx6F,EAC1B,IAEJ,IAED,IAAIy6F,EAAel6F,EAAQ,MAE3BxC,OAAOuO,KAAKmuF,GAAcvuF,SAAQ,SAAUlM,GAC9B,YAARA,GAA6B,eAARA,IACrBA,KAAO/B,GAAWA,EAAQ+B,KAASy6F,EAAaz6F,IACpDjC,OAAOC,eAAeC,EAAS+B,EAAK,CAClCiS,YAAY,EACZrS,IAAK,WACH,OAAO66F,EAAaz6F,EACrB,IAEJ,IAED,IAAI06F,EAAcn6F,EAAQ,MAE1BxC,OAAOuO,KAAKouF,GAAaxuF,SAAQ,SAAUlM,GAC7B,YAARA,GAA6B,eAARA,IACrBA,KAAO/B,GAAWA,EAAQ+B,KAAS06F,EAAY16F,IACnDjC,OAAOC,eAAeC,EAAS+B,EAAK,CAClCiS,YAAY,EACZrS,IAAK,WACH,OAAO86F,EAAY16F,EACpB,IAEJ,IAED,IAAI26F,EAAWp6F,EAAQ,MAEvBxC,OAAOuO,KAAKquF,GAAUzuF,SAAQ,SAAUlM,GAC1B,YAARA,GAA6B,eAARA,IACrBA,KAAO/B,GAAWA,EAAQ+B,KAAS26F,EAAS36F,IAChDjC,OAAOC,eAAeC,EAAS+B,EAAK,CAClCiS,YAAY,EACZrS,IAAK,WACH,OAAO+6F,EAAS36F,EACjB,IAEJ,IAED,IAAI46F,EAAWr6F,EAAQ,MAEvBxC,OAAOuO,KAAKsuF,GAAU1uF,SAAQ,SAAUlM,GAC1B,YAARA,GAA6B,eAARA,IACrBA,KAAO/B,GAAWA,EAAQ+B,KAAS46F,EAAS56F,IAChDjC,OAAOC,eAAeC,EAAS+B,EAAK,CAClCiS,YAAY,EACZrS,IAAK,WACH,OAAOg7F,EAAS56F,EACjB,IAEJ,IAED,IAAIg3F,EAAWz2F,EAAQ,MAEvBxC,OAAOuO,KAAK0qF,GAAU9qF,SAAQ,SAAUlM,GAC1B,YAARA,GAA6B,eAARA,IACrBA,KAAO/B,GAAWA,EAAQ+B,KAASg3F,EAASh3F,IAChDjC,OAAOC,eAAeC,EAAS+B,EAAK,CAClCiS,YAAY,EACZrS,IAAK,WACH,OAAOo3F,EAASh3F,EACjB,IAEJ,IAED,IAAI66F,EAASt6F,EAAQ,MAErBxC,OAAOuO,KAAKuuF,GAAQ3uF,SAAQ,SAAUlM,GACxB,YAARA,GAA6B,eAARA,IACrBA,KAAO/B,GAAWA,EAAQ+B,KAAS66F,EAAO76F,IAC9CjC,OAAOC,eAAeC,EAAS+B,EAAK,CAClCiS,YAAY,EACZrS,IAAK,WACH,OAAOi7F,EAAO76F,EACf,IAEJ,IAED,IAAI86F,EAAQv6F,EAAQ,KAEpBxC,OAAOuO,KAAKwuF,GAAO5uF,SAAQ,SAAUlM,GACvB,YAARA,GAA6B,eAARA,IACrBA,KAAO/B,GAAWA,EAAQ+B,KAAS86F,EAAM96F,IAC7CjC,OAAOC,eAAeC,EAAS+B,EAAK,CAClCiS,YAAY,EACZrS,IAAK,WACH,OAAOk7F,EAAM96F,EACd,IAEJ,IAED,IAAI+6F,EAAQx6F,EAAQ,MAEpBxC,OAAOuO,KAAKyuF,GAAO7uF,SAAQ,SAAUlM,GACvB,YAARA,GAA6B,eAARA,IACrBA,KAAO/B,GAAWA,EAAQ+B,KAAS+6F,EAAM/6F,IAC7CjC,OAAOC,eAAeC,EAAS+B,EAAK,CAClCiS,YAAY,EACZrS,IAAK,WACH,OAAOm7F,EAAM/6F,EACd,IAEJ,IAED,IAAIyrD,EAAOlrD,EAAQ,MAEnBxC,OAAOuO,KAAKm/C,GAAMv/C,SAAQ,SAAUlM,GACtB,YAARA,GAA6B,eAARA,IACrBA,KAAO/B,GAAWA,EAAQ+B,KAASyrD,EAAKzrD,IAC5CjC,OAAOC,eAAeC,EAAS+B,EAAK,CAClCiS,YAAY,EACZrS,IAAK,WACH,OAAO6rD,EAAKzrD,EACb,IAEJ,IAED,IAAIg7F,EAAcz6F,EAAQ,MAE1BxC,OAAOuO,KAAK0uF,GAAa9uF,SAAQ,SAAUlM,GAC7B,YAARA,GAA6B,eAARA,IACrBA,KAAO/B,GAAWA,EAAQ+B,KAASg7F,EAAYh7F,IACnDjC,OAAOC,eAAeC,EAAS+B,EAAK,CAClCiS,YAAY,EACZrS,IAAK,WACH,OAAOo7F,EAAYh7F,EACpB,IAEJ,G,4BCzDD,SAASi7F,IACPlkF,KAAKy7E,OACN,CA1FDz0F,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQi9F,aAgBR,SAAsBh3F,GACpB6S,KAAKo6E,MAAMjtF,EAAKrF,KAAMqF,GAElBA,EAAKhG,QACP6Y,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKhG,MAAOgG,GAE1B,EAtBDjG,EAAQk9F,cAwBR,SAAuBj3F,GACrB6S,KAAK+gB,KAAK5zB,EAAKrF,KAChB,EAzBDZ,EAAQm9F,kBA2BR,SAA2Bl3F,GACzB6S,KAAKo6E,MAAMjtF,EAAKyqC,UAAWzqC,GAC3B6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKrF,KAAMqF,EACvB,EA9BDjG,EAAQo9F,oBAgCR,SAA6Bn3F,GAC3B6S,KAAKo6E,MAAMjtF,EAAKuqC,OAAQvqC,GACxB6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAK0qC,SAAU1qC,EAC3B,EAnCDjG,EAAQq9F,mBAqCR,SAA4Bp3F,GAC1B6S,KAAKwL,MAAM,KACXxL,KAAKwL,MAAM,OACXxL,KAAKo6E,MAAMjtF,EAAK02C,SAAU12C,GAC1B6S,KAAKwL,MAAM,IACZ,EAzCDtkB,EAAQs9F,uBA2CR,SAAgCr3F,GAC9B6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKgD,WAAYhD,GAC5B6S,KAAKwL,MAAM,IACZ,EA9CDtkB,EAAQu9F,eAgDR,SAAwBt3F,GACtB6S,KAAKwL,MAAM,KACXxL,KAAKwL,MAAM,OACXxL,KAAKo6E,MAAMjtF,EAAKgD,WAAYhD,GAC5B6S,KAAKwL,MAAM,IACZ,EApDDtkB,EAAQw9F,QAsDR,SAAiBv3F,GACf,MAAM4B,EAAMiR,KAAKg7E,eAAe7tF,GAErB,MAAP4B,EACFiR,KAAKwL,MAAMzc,GAEXiR,KAAKwL,MAAMre,EAAKhG,MAEnB,EA7DDD,EAAQy9F,WA+DR,SAAoBx3F,GAClB,MAAM+Q,EAAO/Q,EAAKk3C,eAElB,GADArkC,KAAKo6E,MAAMl8E,EAAM/Q,IACb+Q,EAAK+lC,YAAT,CACAjkC,KAAK+qE,SAEL,IAAK,MAAM6Z,KAASz3F,EAAKi3C,SACvBpkC,KAAKo6E,MAAMwK,EAAOz3F,GAGpB6S,KAAK47E,SACL57E,KAAKo6E,MAAMjtF,EAAKm3C,eAAgBn3C,EARJ,CAS7B,EA1EDjG,EAAQ29F,kBAgFR,SAA2B13F,GACzB6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKrF,KAAMqF,GACtB6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,GAE5BA,EAAK6zC,WAAWr1C,OAAS,IAC3BqU,KAAKy7E,QACLz7E,KAAKw7E,UAAUruF,EAAK6zC,WAAY7zC,EAAM,CACpCo0F,UAAW2C,KAIX/2F,EAAK82C,aACPjkC,KAAKy7E,QACLz7E,KAAKwL,MAAM,OAEXxL,KAAKwL,MAAM,IAEd,EAjGDtkB,EAAQ49F,kBAmGR,SAA2B33F,GACzB6S,KAAKwL,MAAM,MACXxL,KAAKo6E,MAAMjtF,EAAKrF,KAAMqF,GACtB6S,KAAKwL,MAAM,IACZ,EAtGDtkB,EAAQ69F,mBAwGR,SAA4B53F,GAC1B6S,KAAKs6E,mBAAmBntF,EACzB,EAzGDjG,EAAQ89F,YA2GR,SAAqB73F,GACnB6S,KAAKo6E,MAAMjtF,EAAKq3C,gBAAiBr3C,GACjC6S,KAAK+qE,SAEL,IAAK,MAAM6Z,KAASz3F,EAAKi3C,SACvBpkC,KAAKo6E,MAAMwK,EAAOz3F,GAGpB6S,KAAK47E,SACL57E,KAAKo6E,MAAMjtF,EAAKs3C,gBAAiBt3C,EAClC,EApHDjG,EAAQ+9F,mBAsHR,WACEjlF,KAAKwL,MAAM,KACXxL,KAAKwL,MAAM,IACZ,EAxHDtkB,EAAQg+F,mBA0HR,WACEllF,KAAKwL,MAAM,MACXxL,KAAKwL,MAAM,IACZ,C,8BC9IDxkB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQm0E,QAeR,SAAiBluE,GACf6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,GAChC6S,KAAKwL,MAAM,KAEXxL,KAAKmlF,YAAYh4F,EAAKiD,OAAQjD,GAE9B6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKk5C,WAAYl5C,EAC7B,EAtBDjG,EAAQi+F,YAwBR,SAAqBpoC,EAAY3vD,GAC/B,IAAK,IAAIvB,EAAI,EAAGA,EAAIkxD,EAAWpxD,OAAQE,IACrCmU,KAAKolF,OAAOroC,EAAWlxD,GAAIuB,GAEvBvB,EAAIkxD,EAAWpxD,OAAS,IAC1BqU,KAAKwL,MAAM,KACXxL,KAAKy7E,QAGV,EAhCDv0F,EAAQk+F,OAkCR,SAAgB//B,EAAWj4D,GACzB4S,KAAKw7E,UAAUn2B,EAAUJ,WAAYI,GACrCrlD,KAAKo6E,MAAM/0B,EAAWj4D,GAClBi4D,EAAUvkB,UAAU9gC,KAAKwL,MAAM,KACnCxL,KAAKo6E,MAAM/0B,EAAU/e,eAAgB+e,EACtC,EAtCDn+D,EAAQk1F,YAwCR,SAAqBjvF,GACnB,MAAMQ,EAAOR,EAAKQ,KACZ1E,EAAMkE,EAAKlE,IAEJ,QAAT0E,GAA2B,QAATA,IACpBqS,KAAK+gB,KAAKpzB,GACVqS,KAAKy7E,SAGHtuF,EAAKgoD,QACPn1C,KAAKqlF,SAAS,QAASp8F,EAAIU,KAE3BqW,KAAK+gB,KAAK,SACV/gB,KAAKy7E,SAGM,WAAT9tF,GAA8B,SAATA,GACnBR,EAAKyC,WACPoQ,KAAKwL,MAAM,KAIXre,EAAKS,UACPoS,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMnxF,EAAKkE,GAChB6S,KAAKwL,MAAM,MAEXxL,KAAKo6E,MAAMnxF,EAAKkE,GAGdA,EAAK2zC,UACP9gC,KAAKwL,MAAM,KAGbxL,KAAKq7D,QAAQluE,EACd,EA1EDjG,EAAQo+F,WA4ER,SAAoBn4F,GACdA,EAAKw4C,YACFx4C,EAAKk5C,YACRrmC,KAAKwL,MAAM,KAGbxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKw4C,UAAWx4C,GAE9B,EApFDjG,EAAQq+F,cAsFR,SAAuBp4F,GACjBA,EAAKgoD,QACPn1C,KAAK+gB,KAAK,SACV/gB,KAAKy7E,SAGPz7E,KAAK+gB,KAAK,YACN5zB,EAAKyC,WAAWoQ,KAAKwL,MAAM,KAC/BxL,KAAKy7E,QAEDtuF,EAAKG,IACP0S,KAAKo6E,MAAMjtF,EAAKG,GAAIH,GAGtB6S,KAAKq7D,QAAQluE,GAEb6S,KAAKslF,WAAWn4F,EACjB,EAtGDjG,EAAQs+F,oBAAsBt+F,EAAQu+F,mBAwGtC,SAA4Bt4F,GAC1B6S,KAAKulF,cAAcp4F,GAEnB6S,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,EACvB,EA5GDjG,EAAQw+F,wBA8GR,SAAiCv4F,GAC3BA,EAAKgoD,QACPn1C,KAAK+gB,KAAK,SACV/gB,KAAKy7E,SAGP,MAAMhzB,EAAat7D,EAAKiD,OAAO,GAEJ,IAAvBjD,EAAKiD,OAAOzE,QAAgB6B,EAAEO,aAAa06D,KA8BjD,SAAkBt7D,EAAM0L,GACtB,OAAO1L,EAAKgyC,gBAAkBhyC,EAAKk5C,YAAcxtC,EAAMytC,gBAAkBztC,EAAMioC,UAAYjoC,EAAMuZ,gBAClG,CAhCgEuzE,CAASx4F,EAAMs7D,IACvEzoD,KAAK4mE,OAAOgf,aAAez4F,EAAKgoD,QAAUhoD,EAAKxD,KAAOwD,EAAKmD,KAAK3G,KAAOwD,EAAKxD,IAAI1B,MAAMI,KAAO8E,EAAKmD,KAAK3G,IAAI1B,MAAMI,MACpH2X,KAAKwL,MAAM,KAEPi9C,EAAW9+D,KAAO8+D,EAAW9+D,IAAI1B,MAAMI,KAAO8E,EAAKxD,IAAI1B,MAAMI,MAC/D2X,KAAK+qE,SACL/qE,KAAKo6E,MAAM3xB,EAAYt7D,GACvB6S,KAAK47E,SAEL57E,KAAKqlF,SAAS,QAASl4F,EAAKmD,KAAK3G,MAEjCqW,KAAKo6E,MAAM3xB,EAAYt7D,GAGzB6S,KAAKwL,MAAM,MAEXxL,KAAKo6E,MAAM3xB,EAAYt7D,GAGzB6S,KAAKq7D,QAAQluE,GAGf6S,KAAKslF,WAAWn4F,GAEhB6S,KAAKy7E,QACLz7E,KAAKwL,MAAM,MACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,EACvB,EAhJD,IAAIK,EAIJ,SAAiCjF,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,iBAARA,GAAmC,mBAARA,EAAsB,MAAO,CAAEE,QAASF,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,CAAC,EAAOC,EAAwB/B,OAAOC,gBAAkBD,OAAOgC,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIvB,OAAOkC,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwB/B,OAAOgC,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQtC,OAAOC,eAAe6B,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,EAAS,CAAgE,OAA7DH,EAAOL,QAAUF,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAkBA,CAAS,CAJ/tBS,CAAwBC,EAAQ,OAExC,SAASb,IAA6B,GAAuB,mBAAZc,QAAwB,OAAO,KAAM,IAAIf,EAAQ,IAAIe,QAAqE,OAA1Dd,EAA2B,WAAc,OAAOD,CAAQ,EAASA,CAAQ,C,8BCd1L1B,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ2+F,gBAkBR,SAAyB14F,GACC,SAApBA,EAAKy5B,YAA6C,WAApBz5B,EAAKy5B,aACrC5mB,KAAK+gB,KAAK5zB,EAAKy5B,YACf5mB,KAAKy7E,SAGPz7E,KAAKo6E,MAAMjtF,EAAK2mD,SAAU3mD,GAEtBA,EAAKkmD,OAASlmD,EAAKkmD,MAAMvrD,OAASqF,EAAK2mD,SAAShsD,OAClDkY,KAAKy7E,QACLz7E,KAAK+gB,KAAK,MACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKkmD,MAAOlmD,GAE1B,EA/BDjG,EAAQ4+F,uBAiCR,SAAgC34F,GAC9B6S,KAAKo6E,MAAMjtF,EAAKkmD,MAAOlmD,EACxB,EAlCDjG,EAAQ6+F,uBAoCR,SAAgC54F,GAC9B6S,KAAKo6E,MAAMjtF,EAAKg0C,SAAUh0C,EAC3B,EArCDjG,EAAQ8+F,gBAuCR,SAAyB74F,GACvB6S,KAAKo6E,MAAMjtF,EAAKkmD,MAAOlmD,GAEnBA,EAAKg0C,UAAYh0C,EAAKkmD,MAAMvrD,OAASqF,EAAKg0C,SAASr5C,OACrDkY,KAAKy7E,QACLz7E,KAAK+gB,KAAK,MACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKg0C,SAAUh0C,GAE7B,EA/CDjG,EAAQ++F,yBAiDR,SAAkC94F,GAChC6S,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAK+gB,KAAK,MACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKg0C,SAAUh0C,EAC3B,EAtDDjG,EAAQg5F,qBAwDR,SAA8B/yF,GAC5B6S,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QAEmB,SAApBtuF,EAAK26C,aACP9nC,KAAK+gB,KAAK,QACV/gB,KAAKy7E,SAGPz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAK+gB,KAAK,QACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKnC,OAAQmC,GACxB6S,KAAKkmF,gBAAgB/4F,GACrB6S,KAAKwmC,WACN,EAvEDt/C,EAAQi/F,uBAyER,SAAgCh5F,GAC1B6S,KAAK4mE,OAAOxD,wBAA0B51E,EAAE6L,mBAAmBlM,EAAKiM,cAClE4G,KAAKw7E,UAAUruF,EAAKiM,YAAY6rD,WAAY93D,GAG9C6S,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACL2K,EAAkBxrF,MAAMoF,KAAMnF,UAC/B,EAhFD3T,EAAQm/F,yBAkFR,SAAkCl5F,GAC5B6S,KAAK4mE,OAAOxD,wBAA0B51E,EAAE6L,mBAAmBlM,EAAKiM,cAClE4G,KAAKw7E,UAAUruF,EAAKiM,YAAY6rD,WAAY93D,GAG9C6S,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACLz7E,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACL2K,EAAkBxrF,MAAMoF,KAAMnF,UAC/B,EA3FD3T,EAAQo/F,kBAmJR,SAA2Bn5F,GACzB,IAAIo5F,EAEJvmF,KAAK+gB,KAAK,UACV/gB,KAAKy7E,SAEmB,SAApBtuF,EAAKy5B,YAA6C,WAApBz5B,EAAKy5B,cACrC5mB,KAAK+gB,KAAK5zB,EAAKy5B,YACf5mB,KAAKy7E,SAGP,MAAMlhF,EAAapN,EAAKoN,WAAWnO,MAAM,GAEzC,GAAkB,MAAdmO,OAAqB,EAASA,EAAW5O,OAAQ,CACnD,OAAS,CACP,MAAMygD,EAAQ7xC,EAAW,GAEzB,IAAI/M,EAAEg5F,yBAAyBp6C,KAAU5+C,EAAEi5F,2BAA2Br6C,GAQpE,MAPApsC,KAAKo6E,MAAM7/E,EAAWwvE,QAAS58E,GAE3BoN,EAAW5O,SACbqU,KAAKwL,MAAM,KACXxL,KAAKy7E,QAKV,CAEGlhF,EAAW5O,SACbqU,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAK07E,UAAUnhF,EAAYpN,GAC3B6S,KAAKy7E,QACLz7E,KAAKwL,MAAM,MAGbxL,KAAKy7E,QACLz7E,KAAK+gB,KAAK,QACV/gB,KAAKy7E,OACN,CAEDz7E,KAAKo6E,MAAMjtF,EAAKnC,OAAQmC,GACxB6S,KAAKkmF,gBAAgB/4F,IAEuB,OAAvCo5F,EAAmBp5F,EAAK6zC,iBAAsB,EAASulD,EAAiB56F,UAC3EqU,KAAKy7E,QACLz7E,KAAK+gB,KAAK,QACV/gB,KAAKy7E,QACLz7E,KAAK07E,UAAUvuF,EAAK6zC,WAAY7zC,IAGlC6S,KAAKwmC,WACN,EAvMDt/C,EAAQw/F,gBAyMR,SAAyBv5F,GACvB6S,KAAKo6E,MAAMjtF,EAAKlE,KAChB+W,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKhG,MACjB,EA7MDD,EAAQy/F,yBA+MR,SAAkCx5F,GAChC6S,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAK+gB,KAAK,MACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKkmD,MAAOlmD,EACxB,EAnND,IAAIK,EAIJ,SAAiCjF,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,iBAARA,GAAmC,mBAARA,EAAsB,MAAO,CAAEE,QAASF,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,CAAC,EAAOC,EAAwB/B,OAAOC,gBAAkBD,OAAOgC,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIvB,OAAOkC,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwB/B,OAAOgC,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQtC,OAAOC,eAAe6B,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,EAAS,CAAgE,OAA7DH,EAAOL,QAAUF,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAkBA,CAAS,CAJ/tBS,CAAwBC,EAAQ,OAExC,SAASb,IAA6B,GAAuB,mBAAZc,QAAwB,OAAO,KAAM,IAAIf,EAAQ,IAAIe,QAAqE,OAA1Dd,EAA2B,WAAc,OAAOD,CAAQ,EAASA,CAAQ,CAuF1L,SAAS09F,EAAkBj5F,GACzB,GAAIA,EAAKiM,YAAa,CACpB,MAAMoqF,EAASr2F,EAAKiM,YACpB4G,KAAKo6E,MAAMoJ,EAAQr2F,GACdK,EAAEuK,YAAYyrF,IAASxjF,KAAKwmC,WAClC,KAAM,CACmB,SAApBr5C,EAAK26C,aACP9nC,KAAK+gB,KAAK,QACV/gB,KAAKy7E,SAGP,MAAMlhF,EAAapN,EAAKoN,WAAWnO,MAAM,GACzC,IAAIw6F,GAAa,EAEjB,OAAS,CACP,MAAMx6C,EAAQ7xC,EAAW,GAEzB,IAAI/M,EAAEygD,yBAAyB7B,KAAU5+C,EAAEq5F,2BAA2Bz6C,GASpE,MARAw6C,GAAa,EACb5mF,KAAKo6E,MAAM7/E,EAAWwvE,QAAS58E,GAE3BoN,EAAW5O,SACbqU,KAAKwL,MAAM,KACXxL,KAAKy7E,QAKV,EAEGlhF,EAAW5O,SAAW4O,EAAW5O,SAAWi7F,KAC9C5mF,KAAKwL,MAAM,KAEPjR,EAAW5O,SACbqU,KAAKy7E,QACLz7E,KAAK07E,UAAUnhF,EAAYpN,GAC3B6S,KAAKy7E,SAGPz7E,KAAKwL,MAAM,MAGTre,EAAKnC,SACPgV,KAAKy7E,QACLz7E,KAAK+gB,KAAK,QACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKnC,OAAQmC,GACxB6S,KAAKkmF,gBAAgB/4F,IAGvB6S,KAAKwmC,WACN,CACF,C,8BC5JDx/C,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ4/F,cAqBR,SAAuB35F,GACrB6S,KAAK+gB,KAAK,QACV/gB,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKuqC,OAAQvqC,GACxB6S,KAAKwL,MAAM,KACXxL,KAAK+mF,WAAW55F,EACjB,EA3BDjG,EAAQ8/F,YA6BR,SAAqB75F,GACnB6S,KAAK+gB,KAAK,MACV/gB,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKsK,KAAMtK,GACtB6S,KAAKwL,MAAM,KACXxL,KAAKy7E,QACL,MAAMwL,EAAa95F,EAAK6hD,WAAaxhD,EAAE05F,cAAcC,EAAiBh6F,EAAKuhD,aAEvEu4C,IACFjnF,KAAKwL,MAAM,KACXxL,KAAKw6E,UACLx6E,KAAK+qE,UAGP/qE,KAAKonF,yBAAyBj6F,EAAKuhD,WAAYvhD,GAE3C85F,IACFjnF,KAAK47E,SACL57E,KAAKw6E,UACLx6E,KAAKwL,MAAM,MAGTre,EAAK6hD,YACHhvC,KAAKo5E,SAAS,MAAMp5E,KAAKy7E,QAC7Bz7E,KAAK+gB,KAAK,QACV/gB,KAAKy7E,QACLz7E,KAAKonF,yBAAyBj6F,EAAK6hD,UAAW7hD,GAEjD,EAzDDjG,EAAQmgG,aAgER,SAAsBl6F,GACpB6S,KAAK+gB,KAAK,OACV/gB,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAK+9E,4BACL/9E,KAAKo6E,MAAMjtF,EAAKgrD,KAAMhrD,GACtB6S,KAAK+9E,4BACL/9E,KAAKwL,MAAM,KAEPre,EAAKsK,OACPuI,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKsK,KAAMtK,IAGxB6S,KAAKwL,MAAM,KAEPre,EAAK4jE,SACP/wD,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAK4jE,OAAQ5jE,IAG1B6S,KAAKwL,MAAM,KACXxL,KAAK+mF,WAAW55F,EACjB,EAtFDjG,EAAQogG,eAwFR,SAAwBn6F,GACtB6S,KAAK+gB,KAAK,SACV/gB,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKsK,KAAMtK,GACtB6S,KAAKwL,MAAM,KACXxL,KAAK+mF,WAAW55F,EACjB,EA9FDjG,EAAQqgG,iBA0HR,SAA0Bp6F,GACxB6S,KAAK+gB,KAAK,MACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,GACtB6S,KAAKy7E,QACLz7E,KAAK+gB,KAAK,SACV/gB,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKsK,KAAMtK,GACtB6S,KAAKwL,MAAM,KACXxL,KAAKwmC,WACN,EApIDt/C,EAAQsgG,iBAgKR,SAA0Br6F,GACxB6S,KAAKo6E,MAAMjtF,EAAK4d,MAAO5d,GACvB6S,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,EACvB,EApKDjG,EAAQugG,aAsKR,SAAsBt6F,GACpB6S,KAAK+gB,KAAK,OACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKggE,MAAOhgE,GACvB6S,KAAKy7E,QAEDtuF,EAAKu6F,SACP1nF,KAAKo6E,MAAMjtF,EAAKu6F,SAAS,GAAIv6F,GAE7B6S,KAAKo6E,MAAMjtF,EAAKqyE,QAASryE,GAGvBA,EAAKuyE,YACP1/D,KAAKy7E,QACLz7E,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKuyE,UAAWvyE,GAE9B,EAvLDjG,EAAQygG,YAyLR,SAAqBx6F,GACnB6S,KAAK+gB,KAAK,SACV/gB,KAAKy7E,QAEDtuF,EAAK0L,QACPmH,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAK0L,MAAO1L,GACvB6S,KAAKo6E,MAAMjtF,EAAK0L,MAAMytC,eAAgBn5C,GACtC6S,KAAKwL,MAAM,KACXxL,KAAKy7E,SAGPz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,EACvB,EArMDjG,EAAQ0gG,gBAuMR,SAAyBz6F,GACvB6S,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKgyE,aAAchyE,GAC9B6S,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKu6E,cAAcptF,EAAKiyE,MAAOjyE,EAAM,CACnC49E,QAAQ,EAERuX,YAAYC,EAASsF,GACnB,IAAKtF,GAAWp1F,EAAKiyE,MAAMjyE,EAAKiyE,MAAMzzE,OAAS,KAAOk8F,EAAK,OAAQ,CACpE,IAGH7nF,KAAKwL,MAAM,IACZ,EAvNDtkB,EAAQ4gG,WAyNR,SAAoB36F,GACdA,EAAKsK,MACPuI,KAAK+gB,KAAK,QACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKsK,KAAMtK,GACtB6S,KAAKwL,MAAM,OAEXxL,KAAK+gB,KAAK,WACV/gB,KAAKwL,MAAM,MAGTre,EAAKuhD,WAAW/iD,SAClBqU,KAAKw6E,UACLx6E,KAAKu6E,cAAcptF,EAAKuhD,WAAYvhD,EAAM,CACxC49E,QAAQ,IAGb,EAzOD7jF,EAAQ6gG,kBA2OR,WACE/nF,KAAK+gB,KAAK,YACV/gB,KAAKwmC,WACN,EA7ODt/C,EAAQ8gG,oBA2PR,SAA6B76F,EAAMC,GAC7BD,EAAKk8C,UACPrpC,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGPz7E,KAAK+gB,KAAK5zB,EAAKQ,MACfqS,KAAKy7E,QACL,IAUI8F,EAVA0G,GAAW,EAEf,IAAKz6F,EAAE0yE,MAAM9yE,GACX,IAAK,MAAMo2F,KAAUr2F,EAAK0xE,aACpB2kB,EAAOrrC,OACT8vC,GAAW,GAObA,IACF1G,EAA0B,UAAdp0F,EAAKQ,KAAmBu6F,EAAyBC,GAG/DnoF,KAAK07E,UAAUvuF,EAAK0xE,aAAc1xE,EAAM,CACtCo0F,gBAGE/zF,EAAE0yE,MAAM9yE,IACNA,EAAOmB,OAASpB,GAAQC,EAAO+qD,OAAShrD,IAG9C6S,KAAKwmC,WACN,EA3RDt/C,EAAQkhG,mBA6RR,SAA4Bj7F,GAC1B6S,KAAKo6E,MAAMjtF,EAAKG,GAAIH,GAChBA,EAAKs6D,UAAUznD,KAAKwL,MAAM,KAC9BxL,KAAKo6E,MAAMjtF,EAAKG,GAAGg5C,eAAgBn5C,GAE/BA,EAAKgrD,OACPn4C,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKgrD,KAAMhrD,GAEzB,EAvSDjG,EAAQmhG,eAAiBnhG,EAAQohG,eAAiBphG,EAAQqhG,gBAAkBrhG,EAAQshG,kBAAoBthG,EAAQuhG,eAAiBvhG,EAAQwhG,oBAAiB,EAE1J,IAAIl7F,EAIJ,SAAiCjF,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,iBAARA,GAAmC,mBAARA,EAAsB,MAAO,CAAEE,QAASF,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,CAAC,EAAOC,EAAwB/B,OAAOC,gBAAkBD,OAAOgC,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIvB,OAAOkC,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwB/B,OAAOgC,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQtC,OAAOC,eAAe6B,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,EAAS,CAAgE,OAA7DH,EAAOL,QAAUF,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAkBA,CAAS,CAJ/tBS,CAAwBC,EAAQ,OAExC,SAASb,IAA6B,GAAuB,mBAAZc,QAAwB,OAAO,KAAM,IAAIf,EAAQ,IAAIe,QAAqE,OAA1Dd,EAA2B,WAAc,OAAOD,CAAQ,EAASA,CAAQ,CA4C1L,SAASy+F,EAAiBj0F,GACxB,OAAK1F,EAAEuK,YAAY7E,EAAU5C,MACtB62F,EAAiBj0F,EAAU5C,MADS4C,CAE5C,CAoCD,MAAMy1F,EAAqB,SAAUj2B,GACnC,OAAO,SAAUvlE,GACf6S,KAAK+gB,KAAK,OACV/gB,KAAKy7E,QAEM,OAAP/oB,GAAevlE,EAAK8yE,QACtBjgE,KAAK+gB,KAAK,SACV/gB,KAAKy7E,SAGPz7E,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKoB,KAAMpB,GACtB6S,KAAKy7E,QACLz7E,KAAK+gB,KAAK2xC,GACV1yD,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKi8C,MAAOj8C,GACvB6S,KAAKwL,MAAM,KACXxL,KAAK+mF,WAAW55F,EACjB,CACF,EAEKu7F,EAAiBC,EAAmB,MAC1CzhG,EAAQwhG,eAAiBA,EACzB,MAAMD,EAAiBE,EAAmB,MAgB1C,SAASC,EAAoB10F,EAAQjL,EAAM,SACzC,OAAO,SAAUkE,GACf6S,KAAK+gB,KAAK7sB,GACV,MAAM6W,EAAQ5d,EAAKlE,GAEnB,GAAI8hB,EAAO,CACT/K,KAAKy7E,QACL,MAAMoN,EAAiB,SAAP5/F,EACVw1F,EAAkBz+E,KAAK08E,oBAAoBmM,GACjD7oF,KAAKo6E,MAAMrvE,EAAO5d,GAClB6S,KAAK28E,kBAAkB8B,EACxB,CAEDz+E,KAAKwmC,WACN,CACF,CA9BDt/C,EAAQuhG,eAAiBA,EAgCzB,MAAMD,EAAoBI,EAAoB,YAC9C1hG,EAAQshG,kBAAoBA,EAC5B,MAAMD,EAAkBK,EAAoB,SAAU,YACtD1hG,EAAQqhG,gBAAkBA,EAC1B,MAAMD,EAAiBM,EAAoB,SAC3C1hG,EAAQohG,eAAiBA,EACzB,MAAMD,EAAiBO,EAAoB,QAAS,YAwFpD,SAAST,IAGP,GAFAnoF,KAAKwL,MAAM,KACXxL,KAAKw6E,UACDx6E,KAAKo5E,SAAS,MAAO,IAAK,IAAIvtF,EAAI,EAAGA,EAAI,EAAGA,IAAKmU,KAAKy7E,OAAM,EACjE,CAED,SAASyM,IAGP,GAFAloF,KAAKwL,MAAM,KACXxL,KAAKw6E,UACDx6E,KAAKo5E,SAAS,MAAO,IAAK,IAAIvtF,EAAI,EAAGA,EAAI,EAAGA,IAAKmU,KAAKy7E,OAAM,EACjE,CAjGDv0F,EAAQmhG,eAAiBA,C,4BCtKzBrhG,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ4hG,yBAIR,SAAkC37F,GAChC6S,KAAKo6E,MAAMjtF,EAAKqrE,IAAKrrE,GACrB6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,GAChC6S,KAAKo6E,MAAMjtF,EAAK2B,MAAO3B,EACxB,EAPDjG,EAAQ6hG,gBASR,SAAyB57F,EAAMC,GAC7B,MAAM47F,EAAU57F,EAAOyB,OAAO,KAAO1B,EAC/BunE,EAAStnE,EAAOyB,OAAOzB,EAAOyB,OAAOlD,OAAS,KAAOwB,EACrDhG,GAAS6hG,EAAU,IAAM,KAAO77F,EAAKhG,MAAM4H,KAAO2lE,EAAS,IAAM,MACvE10D,KAAKwL,MAAMrkB,EACZ,EAbDD,EAAQ+hG,gBAeR,SAAyB97F,GACvB,MAAM0B,EAAS1B,EAAK0B,OAEpB,IAAK,IAAIhD,EAAI,EAAGA,EAAIgD,EAAOlD,OAAQE,IACjCmU,KAAKo6E,MAAMvrF,EAAOhD,GAAIsB,GAElBtB,EAAI,EAAIgD,EAAOlD,QACjBqU,KAAKo6E,MAAMjtF,EAAKopE,YAAY1qE,GAAIsB,EAGrC,C,8BC9BDnG,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQgiG,WA8BR,SAAoB/7F,GAClB6S,KAAKu5E,YAAYpsF,EAAKxD,KAAK,KACzBqW,KAAK+gB,KAAK5zB,EAAKrF,KAAf,GAEH,EAjCDZ,EAAQiiG,oBAmCR,WACEnpF,KAAKwL,MAAM,IACZ,EApCDtkB,EAAQkiG,cAAgBliG,EAAQmiG,YAsChC,SAAqBl8F,GACnB6S,KAAKwL,MAAM,OACXxL,KAAKo6E,MAAMjtF,EAAK02C,SAAU12C,EAC3B,EAxCDjG,EAAQoiG,cAAgBpiG,EAAQqiG,iBA0ChC,SAA0Bp8F,GACxB,MAAM8oF,EAAQ9oF,EAAKgmB,WACnBnT,KAAKwL,MAAM,KACXxL,KAAKs6E,mBAAmBntF,GAEpB8oF,EAAMtqF,SACRqU,KAAKy7E,QACLz7E,KAAK07E,UAAUzF,EAAO9oF,EAAM,CAC1B49E,QAAQ,EACR73E,WAAW,IAEb8M,KAAKy7E,SAGPz7E,KAAKwL,MAAM,IACZ,EAxDDtkB,EAAQsiG,aA0DR,SAAsBr8F,GACpB6S,KAAKw7E,UAAUruF,EAAK83D,WAAY93D,GAEhC6S,KAAKo8E,YAAYjvF,GAEjB6S,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmD,KAAMnD,EACvB,EAhEDjG,EAAQuiG,eAkER,SAAwBt8F,GAGtB,GAFA6S,KAAKw7E,UAAUruF,EAAK83D,WAAY93D,GAE5BA,EAAKS,SACPoS,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKlE,IAAKkE,GACrB6S,KAAKwL,MAAM,SACN,CACL,GAAIhe,EAAEsL,oBAAoB3L,EAAKhG,QAAUqG,EAAEO,aAAaZ,EAAKlE,MAAQkE,EAAKlE,IAAInB,OAASqF,EAAKhG,MAAMoH,KAAKzG,KAErG,YADAkY,KAAKo6E,MAAMjtF,EAAKhG,MAAOgG,GAMzB,GAFA6S,KAAKo6E,MAAMjtF,EAAKlE,IAAKkE,GAEjBA,EAAKqzC,WAAahzC,EAAEO,aAAaZ,EAAKlE,MAAQuE,EAAEO,aAAaZ,EAAKhG,QAAUgG,EAAKlE,IAAInB,OAASqF,EAAKhG,MAAMW,KAC3G,MAEH,CAEDkY,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKhG,MAAOgG,EACxB,EAxFDjG,EAAQwiG,aAAexiG,EAAQyiG,gBA0F/B,SAAyBx8F,GACvB,MAAMy8F,EAAQz8F,EAAKolB,SACbhiB,EAAMq5F,EAAMj+F,OAClBqU,KAAKwL,MAAM,KACXxL,KAAKs6E,mBAAmBntF,GAExB,IAAK,IAAItB,EAAI,EAAGA,EAAI+9F,EAAMj+F,OAAQE,IAAK,CACrC,MAAM+pE,EAAOg0B,EAAM/9F,GAEf+pE,GACE/pE,EAAI,GAAGmU,KAAKy7E,QAChBz7E,KAAKo6E,MAAMxkB,EAAMzoE,GACbtB,EAAI0E,EAAM,GAAGyP,KAAKwL,MAAM,MAE5BxL,KAAKwL,MAAM,IAEd,CAEDxL,KAAKwL,MAAM,IACZ,EA5GDtkB,EAAQ2iG,iBA8GR,SAA0B18F,GACxB,MAAM8oF,EAAQ9oF,EAAKgmB,WACnB,IAAI22E,EACAC,EAEJ,GAA6C,QAAzC/pF,KAAK4mE,OAAOojB,yBACdF,EAAa,KACbC,EAAW,SACN,IAA6C,SAAzC/pF,KAAK4mE,OAAOojB,yBAIrB,MAAM,IAAIniG,MAAO,4EAA2Ew8E,KAAKC,UAAUtkE,KAAK4mE,OAAOojB,wCAHvHF,EAAa,KACbC,EAAW,GAGZ,CAED/pF,KAAKwL,MAAMs+E,GACX9pF,KAAKs6E,mBAAmBntF,GAEpB8oF,EAAMtqF,SACRqU,KAAKy7E,QACLz7E,KAAK07E,UAAUzF,EAAO9oF,EAAM,CAC1B49E,QAAQ,EACR73E,WAAW,IAEb8M,KAAKy7E,SAGPz7E,KAAKwL,MAAMu+E,EACZ,EAzID7iG,EAAQ+iG,gBA2IR,SAAyB98F,GACvB,MAAMy8F,EAAQz8F,EAAKolB,SACbhiB,EAAMq5F,EAAMj+F,OAClB,IAAIm+F,EACAC,EAEJ,GAA6C,QAAzC/pF,KAAK4mE,OAAOojB,yBACdF,EAAa,KACbC,EAAW,SACN,IAA6C,SAAzC/pF,KAAK4mE,OAAOojB,yBAIrB,MAAM,IAAIniG,MAAO,GAAEmY,KAAK4mE,OAAOojB,sEAH/BF,EAAa,KACbC,EAAW,GAGZ,CAED/pF,KAAKwL,MAAMs+E,GACX9pF,KAAKs6E,mBAAmBntF,GAExB,IAAK,IAAItB,EAAI,EAAGA,EAAI+9F,EAAMj+F,OAAQE,IAAK,CACrC,MAAM+pE,EAAOg0B,EAAM/9F,GAEf+pE,IACE/pE,EAAI,GAAGmU,KAAKy7E,QAChBz7E,KAAKo6E,MAAMxkB,EAAMzoE,GACbtB,EAAI0E,EAAM,GAAGyP,KAAKwL,MAAM,KAE/B,CAEDxL,KAAKwL,MAAMu+E,EACZ,EAxKD7iG,EAAQgjG,cA0KR,SAAuB/8F,GACrB6S,KAAK+gB,KAAM,IAAG5zB,EAAKuB,WAAWvB,EAAKwB,QACpC,EA3KDzH,EAAQijG,eA6KR,SAAwBh9F,GACtB6S,KAAK+gB,KAAK5zB,EAAKhG,MAAQ,OAAS,QACjC,EA9KDD,EAAQkjG,YAgLR,WACEpqF,KAAK+gB,KAAK,OACX,EAjLD75B,EAAQm8F,eAmLR,SAAwBl2F,GACtB,MAAM4B,EAAMiR,KAAKg7E,eAAe7tF,GAC1B3F,EAAOwY,KAAK4mE,OAAOyjB,YACnBljG,EAAQgG,EAAKhG,MAAQ,GAEvBK,EAAKskF,QACP9rE,KAAKzT,QAAO,EAAI+9F,EAAO7hG,SAAS0E,EAAKhG,MAAOK,IAC5B,MAAPuH,EACTiR,KAAKzT,OAAOpF,GACH6Y,KAAK4mE,OAAOkW,SACrB98E,KAAKzT,OAAOwC,EAAIpD,OAASxE,EAAMwE,OAASoD,EAAM5H,GAE9C6Y,KAAKzT,OAAOwC,EAEf,EAhMD7H,EAAQo8F,cAkMR,SAAuBn2F,GACrB,MAAM4B,EAAMiR,KAAKg7E,eAAe7tF,GAEhC,IAAK6S,KAAK4mE,OAAOkW,UAAmB,MAAP/tF,EAE3B,YADAiR,KAAKwL,MAAMzc,GAIb,MAAMvH,EAAOwY,KAAK4mE,OAAOyjB,YAErBrqF,KAAK4mE,OAAO2jB,wBACd/iG,EAAK0jF,MAAO,GAGd,MAAMvlE,GAAM,EAAI2kF,EAAO7hG,SAAS0E,EAAKhG,MAAOK,GAC5C,OAAOwY,KAAKwL,MAAM7F,EACnB,EAjNDze,EAAQsjG,cAmNR,SAAuBr9F,GACrB,MAAM4B,EAAMiR,KAAKg7E,eAAe7tF,GAE3B6S,KAAK4mE,OAAOkW,UAAmB,MAAP/tF,EAK7BiR,KAAKwL,MAAMre,EAAKhG,MAAQ,KAJtB6Y,KAAKwL,MAAMzc,EAKd,EA3ND7H,EAAQujG,eA6NR,SAAwBt9F,GACtB,MAAM4B,EAAMiR,KAAKg7E,eAAe7tF,GAE3B6S,KAAK4mE,OAAOkW,UAAmB,MAAP/tF,EAK7BiR,KAAKwL,MAAMre,EAAKhG,MAAQ,KAJtB6Y,KAAKwL,MAAMzc,EAKd,EArOD7H,EAAQwjG,wBAuOR,SAAiCv9F,GAC/B6S,KAAKo6E,MAAMjtF,EAAKgD,WAAYhD,EAC7B,EAxODjG,EAAQyjG,qBA0OR,SAA8Bx9F,GAC5B6S,KAAKo6E,MAAMjtF,EAAKkD,OAAQlD,EACzB,EA3ODjG,EAAQ0jG,8BA6OR,WACE5qF,KAAKwL,MAAM,IACZ,EA7OD,IAIgCjjB,EAJ5BiF,EAQJ,SAAiCjF,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,iBAARA,GAAmC,mBAARA,EAAsB,MAAO,CAAEE,QAASF,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,CAAC,EAAOC,EAAwB/B,OAAOC,gBAAkBD,OAAOgC,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIvB,OAAOkC,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwB/B,OAAOgC,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQtC,OAAOC,eAAe6B,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,EAAS,CAAgE,OAA7DH,EAAOL,QAAUF,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAkBA,CAAS,CAR/tBS,CAAwBC,EAAQ,OAEpC8gG,GAE4B/hG,EAFIiB,EAAQ,OAESjB,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAEvF,SAASI,IAA6B,GAAuB,mBAAZc,QAAwB,OAAO,KAAM,IAAIf,EAAQ,IAAIe,QAAqE,OAA1Dd,EAA2B,WAAc,OAAOD,CAAQ,EAASA,CAAQ,C,4BC2c1L,SAASmiG,EAAiBhqF,EAAMskC,IAClB,IAARA,GACFtkC,EAAK2K,MAAM25B,EAEd,CA5eDn+C,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ4jG,iBAsER,SAA0B39F,GACxB6S,KAAKwL,MAAM,KACXxL,KAAKy7E,QACDtuF,EAAK2zC,UAAU9gC,KAAKwL,MAAM,KAC9BxL,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,EACjC,EA1EDjG,EAAQ6jG,2BAA6B7jG,EAAQ8jG,6BA4E7C,SAAsC79F,GACpC6S,KAAKwL,MAAM,KACXxL,KAAK07E,UAAUvuF,EAAKiD,OAAQjD,EAAM,CAAC,GACnC6S,KAAKwL,MAAM,IACZ,EA/EDtkB,EAAQ+jG,gBAiFR,SAAyB99F,GACvB6S,KAAK+gB,KAAK5zB,EAAKrF,MAEXqF,EAAKmvD,aACPt8C,KAAKy7E,QACLz7E,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKmvD,WAAYnvD,IAG1BA,EAAK1E,UACPuX,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAK1E,QAAS0E,GAE5B,EAhGDjG,EAAQgkG,oBAkGR,SAA6B/9F,GACvBA,EAAKwtD,gBACP36C,KAAK+gB,KAAK5zB,EAAKwtD,eACf36C,KAAKy7E,SAGHtuF,EAAKwwD,WACP39C,KAAK+gB,KAAK,YACV/gB,KAAKy7E,SAGPz7E,KAAKolF,OAAOj4F,EAAKk4D,UAClB,EA7GDn+D,EAAQikG,kBA+GR,SAA2Bh+F,GACrBA,EAAKk8C,UACPrpC,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGPz7E,KAAKulF,cAAcp4F,GAEnB6S,KAAKwL,MAAM,IACZ,EAvHDtkB,EAAQkkG,gBAyHR,SAAyBj+F,GACvB6S,KAAKk8E,iBAAiB/uF,GAEtB6S,KAAKwL,MAAM,IACZ,EA5HDtkB,EAAQmkG,gBA8HR,SAAyBl+F,GACvB6S,KAAKo6E,MAAMjtF,EAAKoB,KAAMpB,GACtB6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKi8C,MAAOj8C,EACxB,EAjIDjG,EAAQokG,2BAmIR,SAAoCn+F,GAClC6S,KAAKurF,gCAAgCp+F,GACrC6S,KAAKwL,MAAM,IACZ,EArIDtkB,EAAQskG,gCAuIR,SAAyCr+F,GACvC6S,KAAK+gB,KAAK,OACV/gB,KAAKy7E,QACLz7E,KAAKurF,gCAAgCp+F,GACrC6S,KAAKwL,MAAM,IACZ,EA3IDtkB,EAAQukG,oBA6IR,SAA6Bt+F,GAC3B,MAAM,SACJwwD,EADI,YAEJgF,GACEx1D,EAEAwwD,IACF39C,KAAK+gB,KAAK,YACV/gB,KAAKy7E,SAGPz7E,KAAK0rF,4BAA4Bv+F,GACjC6S,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,GAE5Bw1D,IACF3iD,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMz3B,EAAax1D,IAG1B6S,KAAKwL,MAAM,IACZ,EAlKDtkB,EAAQwkG,4BAoKR,SAAqCv+F,GAC/BA,EAAKS,UACPoS,KAAKwL,MAAM,KAGbxL,KAAKo6E,MAAMjtF,EAAKlE,IAAKkE,GAEjBA,EAAKS,UACPoS,KAAKwL,MAAM,KAGTre,EAAK2zC,UACP9gC,KAAKwL,MAAM,IAEd,EAjLDtkB,EAAQykG,kBAmLR,SAA2Bx+F,GACzB6S,KAAK0rF,4BAA4Bv+F,GACjC6S,KAAKurF,gCAAgCp+F,GACrC6S,KAAKwL,MAAM,IACZ,EAtLDtkB,EAAQ0kG,iBAwLR,SAA0Bz+F,GACxB,MAAM,SACJwwD,GACExwD,EAEAwwD,IACF39C,KAAK+gB,KAAK,YACV/gB,KAAKy7E,SAGPz7E,KAAKwL,MAAM,KAEXxL,KAAKmlF,YAAYh4F,EAAK4vD,WAAY5vD,GAElC6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,GAChC6S,KAAKwL,MAAM,IACZ,EAxMDtkB,EAAQ2kG,aA0MR,WACE7rF,KAAK+gB,KAAK,MACX,EA3MD75B,EAAQ4kG,gBA6MR,WACE9rF,KAAK+gB,KAAK,SACX,EA9MD75B,EAAQ6kG,iBAgNR,WACE/rF,KAAK+gB,KAAK,UACX,EAjND75B,EAAQ8kG,gBAmNR,WACEhsF,KAAK+gB,KAAK,SACX,EApND75B,EAAQ+kG,gBAsNR,WACEjsF,KAAK+gB,KAAK,SACX,EAvND75B,EAAQglG,iBAyNR,WACElsF,KAAK+gB,KAAK,UACX,EA1ND75B,EAAQilG,gBA4NR,WACEnsF,KAAK+gB,KAAK,SACX,EA7ND75B,EAAQklG,gBA+NR,WACEpsF,KAAK+gB,KAAK,SACX,EAhOD75B,EAAQmlG,cAkOR,WACErsF,KAAK+gB,KAAK,OACX,EAnOD75B,EAAQolG,mBAqOR,WACEtsF,KAAK+gB,KAAK,YACX,EAtOD75B,EAAQqlG,cAwOR,WACEvsF,KAAK+gB,KAAK,OACX,EAzOD75B,EAAQslG,eA2OR,WACExsF,KAAK+gB,KAAK,QACX,EA5OD75B,EAAQulG,mBA8OR,WACEzsF,KAAK+gB,KAAK,YACX,EA/OD75B,EAAQwlG,WAiPR,WACE1sF,KAAK+gB,KAAK,OACX,EAlPD75B,EAAQylG,eAoPR,SAAwBx/F,GACtB6S,KAAK4sF,iCAAiCz/F,EACvC,EArPDjG,EAAQ2lG,kBAuPR,SAA2B1/F,GACzB6S,KAAK+gB,KAAK,OACV/gB,KAAKy7E,QACLz7E,KAAK4sF,iCAAiCz/F,EACvC,EA1PDjG,EAAQ0lG,iCA4PR,SAA0Cz/F,GACxC,MAAM,eACJgyC,EADI,WAEJ4d,GACE5vD,EACJ6S,KAAKo6E,MAAMj7C,EAAgBhyC,GAC3B6S,KAAKwL,MAAM,KAEXxL,KAAKmlF,YAAYpoC,EAAY5vD,GAE7B6S,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKwL,MAAM,MACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKm5C,eAAeA,eAAgBn5C,EAChD,EA1QDjG,EAAQ4lG,gBA4QR,SAAyB3/F,GACvB6S,KAAKo6E,MAAMjtF,EAAKwuD,SAAUxuD,GAC1B6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,EACjC,EA9QDjG,EAAQ6lG,gBAgRR,SAAyB5/F,GACnBA,EAAK6uD,UACPh8C,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGPz7E,KAAKo6E,MAAMjtF,EAAK2uD,eAEZ3uD,EAAKm5C,iBACPtmC,KAAKy7E,QACLz7E,KAAK+gB,KAAK,MACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKm5C,eAAeA,gBAElC,EA7RDp/C,EAAQ8lG,YA+RR,SAAqB7/F,GACnB6S,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKgvD,SACjB,EAlSDj1D,EAAQ+lG,cAoSR,SAAuB9/F,GACrB6S,KAAKktF,kCAAkC//F,EAAKqrD,QAASrrD,EACtD,EArSDjG,EAAQgmG,kCAuSR,SAA2C10C,EAASrrD,GAClD6S,KAAKmtF,cAAc30C,EAASrrD,EAC7B,EAxSDjG,EAAQimG,cA0SR,SAAuB30C,EAASrrD,GAG9B,GAFA6S,KAAKwL,MAAM,KAEPgtC,EAAQ7sD,OAAQ,CAClBqU,KAAK+qE,SACL/qE,KAAKw6E,UAEL,IAAK,MAAMzpC,KAAUyH,EACnBx4C,KAAKo6E,MAAMrpC,EAAQ5jD,GACnB6S,KAAKw6E,UAGPx6E,KAAK47E,SACL57E,KAAK46E,YACN,MACC56E,KAAKwL,MAAM,IAEd,EA1TDtkB,EAAQkmG,YA4TR,SAAqBjgG,GACnB6S,KAAKo6E,MAAMjtF,EAAK2/C,YAAa3/C,GAC7B6S,KAAKwL,MAAM,KACZ,EA9TDtkB,EAAQmmG,YAgUR,SAAqBlgG,GACnB6S,KAAKwL,MAAM,KACXxL,KAAK07E,UAAUvuF,EAAKsxD,aAActxD,GAClC6S,KAAKwL,MAAM,IACZ,EAnUDtkB,EAAQomG,eAqUR,SAAwBngG,GACtB6S,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,GAChC6S,KAAKwL,MAAM,IACZ,EAvUDtkB,EAAQqmG,WAyUR,SAAoBpgG,GAClB6S,KAAKwL,MAAM,OACXxL,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,EACjC,EA3UDjG,EAAQsmG,mBA6UR,SAA4BrgG,GAC1B6S,KAAKo6E,MAAMjtF,EAAK4d,MAAO5d,GACnBA,EAAK2zC,UAAU9gC,KAAKwL,MAAM,KAC9BxL,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAK2/C,YAAa3/C,EAC9B,EAlVDjG,EAAQumG,YAoVR,SAAqBtgG,GACnB6S,KAAK0tF,+BAA+BvgG,EAAM,IAC3C,EArVDjG,EAAQymG,mBAuVR,SAA4BxgG,GAC1B6S,KAAK0tF,+BAA+BvgG,EAAM,IAC3C,EAxVDjG,EAAQwmG,+BA0VR,SAAwCvgG,EAAMygG,GAC5C5tF,KAAKw7E,UAAUruF,EAAKue,MAAOve,EAAM,CAC/Bo0F,YACEvhF,KAAKy7E,QACLz7E,KAAKwL,MAAMoiF,GACX5tF,KAAKy7E,OACN,GAGJ,EAlWDv0F,EAAQ2mG,kBAoWR,SAA2B1gG,GACzB6S,KAAKo6E,MAAMjtF,EAAKq0D,WAChBxhD,KAAKy7E,QACLz7E,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKs0D,aAChBzhD,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKu0D,UAChB1hD,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKw0D,UACjB,EAjXDz6D,EAAQ4mG,YAmXR,SAAqB3gG,GACnB6S,KAAKwL,MAAM,SACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAK68C,cACjB,EAtXD9iD,EAAQ6mG,oBAwXR,SAA6B5gG,GAC3B6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,GAChC6S,KAAKwL,MAAM,IACZ,EA3XDtkB,EAAQ8mG,eA6XR,SAAwB7gG,GACtB6S,KAAK+gB,KAAK5zB,EAAKmB,UACf0R,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,EACjC,EAhYDjG,EAAQ+mG,oBAkYR,SAA6B9gG,GAC3B6S,KAAKo6E,MAAMjtF,EAAK4/C,WAAY5/C,GAC5B6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAK6/C,UAAW7/C,GAC3B6S,KAAKwL,MAAM,IACZ,EAtYDtkB,EAAQgnG,aAwYR,SAAsB/gG,GACpB,MAAM,SACJkxD,EADI,SAEJvd,EAFI,SAGJ6c,EAHI,cAIJ3T,GACE78C,EACJ6S,KAAKwL,MAAM,KACXxL,KAAKy7E,QAED99B,IACFktC,EAAiB7qF,KAAM29C,GACvB39C,KAAK+gB,KAAK,YACV/gB,KAAKy7E,SAGPz7E,KAAKwL,MAAM,KACXxL,KAAK+gB,KAAKipB,EAAcliD,MACxBkY,KAAKy7E,QACLz7E,KAAK+gB,KAAK,MACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMpwC,EAAcsS,WAAYtS,GAEjCqU,IACFr+C,KAAKy7E,QACLz7E,KAAK+gB,KAAK,MACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAM/7B,EAAUlxD,IAGvB6S,KAAKwL,MAAM,KAEPs1B,IACF+pD,EAAiB7qF,KAAM8gC,GACvB9gC,KAAKwL,MAAM,MAGbxL,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,GAChC6S,KAAKy7E,QACLz7E,KAAKwL,MAAM,IACZ,EAjbDtkB,EAAQinG,cAybR,SAAuBhhG,GACrB6S,KAAKo6E,MAAMjtF,EAAK6qD,QAAS7qD,EAC1B,EA1bDjG,EAAQknG,8BA4bR,SAAuCjhG,GACrC6S,KAAKo6E,MAAMjtF,EAAKgD,WAAYhD,GAC5B6S,KAAKo6E,MAAMjtF,EAAKgyC,eAAgBhyC,EACjC,EA9bDjG,EAAQmnG,uBAgcR,SAAgClhG,GAC9B,MAAM,QACJk8C,EADI,GAEJ/7C,EAFI,eAGJ6xC,EACAiJ,QAASkmD,EAJL,KAKJh+F,GACEnD,EAEAk8C,IACFrpC,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGPz7E,KAAK+gB,KAAK,aACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAM9sF,EAAIH,GACf6S,KAAKo6E,MAAMj7C,EAAgBhyC,GAEvBmhG,IACFtuF,KAAKy7E,QACLz7E,KAAK+gB,KAAK,WACV/gB,KAAKy7E,QACLz7E,KAAK07E,UAAU4S,EAASnhG,IAG1B6S,KAAKy7E,QACLz7E,KAAKo6E,MAAM9pF,EAAMnD,EAClB,EA3dDjG,EAAQqnG,gBA6dR,SAAyBphG,GACvB6S,KAAKktF,kCAAkC//F,EAAKmD,KAAMnD,EACnD,EA9dDjG,EAAQsnG,uBAgeR,SAAgCrhG,GAC9B,MAAM,QACJk8C,EADI,GAEJ/7C,EAFI,eAGJ6xC,EAHI,eAIJmH,GACEn5C,EAEAk8C,IACFrpC,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGPz7E,KAAK+gB,KAAK,QACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAM9sF,EAAIH,GACf6S,KAAKo6E,MAAMj7C,EAAgBhyC,GAC3B6S,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAM9zC,EAAgBn5C,GAC3B6S,KAAKwL,MAAM,IACZ,EArfDtkB,EAAQunG,eAufR,SAAwBthG,GACtB,MAAM,WACJgD,EADI,eAEJm2C,GACEn5C,EACJ6S,KAAKo6E,MAAMjqF,EAAYhD,GACvB6S,KAAKy7E,QACLz7E,KAAK+gB,KAAK,MACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAM9zC,EAAgBn5C,EAC5B,EAhgBDjG,EAAQwnG,gBAkgBR,SAAyBvhG,GACvB,MAAM,eACJm5C,EADI,WAEJn2C,GACEhD,EACJ6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAM9zC,EAAgBn5C,GAC3B6S,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjqF,EAAYhD,EACxB,EA3gBDjG,EAAQynG,kBA6gBR,SAA2BxhG,GACzB,MAAM,QACJk8C,EACAtiB,MAAO87B,EAFH,GAGJv1D,EAHI,QAIJkrD,GACErrD,EAEAk8C,IACFrpC,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGH54B,IACF7iD,KAAK+gB,KAAK,SACV/gB,KAAKy7E,SAGPz7E,KAAK+gB,KAAK,QACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAM9sF,EAAIH,GACf6S,KAAKy7E,QACLz7E,KAAKmtF,cAAc30C,EAASrrD,EAC7B,EAniBDjG,EAAQ0nG,aAqiBR,SAAsBzhG,GACpB,MAAM,GACJG,EADI,YAEJq1D,GACEx1D,EACJ6S,KAAKo6E,MAAM9sF,EAAIH,GAEXw1D,IACF3iD,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMz3B,EAAax1D,IAG1B6S,KAAKwL,MAAM,IACZ,EAnjBDtkB,EAAQ2nG,oBAqjBR,SAA6B1hG,GAC3B,MAAM,QACJk8C,EADI,GAEJ/7C,GACEH,EAcJ,GAZIk8C,IACFrpC,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGFtuF,EAAKm2D,SACRtjD,KAAK+gB,KAAiB,eAAZzzB,EAAGoK,KAAwB,YAAc,UACnDsI,KAAKy7E,SAGPz7E,KAAKo6E,MAAM9sF,EAAIH,IAEVA,EAAKmD,KAER,YADA0P,KAAKwL,MAAM,KAIb,IAAIlb,EAAOnD,EAAKmD,KAEhB,KAAqB,wBAAdA,EAAKoH,MACVsI,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAM9pF,EAAKhD,GAAIgD,GACpBA,EAAOA,EAAKA,KAGd0P,KAAKy7E,QACLz7E,KAAKo6E,MAAM9pF,EAAMnD,EAClB,EArlBDjG,EAAQ4nG,cAulBR,SAAuB3hG,GACrB6S,KAAKmtF,cAAchgG,EAAKmD,KAAMnD,EAC/B,EAxlBDjG,EAAQ6nG,aA0lBR,SAAsB5hG,GACpB,MAAM,SACJ02C,EADI,UAEJyX,EAFI,eAGJnc,GACEhyC,EACJ6S,KAAK+gB,KAAK,UACV/gB,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMv2C,EAAU12C,GACrB6S,KAAKwL,MAAM,KAEP8vC,IACFt7C,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAM9+B,EAAWnuD,IAGpBgyC,GACFn/B,KAAKo6E,MAAMj7C,EAAgBhyC,EAE9B,EA5mBDjG,EAAQ8nG,0BA8mBR,SAAmC7hG,GACjC,MAAM,SACJq2D,EADI,GAEJl2D,EAFI,gBAGJm2D,GACEt2D,EAEAq2D,IACFxjD,KAAK+gB,KAAK,UACV/gB,KAAKy7E,SAGPz7E,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAM9sF,EAAIH,GACf6S,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAM32B,EAAiBt2D,GAC5B6S,KAAKwL,MAAM,IACZ,EAjoBDtkB,EAAQ+nG,0BAmoBR,SAAmC9hG,GACjC6S,KAAKwL,MAAM,YACXxL,KAAKo6E,MAAMjtF,EAAKgD,WAAYhD,GAC5B6S,KAAKwL,MAAM,IACZ,EAtoBDtkB,EAAQgoG,oBAwoBR,SAA6B/hG,GAC3B6S,KAAKo6E,MAAMjtF,EAAKgD,WAAYhD,GAC5B6S,KAAKwL,MAAM,IACZ,EA1oBDtkB,EAAQioG,mBA4oBR,SAA4BhiG,GAC1B6S,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKgD,WAAYhD,GAC5B6S,KAAKwL,MAAM,IACZ,EAlpBDtkB,EAAQkoG,6BAopBR,SAAsCjiG,GACpC6S,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACLz7E,KAAK+gB,KAAK,MACV/gB,KAAKy7E,QACLz7E,KAAK+gB,KAAK,aACV/gB,KAAKy7E,QACLz7E,KAAKo6E,MAAMjtF,EAAKG,GAAIH,EACrB,EA3pBDjG,EAAQqkG,gCA6pBR,SAAyCp+F,GACvC,MAAM,eACJgyC,EADI,WAEJ4d,GACE5vD,EACJ6S,KAAKo6E,MAAMj7C,EAAgBhyC,GAC3B6S,KAAKwL,MAAM,KAEXxL,KAAKmlF,YAAYpoC,EAAY5vD,GAE7B6S,KAAKwL,MAAM,KACXxL,KAAKo6E,MAAMjtF,EAAKm5C,eAAgBn5C,EACjC,EAxqBDjG,EAAQ40F,4BA0qBR,SAAqC3uF,EAAMkiG,GACrCA,GAAWliG,EAAKk8C,UAClBrpC,KAAK+gB,KAAK,WACV/gB,KAAKy7E,SAGHtuF,EAAKwtD,gBACP36C,KAAK+gB,KAAK5zB,EAAKwtD,eACf36C,KAAKy7E,SAGHtuF,EAAKu9C,SACP1qC,KAAK+gB,KAAK,UACV/gB,KAAKy7E,SAGHtuF,EAAKkyD,WACPr/C,KAAK+gB,KAAK,YACV/gB,KAAKy7E,SAGH4T,GAAWliG,EAAKwwD,WAClB39C,KAAK+gB,KAAK,YACV/gB,KAAKy7E,QAER,C,8BC1wBDz0F,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAAA,QAqFA,SAAkBsL,EAAKhL,EAAM8L,GAE3B,OADY,IAAIg8F,EAAU98F,EAAKhL,EAAM8L,GAC1Bi8F,UACZ,EAvFDroG,EAAQsoG,mBAAgB,EAExB,IAAIC,EAAap+F,EAAuB7H,EAAQ,OAE5CkmG,EAAWr+F,EAAuB7H,EAAQ,OAE9C,SAAS6H,EAAuB9I,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAASF,EAAQ,CAE/F,MAAM+mG,UAAkBI,EAASjnG,QAC/B0X,YAAY3N,EAAKhL,EAAO,CAAC,EAAG8L,GAC1B,MAAMszE,EAaV,SAA0BtzE,EAAM9L,GAC9B,MAAMo/E,EAAS,CACb+oB,uBAAwBnoG,EAAKmoG,uBAC7BC,sBAAuBpoG,EAAKooG,sBAC5BC,mBAAoBroG,EAAKqoG,mBACzBjK,YAAap+F,EAAKo+F,YAClBkK,qBAAsBtoG,EAAKsoG,qBAC3BtkC,SAA2B,MAAjBhkE,EAAKgkE,UAAoBhkE,EAAKgkE,SACxC6f,QAAS7jF,EAAK6jF,QACdyR,SAAUt1F,EAAKs1F,SACfiT,QAASvoG,EAAKuoG,QACdxF,sBAAuB/iG,EAAK+iG,sBAC5Bxf,OAAQ,CACNilB,wBAAwB,EACxB/xF,MAAO,KACPojC,KAAM,GAER+hC,yBAA0B57E,EAAK47E,uBAC/BinB,YAAarjG,OAAOkE,OAAO,CACzBkgF,OAAQ,SACRv6E,MAAM,GACLrJ,EAAK6iG,aACRL,yBAA0BxiG,EAAKwiG,0BAuBjC,OApBIpjB,EAAOkW,UACTlW,EAAOyE,SAAU,EAEjBzE,EAAOipB,mBAAqBjpB,EAAOipB,oBAAP,KAAoCjpB,EAAOpb,WAEvEob,EAAOipB,mBAAqBjpB,EAAOipB,oBAAP,CAA8B1oG,GAASy/E,EAAOpb,UAAYrkE,EAAM4O,QAAQ,aAAe,GAAK5O,EAAM4O,QAAQ,cAAgB,GAGjI,SAAnB6wE,EAAOyE,UACTzE,EAAOyE,QAAU/3E,EAAK3H,OAAS,IAE3Bi7E,EAAOyE,SACTtjF,QAAQ8K,MAA4E,mEAAErL,EAAKgqB,6CAI3Fo1D,EAAOyE,UACTzE,EAAOmE,OAAOilB,wBAAyB,GAGlCppB,CACR,CA3DkBqpB,CAAiB38F,EAAM9L,GAEtCg8B,MAAMojD,EADMp/E,EAAK0oG,WAAa,IAAIT,EAAWhnG,QAAQjB,EAAM8L,GAAQ,MAEnE0M,KAAKxN,SAAM,EACXwN,KAAKxN,IAAMA,CACZ,CAED+8F,WACE,OAAO/rE,MAAM+rE,SAASvvF,KAAKxN,IAC5B,EA+DHtL,EAAQsoG,cAXR,MACErvF,YAAY3N,EAAKhL,EAAM8L,GACrB0M,KAAKmwF,WAAa,IAAIb,EAAU98F,EAAKhL,EAAM8L,EAC5C,CAEDi8F,WACE,OAAOvvF,KAAKmwF,WAAWZ,UACxB,E,6BClFHvoG,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQkpG,gBAAkBA,EAC1BlpG,EAAQmpG,sBAoFR,SAA+BljG,EAAMC,GACnC,OAAOgjG,EAAgBjjG,EAAMC,EAAQ,SACtC,EArFDlG,EAAQopG,qBAuFR,SAA8BnjG,EAAMC,GAClC,OAAOgjG,EAAgBjjG,EAAMC,EAAQ,QACtC,EAxFDlG,EAAQ82F,YA0FR,SAAqB7wF,EAAMC,EAAQmjG,GACjC,QAAKnjG,OAEDI,EAAEoK,gBAAgBxK,IAAWA,EAAOiD,SAAWlD,IAC7CqjG,EAAsBrjG,KAGrByvC,EAAK6zD,EAAgBtjG,EAAMC,EAAQmjG,GAC3C,EAhGD,IAAIG,EAAannG,EAAwBC,EAAQ,OAE7Cs0F,EAASv0F,EAAwBC,EAAQ,OAEzCgE,EAAIjE,EAAwBC,EAAQ,OAExC,SAASb,IAA6B,GAAuB,mBAAZc,QAAwB,OAAO,KAAM,IAAIf,EAAQ,IAAIe,QAAqE,OAA1Dd,EAA2B,WAAc,OAAOD,CAAQ,EAASA,CAAQ,CAE1L,SAASa,EAAwBhB,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,iBAARA,GAAmC,mBAARA,EAAsB,MAAO,CAAEE,QAASF,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,CAAC,EAAOC,EAAwB/B,OAAOC,gBAAkBD,OAAOgC,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIvB,OAAOkC,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwB/B,OAAOgC,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQtC,OAAOC,eAAe6B,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,EAAS,CAAgE,OAA7DH,EAAOL,QAAUF,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAkBA,CAAS,CAEvuB,SAAS6nG,EAAcpoG,GACrB,MAAMO,EAAS,CAAC,EAEhB,SAASoP,EAAIR,EAAMk5F,GACjB,MAAMj+F,EAAK7J,EAAO4O,GAClB5O,EAAO4O,GAAQ/E,EAAK,SAAUxF,EAAMC,EAAQ0F,GAC1C,MAAMqB,EAASxB,EAAGxF,EAAMC,EAAQ0F,GAChC,OAAiB,MAAVqB,EAAiBy8F,EAAKzjG,EAAMC,EAAQ0F,GAASqB,CACrD,EAAGy8F,CACL,CAED,IAAK,MAAMl5F,KAAQ1Q,OAAOuO,KAAKhN,GAAM,CACnC,MAAMsoG,EAAUrjG,EAAEsjG,mBAAmBp5F,GAErC,GAAIm5F,EACF,IAAK,MAAME,KAASF,EAClB34F,EAAI64F,EAAOxoG,EAAImP,SAGjBQ,EAAIR,EAAMnP,EAAImP,GAEjB,CAED,OAAO5O,CACR,CAED,MAAM2nG,EAAiBE,EAAc7S,GAC/BkT,EAA0BL,EAAcD,EAAWluB,OACnDyuB,EAAyBN,EAAcD,EAAWphD,MAExD,SAAS1S,EAAKr0C,EAAK4E,EAAMC,EAAQmjG,GAC/B,MAAM59F,EAAKpK,EAAI4E,EAAKuK,MACpB,OAAO/E,EAAKA,EAAGxF,EAAMC,EAAQmjG,GAAc,IAC5C,CAED,SAASC,EAAsBrjG,GAC7B,QAAIK,EAAEqK,iBAAiB1K,IAIhBK,EAAEuvF,mBAAmB5vF,IAASqjG,EAAsBrjG,EAAKuqC,OACjE,CAED,SAAS04D,EAAgBjjG,EAAMC,EAAQsK,GACrC,IAAKvK,EAAM,OAAO,EAEdK,EAAEsK,sBAAsB3K,KAC1BA,EAAOA,EAAKgD,YAGd,IAAI+gG,EAAYt0D,EAAKo0D,EAAyB7jG,EAAMC,GAEpD,IAAK8jG,EAAW,CACd,MAAMz4F,EAAQmkC,EAAKq0D,EAAwB9jG,EAAMC,GAEjD,GAAIqL,EACF,IAAK,IAAI5M,EAAI,EAAGA,EAAI4M,EAAM9M,SACxBulG,EAAYd,EAAgB33F,EAAM5M,GAAIsB,EAAMuK,IACxCw5F,GAF4BrlG,KAKrC,CAED,MAAyB,iBAAdqlG,GAAwC,OAAdA,GAC5BA,EAAUx5F,IAGZ,CACR,C,8BCtFD1Q,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQy6F,uBA6DR,SAAgCx0F,EAAMC,GACpC,OAAOI,EAAE2jG,sBAAsB/jG,EAChC,EA9DDlG,EAAQ85F,uBAgER,SAAgC7zF,EAAMC,EAAQmjG,GAC5C,OAAO/iG,EAAE4jG,sBAAsBhkG,IAAWI,EAAE6jG,6BAA6BjkG,IAAWI,EAAE2jG,sBAAsB/jG,IAAWI,EAAE8jG,iBAAiBlkG,IAAWI,EAAE+jG,0BAA0BhB,EAAWA,EAAW5kG,OAAS,GACjN,EAjEDzE,EAAQu1F,iBAmER,SAA0BtvF,EAAMC,GAC9B,OAAOokG,EAAerkG,EAAMC,IAAWqkG,EAAqBtkG,EAAMC,EACnE,EApEDlG,EAAQqiG,iBAsER,SAA0Bp8F,EAAMC,EAAQmjG,GACtC,OAAOmB,EAAmBnB,EAAY,CACpCoB,eAAe,GAElB,EAzEDzqG,EAAQq1F,aA2ER,SAAsBpvF,EAAMC,EAAQmjG,GAClC,OAAOmB,EAAmBnB,EAC3B,EA5EDrpG,EAAQ0qG,OA8ER,SAAgBzkG,EAAMC,GACpB,GAAsB,OAAlBD,EAAKmB,UAAqBd,EAAEqkG,mBAAmBzkG,EAAQ,CACzDkB,SAAU,OAEV,OAAOlB,EAAOmB,OAASpB,EAGzB,GAAIskG,EAAqBtkG,EAAMC,GAC7B,OAAO,EAGT,GAAIokG,EAAerkG,EAAMC,IAAWI,EAAEskG,YAAY1kG,IAAWI,EAAEukG,kBAAkB3kG,GAC/E,OAAO,EAGT,GAAII,EAAEwkG,SAAS5kG,GAAS,CACtB,MAAM6kG,EAAW7kG,EAAOkB,SAClB4jG,EAAYC,EAAWF,GACvBG,EAASjlG,EAAKmB,SACd+jG,EAAUF,EAAWC,GAE3B,GAAIF,IAAcG,GAAWjlG,EAAOg8C,QAAUj8C,IAASK,EAAE8kG,oBAAoBllG,IAAW8kG,EAAYG,EAClG,OAAO,CAEV,CACF,EAtGDnrG,EAAQo6F,2BAA6Bp6F,EAAQ67F,oBAwG7C,SAA6B51F,EAAMC,GACjC,OAAOI,EAAE2jG,sBAAsB/jG,IAAWI,EAAE+kG,yBAAyBnlG,IAAWI,EAAE6jG,6BAA6BjkG,IAAWI,EAAE4jG,sBAAsBhkG,EACnJ,EAzGDlG,EAAQunG,eA2GR,WACE,OAAO,CACR,EA5GDvnG,EAAQwnG,gBA8GR,WACE,OAAO,CACR,EA/GDxnG,EAAQymG,mBAAqBzmG,EAAQumG,YAiHrC,SAAqBtgG,EAAMC,GACzB,OAAOI,EAAEglG,cAAcplG,IAAWI,EAAEilG,iBAAiBrlG,IAAWI,EAAEklG,qBAAqBtlG,IAAWI,EAAEmlG,cAAcvlG,IAAWI,EAAEolG,aAAaxlG,EAC7I,EAlHDlG,EAAQ4mG,YAoHR,SAAqB3gG,EAAMC,GACzB,OAAOI,EAAEglG,cAAcplG,IAAWI,EAAEilG,iBAAiBrlG,EACtD,EArHDlG,EAAQ02F,iBAuHR,SAA0BzwF,EAAMC,GAC9B,MAAyB,OAAlBD,EAAKmB,WAAsBd,EAAEM,qBAAqBV,IAAWI,EAAE0yE,MAAM9yE,GAC7E,EAxHDlG,EAAQ81F,mBA0HR,SAA4B7vF,EAAMC,GAChC,QAAII,EAAEqlG,eAAezlG,IAAWI,EAAEslG,iBAAiB1lG,IAAWI,EAAEulG,kBAAkB3lG,IAAWI,EAAE05F,cAAc95F,IAAWA,EAAOqK,OAAStK,GAAQK,EAAEwlG,iBAAiB5lG,IAAWA,EAAOqK,OAAStK,GAAQK,EAAEylG,iBAAiB7lG,IAAWA,EAAOg8C,QAAUj8C,GAAQK,EAAE0lG,kBAAkB9lG,IAAWA,EAAO+xE,eAAiBhyE,GAAQK,EAAEsK,sBAAsB1K,IAAWA,EAAO+C,aAAehD,EAKtX,EA/HDjG,EAAQo3F,gBAAkBp3F,EAAQq3F,gBAiIlC,SAAyBpxF,EAAMC,GAC7B,OAAOI,EAAEwkG,SAAS5kG,IAAWI,EAAEskG,YAAY1kG,IAAWokG,EAAerkG,EAAMC,IAAWI,EAAEukG,kBAAkB3kG,IAAWI,EAAE2lG,kBAAkBhmG,IAASK,EAAE4lG,wBAAwBhmG,IAAWD,IAASC,EAAOqK,MAAQg6F,EAAqBtkG,EAAMC,EAC3O,EAlIDlG,EAAQm0F,gBAoIR,SAAyBluF,EAAMC,EAAQmjG,GACrC,OAAOmB,EAAmBnB,EAAY,CACpC8C,wBAAwB,GAE3B,EAvIDnsG,EAAQosG,UAAYA,EACpBpsG,EAAQu+F,mBA+IR,SAA4Bt4F,EAAMC,EAAQmjG,GACxC,OAAOmB,EAAmBnB,EAAY,CACpC8C,wBAAwB,GAE3B,EAlJDnsG,EAAQw+F,wBAoJR,SAAiCv4F,EAAMC,GACrC,OAAOI,EAAEyL,oBAAoB7L,IAAWwvF,EAAsBzvF,EAAMC,EACrE,EArJDlG,EAAQ01F,sBAAwBA,EAChC11F,EAAQm2F,uBAAyBn2F,EAAQk2F,yBAgKzC,SAAkCjwF,EAAMC,GACtC,OAAOI,EAAEqK,iBAAiBzK,EAAQ,CAChCiD,OAAQlD,KACJK,EAAEuvF,mBAAmB3vF,EAAQ,CACjCsqC,OAAQvqC,GAEX,EArKDjG,EAAQ22F,qBAuKR,SAA8B1wF,EAAMC,EAAQmjG,GAC1C,QAAI/iG,EAAE+lG,gBAAgBpmG,EAAKoB,OAGlBquF,EAAsBzvF,EAAMC,EAEtC,EA5KDlG,EAAQy2F,kBA8KR,SAA2BxwF,EAAMC,GAC/B,OAAQD,EAAKmB,UACX,IAAK,KACH,QAAKd,EAAE8kG,oBAAoBllG,KACA,OAApBA,EAAOkB,UAAyC,OAApBlB,EAAOkB,UAE5C,IAAK,KACH,OAAOd,EAAE8kG,oBAAoBllG,EAAQ,CACnCkB,SAAU,OAGd,IAAK,KACH,OAAOd,EAAE8kG,oBAAoBllG,IAA+B,OAApBA,EAAOkB,SAEpD,EA1LD,IAAId,EAIJ,SAAiCjF,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,iBAARA,GAAmC,mBAARA,EAAsB,MAAO,CAAEE,QAASF,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,CAAC,EAAOC,EAAwB/B,OAAOC,gBAAkBD,OAAOgC,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIvB,OAAOkC,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwB/B,OAAOgC,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQtC,OAAOC,eAAe6B,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,EAAS,CAAgE,OAA7DH,EAAOL,QAAUF,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAkBA,CAAS,CAJ/tBS,CAAwBC,EAAQ,OAExC,SAASb,IAA6B,GAAuB,mBAAZc,QAAwB,OAAO,KAAM,IAAIf,EAAQ,IAAIe,QAAqE,OAA1Dd,EAA2B,WAAc,OAAOD,CAAQ,EAASA,CAAQ,CAI1L,MAAMypG,EAAa,CACjB,KAAM,EACN,KAAM,EACN,KAAM,EACN,IAAK,EACL,IAAK,EACL,IAAK,EACL,KAAM,EACN,MAAO,EACP,KAAM,EACN,MAAO,EACP,IAAK,EACL,IAAK,EACL,KAAM,EACN,KAAM,EACNqB,GAAI,EACJC,WAAY,EACZ,KAAM,EACN,KAAM,EACN,MAAO,EACP,IAAK,EACL,IAAK,EACL,IAAK,EACL,IAAK,EACL,IAAK,EACL,KAAM,IAGFhC,EAAuB,CAACtkG,EAAMC,KAAYI,EAAE6L,mBAAmBjM,IAAWI,EAAEmM,kBAAkBvM,KAAYA,EAAO6vC,aAAe9vC,EAEhIqkG,EAAiB,CAACrkG,EAAMC,KAAYI,EAAEuvF,mBAAmB3vF,IAAWI,EAAEkmG,2BAA2BtmG,KAAYA,EAAOsqC,SAAWvqC,IAASK,EAAEqK,iBAAiBzK,IAAWI,EAAEmmG,yBAAyBvmG,IAAWI,EAAEoK,gBAAgBxK,KAAYA,EAAOiD,SAAWlD,GAAQK,EAAEomG,2BAA2BxmG,IAAWA,EAAOorE,MAAQrrE,GAAQK,EAAEqmG,sBAAsBzmG,GA6FjW,SAASkmG,EAAUnmG,EAAMC,GACvB,OAAOokG,EAAerkG,EAAMC,IAAWI,EAAEqkG,mBAAmBzkG,EAAQ,CAClEkB,SAAU,KACVC,KAAMpB,KACFskG,EAAqBtkG,EAAMC,EAClC,CAYD,SAASwvF,EAAsBzvF,EAAMC,GACnC,SAAII,EAAEskG,YAAY1kG,IAAWI,EAAEwkG,SAAS5kG,IAAWI,EAAE4lG,wBAAwBhmG,EAAQ,CACnFqK,KAAMtK,KACFK,EAAEukG,kBAAkB3kG,IAAWI,EAAEsmG,kBAAkB1mG,IAAWI,EAAEumG,iBAAiB3mG,KAIhFkmG,EAAUnmG,EAAMC,EACxB,CAkCD,SAASskG,EAAmBnB,GAAY,cACtCoB,GAAgB,EADsB,uBAEtC0B,GAAyB,GACvB,CAAC,GACH,IAAIxnG,EAAI0kG,EAAW5kG,OAAS,EACxBwB,EAAOojG,EAAW1kG,GACtBA,IACA,IAAIuB,EAASmjG,EAAW1kG,GAExB,KAAOA,GAAK,GAAG,CACb,GAAI2B,EAAEsK,sBAAsB1K,EAAQ,CAClC+C,WAAYhD,KACRkmG,GAA0B7lG,EAAE2L,2BAA2B/L,EAAQ,CACnEgM,YAAajM,KACTwkG,GAAiBnkG,EAAE+jG,0BAA0BnkG,EAAQ,CACzDkD,KAAMnD,IAEN,OAAO,EAGT,KAAIqkG,EAAerkG,EAAMC,KAAYI,EAAEoK,gBAAgBxK,IAAWI,EAAEwmG,qBAAqB5mG,IAAWA,EAAOmpE,YAAY,KAAOppE,GAAQK,EAAEymG,cAAc7mG,EAAQ,CAC5JqK,KAAMtK,KACFK,EAAEwkG,SAAS5kG,EAAQ,CACvBmB,KAAMpB,KACFK,EAAEa,uBAAuBjB,EAAQ,CACrCmB,KAAMpB,KAMN,OAAO,EAJPA,EAAOC,EACPvB,IACAuB,EAASmjG,EAAW1kG,EAIvB,CAED,OAAO,CACR,C,8BC1PD7E,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQooD,KAAOpoD,EAAQs7E,WAAQ,EAE/B,IAAIh1E,EAIJ,SAAiCjF,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,iBAARA,GAAmC,mBAARA,EAAsB,MAAO,CAAEE,QAASF,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,CAAC,EAAOC,EAAwB/B,OAAOC,gBAAkBD,OAAOgC,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIvB,OAAOkC,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwB/B,OAAOgC,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQtC,OAAOC,eAAe6B,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,EAAS,CAAgE,OAA7DH,EAAOL,QAAUF,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAkBA,CAAS,CAJ/tBS,CAAwBC,EAAQ,OAExC,SAASb,IAA6B,GAAuB,mBAAZc,QAAwB,OAAO,KAAM,IAAIf,EAAQ,IAAIe,QAAqE,OAA1Dd,EAA2B,WAAc,OAAOD,CAAQ,EAASA,CAAQ,CAI1L,SAASwrG,EAAM/mG,EAAMiC,EAAQ,CAAC,GAgB5B,OAfI5B,EAAEuvF,mBAAmB5vF,IAASK,EAAEkmG,2BAA2BvmG,IAC7D+mG,EAAM/mG,EAAKuqC,OAAQtoC,GACfjC,EAAKS,UAAUsmG,EAAM/mG,EAAK0qC,SAAUzoC,IAC/B5B,EAAEwkG,SAAS7kG,IAASK,EAAEa,uBAAuBlB,IACtD+mG,EAAM/mG,EAAKoB,KAAMa,GACjB8kG,EAAM/mG,EAAKi8C,MAAOh6C,IACT5B,EAAEqK,iBAAiB1K,IAASK,EAAEmmG,yBAAyBxmG,IAChEiC,EAAM+kG,SAAU,EAChBD,EAAM/mG,EAAKkD,OAAQjB,IACV5B,EAAEiC,WAAWtC,GACtBiC,EAAMglG,aAAc,EACX5mG,EAAEO,aAAaZ,KACxBiC,EAAMilG,UAAYjlG,EAAMilG,WAAaC,EAASnnG,EAAKkD,SAG9CjB,CACR,CAED,SAASklG,EAASnnG,GAChB,OAAIK,EAAEuvF,mBAAmB5vF,GAChBmnG,EAASnnG,EAAKuqC,SAAW48D,EAASnnG,EAAK0qC,UACrCrqC,EAAEO,aAAaZ,GACH,YAAdA,EAAKrF,MAAuC,MAAjBqF,EAAKrF,KAAK,GACnC0F,EAAEqK,iBAAiB1K,GACrBmnG,EAASnnG,EAAKkD,WACZ7C,EAAEwkG,SAAS7kG,KAASK,EAAEa,uBAAuBlB,MAC/CK,EAAEO,aAAaZ,EAAKoB,OAAS+lG,EAASnnG,EAAKoB,OAAS+lG,EAASnnG,EAAKi8C,OAI5E,CAED,SAASmrD,EAAOpnG,GACd,OAAOK,EAAEK,UAAUV,IAASK,EAAEgnG,mBAAmBrnG,IAASK,EAAEinG,kBAAkBtnG,IAASK,EAAEO,aAAaZ,IAASK,EAAEuvF,mBAAmB5vF,EACrI,CAED,MAAMq1E,EAAQ,CACZqb,qBAAqB1wF,GACnB,MAAMiC,EAAQ8kG,EAAM/mG,EAAKi8C,OAEzB,GAAIh6C,EAAM+kG,SAAW/kG,EAAMilG,WAAajlG,EAAMglG,YAC5C,MAAO,CACL95C,OAAQlrD,EAAMglG,YACd75C,OAAO,EAGZ,EAEDutC,WAAU,CAAC36F,EAAMC,KACR,CACLktD,OAAQntD,EAAKuhD,WAAW/iD,QAAUyB,EAAOgyE,MAAM,KAAOjyE,EACtDotD,OAAQptD,EAAKuhD,WAAW/iD,QAAUyB,EAAOgyE,MAAMhyE,EAAOgyE,MAAMzzE,OAAS,KAAOwB,IAIhFwwF,kBAAkBxwF,GAChB,GAAIK,EAAEiC,WAAWtC,EAAKoB,OAASf,EAAEiC,WAAWtC,EAAKi8C,OAC/C,MAAO,CACLmR,OAAO,EAGZ,EAEDm6C,QAAQvnG,GACN,GAAmB,eAAfA,EAAKhG,MACP,MAAO,CACLozD,OAAO,EAGZ,EAED+iC,eAAenwF,GACb,GAAIK,EAAEiC,WAAWtC,EAAKkD,SAAWikG,EAASnnG,GACxC,MAAO,CACLmtD,QAAQ,EACRC,OAAO,EAGZ,EAED8iC,uBAAuBlwF,GACrB,GAAIK,EAAEiC,WAAWtC,EAAKkD,QACpB,MAAO,CACLiqD,QAAQ,EACRC,OAAO,EAGZ,EAEDytC,oBAAoB76F,GAClB,IAAK,IAAItB,EAAI,EAAGA,EAAIsB,EAAK0xE,aAAalzE,OAAQE,IAAK,CACjD,MAAM23F,EAASr2F,EAAK0xE,aAAahzE,GACjC,IAAIiU,EAAUw0F,EAAS9Q,EAAOl2F,MAAQinG,EAAO/Q,EAAOrrC,MAEpD,IAAKr4C,EAAS,CACZ,MAAM1Q,EAAQ8kG,EAAM1Q,EAAOrrC,MAC3Br4C,EAAUw0F,EAAS9Q,EAAOrrC,OAAS/oD,EAAM+kG,SAAW/kG,EAAMglG,WAC3D,CAED,GAAIt0F,EACF,MAAO,CACLw6C,QAAQ,EACRC,OAAO,EAGZ,CACF,EAEDysC,YAAY75F,GACV,GAAIK,EAAEmnG,iBAAiBxnG,EAAKuhD,YAC1B,MAAO,CACL4L,QAAQ,EACRC,OAAO,EAGZ,GAGHrzD,EAAQs7E,MAAQA,EAEhBA,EAAMinB,eAAiBjnB,EAAMmgB,mBAAqBngB,EAAMgnB,aAAe,SAAUr8F,EAAMC,GACrF,GAAIA,EAAO+lB,WAAW,KAAOhmB,EAC3B,MAAO,CACLmtD,QAAQ,EAGb,EAEDkoB,EAAMigB,uBAAyB,SAAUt1F,EAAMC,GAC7C,IAAIwnG,EAEJ,GAAIxnG,EAAO+9C,eAAe,KAAOh+C,KAAsD,OAA3CynG,EAAqBxnG,EAAO+lB,iBAAsB,EAASyhF,EAAmBjpG,QACxH,MAAO,CACL2uD,QAAQ,EAGb,EAEDkoB,EAAMkgB,kBAAoB,SAAUv1F,EAAMC,GACxC,IAAIynG,EAAqBC,EAEzB,GAAI1nG,EAAOg+C,SAAS,KAAOj+C,KAAuD,OAA5C0nG,EAAsBznG,EAAO+lB,iBAAsB,EAAS0hF,EAAoBlpG,WAAgE,OAAlDmpG,EAAwB1nG,EAAO+9C,qBAA0B,EAAS2pD,EAAsBnpG,QAC1N,MAAO,CACL2uD,QAAQ,EAGb,EAEDkoB,EAAMggB,uBAAyB,SAAUr1F,EAAMC,GAC7C,IAAI2nG,EAAqBC,EAAwBC,EAEjD,GAAI7nG,EAAOi+C,cAAc,KAAOl+C,KAAuD,OAA5C4nG,EAAsB3nG,EAAO+lB,iBAAsB,EAAS4hF,EAAoBppG,WAAiE,OAAnDqpG,EAAyB5nG,EAAO+9C,qBAA0B,EAAS6pD,EAAuBrpG,WAAqD,OAAvCspG,EAAmB7nG,EAAOg+C,eAAoB,EAAS6pD,EAAiBtpG,QACvT,MAAO,CACL2uD,QAAQ,EAGb,EAgBDpzD,EAAQooD,KAdK,CACX04C,oBAAoB76F,GACXA,EAAK0xE,aAAaxyE,KAAI+jD,GAAQA,EAAK+H,OAG5CwxC,gBAAgBx8F,GACPA,EAAKolB,SAGdg3E,iBAAiBp8F,GACRA,EAAKgmB,YAKhB,CAAC,CAAC,YAAY,GAAO,CAAC,SAAS,GAAO,CAAC,QAAQ,GAAO,CAAC,oBAAoB,GAAO,CAAC,mBAAmB,GAAO,CAAC,gBAAgB,IAAOhe,SAAQ,UAAWuC,EAAMw9F,IACrI,kBAAZA,IACTA,EAAU,CACR36C,MAAO26C,EACP56C,OAAQ46C,IAIZ,CAACx9F,GAAMjD,OAAOjH,EAAEsjG,mBAAmBp5F,IAAS,IAAIvC,SAAQ,SAAUuC,GAChE8qE,EAAM9qE,GAAQ,WACZ,OAAOw9F,CACR,CACF,GACF,G,8BCtMDluG,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAAA,aAAkB,EAElB,IAYgCqB,EAZ5B4sG,GAY4B5sG,EAZKiB,EAAQ,QAYQjB,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAVnF8V,EAAI9U,EAAwBC,EAAQ,MAEpCgE,EAAIjE,EAAwBC,EAAQ,OAEpC4rG,EAAqB7rG,EAAwBC,EAAQ,OAEzD,SAASb,IAA6B,GAAuB,mBAAZc,QAAwB,OAAO,KAAM,IAAIf,EAAQ,IAAIe,QAAqE,OAA1Dd,EAA2B,WAAc,OAAOD,CAAQ,EAASA,CAAQ,CAE1L,SAASa,EAAwBhB,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAA+B,iBAARA,GAAmC,mBAARA,EAAsB,MAAO,CAAEE,QAASF,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,CAAC,EAAOC,EAAwB/B,OAAOC,gBAAkBD,OAAOgC,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIvB,OAAOkC,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwB/B,OAAOgC,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQtC,OAAOC,eAAe6B,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,EAAS,CAAgE,OAA7DH,EAAOL,QAAUF,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAkBA,CAAS,CAIvuB,MAAMusG,EAAsB,KACtBC,EAAuB,QACvBC,EAAsB,UACtBC,EAAqB,uBAE3B,MAAMC,EACJt1F,YAAYymE,EAAQv6E,GAClB2T,KAAK+9E,0BAA4B,EACjC/9E,KAAK01F,YAAc,GACnB11F,KAAK21F,QAAU,EACf31F,KAAK41F,YAAa,EAClB51F,KAAK61F,sBAAwB,CAAC,EAC9B71F,KAAK81F,uBAAyB,KAC9B91F,KAAK+1F,mBAAoB,EACzB/1F,KAAKg2F,8BAA+B,EACpCh2F,KAAKi2F,iBAAmB,IAAIC,QAC5Bl2F,KAAKm2F,kBAAmB,EACxBn2F,KAAKo2F,eAAgB,EACrBp2F,KAAK4mE,OAASA,GAAU,CAAC,EACzB5mE,KAAKi4E,KAAO,IAAIkd,EAAQ1sG,QAAQ4D,EACjC,CAEDkjG,SAAS/8F,GAKP,OAJAwN,KAAKo6E,MAAM5nF,GAEXwN,KAAKq2F,sBAEEr2F,KAAKi4E,KAAKpvF,KAClB,CAEDkiF,SACM/qE,KAAK4mE,OAAOyE,SAAWrrE,KAAK4mE,OAAOmpB,SACvC/vF,KAAK21F,SACN,CAED/Z,SACM57E,KAAK4mE,OAAOyE,SAAWrrE,KAAK4mE,OAAOmpB,SACvC/vF,KAAK21F,SACN,CAEDnvD,UAAUqyC,GAAQ,GAChB74E,KAAKq2F,sBAELr2F,KAAK84E,QAAQ,KAAMD,EACpB,CAED+B,aACM56E,KAAK4mE,OAAOkW,UACd98E,KAAKi4E,KAAKkB,sBAGZn5E,KAAKwL,MAAM,IACZ,CAEDiwE,MAAM5C,GAAQ,GACR74E,KAAK4mE,OAAOyE,UAEZrrE,KAAKi4E,KAAKqB,eAAiBt5E,KAAKo5E,SAAS,OAASp5E,KAAKo5E,SAAS,OAASP,IAC3E74E,KAAKs2F,QAER,CAEDv1E,KAAKxtB,IACCyM,KAAKo2F,eAAiBp2F,KAAKo5E,SAAS,MAA6B,IAArB7lF,EAAIwC,QAAQ,OAC1DiK,KAAKs2F,SAGPt2F,KAAKq2F,sBAELr2F,KAAK84E,QAAQvlF,GAEbyM,KAAKo2F,eAAgB,CACtB,CAED7pG,OAAOgH,GACLyM,KAAK+gB,KAAKxtB,GACVyM,KAAKm2F,iBAAmB1zF,OAAO8zF,WAAWhjG,KAASgiG,EAAoB99F,KAAKlE,KAAS8hG,EAAoB59F,KAAKlE,KAAS+hG,EAAqB79F,KAAKlE,IAAgC,MAAxBA,EAAIA,EAAI5H,OAAS,EAC3K,CAED6f,MAAMjY,IACQ,OAARA,GAAgByM,KAAKo5E,SAAS,MAAmB,MAAX7lF,EAAI,IAAcyM,KAAKo5E,SAAS,MAAmB,MAAX7lF,EAAI,IAAcyM,KAAKo5E,SAAS,MAAmB,MAAX7lF,EAAI,IAAcyM,KAAKm2F,mBAC/In2F,KAAKs2F,SAGPt2F,KAAKq2F,sBAELr2F,KAAK84E,QAAQvlF,EACd,CAEDinF,QAAQ3uF,GACN,IAAImU,KAAK4mE,OAAOgf,cAAe5lF,KAAK4mE,OAAOyE,QAE3C,GAAIrrE,KAAK4mE,OAAOmpB,QACd/vF,KAAKy7E,aAIP,KAAIz7E,KAAKo5E,SAAS,UACD,iBAANvtF,IAAgBA,EAAI,GAC/BA,EAAI1D,KAAKuD,IAAI,EAAGG,IACZmU,KAAKo5E,SAAS,QAAUp5E,KAAKo5E,SAAS,SAAQvtF,IAC9CA,GAAK,IAET,IAAK,IAAI6mB,EAAI,EAAGA,EAAI7mB,EAAG6mB,IACrB1S,KAAKw2F,UAER,CAEDpd,SAAS7lF,GACP,OAAOyM,KAAKi4E,KAAKmB,SAAS7lF,EAC3B,CAED2lF,wBACEl5E,KAAKi4E,KAAKiB,uBACX,CAEDK,YAAY5vF,EAAK44D,GACfviD,KAAKqlF,SAAS,QAAS17F,GAEvBqW,KAAKi4E,KAAKsB,YAAY5vF,EAAK44D,EAC5B,CAEDv3D,OAAO2pC,EAAMhrC,GACXqW,KAAKqlF,SAAS1wD,EAAMhrC,GAEpBqW,KAAKi4E,KAAKjtF,OAAO2pC,EAAMhrC,EACxB,CAED+vF,WAAW/kD,EAAMhrC,EAAK44D,GACpBviD,KAAKqlF,SAAS1wD,EAAMhrC,GAEpBqW,KAAKi4E,KAAKyB,WAAW/kD,EAAMhrC,EAAK44D,EACjC,CAED+zC,SACEt2F,KAAK84E,QAAQ,KAAK,EACnB,CAED0d,WACEx2F,KAAK84E,QAAQ,MAAM,EACpB,CAEDA,QAAQvlF,EAAKwV,GAAQ,GACnB/I,KAAKy2F,eAAeljG,GAEpByM,KAAK02F,aAAanjG,GAEdwV,EAAO/I,KAAKi4E,KAAKlvE,MAAMxV,GAAUyM,KAAKi4E,KAAKW,OAAOrlF,GACtDyM,KAAKo2F,eAAgB,EACrBp2F,KAAKm2F,kBAAmB,CACzB,CAEDO,aAAanjG,GACPyM,KAAK21F,SAAW31F,KAAKo5E,SAAS,OAAoB,OAAX7lF,EAAI,IAC7CyM,KAAKi4E,KAAKlvE,MAAM/I,KAAK22F,aAExB,CAEDF,eAAeljG,GACb,MAAMqjG,EAAwB52F,KAAK81F,uBACnC,IAAKc,EAAuB,OAC5B,IAAI/qG,EAEJ,IAAKA,EAAI,EAAGA,EAAI0H,EAAI5H,QAAqB,MAAX4H,EAAI1H,GAAYA,IAAK,SAEnD,GAAIA,IAAM0H,EAAI5H,OACZ,OAGF,MAAMkrG,EAAMtjG,EAAI1H,GAEhB,GAAY,OAARgrG,EAAc,CAChB,GAAY,MAARA,GAAehrG,EAAI,IAAM0H,EAAI5H,OAE/B,YADAqU,KAAK81F,uBAAyB,MAIhC,MAAMgB,EAAUvjG,EAAI1H,EAAI,GAExB,GAAgB,MAAZirG,GACF,GAAItB,EAAmB/9F,KAAKlE,EAAInH,MAAMP,EAAI,EAAG0H,EAAI5H,OAAS,IACxD,YAEG,GAAgB,MAAZmrG,EAET,YADA92F,KAAK81F,uBAAyB,KAGjC,CAED91F,KAAKwL,MAAM,KACXxL,KAAK+qE,SACL6rB,EAAsBG,SAAU,CACjC,CAED1R,SAAS1wD,EAAMhrC,GACb,IAAKqW,KAAK4mE,OAAOgf,YAAa,OAC9B,MAAMpoE,EAAM7zB,EAAMA,EAAIgrC,GAAQ,KAE9B,GAAyC,OAA7B,MAAPnX,OAAc,EAASA,EAAIn1B,MAAe,CAC7C,MAAMq6C,EAAQllB,EAAIn1B,KAAO2X,KAAKi4E,KAAKiC,iBAEnC,IAAK,IAAIruF,EAAI,EAAGA,EAAI62C,EAAO72C,IACzBmU,KAAKw2F,UAER,CACF,CAEDG,aACE,OAAO32F,KAAK4mE,OAAOmE,OAAO9sE,MAAMjR,OAAOgT,KAAK21F,QAC7C,CAEDjZ,oBAAoBmM,GAAU,GAC5B,OAAIA,GACF7oF,KAAK+1F,mBAAoB,EAClB,MAEA/1F,KAAK81F,uBAAyB,CACnCiB,SAAS,EAGd,CAEDpa,kBAAkBvtF,GAChB4Q,KAAK+1F,mBAAoB,GAEZ,MAAT3mG,OAAgB,EAASA,EAAM2nG,WACjC/2F,KAAK47E,SACL57E,KAAKw6E,UACLx6E,KAAKwL,MAAM,KAEd,CAED4uE,MAAMjtF,EAAMC,GACV,IAAKD,EAAM,OACX,MAAM6pG,EAAah3F,KAAK4mE,OAAOmpB,QAE3B5iG,EAAK8pG,WACPj3F,KAAK4mE,OAAOmpB,SAAU,GAGxB,MAAMmH,EAAcl3F,KAAK7S,EAAKuK,MAE9B,IAAKw/F,EACH,MAAM,IAAIC,eAAgB,wBAAuB9yB,KAAKC,UAAUn3E,EAAKuK,0BAA0B2sE,KAAKC,UAAkB,MAARn3E,OAAe,EAASA,EAAKgT,YAAYrY,SAGzJkY,KAAK01F,YAAYjlG,KAAKtD,GAEtB,MAAMiqG,EAAWp3F,KAAK41F,WACtB51F,KAAK41F,YAAczoG,EAAKxD,IAExBqW,KAAKq2F,oBAAoBr2F,KAAK41F,aAAewB,GAE7C,IAAIpZ,EAAc3/E,EAAE2/E,YAAY7wF,EAAMC,EAAQ4S,KAAK01F,aAE/C11F,KAAK4mE,OAAOkpB,sBAAsC,uBAAd3iG,EAAKuK,MAAiCvK,EAAK4wC,OAAS5wC,EAAK4wC,MAAMQ,gBACrGy/C,GAAc,GAGZA,GAAah+E,KAAKwL,MAAM,KAE5BxL,KAAKq3F,sBAAsBlqG,GAE3B,MAAMxD,EAAM6D,EAAE8pG,UAAUnqG,IAASK,EAAE+pG,OAAOpqG,GAAQ,KAAOA,EAAKxD,IAC9DqW,KAAK05E,WAAW,QAAS/vF,GAAK,KAC5ButG,EAAY9tG,KAAK4W,KAAM7S,EAAMC,EAA7B,IAGF4S,KAAKw3F,uBAAuBrqG,GAExB6wF,GAAah+E,KAAKwL,MAAM,KAE5BxL,KAAK01F,YAAYxyF,MAEjBlD,KAAK4mE,OAAOmpB,QAAUiH,EACtBh3F,KAAK41F,WAAawB,CACnB,CAEDf,oBAAoBoB,GACdA,GAAyBz3F,KAAK03F,yBAC7B13F,KAAK41F,YAAY51F,KAAK23F,uBAC5B,CAEDD,yBACE,GAAI13F,KAAKg2F,6BAA8B,OACvCh2F,KAAKg2F,8BAA+B,EACpC,MAAM7jF,EAAUnS,KAAK4mE,OAAO+oB,uBAExBx9E,GACFnS,KAAK43F,cAAc,CACjBlgG,KAAM,eACNvQ,MAAOgrB,GAGZ,CAEDwlF,wBACE,IAAK33F,KAAKg2F,6BAA8B,OACxCh2F,KAAKg2F,8BAA+B,EACpC,MAAM7jF,EAAUnS,KAAK4mE,OAAOgpB,sBAExBz9E,GACFnS,KAAK43F,cAAc,CACjBlgG,KAAM,eACNvQ,MAAOgrB,GAGZ,CAED6oE,eAAe7tF,GACb,MAAM4wC,EAAQ5wC,EAAK4wC,MAEnB,GAAIA,GAAsB,MAAbA,EAAMhvC,KAAiC,MAAlBgvC,EAAM85D,UAAoB1qG,EAAKhG,QAAU42C,EAAM85D,SAC/E,OAAO95D,EAAMhvC,GAEhB,CAEDysF,UAAUhZ,EAAOp1E,EAAQ5F,EAAO,CAAC,GAC/B,KAAe,MAATg7E,OAAgB,EAASA,EAAM72E,QAAS,OAC1CnE,EAAKujF,QAAQ/qE,KAAK+qE,SACtB,MAAM+sB,EAAc,CAClBxV,YAAa96F,EAAK86F,aAGpB,IAAK,IAAIz2F,EAAI,EAAGA,EAAI22E,EAAM72E,OAAQE,IAAK,CACrC,MAAMsB,EAAOq1E,EAAM32E,GACdsB,IACD3F,EAAK0L,WAAW8M,KAAK+3F,eAAc,EAAM5qG,EAAMC,EAAQ0qG,GAC3D93F,KAAKo6E,MAAMjtF,EAAMC,GAEb5F,EAAK0qE,UACP1qE,EAAK0qE,SAAS/kE,EAAMtB,GAGlBrE,EAAK+5F,WAAa11F,EAAI22E,EAAM72E,OAAS,GACvCnE,EAAK+5F,UAAUn4F,KAAK4W,MAGlBxY,EAAK0L,WAAW8M,KAAK+3F,eAAc,EAAO5qG,EAAMC,EAAQ0qG,GAC7D,CAEGtwG,EAAKujF,QAAQ/qE,KAAK47E,QACvB,CAEDwL,yBAAyBj6F,EAAMC,GAC7B,MAAM29E,EAAS59E,EAAKklB,iBAAmBllB,EAAKklB,gBAAgB1mB,OAAS,EACjEo/E,GAAQ/qE,KAAK+qE,SACjB/qE,KAAKo6E,MAAMjtF,EAAMC,GACb29E,GAAQ/qE,KAAK47E,QAClB,CAEDmL,WAAW35F,GACT,MAAMD,EAAOC,EAAOkD,KAEf9C,EAAEwqG,iBAAiB7qG,IACtB6S,KAAKy7E,QAGPz7E,KAAKo6E,MAAMjtF,EAAMC,EAClB,CAEDoqG,uBAAuBrqG,GACrB6S,KAAKi4F,eAAej4F,KAAKk4F,cAAa,EAAO/qG,GAC9C,CAEDkqG,sBAAsBlqG,GACpB6S,KAAKi4F,eAAej4F,KAAKk4F,cAAa,EAAM/qG,IAAO,EACpD,CAEDmtF,mBAAmBntF,EAAM49E,GAAS,GAChC,IAAIotB,GAEgD,OAA7CA,EAAsBhrG,EAAKimB,oBAAyB,EAAS+kF,EAAoBxsG,UACpFo/E,GAAQ/qE,KAAK+qE,SAEjB/qE,KAAKi4F,eAAe9qG,EAAKimB,eAErB23D,GAAQ/qE,KAAK47E,SAClB,CAEDrB,cAAc/X,EAAOp1E,EAAQ5F,EAAO,CAAC,GAEnC,OADAA,EAAK0L,WAAY,EACV8M,KAAKw7E,UAAUhZ,EAAOp1E,EAAQ5F,EACtC,CAEDk0F,UAAUjjF,EAAOrL,EAAQ5F,EAAO,CAAC,GAK/B,OAJsB,MAAlBA,EAAK+5F,YACP/5F,EAAK+5F,UAAY6W,GAGZp4F,KAAKw7E,UAAU/iF,EAAOrL,EAAQ5F,EACtC,CAEDuwG,cAAcxV,EAASp1F,EAAMC,EAAQ5F,GACnC,GAAIwY,KAAK4mE,OAAOgf,aAAe5lF,KAAK4mE,OAAOyE,QAAS,OAEpD,GAAIrrE,KAAK4mE,OAAOmpB,QAEd,YADA/vF,KAAKy7E,QAIP,IAAI7wF,EAAQ,EAERoV,KAAKi4E,KAAKqB,eACPiJ,GAAS33F,IACVpD,EAAK86F,cAAa13F,GAASpD,EAAK86F,YAAYC,EAASp1F,IAAS,IACpDo1F,EAAUlkF,EAAEgyF,sBAAwBhyF,EAAEiyF,sBAC1CnjG,EAAMC,IAASxC,KAG3BoV,KAAKw6E,QAAQ5vF,EACd,CAEDstG,aAAa3V,EAASp1F,GACpB,OAAOA,IAASo1F,EAAUp1F,EAAKklB,gBAAkBllB,EAAKilB,mBAAqB,EAC5E,CAEDwlF,cAAczlF,EAASkmF,GACrB,IAAKr4F,KAAK4mE,OAAOipB,mBAAmB19E,EAAQhrB,OAAQ,OACpD,GAAIgrB,EAAQmmF,OAAQ,OACpB,GAAIt4F,KAAKi2F,iBAAiBrtG,IAAIupB,GAAU,OAIxC,GAFAnS,KAAKi2F,iBAAiB/9F,IAAIia,GAEL,MAAjBA,EAAQlqB,MAAe,CACzB,GAAI+X,KAAK61F,sBAAsB1jF,EAAQlqB,OAAQ,OAC/C+X,KAAK61F,sBAAsB1jF,EAAQlqB,QAAS,CAC7C,CAED,MAAMswG,EAAkC,iBAAjBpmF,EAAQza,KACzB8gG,EAAgBD,IAAmBF,IAAiBr4F,KAAK+1F,kBAC3DyC,GAAiBx4F,KAAKi4E,KAAKqB,cAAct5E,KAAKw6E,QAAQ,GACrDx6E,KAAKo5E,SAAS,MAASp5E,KAAKo5E,SAAS,MAAMp5E,KAAKy7E,QACrD,IAAI91E,EAAO4yF,GAAmBv4F,KAAK+1F,kBAA8C,KAAI5jF,EAAQhrB,UAArC,KAAIgrB,EAAQhrB,UAEpE,GAAIoxG,GAAkBv4F,KAAK4mE,OAAOmE,OAAOilB,uBAAwB,CAC/D,IAAIyI,EAEJ,MAAM99F,EAAyC,OAA/B89F,EAAetmF,EAAQxoB,UAAe,EAAS8uG,EAAaxwG,MAAMC,OAElF,GAAIyS,EAAQ,CACV,MAAM+9F,EAAe,IAAIziG,OAAO,YAAc0E,EAAS,IAAK,KAC5DgL,EAAMA,EAAI7Y,QAAQ4rG,EAAc,KACjC,CAED,MAAMC,EAAaxwG,KAAKC,IAAI4X,KAAK22F,aAAahrG,OAAQqU,KAAK4mE,OAAOgf,YAAc,EAAI5lF,KAAKi4E,KAAKgC,oBAC9Ft0E,EAAMA,EAAI7Y,QAAQ,WAAa,KAAI,IAAIE,OAAO2rG,KAC/C,CAEG34F,KAAKo5E,SAAS,MAAMp5E,KAAKs2F,SAC7Bt2F,KAAK05E,WAAW,QAASvnE,EAAQxoB,KAAK,KACpCqW,KAAK84E,QAAQnzE,EAAb,IAEE6yF,GAAex4F,KAAKw6E,QAAQ,EACjC,CAEDyd,eAAezsC,EAAUotC,GACvB,GAAkB,MAAZptC,OAAmB,EAASA,EAAS7/D,OAE3C,GAAIitG,GAA4C,IAApBptC,EAAS7/D,QAAgB6pG,EAAmB/9F,KAAK+zD,EAAS,GAAGrkE,OACvF6Y,KAAK43F,cAAcpsC,EAAS,GAAIxrD,KAAKi4E,KAAKqB,eAAiBt5E,KAAKo5E,SAAS,YAEzE,IAAK,MAAMjnE,KAAWq5C,EACpBxrD,KAAK43F,cAAczlF,EAGxB,CAED+zE,gBAAgB/4F,GACd,IAAI0rG,GAEwC,OAAvCA,EAAmB1rG,EAAK+0E,iBAAsB,EAAS22B,EAAiBltG,UAC3EqU,KAAKy7E,QACLz7E,KAAK+gB,KAAK,UACV/gB,KAAKy7E,QACLz7E,KAAKwL,MAAM,KACXxL,KAAKy7E,QACLz7E,KAAK07E,UAAUvuF,EAAK+0E,WAAY/0E,GAChC6S,KAAKy7E,QACLz7E,KAAKwL,MAAM,KAEd,EAOH,SAAS4sF,IACPp4F,KAAKwL,MAAM,KACXxL,KAAKy7E,OACN,CANDv0F,EAAAA,QAAkBuuG,EAClBzuG,OAAOkE,OAAOuqG,EAAQvsG,UAAWksG,E,8BCzfjCpuG,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAAA,aAAkB,EAElB,IAEgCqB,EAF5BknG,GAE4BlnG,EAFQiB,EAAQ,QAEKjB,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GA+DvFrB,EAAAA,QA7DA,MACEiZ,YAAY3Y,EAAM8L,GAChB0M,KAAK84F,WAAa,KAClB94F,KAAK+4F,MAAQzlG,EACb0M,KAAKg5F,MAAQxxG,EACbwY,KAAKi5F,aAAe,EACrB,CAEDpwG,MACE,IAAKmX,KAAK84F,WAAY,CACpB,MAAMzsG,EAAM2T,KAAK84F,WAAa,IAAIrJ,EAAWhnG,QAAQywG,mBAAmB,CACtE1jB,WAAYx1E,KAAKg5F,MAAMxjB,aAEnBliF,EAAO0M,KAAK+4F,MAEE,iBAATzlG,EACTjH,EAAI8sG,iBAAiBn5F,KAAKg5F,MAAMI,eAAetsG,QAAQ,MAAO,KAAMwG,GAC3C,iBAATA,GAChBtM,OAAOuO,KAAKjC,GAAM6B,SAAQikG,IACxB/sG,EAAI8sG,iBAAiBC,EAAetsG,QAAQ,MAAO,KAAMwG,EAAK8lG,GAA9D,IAIJp5F,KAAKi5F,aAAa9jG,SAAQkkG,GAAWhtG,EAAIitG,WAAWD,IAAUhtG,EAC/D,CAED,OAAO2T,KAAK84F,WAAW5sB,QACxB,CAEDwM,iBACE,OAAO14E,KAAKi5F,aAAa7sG,OAC1B,CAED6sF,KAAKjE,EAAeD,EAAiB1sF,EAAMH,EAAQupB,EAAgBD,EAAUqnE,GACvE74E,KAAKu5F,eAAiBvkB,GAA0B,OAAT3sF,IAEtCwwF,GAAS74E,KAAKu5F,eAAiBvkB,GAAiBh1E,KAAKw5F,kBAAoBnxG,GAAQ2X,KAAKy5F,oBAAsBvxG,KAIjH8X,KAAK84F,WAAa,KAClB94F,KAAKu5F,aAAevkB,EACpBh1E,KAAKw5F,gBAAkBnxG,EACvB2X,KAAKy5F,kBAAoBvxG,EAEzB8X,KAAKi5F,aAAaxoG,KAAK,CACrB3I,KAAM2pB,QAAkBziB,EACxB0qG,UAAW,CACTrxG,KAAM2sF,EACN9sF,OAAQ6sF,GAEV/pF,OAAgB,MAAR3C,OAAe2G,GAAawiB,GAAYxR,KAAKg5F,MAAMI,gBAAgBtsG,QAAQ,MAAO,KAC1F6sG,SAAkB,MAARtxG,OAAe2G,EAAY,CACnC3G,KAAMA,EACNH,OAAQA,KAGb,E,6E1E3CH,MAAMyiB,GAAa,EACbC,GAAa,EACbC,GAAS,EAET3W,GAAS,EAeR,MAAM4W,EAaX3K,YAAY4K,EAAeC,EAAqB,CAAC,GAAG,KAZpDD,WAYoD,OAXpD9G,aAWoD,OAVpD0G,gBAUoD,OATpDC,gBASoD,OARpDK,sBAQoD,OAPpDJ,YAOoD,OANpDK,cAMoD,OALpDhX,YAKoD,OAJpDiX,aAIoD,OAHpDC,WAGoD,OAFpDC,mBAEoD,EAClDrL,KAAK+K,MAAQA,EACb/K,KAAKiE,QAAU+G,EAAK/G,QACpBjE,KAAK2K,aAAeK,EAAKL,WACzB3K,KAAK4K,aAAeI,EAAKJ,WACzB5K,KAAKiL,mBAAqBD,EAAKC,iBAC/BjL,KAAK6K,SAAWG,EAAKH,OACrB7K,KAAKkL,WAAaF,EAAKE,SACvBlL,KAAK9L,SAAW8W,EAAK9W,OACrB8L,KAAKmL,UAAYH,EAAKG,QACtBnL,KAAKoL,MAAsB,MAAdJ,EAAKI,MAAgBJ,EAAKI,MAAQ,KAC/CpL,KAAKqL,cAAgB,IACtB,EAGI,MAAMC,EAAW,IAAIlQ,IAE5B,SAASmQ,EAAczjB,EAAc6X,EAAwB,CAAC,GAC5DA,EAAQsE,QAAUnc,EAClB,MAAM0jB,EAAQ,IAAIV,EAAUhjB,EAAM6X,GAElC,OADA2L,EAAShiB,IAAIxB,EAAM0jB,GACZA,CACR,CAED,SAASC,EAAY3jB,EAAcsjB,GACjC,OAAO,IAAIN,EAAUhjB,EAAM,CAAE6iB,aAAYS,SAC1C,C,MAEYM,EAAuC,CAClDC,IAAK,IAAIb,EAAU,MAAO,CAAEF,eAC5BgB,OAAQ,IAAId,EAAU,SAAU,CAAEF,eAClCiB,QAAS,IAAIf,EAAU,UAAW,CAAEF,eACpCkB,OAAQ,IAAIhB,EAAU,SAAU,CAAEF,eAClCjgB,OAAQ,IAAImgB,EAAU,SAAU,CAAEF,eAClC9iB,KAAM,IAAIgjB,EAAU,OAAQ,CAAEF,eAC9BoB,IAAK,IAAIlB,EAAU,OAGnBmB,SAAU,IAAInB,EAAU,IAAK,CAAEH,aAAYC,eAC3CsB,aAAc,IAAIpB,EAAU,KAAM,CAAEH,aAAYC,eAChDuB,YAAa,IAAIrB,EAAU,KAAM,CAAEH,aAAYC,eAC/CwB,SAAU,IAAItB,EAAU,KACxBuB,YAAa,IAAIvB,EAAU,MAC3BwB,OAAQ,IAAIxB,EAAU,IAAK,CAAEH,aAAYC,eACzC2B,UAAW,IAAIzB,EAAU,KAAM,CAAEH,aAAYC,eAC7C4B,WAAY,IAAI1B,EAAU,KAAM,CAAEH,aAAYC,eAC9C6B,OAAQ,IAAI3B,EAAU,KACtB4B,UAAW,IAAI5B,EAAU,MACzB6B,OAAQ,IAAI7B,EAAU,IAAK,CAAEH,aAAYC,eACzCgC,OAAQ,IAAI9B,EAAU,KACtB+B,MAAO,IAAI/B,EAAU,IAAK,CAAEH,eAC5BmC,KAAM,IAAIhC,EAAU,IAAK,CAAEH,eAC3BoC,MAAO,IAAIjC,EAAU,IAAK,CAAEH,eAC5BqC,YAAa,IAAIlC,EAAU,KAAM,CAAEH,eACnCsC,IAAK,IAAInC,EAAU,KACnBoC,SAAU,IAAIpC,EAAU,IAAK,CAAEH,eAC/BwC,YAAa,IAAIrC,EAAU,MAC3BsC,MAAO,IAAItC,EAAU,KAAM,CAAEH,eAC7B7a,SAAU,IAAIgb,EAAU,YACxBuC,SAAU,IAAIvC,EAAU,MAAO,CAAEH,eACjC2C,UAAW,IAAIxC,EAAU,IAAK,CAAEF,eAChC2C,aAAc,IAAIzC,EAAU,KAAM,CAAEH,aAAYC,eAChD4C,GAAI,IAAI1C,EAAU,KAClB2C,KAAM,IAAI3C,EAAU,IAAK,CAAEF,eAG3B8C,qBAAsB,IAAI5C,EAAU,SAgBpC6C,GAAI,IAAI7C,EAAU,IAAK,CAAEH,aAAYO,UA/GtB,IAgHfhgB,OAAQ,IAAI4f,EAAU,KAAM,CAAEH,aAAYO,UAhH3B,IAiHf0C,OAAQ,IAAI9C,EAAU,QAAS,CAAE5W,SAAQiX,SA/G3B,EA+GoCP,eAClDiD,KAAM,IAAI/C,EAAU,IAAK,CAAEH,aAAYzW,SAAQ0W,eAC/CkD,MAAO,IAAIhD,EAAU,IAAK,CAAEH,aAAYzW,SAAQ0W,eAChDmD,SAAUtC,EAAY,KAAM,GAC5BuC,kBAAmBvC,EAAY,KAAM,GACrCwC,UAAWxC,EAAY,KAAM,GAC7ByC,WAAYzC,EAAY,KAAM,GAC9B0C,UAAW1C,EAAY,IAAK,GAC5B2C,WAAY3C,EAAY,IAAK,GAC7B4C,WAAY5C,EAAY,IAAK,GAC7B6C,SAAU7C,EAAY,gBAAiB,GACvC8C,WAAY9C,EAAY,YAAa,GACrC+C,SAAU/C,EAAY,YAAa,GACnCgD,QAAS,IAAI3D,EAAU,MAAO,CAAEH,aAAYS,MAAO,EAAGlX,SAAQ0W,eAE9D8D,OAAQ,IAAI5D,EAAU,IAAK,CAAEH,aAAYS,MAAO,GAAIR,eAEpD+D,KAAM,IAAI7D,EAAU,IAAK,CAAEM,MAAO,KAClCwD,MAAOnD,EAAY,IAAK,IACxBoD,SAAU,IAAI/D,EAAU,KAAM,CAC5BH,aACAS,MAAO,GACPH,kBAAkB,IAMpB6D,OAAQvD,EAAc,SACtBwD,MAAOxD,EAAc,OAAQ,CAAEZ,eAC/BqE,OAAQzD,EAAc,SACtB0D,UAAW1D,EAAc,YACzB2D,UAAW3D,EAAc,YACzB1X,SAAU0X,EAAc,UAAW,CAAEZ,eACrCwE,IAAK5D,EAAc,KAAM,CAAEV,SAAQF,eACnCyE,MAAO7D,EAAc,OAAQ,CAAEZ,eAC/B0E,SAAU9D,EAAc,WACxB+D,KAAM/D,EAAc,MAAO,CAAEV,WAC7B0E,UAAWhE,EAAc,WAAY,CAAEX,eACvC4E,IAAKjE,EAAc,MACnBkE,QAASlE,EAAc,SAAU,CAAEZ,eACnC+E,QAASnE,EAAc,UACvBoE,OAAQpE,EAAc,QAAS,CAAEZ,aAAYzW,SAAQ0W,eACrDgF,KAAMrE,EAAc,OACpBsE,KAAMtE,EAAc,OACpBuE,OAAQvE,EAAc,SACtBwE,OAAQxE,EAAc,QAAS,CAAEV,WACjCmF,MAAOzE,EAAc,QACrB0E,KAAM1E,EAAc,MAAO,CAAEZ,aAAYC,eACzCsF,MAAO3E,EAAc,OAAQ,CAAEX,eAC/BuF,OAAQ5E,EAAc,QAAS,CAAEX,eACjCwF,OAAQ7E,EAAc,QAAS,CAAEX,eACjCyF,SAAU9E,EAAc,UAAW,CAAEZ,eACrC2F,QAAS/E,EAAc,UACvBgF,QAAShF,EAAc,SAAU,CAAEX,eACnC4F,MAAOjF,EAAc,OAAQ,CAAEX,eAC/B6F,MAAOlF,EAAc,OAAQ,CAAEX,eAC/B8F,OAAQnF,EAAc,QAAS,CAAEX,eACjC+F,IAAKpF,EAAc,KAAM,CAAEZ,aAAYS,MAAO,IAC9CwF,YAAarF,EAAc,aAAc,CAAEZ,aAAYS,MAAO,IAC9DyF,QAAStF,EAAc,SAAU,CAAEZ,aAAYzW,SAAQ0W,eACvDkG,MAAOvF,EAAc,OAAQ,CAAEZ,aAAYzW,SAAQ0W,eACnDmG,QAASxF,EAAc,SAAU,CAAEZ,aAAYzW,SAAQ0W,gBCrM5CoG,EAAY,yBACZC,EAAa,IAAIhb,OAAO+a,EAAUhmB,OAAQ,KAGhD,SAASkmB,EAAU5d,GACxB,OAAQA,GACN,QACA,QACA,UACA,UACE,OAAO,EAET,QACE,OAAO,EAEZ,CAEM,MAAM6d,EAAiB,gCAGvB,SAASC,EAAa9d,GAC3B,OAAQA,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACL,QACA,SACA,UACA,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,KACL,KAAK,MACL,KAAK,MACH,OAAO,EAET,QACE,OAAO,EAEZ,CC3CM,MAAM+d,EAIXlR,YAAY9X,EAAcipB,GAAa,KAHvCjpB,UAGuC,OAFvCH,YAEuC,EACrC8X,KAAK3X,KAAOA,EACZ2X,KAAK9X,OAASopB,CACf,EAGI,MAAMC,EAMXpR,YAAYlY,EAAiB6C,GAAgB,KAL7C7C,WAK6C,OAJ7C6C,SAI6C,OAH7C0mB,cAG6C,OAF7CC,oBAE6C,EAC3CzR,KAAK/X,MAAQA,EAEb+X,KAAKlV,IAAMA,CACZ,ECrBY,MAAM4mB,EAAWvR,cAAA,KAU9BwR,mBAA6B,EAVC,KAW9BC,6BAAuC,CAXT,CAoB9BC,UAAU/pB,GACR,OAAOkY,KAAK3J,QAAQzN,IAAId,EACzB,CAEDgqB,gBAAgBC,EAAgBjqB,GAE9B,GAAIkY,KAAK6R,UAAUE,GAAS,OAAO/R,KAAK3J,QAAQxN,IAAIkpB,GAAQjqB,EAC7D,ECRH,SAASkqB,EAAQlf,GACf,OAAOA,EAAMA,EAAMnH,OAAS,EAC7B,CAEc,MAAMsmB,UAAuBP,EAC1CQ,WAAWC,GACLnS,KAAKwR,WAAUW,EAAQxoB,IAAI6nB,SAAWxR,KAAKwR,UAC/CxR,KAAK5Q,MAAMgjB,iBAAiB3hB,KAAK0hB,GACjCnS,KAAK5Q,MAAMijB,gBAAgB5hB,KAAK0hB,EACjC,CAEDG,iCACEnlB,EACAolB,EASAC,GAEA,GAA0C,IAAtCxS,KAAK5Q,MAAMijB,gBAAgB1mB,OAC7B,OAGF,IAAI8mB,EAAc,KACd5mB,EAAI0mB,EAAS5mB,OACjB,KAAuB,OAAhB8mB,GAAwB5mB,EAAI,GACjC4mB,EAAcF,IAAW1mB,GAE3B,GAAoB,OAAhB4mB,EACF,OAGF,IAAK,IAAIC,EAAI,EAAGA,EAAI1S,KAAK5Q,MAAMijB,gBAAgB1mB,OAAQ+mB,IAEnD1S,KAAK5Q,MAAMijB,gBAAgBK,GAAG5nB,IAAMkV,KAAK5Q,MAAMujB,oBAAoB7nB,MAEnEkV,KAAK5Q,MAAMijB,gBAAgB3Z,OAAOga,EAAG,GACrCA,KAIJ,MAAME,EAAsB,GAC5B,IAAK,IAAI/mB,EAAI,EAAGA,EAAImU,KAAK5Q,MAAMijB,gBAAgB1mB,OAAQE,IAAK,CAC1D,MAAMgnB,EAAiB7S,KAAK5Q,MAAMijB,gBAAgBxmB,GAC9CgnB,EAAe/nB,IAAMqC,EAAKrC,KAC5B8nB,EAAoBniB,KAAKoiB,GAGpBL,IACHxS,KAAK5Q,MAAMijB,gBAAgB3Z,OAAO7M,EAAG,GACrCA,YAG4BmD,IAA1B7B,EAAKilB,mBACPjlB,EAAKilB,iBAAmB,IAE1BjlB,EAAKilB,iBAAiB3hB,KAAKoiB,GAE9B,CACGL,IAAiBxS,KAAK5Q,MAAMijB,gBAAkB,IAE9CO,EAAoBjnB,OAAS,EAC/B8mB,EAAYL,iBAAmBQ,OACW5jB,IAAjCyjB,EAAYL,mBACrBK,EAAYL,iBAAmB,GAElC,CAEDU,eAAe3lB,GACb,GAAkB,YAAdA,EAAKuK,MAAsBvK,EAAKmD,KAAK3E,OAAS,EAAG,OAErD,MAAMmH,EAAQkN,KAAK5Q,MAAM2jB,aAEzB,IAAIC,EAAYC,EAAWb,EAAkBvmB,EAAG6mB,EAEhD,GAAI1S,KAAK5Q,MAAMgjB,iBAAiBzmB,OAAS,EAKnCqU,KAAK5Q,MAAMgjB,iBAAiB,GAAGnqB,OAASkF,EAAKrC,KAC/CsnB,EAAmBpS,KAAK5Q,MAAMgjB,iBAC9BpS,KAAK5Q,MAAMgjB,iBAAmB,IAQ9BpS,KAAK5Q,MAAMgjB,iBAAiBzmB,OAAS,OAElC,GAAImH,EAAMnH,OAAS,EAAG,CAC3B,MAAMunB,EAAclB,EAAKlf,GAEvBogB,EAAYd,kBACZc,EAAYd,iBAAiB,GAAGnqB,OAASkF,EAAKrC,MAE9CsnB,EAAmBc,EAAYd,wBACxBc,EAAYd,iBAEtB,CAOD,IAJItf,EAAMnH,OAAS,GAAKqmB,EAAKlf,GAAO7K,OAASkF,EAAKlF,QAChD+qB,EAAalgB,EAAMoQ,OAGdpQ,EAAMnH,OAAS,GAAKqmB,EAAKlf,GAAO7K,OAASkF,EAAKlF,OACnDgrB,EAAYngB,EAAMoQ,MAQpB,IALK+P,GAAaD,IAAYC,EAAYD,GAKtCA,EACF,OAAQ7lB,EAAKuK,MACX,IAAK,mBACHsI,KAAKsS,iCAAiCnlB,EAAMA,EAAKgmB,YACjD,MACF,IAAK,gBACHnT,KAAKsS,iCAAiCnlB,EAAMA,EAAKgmB,YAAY,GAC7D,MACF,IAAK,iBACHnT,KAAKsS,iCAAiCnlB,EAAMA,EAAK0N,WACjD,MACF,IAAK,kBACHmF,KAAKsS,iCAAiCnlB,EAAMA,EAAKolB,UACjD,MACF,IAAK,eACHvS,KAAKsS,iCAAiCnlB,EAAMA,EAAKolB,UAAU,QAI/DvS,KAAK5Q,MAAMujB,sBAC+B,oBAAxC3S,KAAK5Q,MAAMujB,oBAAoBjb,MACjB,oBAAdvK,EAAKuK,MACoC,oBAAxCsI,KAAK5Q,MAAMujB,oBAAoBjb,MAChB,oBAAdvK,EAAKuK,OAETsI,KAAKsS,iCAAiCnlB,EAAM,CAC1C6S,KAAK5Q,MAAMujB,sBAIf,GAAIM,GACF,GAAIA,EAAUZ,gBACZ,GACEY,IAAc9lB,GACd8lB,EAAUZ,gBAAgB1mB,OAAS,GACnCqmB,EAAKiB,EAAUZ,iBAAiBvnB,KAAOqC,EAAKlF,MAE5CkF,EAAKklB,gBAAkBY,EAAUZ,uBAC1BY,EAAUZ,qBAKjB,IAAKxmB,EAAIonB,EAAUZ,gBAAgB1mB,OAAS,EAAGE,GAAK,IAAKA,EACvD,GAAIonB,EAAUZ,gBAAgBxmB,GAAGf,KAAOqC,EAAKlF,MAAO,CAClDkF,EAAKklB,gBAAkBY,EAAUZ,gBAAgB3Z,OAAO,EAAG7M,EAAI,GAC/D,KACD,OAIF,GAAImU,KAAK5Q,MAAMijB,gBAAgB1mB,OAAS,EAC7C,GAAIqmB,EAAKhS,KAAK5Q,MAAMijB,iBAAiBvnB,KAAOqC,EAAKlF,MAAO,CACtD,GAAI+X,KAAK5Q,MAAMujB,oBACb,IAAKD,EAAI,EAAGA,EAAI1S,KAAK5Q,MAAMijB,gBAAgB1mB,OAAQ+mB,IAE/C1S,KAAK5Q,MAAMijB,gBAAgBK,GAAG5nB,IAC9BkV,KAAK5Q,MAAMujB,oBAAoB7nB,MAE/BkV,KAAK5Q,MAAMijB,gBAAgB3Z,OAAOga,EAAG,GACrCA,KAIF1S,KAAK5Q,MAAMijB,gBAAgB1mB,OAAS,IACtCwB,EAAKklB,gBAAkBrS,KAAK5Q,MAAMijB,gBAClCrS,KAAK5Q,MAAMijB,gBAAkB,GAdjC,KAgBO,CAYL,IAAKxmB,EAAI,EAAGA,EAAImU,KAAK5Q,MAAMijB,gBAAgB1mB,UACrCqU,KAAK5Q,MAAMijB,gBAAgBxmB,GAAGf,IAAMqC,EAAKlF,OADI4D,KAUnD,MAAMwmB,EAAkBrS,KAAK5Q,MAAMijB,gBAAgBjmB,MAAM,EAAGP,GAExDwmB,EAAgB1mB,SAClBwB,EAAKklB,gBAAkBA,GAKzBD,EAAmBpS,KAAK5Q,MAAMijB,gBAAgBjmB,MAAMP,GACpB,IAA5BumB,EAAiBzmB,SACnBymB,EAAmB,KAEtB,CAKH,GAFApS,KAAK5Q,MAAMujB,oBAAsBxlB,EAE7BilB,EACF,GACEA,EAAiBzmB,QACjBymB,EAAiB,GAAGnqB,OAASkF,EAAKlF,OAClC+pB,EAAKI,GAAkBtnB,KAAOqC,EAAKrC,IAEnCqC,EAAKimB,cAAgBhB,MAChB,CAEL,MAAMiB,EAA4BjB,EAAiBkB,WACjDnB,GAAWA,EAAQrnB,KAAOqC,EAAKrC,MAG7BuoB,EAA4B,GAC9BlmB,EAAKimB,cAAgBhB,EAAiBhmB,MACpC,EACAinB,GAEFlmB,EAAKilB,iBAAmBA,EAAiBhmB,MACvCinB,IAGFlmB,EAAKilB,iBAAmBA,CAE3B,CAGHtf,EAAMrC,KAAKtD,EACZ,EEtRI,MAAMwmB,EAAgB3sB,OAAOwsB,OAAO,CACzCK,oBAAqB,gCACrBC,iBACE,6DACFC,sCACE,0EACA,uBACA,6DACA,+BACA,oDACA,uBACA,kFACA,wBAAuB,iDACvB,eAAc,6CACd,eAAc,gDACd,uBACA,wDACA,sBAAqB,mDACrB,6BACA,4DACA,sBAAqB,2CACrB,mBAAkB,yCAClB,uBAAsB,mCACtB,8BAA6B,qCAC7B,sBACA,mKACA,qBACA,kFACA,qBACA,mHACA,mBAAkB,iDAClB,qBAAoB,+CACpB,mBAAkB,0CAClB,uBACA,qGACA,qBAAoB,0CACpB,uBAAsB,8CACtB,gBACA,uEACA,eAAc,qCACd,qBAAoB,oCACpB,qBAAoB,2CACpB,iBAAgB,oCAChB,2BAA0B,yBAC1B,sBACA,qIACA,8BACA,gEACA,uBACA,2DACA,kCACA,qEACA,qBAAoB,iBACpB,6BACA,4EACA,cAAa,+BACb,sBACA,oGACA,gCACA,4DACA,gBAAe,+BACf,2BAA0B,kCAC1B,yBAAwB,iCACxB,wBAAwB,4DACxB,oBAAoB,sEACpB,qBAAoB,wBACpB,iBAAgB,2BAChB,eAAc,kBACd,aAAY,8BACZ,sBAAqB,gCACrB,8BAA6B,sCAC7B,2BAA0B,gCAC1B,kBAAiB,wBACjB,WAAU,+BACV,kBAAiB,uCACjB,cAAa,iBACb,yBACA,gEACA,yBAAwB,4BACxB,+BAA8B,2CAC9B,8BAA6B,kCAC7B,8BAA6B,4BAC7B,sBACA,wEACA,6BAA4B,mCAC5B,mBAAkB,iCAClB,oBACA,8EACA,0BAAyB,uCACzB,qBAAoB,kCACpB,iBAAgB,2BAChB,sBACA,8DACA,qBAAoB,4CACpB,0BACA,qFACA,iCACA,+CACA,4BACA,8DACA,kCACA,yDACA,iCACA,gEACA,sBAAqB,6BACrB,yBAAwB,2BACxB,kBAAiB,8BACjB,iBAAgB,kCAChB,iBAAgB,mCAChB,iCACA,6FACA,kBACA,wFACA,sBACA,0DACA,2BACA,4DACA,UAAS,sBACT,mBAAkB,gDAClB,iBAAgB,uCAChB,oBACA,mGACA,+BACA,iEACA,+BACA,oEACA,oBACA,8DACA,uBACA,sEACA,kCACA,+FACA,oBACA,wGACA,yBAAwB,6BACxB,0CACA,mIACA,4CACA,qIACA,6CACA,sIACA,cAAa,mDACb,kBAAiB,+CACjB,eACA,0HACA,gBAAe,uDACf,aAAY,yCACZ,oBAAmB,mCACnB,2BAA0B,8BAC1B,eACA,qFACA,oBAAmB,wDACnB,mBAAkB,uDAClB,WAAU,wBACV,gBACA,kJACA,kBAAiB,4CACjB,kBAAiB,iDACjB,yCACA,kIACA,2CACA,oIACA,4CACA,qIACA,8BAA6B,kCAC7B,iCACA,0FACA,yBAAwB,oCACxB,uBACA,yDACA,kBAAiB,0BACjB,2BACA,6DACA,6BACA,kEACA,oBAAmB,2CACnB,2BACA,yDACA,uBACA,0JACA,uBAAsB,gCACtB,gBAAe,sDACf,gBAAe,wBACf,mCACA,mFA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AE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,KAAK,GAAG,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,GAAG,KAAK,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,MAAM,GAAG,KAAK,EAAE,IAAI,EAAE,KAAK,GAAG,KAAK,GAAG,IAAI,KAAK,IAAI,KAAK,KAAK,EAAE,MAEtjDC,EAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAA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AI,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IA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","sources":["webpack://react-devtools-core/../../node_modules/@babel/code-frame/lib/index.js","webpack://react-devtools-core/../../node_modules/@babel/helper-function-name/lib/index.js","webpack://react-devtools-core/../../node_modules/@babel/helper-function-name/node_modules/@babel/template/lib/builder.js","webpack://react-devtools-core/../../node_modules/@babel/helper-function-name/node_modules/@babel/template/lib/formatters.js","webpack://react-devtools-core/../../node_modules/@babel/helper-function-name/node_modules/@babel/template/lib/index.js","webpack://react-devtools-core/../../node_modules/@babel/helper-function-name/node_modules/@babel/template/lib/literal.js","webpack://react-devtools-core/../../node_modules/@babel/helper-function-name/node_modules/@babel/template/lib/options.js","webpack://react-devtools-core/../../node_modules/@babel/helper-function-name/node_modules/@babel/template/lib/parse.js","webpack://react-devtools-core/../../node_modules/@babel/helper-function-name/node_modules/@babel/template/lib/populate.js","webpack://react-devtools-core/../../node_modules/@babel/helper-function-name/node_modules/@babel/template/lib/string.js","webpack://react-devtools-core/../../node_modules/@babel/helper-get-function-arity/lib/index.js","webpack://react-devtools-core/../../node_modules/@babel/helper-split-export-declaration/lib/index.js","webpack://react-devtools-core/../../node_modules/@babel/highlight/node_modules/ansi-styles/index.js","webpack://react-devtools-core/../../node_modules/@babel/highlight/node_modules/chalk/index.js","webpack://react-devtools-core/../../node_modules/@babel/highlight/node_modules/chalk/templates.js","webpack://react-devtools-core/../../node_modules/@babel/highlight/node_modules/color-convert/conversions.js","webpack://react-devtools-core/../../node_modules/@babel/highlight/node_modules/color-convert/index.js","webpack://react-devtools-core/../../node_modules/@babel/highlight/node_modules/color-convert/route.js","webpack://react-devtools-core/../../node_modules/@babel/highlight/node_modules/color-name/index.js","webpack://react-devtools-core/../../node_modules/@babel/highlight/node_modules/escape-string-regexp/index.js","webpack://react-devtools-core/../../node_modules/@babel/highlight/node_modules/supports-color/index.js","webpack://react-devtools-core/../src/tokenizer/types.js","webpack://react-devtools-core/../src/util/whitespace.js","webpack://react-devtools-core/../src/util/location.js","webpack://react-devtools-core/../src/parser/base.js","webpack://react-devtools-core/../src/parser/comments.js","webpack://react-devtools-core/../src/parser/error-codes.js","webpack://react-devtools-core/../src/parser/error-message.js","webpack://react-devtools-core/../src/parser/error.js","webpack://react-devtools-core/../src/tokenizer/context.js","webpack://react-devtools-core/../../babel-helper-validator-identifier/src/identifier.ts","webpack://react-devtools-core/../../babel-helper-validator-identifier/src/keyword.ts","webpack://react-devtools-core/../src/util/identifier.js","webpack://react-devtools-core/../src/util/scope.js","webpack://react-devtools-core/../src/util/scopeflags.js","webpack://react-devtools-core/../src/plugins/flow/scope.js","webpack://react-devtools-core/../src/plugins/flow/index.js","webpack://react-devtools-core/../src/plugins/jsx/xhtml.js","webpack://react-devtools-core/../src/plugins/jsx/index.js","webpack://react-devtools-core/../src/plugins/typescript/scope.js","webpack://react-devtools-core/../src/util/production-parameter.js","webpack://react-devtools-core/../src/plugins/typescript/index.js","webpack://react-devtools-core/../src/plugins/placeholders.js","webpack://react-devtools-core/../src/plugin-utils.js","webpack://react-devtools-core/../src/plugins/estree.js","webpack://react-devtools-core/../src/plugins/v8intrinsic.js","webpack://react-devtools-core/../src/options.js","webpack://react-devtools-core/../src/tokenizer/state.js","webpack://react-devtools-core/../src/tokenizer/index.js","webpack://react-devtools-core/../src/util/class-scope.js","webpack://react-devtools-core/../src/util/expression-scope.js","webpack://react-devtools-core/../src/parser/util.js","webpack://react-devtools-core/../src/parser/node.js","webpack://react-devtools-core/../src/parser/lval.js","webpack://react-devtools-core/../src/parser/expression.js","webpack://react-devtools-core/../src/parser/statement.js","webpack://react-devtools-core/../src/parser/index.js","webpack://react-devtools-core/../src/index.js","webpack://react-devtools-core/../../node_modules/debug/node_modules/ms/index.js","webpack://react-devtools-core/../../node_modules/debug/src/browser.js","webpack://react-devtools-core/../../node_modules/debug/src/common.js","webpack://react-devtools-core/../../node_modules/debug/src/index.js","webpack://react-devtools-core/../../node_modules/debug/src/node.js","webpack://react-devtools-core/../../node_modules/error-stack-parser/error-stack-parser.js","webpack://react-devtools-core/../../node_modules/globals/index.js","webpack://react-devtools-core/../../node_modules/has-flag/index.js","webpack://react-devtools-core/../../node_modules/js-tokens/index.js","webpack://react-devtools-core/../../node_modules/jsesc/jsesc.js","webpack://react-devtools-core/../../node_modules/lru-cache/index.js","webpack://react-devtools-core/../../node_modules/picocolors/picocolors.js","webpack://react-devtools-core/../../node_modules/process/browser.js","webpack://react-devtools-core/../../node_modules/source-map-js/lib/util.js","webpack://react-devtools-core/../../node_modules/stackframe/stackframe.js","webpack://react-devtools-core/../../node_modules/supports-color/index.js","webpack://react-devtools-core/../../node_modules/supports-color/node_modules/has-flag/index.js","webpack://react-devtools-core/../../node_modules/yallist/iterator.js","webpack://react-devtools-core/../../node_modules/yallist/yallist.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/buffer.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/generators/base.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/generators/classes.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/generators/expressions.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/generators/flow.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/generators/index.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/generators/jsx.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/generators/methods.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/generators/modules.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/generators/statements.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/generators/template-literals.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/generators/types.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/generators/typescript.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/index.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/node/index.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/node/parentheses.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/node/whitespace.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/printer.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/generator/lib/source-map.js","webpack://react-devtools-core/../../babel-helper-validator-identifier/src/identifier.js","webpack://react-devtools-core/../../babel-helper-validator-identifier/src/keyword.js","webpack://react-devtools-core/../src/plugins/flow.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/cache.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/context.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/hub.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/index.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/ancestry.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/comments.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/context.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/conversion.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/evaluation.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/family.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/index.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/inference/index.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/inference/inferers.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/introspection.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/lib/hoister.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/lib/virtual-types.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/modification.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/removal.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/path/replacement.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/scope/binding.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/scope/index.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/scope/lib/renamer.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/@babel/traverse/lib/visitors.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/source-map/lib/array-set.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/source-map/lib/base64-vlq.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/source-map/lib/base64.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/source-map/lib/binary-search.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/source-map/lib/mapping-list.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/source-map/lib/quick-sort.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/source-map/lib/source-map-consumer.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/source-map/lib/source-map-generator.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/source-map/lib/source-node.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/source-map/lib/util.js","webpack://react-devtools-core/../react-devtools-shared/node_modules/source-map/source-map.js","webpack://react-devtools-core/testErorrStack.js","webpack://react-devtools-core/external node-commonjs \"os\"","webpack://react-devtools-core/external node-commonjs \"tty\"","webpack://react-devtools-core/external node-commonjs \"util\"","webpack://react-devtools-core/../src/index.ts","webpack://react-devtools-core/../src/identifier.ts","webpack://react-devtools-core/../src/keyword.ts","webpack://react-devtools-core/../../src/asserts/assertNode.ts","webpack://react-devtools-core/../../../src/asserts/generated/index.ts","webpack://react-devtools-core/../../../src/builders/flow/createFlowUnionType.ts","webpack://react-devtools-core/../../../src/builders/flow/createTypeAnnotationBasedOnTypeof.ts","webpack://react-devtools-core/../../../src/builders/generated/index.ts","webpack://react-devtools-core/../../../src/builders/generated/lowercase.ts","webpack://react-devtools-core/../../../src/builders/generated/uppercase.ts","webpack://react-devtools-core/../../src/builders/productions.ts","webpack://react-devtools-core/../../../src/builders/react/buildChildren.ts","webpack://react-devtools-core/../../../src/builders/typescript/createTSUnionType.ts","webpack://react-devtools-core/../../src/clone/clone.ts","webpack://react-devtools-core/../../src/clone/cloneDeep.ts","webpack://react-devtools-core/../../src/clone/cloneDeepWithoutLoc.ts","webpack://react-devtools-core/../../src/clone/cloneNode.ts","webpack://react-devtools-core/../../src/clone/cloneWithoutLoc.ts","webpack://react-devtools-core/../../src/comments/addComment.ts","webpack://react-devtools-core/../../src/comments/addComments.ts","webpack://react-devtools-core/../../src/comments/inheritInnerComments.ts","webpack://react-devtools-core/../../src/comments/inheritLeadingComments.ts","webpack://react-devtools-core/../../src/comments/inheritTrailingComments.ts","webpack://react-devtools-core/../../src/comments/inheritsComments.ts","webpack://react-devtools-core/../../src/comments/removeComments.ts","webpack://react-devtools-core/../../../src/constants/generated/index.ts","webpack://react-devtools-core/../../src/constants/index.ts","webpack://react-devtools-core/../../src/converters/ensureBlock.ts","webpack://react-devtools-core/../../src/converters/gatherSequenceExpressions.ts","webpack://react-devtools-core/../../src/converters/toBindingIdentifierName.ts","webpack://react-devtools-core/../../src/converters/toBlock.ts","webpack://react-devtools-core/../../src/converters/toComputedKey.ts","webpack://react-devtools-core/../../src/converters/toExpression.ts","webpack://react-devtools-core/../../src/converters/toIdentifier.ts","webpack://react-devtools-core/../../src/converters/toKeyAlias.ts","webpack://react-devtools-core/../../src/converters/toSequenceExpression.ts","webpack://react-devtools-core/../../src/converters/toStatement.ts","webpack://react-devtools-core/../../src/converters/valueToNode.ts","webpack://react-devtools-core/../../src/definitions/core.ts","webpack://react-devtools-core/../../src/definitions/deprecated-aliases.ts","webpack://react-devtools-core/../../src/definitions/experimental.ts","webpack://react-devtools-core/../../src/definitions/flow.ts","webpack://react-devtools-core/../../src/definitions/index.ts","webpack://react-devtools-core/../../src/definitions/jsx.ts","webpack://react-devtools-core/../../src/definitions/misc.ts","webpack://react-devtools-core/../../src/definitions/placeholders.ts","webpack://react-devtools-core/../../src/definitions/typescript.ts","webpack://react-devtools-core/../../src/definitions/utils.ts","webpack://react-devtools-core/../../src/modifications/appendToMemberExpression.ts","webpack://react-devtools-core/../../../src/modifications/flow/removeTypeDuplicates.ts","webpack://react-devtools-core/../../src/modifications/inherits.ts","webpack://react-devtools-core/../../src/modifications/prependToMemberExpression.ts","webpack://react-devtools-core/../../src/modifications/removeProperties.ts","webpack://react-devtools-core/../../src/modifications/removePropertiesDeep.ts","webpack://react-devtools-core/../../../src/modifications/typescript/removeTypeDuplicates.ts","webpack://react-devtools-core/../../src/retrievers/getAssignmentIdentifiers.ts","webpack://react-devtools-core/../../src/retrievers/getBindingIdentifiers.ts","webpack://react-devtools-core/../../src/retrievers/getFunctionName.ts","webpack://react-devtools-core/../../src/retrievers/getOuterBindingIdentifiers.ts","webpack://react-devtools-core/../../src/traverse/traverse.ts","webpack://react-devtools-core/../../src/traverse/traverseFast.ts","webpack://react-devtools-core/../../src/utils/deprecationWarning.ts","webpack://react-devtools-core/../../src/utils/inherit.ts","webpack://react-devtools-core/../../../src/utils/react/cleanJSXElementLiteralChild.ts","webpack://react-devtools-core/../../src/utils/shallowEqual.ts","webpack://react-devtools-core/../../src/validators/buildMatchMemberExpression.ts","webpack://react-devtools-core/../../../src/validators/generated/index.ts","webpack://react-devtools-core/../../src/validators/is.ts","webpack://react-devtools-core/../../src/validators/isBinding.ts","webpack://react-devtools-core/../../src/validators/isBlockScoped.ts","webpack://react-devtools-core/../../src/validators/isImmutable.ts","webpack://react-devtools-core/../../src/validators/isLet.ts","webpack://react-devtools-core/../../src/validators/isNode.ts","webpack://react-devtools-core/../../src/validators/isNodesEquivalent.ts","webpack://react-devtools-core/../../src/validators/isPlaceholderType.ts","webpack://react-devtools-core/../../src/validators/isReferenced.ts","webpack://react-devtools-core/../../src/validators/isScope.ts","webpack://react-devtools-core/../../src/validators/isSpecifierDefault.ts","webpack://react-devtools-core/../../src/validators/isType.ts","webpack://react-devtools-core/../../src/validators/isValidES3Identifier.ts","webpack://react-devtools-core/../../src/validators/isValidIdentifier.ts","webpack://react-devtools-core/../../src/validators/isVar.ts","webpack://react-devtools-core/../../src/validators/matchesPattern.ts","webpack://react-devtools-core/../../../src/validators/react/isCompatTag.ts","webpack://react-devtools-core/../../../src/validators/react/isReactComponent.ts","webpack://react-devtools-core/../../src/validators/validate.ts","webpack://react-devtools-core/webpack/bootstrap","webpack://react-devtools-core/webpack/runtime/compat get default export","webpack://react-devtools-core/webpack/runtime/define property getters","webpack://react-devtools-core/webpack/runtime/hasOwnProperty shorthand","webpack://react-devtools-core/webpack/runtime/node module decorator","webpack://react-devtools-core/../react-devtools-shared/src/constants.js","webpack://react-devtools-core/../react-devtools-shared/src/PerformanceLoggingUtils.js","webpack://react-devtools-core/../react-devtools-shared/src/hooks/astUtils.js","webpack://react-devtools-core/../react-devtools-shared/src/hooks/ErrorTester.js","webpack://react-devtools-core/../react-devtools-shared/src/hookNamesCache.js","webpack://react-devtools-core/../src/sourcemap-codec.ts","webpack://react-devtools-core/../react-devtools-shared/src/hooks/getHookNameForLocation.js","webpack://react-devtools-core/../react-devtools-shared/src/hooks/SourceMapMetadataConsumer.js","webpack://react-devtools-core/../react-devtools-shared/src/hooks/generateHookMap.js","webpack://react-devtools-core/../react-devtools-shared/src/hooks/SourceMapConsumer.js","webpack://react-devtools-core/../react-devtools-shared/src/hooks/parseHookNames/parseSourceAndMetadata.js","webpack://react-devtools-core/../react-devtools-shared/src/hooks/parseHookNames/parseSourceAndMetadata.worker.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = _interopRequireWildcard(require(\"@babel/highlight\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _helperGetFunctionArity = _interopRequireDefault(require(\"@babel/helper-get-function-arity\"));\n\nvar _template = _interopRequireDefault(require(\"@babel/template\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst buildPropertyMethodAssignmentWrapper = (0, _template.default)(`\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n`);\nconst buildGeneratorPropertyMethodAssignmentWrapper = (0, _template.default)(`\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n`);\nconst visitor = {\n  \"ReferencedIdentifier|BindingIdentifier\"(path, state) {\n    if (path.node.name !== state.name) return;\n    const localDeclar = path.scope.getBindingIdentifier(state.name);\n    if (localDeclar !== state.outerDeclar) return;\n    state.selfReference = true;\n    path.stop();\n  }\n\n};\n\nfunction getNameFromLiteralId(id) {\n  if (t.isNullLiteral(id)) {\n    return \"null\";\n  }\n\n  if (t.isRegExpLiteral(id)) {\n    return `_${id.pattern}_${id.flags}`;\n  }\n\n  if (t.isTemplateLiteral(id)) {\n    return id.quasis.map(quasi => quasi.value.raw).join(\"\");\n  }\n\n  if (id.value !== undefined) {\n    return id.value + \"\";\n  }\n\n  return \"\";\n}\n\nfunction wrap(state, method, id, scope) {\n  if (state.selfReference) {\n    if (scope.hasBinding(id.name) && !scope.hasGlobal(id.name)) {\n      scope.rename(id.name);\n    } else {\n      if (!t.isFunction(method)) return;\n      let build = buildPropertyMethodAssignmentWrapper;\n\n      if (method.generator) {\n        build = buildGeneratorPropertyMethodAssignmentWrapper;\n      }\n\n      const template = build({\n        FUNCTION: method,\n        FUNCTION_ID: id,\n        FUNCTION_KEY: scope.generateUidIdentifier(id.name)\n      }).expression;\n      const params = template.callee.body.body[0].params;\n\n      for (let i = 0, len = (0, _helperGetFunctionArity.default)(method); i < len; i++) {\n        params.push(scope.generateUidIdentifier(\"x\"));\n      }\n\n      return template;\n    }\n  }\n\n  method.id = id;\n  scope.getProgramParent().references[id.name] = true;\n}\n\nfunction visit(node, name, scope) {\n  const state = {\n    selfAssignment: false,\n    selfReference: false,\n    outerDeclar: scope.getBindingIdentifier(name),\n    references: [],\n    name: name\n  };\n  const binding = scope.getOwnBinding(name);\n\n  if (binding) {\n    if (binding.kind === \"param\") {\n      state.selfReference = true;\n    } else {}\n  } else if (state.outerDeclar || scope.hasGlobal(name)) {\n    scope.traverse(node, visitor, state);\n  }\n\n  return state;\n}\n\nfunction _default({\n  node,\n  parent,\n  scope,\n  id\n}, localBinding = false) {\n  if (node.id) return;\n\n  if ((t.isObjectProperty(parent) || t.isObjectMethod(parent, {\n    kind: \"method\"\n  })) && (!parent.computed || t.isLiteral(parent.key))) {\n    id = parent.key;\n  } else if (t.isVariableDeclarator(parent)) {\n    id = parent.id;\n\n    if (t.isIdentifier(id) && !localBinding) {\n      const binding = scope.parent.getBinding(id.name);\n\n      if (binding && binding.constant && scope.getBinding(id.name) === binding) {\n        node.id = t.cloneNode(id);\n        node.id[t.NOT_LOCAL_BINDING] = true;\n        return;\n      }\n    }\n  } else if (t.isAssignmentExpression(parent, {\n    operator: \"=\"\n  })) {\n    id = parent.left;\n  } else if (!id) {\n    return;\n  }\n\n  let name;\n\n  if (id && t.isLiteral(id)) {\n    name = getNameFromLiteralId(id);\n  } else if (id && t.isIdentifier(id)) {\n    name = id.name;\n  }\n\n  if (name === undefined) {\n    return;\n  }\n\n  name = t.toBindingIdentifierName(name);\n  id = t.identifier(name);\n  id[t.NOT_LOCAL_BINDING] = true;\n  const state = visit(node, name, scope);\n  return wrap(state, node, id, scope) || node;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _literal = _interopRequireDefault(require(\"./literal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = _interopRequireWildcard(require(\"./formatters\"));\n\nvar _builder = _interopRequireDefault(require(\"./builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _populate = _interopRequireDefault(require(\"./populate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _default(node) {\n  const params = node.params;\n\n  for (let i = 0; i < params.length; i++) {\n    const param = params[i];\n\n    if (t.isAssignmentPattern(param) || t.isRestElement(param)) {\n      return i;\n    }\n  }\n\n  return params.length;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = splitExportDeclaration;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction splitExportDeclaration(exportDeclaration) {\n  if (!exportDeclaration.isExportDeclaration()) {\n    throw new Error(\"Only export declarations can be split.\");\n  }\n\n  const isDefault = exportDeclaration.isExportDefaultDeclaration();\n  const declaration = exportDeclaration.get(\"declaration\");\n  const isClassDeclaration = declaration.isClassDeclaration();\n\n  if (isDefault) {\n    const standaloneDeclaration = declaration.isFunctionDeclaration() || isClassDeclaration;\n    const scope = declaration.isScope() ? declaration.scope.parent : declaration.scope;\n    let id = declaration.node.id;\n    let needBindingRegistration = false;\n\n    if (!id) {\n      needBindingRegistration = true;\n      id = scope.generateUidIdentifier(\"default\");\n\n      if (standaloneDeclaration || declaration.isFunctionExpression() || declaration.isClassExpression()) {\n        declaration.node.id = t.cloneNode(id);\n      }\n    }\n\n    const updatedDeclaration = standaloneDeclaration ? declaration : t.variableDeclaration(\"var\", [t.variableDeclarator(t.cloneNode(id), declaration.node)]);\n    const updatedExportDeclaration = t.exportNamedDeclaration(null, [t.exportSpecifier(t.cloneNode(id), t.identifier(\"default\"))]);\n    exportDeclaration.insertAfter(updatedExportDeclaration);\n    exportDeclaration.replaceWith(updatedDeclaration);\n\n    if (needBindingRegistration) {\n      scope.registerDeclaration(exportDeclaration);\n    }\n\n    return exportDeclaration;\n  }\n\n  if (exportDeclaration.get(\"specifiers\").length > 0) {\n    throw new Error(\"It doesn't make sense to split exported specifiers.\");\n  }\n\n  const bindingIdentifiers = declaration.getOuterBindingIdentifiers();\n  const specifiers = Object.keys(bindingIdentifiers).map(name => {\n    return t.exportSpecifier(t.identifier(name), t.identifier(name));\n  });\n  const aliasDeclar = t.exportNamedDeclaration(null, specifiers);\n  exportDeclaration.insertAfter(aliasDeclar);\n  exportDeclaration.replaceWith(declaration.node);\n  return exportDeclaration;\n}","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","// @flow\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(prevType: TokenType) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  decimal: new TokenType(\"decimal\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  privateName: new TokenType(\"#name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: new TokenType(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        // TrailingComments maybe contain innerComments\n        const firstTrailingCommentIndex = trailingComments.findIndex(\n          comment => comment.end >= node.end,\n        );\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(\n            0,\n            firstTrailingCommentIndex,\n          );\n          node.trailingComments = trailingComments.slice(\n            firstTrailingCommentIndex,\n          );\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n\nexport const ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n});\n\nexport type ErrorCode = $Values<typeof ErrorCodes>;\n","// @flow\n\nimport { makeErrorTemplates, ErrorCodes } from \"./error\";\n\n/* eslint sort-keys: \"error\" */\n\n/**\n * @module parser/error-message\n */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = makeErrorTemplates(\n  {\n    AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n    ArgumentsInClass:\n      \"'arguments' is only allowed in functions and class methods.\",\n    AsyncFunctionInSingleStatementContext:\n      \"Async functions can only be declared at the top level or inside a block.\",\n    AwaitBindingIdentifier:\n      \"Can not use 'await' as identifier inside an async function.\",\n    AwaitBindingIdentifierInStaticBlock:\n      \"Can not use 'await' as identifier inside a static block.\",\n    AwaitExpressionFormalParameter:\n      \"'await' is not allowed in async function parameters.\",\n    AwaitNotInAsyncContext:\n      \"'await' is only allowed within async functions and at the top levels of modules.\",\n    AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n    BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n    BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n    BadSetterRestParameter:\n      \"A 'set' accesor function argument must not be a rest parameter.\",\n    ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n    ConstructorClassPrivateField:\n      \"Classes may not have a private field named '#constructor'.\",\n    ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n    ConstructorIsAsync: \"Constructor can't be an async function.\",\n    ConstructorIsGenerator: \"Constructor can't be a generator.\",\n    DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n    DecoratorBeforeExport:\n      \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n    DecoratorConstructor:\n      \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n    DecoratorExportClass:\n      \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n    DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n    DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n    DeletePrivateField: \"Deleting a private field is not allowed.\",\n    DestructureNamedImport:\n      \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n    DuplicateConstructor: \"Duplicate constructor in the same class.\",\n    DuplicateDefaultExport: \"Only one default export allowed per module.\",\n    DuplicateExport:\n      \"`%0` has already been exported. Exported identifiers must be unique.\",\n    DuplicateProto: \"Redefinition of __proto__ property.\",\n    DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n    ElementAfterRest: \"Rest element must be last element.\",\n    EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n    ExportBindingIsString:\n      \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n    ExportDefaultFromAsIdentifier:\n      \"'from' is not allowed as an identifier after 'export default'.\",\n    ForInOfLoopInitializer:\n      \"'%0' loop variable declaration may not have an initializer.\",\n    ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n    ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n    GeneratorInSingleStatementContext:\n      \"Generators can only be declared at the top level or inside a block.\",\n    IllegalBreakContinue: \"Unsyntactic %0.\",\n    IllegalLanguageModeDirective:\n      \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n    IllegalReturn: \"'return' outside of function.\",\n    ImportBindingIsString:\n      'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n    ImportCallArgumentTrailingComma:\n      \"Trailing comma is disallowed inside import(...) arguments.\",\n    ImportCallArity: \"`import()` requires exactly %0.\",\n    ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n    ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n    InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n    InvalidCodePoint: \"Code point out of bounds.\",\n    InvalidDecimal: \"Invalid decimal.\",\n    InvalidDigit: \"Expected number in radix %0.\",\n    InvalidEscapeSequence: \"Bad character escape sequence.\",\n    InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n    InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n    InvalidIdentifier: \"Invalid identifier %0.\",\n    InvalidLhs: \"Invalid left-hand side in %0.\",\n    InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n    InvalidNumber: \"Invalid number.\",\n    InvalidOrMissingExponent:\n      \"Floating-point numbers require a valid exponent after the 'e'.\",\n    InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n    InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n    InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n    InvalidPropertyBindingPattern: \"Binding member expression.\",\n    InvalidRecordProperty:\n      \"Only properties and spread elements are allowed in record definitions.\",\n    InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n    LabelRedeclaration: \"Label '%0' is already declared.\",\n    LetInLexicalBinding:\n      \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n    LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n    MalformedRegExpFlags: \"Invalid regular expression flag.\",\n    MissingClassName: \"A class name is required.\",\n    MissingEqInAssignment:\n      \"Only '=' operator can be used for specifying default value.\",\n    MissingSemicolon: \"Missing semicolon.\",\n    MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n    MixingCoalesceWithLogical:\n      \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n    ModuleAttributeDifferentFromType:\n      \"The only accepted module attribute is `type`.\",\n    ModuleAttributeInvalidValue:\n      \"Only string literals are allowed as module attribute values.\",\n    ModuleAttributesWithDuplicateKeys:\n      'Duplicate key \"%0\" is not allowed in module attributes.',\n    ModuleExportNameHasLoneSurrogate:\n      \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n    ModuleExportUndefined: \"Export '%0' is not defined.\",\n    MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n    NewlineAfterThrow: \"Illegal newline after throw.\",\n    NoCatchOrFinally: \"Missing catch or finally clause.\",\n    NumberIdentifier: \"Identifier directly after number.\",\n    NumericSeparatorInEscapeSequence:\n      \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n    ObsoleteAwaitStar:\n      \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n    OptionalChainingNoNew:\n      \"Constructors in/after an Optional Chain are not allowed.\",\n    OptionalChainingNoTemplate:\n      \"Tagged Template Literals are not allowed in optionalChain.\",\n    OverrideOnConstructor:\n      \"'override' modifier cannot appear on a constructor declaration.\",\n    ParamDupe: \"Argument name clash.\",\n    PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n    PatternHasMethod: \"Object pattern can't contain methods.\",\n    PipelineBodyNoArrow:\n      'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n    PipelineBodySequenceExpression:\n      \"Pipeline body may not be a comma-separated sequence expression.\",\n    PipelineHeadSequenceExpression:\n      \"Pipeline head should not be a comma-separated sequence expression.\",\n    PipelineTopicUnused:\n      \"Pipeline is in topic style but does not use topic reference.\",\n    PrimaryTopicNotAllowed:\n      \"Topic reference was used in a lexical context without topic binding.\",\n    PrimaryTopicRequiresSmartPipeline:\n      \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n    PrivateInExpectedIn:\n      \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n    PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n    RecordExpressionBarIncorrectEndSyntaxType:\n      \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    RecordExpressionBarIncorrectStartSyntaxType:\n      \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    RecordExpressionHashIncorrectStartSyntaxType:\n      \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n    RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n    RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n    SloppyFunction:\n      \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n    StaticPrototype: \"Classes may not have static property named prototype.\",\n    StrictDelete: \"Deleting local variable in strict mode.\",\n    StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n    StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n    StrictFunction:\n      \"In strict mode code, functions can only be declared at top level or inside a block.\",\n    StrictNumericEscape:\n      \"The only valid numeric escape in strict mode is '\\\\0'.\",\n    StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n    StrictWith: \"'with' in strict mode.\",\n    SuperNotAllowed:\n      \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n    SuperPrivateField: \"Private fields can't be accessed on super.\",\n    TrailingDecorator: \"Decorators must be attached to a class element.\",\n    TupleExpressionBarIncorrectEndSyntaxType:\n      \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    TupleExpressionBarIncorrectStartSyntaxType:\n      \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    TupleExpressionHashIncorrectStartSyntaxType:\n      \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n    UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n    UnexpectedAwaitAfterPipelineBody:\n      'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n    UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n    UnexpectedImportExport:\n      \"'import' and 'export' may only appear at the top level.\",\n    UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n    UnexpectedLeadingDecorator:\n      \"Leading decorators must be attached to a class declaration.\",\n    UnexpectedLexicalDeclaration:\n      \"Lexical declaration cannot appear in a single-statement context.\",\n    UnexpectedNewTarget:\n      \"`new.target` can only be used in functions or class properties.\",\n    UnexpectedNumericSeparator:\n      \"A numeric separator is only allowed between two digits.\",\n    UnexpectedPrivateField:\n      \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n    UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n    UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n    UnexpectedToken: \"Unexpected token '%0'.\",\n    UnexpectedTokenUnaryExponentiation:\n      \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n    UnsupportedBind: \"Binding should be performed on object property.\",\n    UnsupportedDecoratorExport:\n      \"A decorated export must export a class declaration.\",\n    UnsupportedDefaultExport:\n      \"Only expressions, functions or classes are allowed as the `default` export.\",\n    UnsupportedImport:\n      \"`import` can only be used in `import()` or `import.meta`.\",\n    UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n    UnsupportedParameterDecorator:\n      \"Decorators cannot be used to decorate parameters.\",\n    UnsupportedPropertyDecorator:\n      \"Decorators cannot be used to decorate object literal properties.\",\n    UnsupportedSuper:\n      \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n    UnterminatedComment: \"Unterminated comment.\",\n    UnterminatedRegExp: \"Unterminated regular expression.\",\n    UnterminatedString: \"Unterminated string constant.\",\n    UnterminatedTemplate: \"Unterminated template.\",\n    VarRedeclaration: \"Identifier '%0' has already been declared.\",\n    YieldBindingIdentifier:\n      \"Can not use 'yield' as identifier inside a generator.\",\n    YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n    ZeroDigitNumericSeparator:\n      \"Numeric separator can not be used after leading 0.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n\nexport const SourceTypeModuleErrorMessages = makeErrorTemplates(\n  {\n    ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n    ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  },\n  /* code */ ErrorCodes.SourceTypeModuleError,\n);\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\nimport { type ErrorCode, ErrorCodes } from \"./error-codes\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n  reasonCode?: String,\n};\nexport type ParsingError = SyntaxError & ErrorContext;\n\nexport type ErrorTemplate = {\n  code: ErrorCode,\n  template: string,\n  reasonCode: string,\n};\nexport type ErrorTemplates = {\n  [key: string]: ErrorTemplate,\n};\n\nexport function makeErrorTemplates(\n  messages: {\n    [key: string]: string,\n  },\n  code: ErrorCode,\n): ErrorTemplates {\n  const templates: ErrorTemplates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode],\n    });\n  });\n  return Object.freeze(templates);\n}\n\nexport { ErrorCodes };\nexport {\n  ErrorMessages as Errors,\n  SourceTypeModuleErrorMessages as SourceTypeModuleErrors,\n} from \"./error-message\";\n\nexport type raiseFunction = (number, ErrorTemplate, ...any) => void;\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(\n    pos: number,\n    { code, reasonCode, template }: ErrorTemplate,\n    ...params: any\n  ): Error | empty {\n    return this.raiseWithData(pos, { code, reasonCode }, template, ...params);\n  }\n\n  /**\n   * Raise a parsing error on given position pos. If errorRecovery is true,\n   * it will first search current errors and overwrite the error thrown on the exact\n   * position before with the new error message. If errorRecovery is false, it\n   * fallbacks to `raise`.\n   *\n   * @param {number} pos\n   * @param {string} errorTemplate\n   * @param {...any} params\n   * @returns {(Error | empty)}\n   * @memberof ParserError\n   */\n  raiseOverwrite(\n    pos: number,\n    { code, template }: ErrorTemplate,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      template.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n        if (error.pos === pos) {\n          return Object.assign(error, { message });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n    return this._raise({ code, loc, pos }, message);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport { types as tt } from \"./types\";\n\nexport class TokContext {\n  constructor(\n    token: string,\n    isExpr?: boolean,\n    preserveSpace?: boolean,\n    override?: ?Function, // Takes a Tokenizer as a this-parameter, and returns void.\n  ) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n  token: string;\n  isExpr: boolean;\n  preserveSpace: boolean;\n  override: ?Function;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false),\n};\n\n// Token-specific context update code\n// Note that we should avoid accessing `this.prodParam` in context update,\n// because it is executed immediately when last token is consumed, which may be\n// before `this.prodParam` is updated. e.g.\n// ```\n// function *g() { () => yield / 2 }\n// ```\n// When `=>` is eaten, the context update of `yield` is executed, however,\n// `this.prodParam` still has `[Yield]` production because it is not yet updated\n\ntt.parenR.updateContext = tt.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntt.name.updateContext = function (prevType) {\n  let allowed = false;\n  if (prevType !== tt.dot) {\n    if (\n      this.state.value === \"of\" &&\n      !this.state.exprAllowed &&\n      prevType !== tt._function &&\n      prevType !== tt._class\n    ) {\n      allowed = true;\n    }\n  }\n  this.state.exprAllowed = allowed;\n};\n\ntt.braceL.updateContext = function (prevType) {\n  this.state.context.push(\n    this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntt.parenL.updateContext = function (prevType) {\n  const statementParens =\n    prevType === tt._if ||\n    prevType === tt._for ||\n    prevType === tt._with ||\n    prevType === tt._while;\n  this.state.context.push(\n    statementParens ? types.parenStatement : types.parenExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntt._function.updateContext = tt._class.updateContext = function (prevType) {\n  if (\n    prevType.beforeExpr &&\n    prevType !== tt.semi &&\n    prevType !== tt._else &&\n    !(prevType === tt._return && this.hasPrecedingLineBreak()) &&\n    !(\n      (prevType === tt.colon || prevType === tt.braceL) &&\n      this.curContext() === types.b_stat\n    )\n  ) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntt.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n  this.state.exprAllowed = false;\n};\n\n// we don't need to update context for tt.braceBarL because we do not pop context for tt.braceBarR\ntt.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true; /* tt.braceHashL.beforeExpr */\n};\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors, type raiseFunction } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlags;\n  // A list of var-declared names in the current lexical scope\n  var: string[] = [];\n  // A list of lexically-declared names in the current lexical scope\n  lexical: string[] = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: string[] = [];\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  declare raise: raiseFunction;\n  declare inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        scope.functions.indexOf(name) > -1 ||\n        scope.var.indexOf(name) > -1\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        (!this.treatFunctionsAsVarInScope(scope) &&\n          scope.var.indexOf(name) > -1)\n      );\n    }\n\n    return (\n      (scope.lexical.indexOf(name) > -1 &&\n        !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name)) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        scope.functions.indexOf(name) > -1)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1 &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      this.scopeStack[0].functions.indexOf(id.name) === -1\n    ) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (\n        (scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) &&\n        !(scope.flags & SCOPE_ARROW)\n      ) {\n        return scope;\n      }\n    }\n  }\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: string[] = [];\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.includes(name) &&\n        (scope.lexical.includes(name) || scope.functions.includes(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../../parser\";\nimport { types as tt, type TokenType } from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart, isKeyword } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  type BindingTypes,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, makeErrorTemplates, ErrorCodes } from \"../../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = makeErrorTemplates(\n  {\n    AmbiguousConditionalArrow:\n      \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n    AmbiguousDeclareModuleKind:\n      \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n    AssignReservedType: \"Cannot overwrite reserved type %0.\",\n    DeclareClassElement:\n      \"The `declare` modifier can only appear on class fields.\",\n    DeclareClassFieldInitializer:\n      \"Initializers are not allowed in fields with the `declare` modifier.\",\n    DuplicateDeclareModuleExports:\n      \"Duplicate `declare module.exports` statement.\",\n    EnumBooleanMemberNotInitialized:\n      \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n    EnumDuplicateMemberName:\n      \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n    EnumInconsistentMemberValues:\n      \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n    EnumInvalidExplicitType:\n      \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n    EnumInvalidExplicitTypeUnknownSupplied:\n      \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n    EnumInvalidMemberInitializerPrimaryType:\n      \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n    EnumInvalidMemberInitializerSymbolType:\n      \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n    EnumInvalidMemberInitializerUnknownType:\n      \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n    EnumInvalidMemberName:\n      \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n    EnumNumberMemberNotInitialized:\n      \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n    EnumStringMemberInconsistentlyInitailized:\n      \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n    GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n    ImportTypeShorthandOnlyInPureImport:\n      \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n    InexactInsideExact:\n      \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n    InexactInsideNonObject:\n      \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n    InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n    InvalidNonTypeImportInDeclareModule:\n      \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n    MissingTypeParamDefault:\n      \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n    NestedDeclareModule:\n      \"`declare module` cannot be used inside another `declare module`.\",\n    NestedFlowComment:\n      \"Cannot have a flow comment inside another flow comment.\",\n    OptionalBindingPattern:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n    SpreadVariance: \"Spread properties cannot have variance.\",\n    ThisParamAnnotationRequired:\n      \"A type annotation is required for the `this` parameter.\",\n    ThisParamBannedInConstructor:\n      \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n    ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n    ThisParamMustBeFirst:\n      \"The `this` parameter must be the first function parameter.\",\n    ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n    TypeBeforeInitializer:\n      \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n    TypeCastInPattern:\n      \"The type cast expression is expected to be wrapped with parenthesis.\",\n    UnexpectedExplicitInexactInObject:\n      \"Explicit inexact syntax must appear at the end of an inexact object.\",\n    UnexpectedReservedType: \"Unexpected reserved type %0.\",\n    UnexpectedReservedUnderscore:\n      \"`_` is only allowed as a type argument to call or new.\",\n    UnexpectedSpaceBetweenModuloChecks:\n      \"Spaces between `%` and `checks` are not allowed here.\",\n    UnexpectedSpreadType:\n      \"Spread operator cannot appear in class or interface definitions.\",\n    UnexpectedSubtractionOperand:\n      'Unexpected token, expected \"number\" or \"bigint\".',\n    UnexpectedTokenAfterTypeParameter:\n      \"Expected an arrow function after this type parameter declaration.\",\n    UnexpectedTypeParameterBeforeAsyncArrowFunction:\n      \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n    UnsupportedDeclareExportKind:\n      \"`declare export %0` is not supported. Use `%1` instead.\",\n    UnsupportedStatementInDeclareModule:\n      \"Only declares and type imports are allowed inside declare module.\",\n    UnterminatedFlowComment: \"Unterminated flow-comment.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: State): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): Class<FlowScopeHandler> {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloPos = this.state.start;\n      this.next(); // eat `%`\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloPos + 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(\n              node.value.this.start,\n              FlowErrors.ThisParamBannedInConstructor,\n            );\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.value.this.start,\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n        );\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[],\n      rest: ?N.FlowFunctionTypeParam,\n      _this: ?N.FlowFunctionTypeParam,\n    } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      let _this: ?N.FlowFunctionTypeParam = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const lookahead = this.lookahead();\n        if (lookahead.type === tt.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(this.state.pos, Errors.InvalidIdentifier, fullWord);\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n      isLHS: boolean,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      ...args:\n        | [string, BindingTypes | void]\n        | [\n            string,\n            BindingTypes | void,\n            ?Set<string>,\n            boolean | void,\n            boolean | void,\n          ]\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n        // estree support\n      } else if (\n        // $FlowFixMe flow does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        method.value.params\n      ) {\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(\n            specifier.start,\n            Errors.ImportBindingIsString,\n            firstIdent.value,\n          );\n        }\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          firstIdentLoc,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral();\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      members: {|\n        booleanMembers: Array<N.Node>,\n        numberMembers: Array<N.Node>,\n        stringMembers: Array<N.Node>,\n        defaultedMembers: Array<N.Node>,\n      |},\n      hasUnknownMembers: boolean,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (\n        this.match(tt.name) &&\n        this.state.value === \"of\" &&\n        prevType === tt.name &&\n        this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) ===\n          \"interface\"\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, makeErrorTemplates, ErrorCodes } from \"../../parser/error\";\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = makeErrorTemplates(\n  {\n    AttributeIsEmpty:\n      \"JSX attributes must only be assigned a non-empty expression.\",\n    MissingClosingTagElement:\n      \"Expected corresponding JSX closing tag for <%0>.\",\n    MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n    UnexpectedSequenceExpression:\n      \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n    UnsupportedJsxValue:\n      \"JSX value should be either an expression or a quoted JSX text.\",\n    UnterminatedJsxContent: \"Unterminated JSX contents.\",\n    UnwrappedAdjacentJSXElements:\n      \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\", false);\ntc.j_cTag = new TokContext(\"</tag\", false);\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = function () {\n  this.state.context.push(tc.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(tc.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntt.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n  if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === tc.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              const htmlEntity =\n                ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\";\n              const char = this.input[this.state.pos];\n              this.raise(this.state.pos, {\n                code: ErrorCodes.SyntaxError,\n                reasonCode: \"UnexpectedToken\",\n                template: `Unexpected token \\`${char}\\`. Did you mean \\`${htmlEntity}\\` or \\`{'${char}'}\\`?`,\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              expression.expressions[1].start,\n              JsxErrors.UnexpectedSequenceExpression,\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (this.match(tt.braceL)) {\n        const curContext = this.curContext();\n        if (curContext === tc.j_oTag) {\n          this.state.context.push(tc.braceExpression);\n        } else if (curContext === tc.j_expr) {\n          this.state.context.push(tc.templateQuasi);\n        } else {\n          super.updateContext(prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(tt.slash) && prevType === tt.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(tc.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: string[] = [];\n\n  // enums (which are also in .types)\n  enums: string[] = [];\n\n  // const enums (which are also in .enums and .types)\n  constEnums: string[] = [];\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: string[] = [];\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: string[] = [];\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.push(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].types.indexOf(id.name) === -1 &&\n      this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport {\n  Errors,\n  makeErrorTemplates,\n  type ErrorTemplate,\n  ErrorCodes,\n} from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility;\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = makeErrorTemplates(\n  {\n    AbstractMethodHasImplementation:\n      \"Method '%0' cannot have an implementation because it is marked abstract.\",\n    AccesorCannotDeclareThisParameter:\n      \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n    AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n    ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n    ClassMethodHasReadonly:\n      \"Class methods cannot have the 'readonly' modifier.\",\n    ConstructorHasTypeParameters:\n      \"Type parameters cannot appear on a constructor declaration.\",\n    DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n    DeclareClassFieldHasInitializer:\n      \"Initializers are not allowed in ambient contexts.\",\n    DeclareFunctionHasImplementation:\n      \"An implementation cannot be declared in ambient contexts.\",\n    DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n    DuplicateModifier: \"Duplicate modifier: '%0'.\",\n    EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n    EmptyTypeArguments: \"Type argument list cannot be empty.\",\n    EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n    ExpectedAmbientAfterExportDeclare:\n      \"'export declare' must be followed by an ambient declaration.\",\n    ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n    IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n    IndexSignatureHasAbstract:\n      \"Index signatures cannot have the 'abstract' modifier.\",\n    IndexSignatureHasAccessibility:\n      \"Index signatures cannot have an accessibility modifier ('%0').\",\n    IndexSignatureHasDeclare:\n      \"Index signatures cannot have the 'declare' modifier.\",\n    IndexSignatureHasOverride:\n      \"'override' modifier cannot appear on an index signature.\",\n    IndexSignatureHasStatic:\n      \"Index signatures cannot have the 'static' modifier.\",\n    InvalidModifierOnTypeMember:\n      \"'%0' modifier cannot appear on a type member.\",\n    InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n    InvalidTupleMemberLabel:\n      \"Tuple members must be labeled with a simple identifier.\",\n    MixedLabeledAndUnlabeledElements:\n      \"Tuple members must all have names or all not have names.\",\n    NonAbstractClassHasAbstractMethod:\n      \"Abstract methods can only appear within an abstract class.\",\n    NonClassMethodPropertyHasAbstractModifer:\n      \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n    OptionalTypeBeforeRequired:\n      \"A required element cannot follow an optional element.\",\n    OverrideNotInSubClass:\n      \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n    PatternIsOptional:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    PrivateElementHasAbstract:\n      \"Private elements cannot have the 'abstract' modifier.\",\n    PrivateElementHasAccessibility:\n      \"Private elements cannot have an accessibility modifier ('%0').\",\n    ReadonlyForMethodSignature:\n      \"'readonly' modifier can only appear on a property declaration or index signature.\",\n    SetAccesorCannotHaveOptionalParameter:\n      \"A 'set' accessor cannot have an optional parameter.\",\n    SetAccesorCannotHaveRestParameter:\n      \"A 'set' accessor cannot have rest parameter.\",\n    SetAccesorCannotHaveReturnType:\n      \"A 'set' accessor cannot have a return type annotation.\",\n    StaticBlockCannotHaveModifier:\n      \"Static class blocks cannot have any modifier.\",\n    TypeAnnotationAfterAssign:\n      \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n    TypeImportCannotSpecifyDefaultAndNamed:\n      \"A type-only import can specify a default import or named bindings, but not both.\",\n    UnexpectedParameterModifier:\n      \"A parameter property is only allowed in a constructor implementation.\",\n    UnexpectedReadonly:\n      \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n    UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n    UnexpectedTypeCastInParameter:\n      \"Unexpected type cast in parameter position.\",\n    UnsupportedImportTypeArgument:\n      \"Argument in a type import must be a string literal.\",\n    UnsupportedParameterPropertyKind:\n      \"A parameter property may not be declared using a binding pattern.\",\n    UnsupportedSignatureParameterKind:\n      \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): boolean %checks {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers(\n      modified: {\n        [key: TsModifier]: ?true,\n        accessibility?: N.Accessibility,\n      },\n      allowedModifiers: TsModifier[],\n      disallowedModifiers?: TsModifier[],\n      errorTemplate?: ErrorTemplate,\n    ): void {\n      const enforceOrder = (pos, modifier, before, after) => {\n        if (modifier === before && modified[after]) {\n          this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n        }\n      };\n      const incompatible = (pos, modifier, mod1, mod2) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n        }\n      };\n\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?TsModifier = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n          } else {\n            enforceOrder(startPos, modifier, modifier, \"override\");\n            enforceOrder(startPos, modifier, modifier, \"static\");\n\n            modified.accessibility = modifier;\n          }\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n          } else {\n            enforceOrder(startPos, modifier, \"static\", \"readonly\");\n            enforceOrder(startPos, modifier, \"static\", \"override\");\n            enforceOrder(startPos, modifier, \"override\", \"readonly\");\n            enforceOrder(startPos, modifier, \"abstract\", \"override\");\n\n            incompatible(startPos, modifier, \"declare\", \"override\");\n            incompatible(startPos, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(\n            startPos,\n            // $FlowIgnore\n            errorTemplate,\n            modifier,\n          );\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        if (readonly) {\n          this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.isRelational(\"<\")) {\n          this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        if (method.kind === \"get\") {\n          if (method.parameters.length > 0) {\n            this.raise(this.state.pos, Errors.BadGetterArity);\n            if (this.isThisParam(method.parameters[0])) {\n              this.raise(\n                this.state.pos,\n                TSErrors.AccesorCannotDeclareThisParameter,\n              );\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method.parameters.length !== 1) {\n            this.raise(this.state.pos, Errors.BadSetterArity);\n          } else {\n            const firstParameter = method.parameters[0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(\n                this.state.pos,\n                TSErrors.AccesorCannotDeclareThisParameter,\n              );\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(\n                this.state.pos,\n                TSErrors.SetAccesorCannotHaveOptionalParameter,\n              );\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(\n                this.state.pos,\n                TSErrors.SetAccesorCannotHaveRestParameter,\n              );\n            }\n          }\n          if (method.typeAnnotation) {\n            this.raise(\n              method.typeAnnotation.start,\n              TSErrors.SetAccesorCannotHaveReturnType,\n            );\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        node,\n        [\"readonly\"],\n        [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n        TSErrors.InvalidModifierOnTypeMember,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        // $FlowIgnore\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node: N.TsUnionType | N.TsIntersectionType = this.startNode();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return this.isContextual(\"abstract\") && this.lookahead().type === tt._new;\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript interface declaration\",\n        BIND_TS_INTERFACE,\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(\"intrinsic\") &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript enum declaration\",\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          \"module or namespace declaration\",\n          BIND_TS_NAMESPACE,\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInAmbientContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(\"enum\");\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt.name: {\n            const value = this.state.value;\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, /* next */ true);\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || this.match(tt.name))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (this.match(tt.name)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      // This reads the next token after the `>` too, so do this in the enclosing context.\n      // But be sure not to parse a regex in the jsx expression `<C<number> />`, so set exprAllowed = false\n      this.state.exprAllowed = false;\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      if (allowModifiers !== undefined) {\n        accessibility = this.parseAccessModifier();\n        readonly = !!this.tsParseModifier([\"readonly\"]);\n        if (allowModifiers === false && (accessibility || readonly)) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              if (state.optionalChainMember) {\n                // $FlowIgnore\n                node.optional = false;\n              }\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      node.importKind = \"value\";\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\") &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          TSErrors.TypeImportCannotSpecifyDefaultAndNamed,\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(\"type\") &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        this.parseClass(cls, true, true);\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const invalidModifersForStaticBlocks = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n      ];\n      this.tsParseModifiers(\n        member,\n        invalidModifersForStaticBlocks.concat([\"static\"]),\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        const isStatic = !!member.static;\n        if (isStatic && this.eat(tt.braceL)) {\n          if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n            this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n          }\n          this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        } else {\n          this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n        if ((member: any).override) {\n          this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member: any).abstract) {\n        this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n      }\n\n      if ((member: any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(member.start, TSErrors.OverrideNotInSubClass);\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!refNeedsArrowPos || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refNeedsArrowPos,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        // $FlowIgnore\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      if (\n        isDeclare &&\n        (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(\n          this.state.start,\n          TSErrors.ExpectedAmbientAfterExportDeclare,\n        );\n      }\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isAmbientContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n\n      // $FlowIgnore\n      if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n        this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node), isLHS);\n        case \"TSParameterProperty\":\n          return super.toAssignable(node, isLHS);\n        case \"ParenthesizedExpression\":\n          return this.toAssignableParenthesizedExpression(node, isLHS);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean) {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      contextDescription: string,\n      ...args:\n        | [BindingTypes | void]\n        | [BindingTypes | void, ?Set<string>, boolean | void, boolean | void]\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(expr.parameter, \"parameter property\", ...args);\n          return;\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (\n            /*bindingType*/ !args[0] &&\n            contextDescription !== \"parenthesized expression\" &&\n            !expr.extra?.parenthesized\n          ) {\n            this.raise(expr.start, Errors.InvalidLhs, contextDescription);\n            break;\n          }\n          this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n          return;\n        case \"TSNonNullExpression\":\n          this.checkLVal(expr.expression, contextDescription, ...args);\n          return;\n        default:\n          super.checkLVal(expr, contextDescription, ...args);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(close) {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n      } else {\n        super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      if (this.match(tt.relational)) {\n        const code = this.input.charCodeAt(this.state.start);\n        if (code === charCodes.lessThan || code === charCodes.greaterThan) {\n          this.state.pos -= 1;\n          this.readToken_lt_gt(code);\n        }\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T: N.Class>(node: T, ...args: any[]): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node: any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | typeof undefined {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          (node: N.ClassDeclaration),\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(\"interface\")) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(\n            node.start,\n            TSErrors.NonClassMethodPropertyHasAbstractModifer,\n          );\n          this.next();\n          return this.tsParseInterfaceDeclaration(\n            (node: N.TsInterfaceDeclaration),\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod(...args: any[]) {\n      const method = super.parseMethod(...args);\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(\n            method.start,\n            TSErrors.AbstractMethodHasImplementation,\n            key.type === \"Identifier\"\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n          );\n        }\n      }\n      return method;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\nimport { makeErrorTemplates, ErrorCodes } from \"../parser/error\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nconst PlaceHolderErrors = makeErrorTemplates(\n  {\n    ClassNameIsRequired: \"A class name is required.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context: ?string): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(\"let\")) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVerionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // $FlowIgnore\n    error.missingPlugins = \"doExpressions\"; // so @babel/core can provide better error message\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> =\n  Object.keys(mixinPlugins);\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parser/error\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    estreeParseRegExpLiteral({ pattern, flags }: N.RegExpLiteral): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    estreeParseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral(value: any): N.Node {\n      return this.parseLiteral(value, \"Literal\");\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Record the expression value as in estree mode we want\n      // the stmt to have the real value e.g. (\"use strict\") and\n      // not the raw value e.g. (\"use\\\\x20strict\")\n      this.addExtra(directive.value, \"expressionValue\", value);\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      switch (this.state.type) {\n        case tt.num:\n        case tt.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case tt.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case tt.bigint:\n          return this.estreeParseBigIntLiteral(this.state.value);\n\n        case tt.decimal:\n          return this.estreeParseDecimalLiteral(this.state.value);\n\n        case tt._null:\n          return this.estreeParseLiteral(null);\n\n        case tt._true:\n          return this.estreeParseLiteral(true);\n\n        case tt._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    parseMaybePrivateName(...args: [boolean]): any {\n      const node = super.parseMaybePrivateName(...args);\n      if (\n        node.type === \"PrivateName\" &&\n        this.getPluginOption(\"estree\", \"classFeatures\")\n      ) {\n        return this.convertPrivateNameToPrivateIdentifier(node);\n      }\n      return node;\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = (node: any);\n      delete node.id;\n      node.name = name;\n      node.type = \"PrivateIdentifier\";\n      return node;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n      return node.name;\n    }\n\n    parseLiteral<T: N.Literal>(\n      value: any,\n      type: /*T[\"kind\"]*/ string,\n      startPos?: number,\n      startLoc?: Position,\n    ): T {\n      const node = super.parseLiteral(value, type, startPos, startLoc);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        // $FlowIgnore\n        node.computed = false;\n      }\n      type = \"MethodDefinition\";\n      return this.finishNode(node, type);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = (super.parseClassProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = (super.parseClassPrivateProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n        propertyNode.computed = false;\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node != null && this.isObjectProperty(node)) {\n        this.toAssignable(node.value, isLHS);\n\n        return node;\n      }\n\n      return super.toAssignable(node, isLHS);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, ...args) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, ...args);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          ((node: N.Node): N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\nimport type { ParsingError, ErrorTemplate } from \"../parser/error\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: ParsingError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  context: Array<TokContext> = [ct.braceStatement];\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, ErrorTemplate> = new Map();\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  exportedIdentifiers: Array<string> = [];\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors, type ErrorTemplate } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreak,\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: ErrorTemplate | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  // TODO\n\n  lookahead(): State {\n    const old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach((message, pos) =>\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(pos, message),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext?.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    const override = curContext?.override;\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n      this.state.pos += 2;\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    // '/'\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !exprAllowed) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.finishToken(tt.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.finishToken(tt.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.pos;\n    let escaped, inClass;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.codePointAtPos(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (\n        isIdentifierChar(charCode) ||\n        charCode === charCodes.backslash\n      ) {\n        this.raise(this.state.pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, Errors.StrictOctalLiteral);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos: number, message: ErrorTemplate) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(\n            this.state.pos - 1,\n            Errors.StrictNumericEscape,\n          );\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, Errors.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode: number | void): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode: number | void): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word) || tt.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType: TokenType): boolean {\n    const parent = this.curContext();\n    if (parent === ct.functionExpression || parent === ct.functionStatement) {\n      return true;\n    }\n    if (\n      prevType === tt.colon &&\n      (parent === ct.braceStatement || parent === ct.braceExpression)\n    ) {\n      return !parent.isExpr;\n    }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (\n      prevType === tt._return ||\n      (prevType === tt.name && this.state.exprAllowed)\n    ) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (\n      prevType === tt._else ||\n      prevType === tt.semi ||\n      prevType === tt.eof ||\n      prevType === tt.parenR ||\n      prevType === tt.arrow\n    ) {\n      return true;\n    }\n\n    if (prevType === tt.braceL) {\n      return parent === ct.braceStatement;\n    }\n\n    if (\n      prevType === tt._var ||\n      prevType === tt._const ||\n      prevType === tt.name\n    ) {\n      return false;\n    }\n\n    if (prevType === tt.relational) {\n      // `class C<T> { ... }`\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType: TokenType): void {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === tt.dot || prevType === tt.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if ((update = type.updateContext)) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors, type raiseFunction } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  declare raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { ErrorTemplate, raiseFunction } from \"../parser/error\";\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser/error-message) will be recorded in\nsome expression scopes and thrown later when we know what the ambigous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  errors: Map</* pos */ number, /* message */ ErrorTemplate> = new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(pos: number, template: ErrorTemplate) {\n    this.errors.set(pos, template);\n  }\n  clearDeclarationError(pos: number) {\n    this.errors.delete(pos);\n  }\n  iterateErrors(iterator: (template: ErrorTemplate, pos: number) => void) {\n    this.errors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n  declare raise: raiseFunction;\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(pos: number, template: ErrorTemplate): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, template);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    this.raise(pos, template);\n  }\n\n  /**\n   * Record parenthesized identifier errors\n   *\n   * A parenthesized identifier in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordParenthesizedIdentifierError(\n    pos: number,\n    template: ErrorTemplate,\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError(pos: number, template: ErrorTemplate): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, template);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors((template, pos) => {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(pos, template);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport { Errors, type ErrorTemplate, ErrorCodes } from \"./error\";\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    return (\n      this.input.slice(nameStart, nameEnd) === name &&\n      (nameEnd === this.input.length ||\n        !isIdentifierChar(this.input.charCodeAt(nameEnd)))\n    );\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, template?: ErrorTemplate): void {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.end, this.nextTokenStart()),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(this.state.lastTokEnd, Errors.MissingSemicolon);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message,\n      });\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: ErrorTemplate | TokenType = {\n      code: ErrorCodes.SyntaxError,\n      reasonCode: \"UnexpectedToken\",\n      template: \"Unexpected token\",\n    },\n  ): empty {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`,\n      };\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, SyntaxError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: SyntaxError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint) ||\n      this.match(tt.decimal)\n    );\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/proposal-class-fields/#sec-private-names-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track\n * - **shorthandAssign**: track initializer `=` position when parsing ambiguous\n *   patterns. When we are sure the parsed pattern is a RHS, which means it is\n *   not a pattern, we will throw on this position on invalid assign syntax,\n *   otherwise it will be reset to -1\n * - **doubleProto**: track the duplicate `__proto__` key position when parsing\n *   ambiguous object patterns. When we are sure the parsed pattern is a RHS,\n *   which means it is an object literal, we will throw on this position for\n *   __proto__ redefinition, otherwise it will be reset to -1\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression. If isLHS is `true`, the following cases are allowed:\n                                    `[(a)] = [0]`, `[(a.b)] = [0]`\n\n   * @returns {Node} The converted assignable pattern\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordParenthesizedIdentifierError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(\n            node.start,\n            Errors.InvalidParenthesizedAssignment,\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg, isLHS);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n    isLHS: boolean,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  /**\n   * Verify that if a node is an lval - something that can be assigned to.\n   *\n   * @param {Expression} expr The given node\n   * @param {string} contextDescription The auxiliary context information printed when error is thrown\n   * @param {BindingTypes} [bindingType=BIND_NONE] The desired binding type. If the given node is an identifier and `bindingType` is not\n                                                   BIND_NONE, `checkLVal` will register binding to the parser scope\n                                                   See also src/util/scopeflags.js\n   * @param {?Set<string>} checkClashes An optional string set to check if an identifier name is included. `checkLVal` will add checked\n                                        identifier name to `checkClashes` It is used in tracking duplicates in function parameter lists. If\n                                        it is nullish, `checkLVal` will skip duplicate checks\n   * @param {boolean} [disallowLetBinding] Whether an identifier named \"let\" should be disallowed\n   * @param {boolean} [strictModeChanged=false] Whether an identifier has been parsed in a sloppy context but should be reinterpreted as\n                                                strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @memberof LValParser\n   */\n  checkLVal(\n    expr: Expression,\n    contextDescription: string,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?Set<string>,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\": {\n        const { name } = expr;\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(name, this.inModule)\n            : isStrictBindOnlyReservedWord(name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            name,\n          );\n        }\n\n        if (checkClashes) {\n          if (checkClashes.has(name)) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes.add(name);\n          }\n        }\n        if (disallowLetBinding && name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(name, bindingType, expr.start);\n        }\n        break;\n      }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (this.isObjectMethod(prop)) continue;\n\n          this.checkLVal(\n            prop,\n            \"object destructuring pattern\",\n            bindingType,\n            checkClashes,\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              \"array destructuring pattern\",\n              bindingType,\n              checkClashes,\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          \"assignment pattern\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          \"rest element\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          \"parenthesized expression\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport { types as ct } from \"../tokenizer/context\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n} from \"../util/identifier\";\nimport type { Pos } from \"../util/location\";\nimport { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, SourceTypeModuleErrors } from \"./error\";\n\n/*::\nimport type { SourceType } from \"../options\";\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression & N.ParserOutput {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        // If we have [Yield] production, `yield` will start a YieldExpression thus\n        // regex is allowed following. Otherwise `yield` is an identifier and regex\n        // is disallowed in tt.name.updateContext\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(\n      refExpressionErrors,\n      refNeedsArrowPos,\n    );\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left, /* isLHS */ true);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    refExpressionErrors: ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // FIXME: Disabling this for now since can't seem to get it to play nicely\n    // eslint-disable-next-line no-unused-vars\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (this.prodParam.hasIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n    );\n  }\n\n  checkExponentialAfterUnary(node: N.AwaitExpression | N.UnaryExpression) {\n    if (this.match(tt.exponent)) {\n      this.raise(\n        node.argument.start,\n        Errors.UnexpectedTokenUnaryExponentiation,\n      );\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    refExpressionErrors: ?ExpressionErrors,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    if (\n      this.isContextual(\"module\") &&\n      this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n      !this.hasFollowingLineBreak()\n    ) {\n      return this.parseModuleExpression();\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? this.state.type.startsExpr\n        : this.state.type.startsExpr && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(\n          startPos,\n          this.hasPlugin(\"topLevelAwait\")\n            ? Errors.AwaitNotInAsyncContext\n            : Errors.AwaitNotInAsyncFunction,\n        );\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else if (optional || this.match(tt.bracketL) || this.eat(tt.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(tt.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName =\n      !computed && this.match(tt.privateName) && this.state.value;\n    const property = computed\n      ? this.parseExpression()\n      : privateName\n      ? this.parsePrivateName()\n      : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n    node.property = property;\n\n    if (computed) {\n      this.expect(tt.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        state.maybeAsyncArrow,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    possibleAsyncArrow: boolean,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(\n          false,\n          possibleAsyncArrow ? new ExpressionErrors() : undefined,\n          possibleAsyncArrow ? { start: 0 } : undefined,\n          allowPlaceholder,\n        ),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.state.type === tt.slash) this.readRegexp();\n\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n          if (this.match(tt._function)) {\n            const last = this.state.context.length - 1;\n            if (this.state.context[last] !== ct.functionStatement) {\n              // Since \"async\" is an identifier and normally identifiers\n              // can't be followed by expression, the tokenizer assumes\n              // that \"function\" starts a statement.\n              // Fixing it in the tokenizer would mean tracking not only the\n              // previous token (\"async\"), but also the one before to know\n              // its beforeExpr value.\n              // It's easier and more efficient to adjust the context here.\n              throw new Error(\"Internal error\");\n            }\n            this.state.context[last] = ct.functionExpression;\n\n            this.next();\n            return this.parseFunction(\n              this.startNodeAtNode(id),\n              undefined,\n              true,\n            );\n          } else if (this.match(tt.name)) {\n            // If the next token begins with \"=\", commit to parsing an async\n            // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n            // expensive full-token lookahead on this common path.)\n            if (this.lookaheadCharCode() === charCodes.equalsTo) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            } else {\n              // Otherwise, treat \"async\" as an identifier and let calling code\n              // deal with the current tt.name token.\n              return id;\n            }\n          } else if (this.match(tt._do)) {\n            return this.parseDo(true);\n          }\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          return this.parseArrowExpression(\n            this.startNodeAtNode(id),\n            [id],\n            false,\n          );\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        return this.parseDo(false);\n      }\n\n      case tt.regexp: {\n        const value = this.state.value;\n        node = this.parseLiteral(value.value, \"RegExpLiteral\");\n        node.pattern = value.pattern;\n        node.flags = value.flags;\n        return node;\n      }\n\n      case tt.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case tt.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case tt.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case tt.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case tt._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case tt._true:\n      case tt._false:\n        return this.parseBooleanLiteral();\n\n      case tt.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.privateName: {\n        // https://tc39.es/proposal-private-fields-in-in\n        // RelationalExpression [In, Yield, Await]\n        //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n        const start = this.state.start;\n        const value = this.state.value;\n        node = this.parsePrivateName();\n        if (this.match(tt._in)) {\n          this.expectPlugin(\"privateIn\");\n          this.classScope.usePrivateName(value, node.start);\n        } else if (this.hasPlugin(\"privateIn\")) {\n          this.raise(this.state.start, Errors.PrivateInExpectedIn, value);\n        } else {\n          throw this.unexpected(start);\n        }\n        return node;\n      }\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n      }\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (\n            isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n            lookaheadCh === charCodes.greaterThan // Fragment <>\n          ) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          }\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(id: N.Expression): N.ArrowFunctionExpression {\n    const node = this.startNodeAtNode(id);\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(isAsync: boolean): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral(): N.BooleanLiteral {\n    const node = this.startNode();\n    node.value = this.match(tt._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, Errors.UnexpectedPrivateField);\n      }\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode();\n    const id = this.startNodeAt(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrors.ImportMetaOutsideModule);\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral<T: N.Literal>(\n    value: any,\n    type: /*T[\"kind\"]*/ string,\n    startPos?: number,\n    startLoc?: Position,\n  ): T {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = { start: 0 };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma, refNeedsArrowPos.start || null);\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n            refNeedsArrowPos,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, Errors.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    // The tokenizer uses `braceIsBlock` to detect whether `{` starts a block statement.\n    // If `{` is a block statement, `exprAllowed` will be `true`.\n    // However the tokenizer can not handle edge cases like `0 ? a : { a : 1 } / 2`, here\n    // we update `exprAllowed` when an object-like is parsed.\n    this.state.exprAllowed = false;\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (\n      !isPattern &&\n      !isGenerator &&\n      !containsEsc &&\n      this.maybeAsyncOrAccessorProp(prop)\n    ) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoveredInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      const type = this.state.type;\n      (prop: $FlowFixMe).key =\n        type === tt.num ||\n        type === tt.string ||\n        type === tt.bigint ||\n        type === tt.decimal\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              \"function name\",\n              BIND_OUTSIDE,\n              undefined,\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = new Set();\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        \"function parameter list\",\n        BIND_VAR,\n        allowDuplicates ? null : checkClashes,\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    refNeedsArrowPos: ?Pos,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors, refNeedsArrowPos),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n        refNeedsArrowPos,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (type === tt.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n\n      // `class` and `function` keywords push function-type token context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed\n      // as an identifier such as a property name.\n      const curContext = this.curContext();\n      if (\n        (type === tt._class || type === tt._function) &&\n        (curContext === ct.functionStatement ||\n          curContext === ct.functionExpression)\n      ) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, Errors.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(\n          startLoc,\n          Errors.AwaitBindingIdentifier,\n        );\n      }\n    }\n\n    if (\n      this.scope.inClass &&\n      !this.scope.inNonArrowFunction &&\n      word === \"arguments\"\n    ) {\n      this.raise(startLoc, Errors.ArgumentsInClass);\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(startPos: number, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.AwaitExpressionFormalParameter,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    return (\n      this.hasPrecedingLineBreak() ||\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      this.match(tt.plusMin) ||\n      this.match(tt.parenL) ||\n      this.match(tt.bracketL) ||\n      this.match(tt.backQuote) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      this.match(tt.regexp) ||\n      this.match(tt.slash) ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.YieldInParameter,\n    );\n\n    this.next();\n    if (\n      this.match(tt.semi) ||\n      (!this.match(tt.star) && !this.state.type.startsExpr) ||\n      this.hasPrecedingLineBreak()\n    ) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tt.star);\n      node.argument = this.parseMaybeAssign();\n    }\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, Errors.PipelineTopicUnused);\n      }\n      bodyNode.expression = childExpression;\n    }\n    return this.finishNode(\n      bodyNode,\n      isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\",\n    );\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors, SourceTypeModuleErrors } from \"./error\";\nimport {\n  isIdentifierChar,\n  isIdentifierStart,\n  keywordRelationalOperator,\n} from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport { Position } from \"../util/location\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\n/**\n * Convert tt.privateName to tt.hash + tt.name for backward Babel 7 compat.\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens) {\n  if (!process.env.BABEL_8_BREAKING) {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      if (token.type === tt.privateName) {\n        const { loc, start, value, end } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(\n          i,\n          1,\n          // $FlowIgnore: hacky way to create token\n          new Token({\n            type: tt.hash,\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc,\n          }),\n          // $FlowIgnore: hacky way to create token\n          new Token({\n            type: tt.name,\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end,\n          }),\n        );\n      }\n    }\n  }\n  return tokens;\n}\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    program: N.Program,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n    return this.finishNode<N.Program>(program, \"Program\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context: ?string): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrors.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithUnescapedName =\n      this.match(tt.name) && !this.state.containsEsc;\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(init.start, Errors.ForOfLet);\n      } else if (\n        // `for await (async of []);` is allowed.\n        awaitAt === -1 &&\n        startsWithUnescapedName &&\n        init.type === \"Identifier\" &&\n        init.name === \"async\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(init.start, Errors.ForOfAsync);\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.toAssignable(init, /* isLHS */ true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      \"variable declaration\",\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(hadSuperClass: boolean, oldStrict: boolean): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, Errors.OverrideOnConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const { type, value, start } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(start, Errors.StaticPrototype);\n    }\n\n    if (type === tt.privateName && value === \"constructor\") {\n      this.raise(start, Errors.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n  ) {\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-Initializer\n  parseInitializer(node: N.ClassProperty | N.ClassPrivateProperty): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if ((value === \"async\" && !this.state.containsEsc) || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type === \"StringLiteral\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.value,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseModuleExportName()\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      if (this.match(tt.string)) {\n        node.key = this.parseLiteral<N.StringLiteral>(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      // for now we are only allowing `type` as the only allowed module attribute\n      if (keyName !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          keyName,\n        );\n      }\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          keyName,\n        );\n      }\n      attrNames.add(keyName);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(\\),.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\((.+):(\\d+):(\\d+)\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                var tokens = sanitizedLine.split(/\\s+/).slice(1);\n                // if a location was matched, pass it to extractLocation() otherwise pop the last token\n                var locationParts = this.extractLocation(location ? location[1] : tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","'use strict';\nmodule.exports = require('./globals.json');\n","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","// Copyright 2014, 2015, 2016, 2017, 2018 Simon Lydell\n// License: MIT. (See LICENSE.)\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n})\n\n// This regex comes from regex.coffee, and is inserted here by generate-index.js\n// (run `npm run build`).\nexports.default = /((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g\n\nexports.matchToToken = function(match) {\n  var token = {type: \"invalid\", value: match[0], closed: undefined}\n       if (match[ 1]) token.type = \"string\" , token.closed = !!(match[3] || match[4])\n  else if (match[ 5]) token.type = \"comment\"\n  else if (match[ 6]) token.type = \"comment\", token.closed = !!match[7]\n  else if (match[ 8]) token.type = \"regex\"\n  else if (match[ 9]) token.type = \"number\"\n  else if (match[10]) token.type = \"name\"\n  else if (match[11]) token.type = \"punctuator\"\n  else if (match[12]) token.type = \"whitespace\"\n  return token\n}\n","'use strict';\n\nconst object = {};\nconst hasOwnProperty = object.hasOwnProperty;\nconst forOwn = (object, callback) => {\n\tfor (const key in object) {\n\t\tif (hasOwnProperty.call(object, key)) {\n\t\t\tcallback(key, object[key]);\n\t\t}\n\t}\n};\n\nconst extend = (destination, source) => {\n\tif (!source) {\n\t\treturn destination;\n\t}\n\tforOwn(source, (key, value) => {\n\t\tdestination[key] = value;\n\t});\n\treturn destination;\n};\n\nconst forEach = (array, callback) => {\n\tconst length = array.length;\n\tlet index = -1;\n\twhile (++index < length) {\n\t\tcallback(array[index]);\n\t}\n};\n\nconst toString = object.toString;\nconst isArray = Array.isArray;\nconst isBuffer = Buffer.isBuffer;\nconst isObject = (value) => {\n\t// This is a very simple check, but it’s good enough for what we need.\n\treturn toString.call(value) == '[object Object]';\n};\nconst isString = (value) => {\n\treturn typeof value == 'string' ||\n\t\ttoString.call(value) == '[object String]';\n};\nconst isNumber = (value) => {\n\treturn typeof value == 'number' ||\n\t\ttoString.call(value) == '[object Number]';\n};\nconst isFunction = (value) => {\n\treturn typeof value == 'function';\n};\nconst isMap = (value) => {\n\treturn toString.call(value) == '[object Map]';\n};\nconst isSet = (value) => {\n\treturn toString.call(value) == '[object Set]';\n};\n\n/*--------------------------------------------------------------------------*/\n\n// https://mathiasbynens.be/notes/javascript-escapes#single\nconst singleEscapes = {\n\t'\"': '\\\\\"',\n\t'\\'': '\\\\\\'',\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t'\n\t// `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n\t// '\\v': '\\\\x0B'\n};\nconst regexSingleEscape = /[\"'\\\\\\b\\f\\n\\r\\t]/;\n\nconst regexDigit = /[0-9]/;\nconst regexWhitelist = /[ !#-&\\(-\\[\\]-_a-~]/;\n\nconst jsesc = (argument, options) => {\n\tconst increaseIndentation = () => {\n\t\toldIndent = indent;\n\t\t++options.indentLevel;\n\t\tindent = options.indent.repeat(options.indentLevel)\n\t};\n\t// Handle options\n\tconst defaults = {\n\t\t'escapeEverything': false,\n\t\t'minimal': false,\n\t\t'isScriptContext': false,\n\t\t'quotes': 'single',\n\t\t'wrap': false,\n\t\t'es6': false,\n\t\t'json': false,\n\t\t'compact': true,\n\t\t'lowercaseHex': false,\n\t\t'numbers': 'decimal',\n\t\t'indent': '\\t',\n\t\t'indentLevel': 0,\n\t\t'__inline1__': false,\n\t\t'__inline2__': false\n\t};\n\tconst json = options && options.json;\n\tif (json) {\n\t\tdefaults.quotes = 'double';\n\t\tdefaults.wrap = true;\n\t}\n\toptions = extend(defaults, options);\n\tif (\n\t\toptions.quotes != 'single' &&\n\t\toptions.quotes != 'double' &&\n\t\toptions.quotes != 'backtick'\n\t) {\n\t\toptions.quotes = 'single';\n\t}\n\tconst quote = options.quotes == 'double' ?\n\t\t'\"' :\n\t\t(options.quotes == 'backtick' ?\n\t\t\t'`' :\n\t\t\t'\\''\n\t\t);\n\tconst compact = options.compact;\n\tconst lowercaseHex = options.lowercaseHex;\n\tlet indent = options.indent.repeat(options.indentLevel);\n\tlet oldIndent = '';\n\tconst inline1 = options.__inline1__;\n\tconst inline2 = options.__inline2__;\n\tconst newLine = compact ? '' : '\\n';\n\tlet result;\n\tlet isEmpty = true;\n\tconst useBinNumbers = options.numbers == 'binary';\n\tconst useOctNumbers = options.numbers == 'octal';\n\tconst useDecNumbers = options.numbers == 'decimal';\n\tconst useHexNumbers = options.numbers == 'hexadecimal';\n\n\tif (json && argument && isFunction(argument.toJSON)) {\n\t\targument = argument.toJSON();\n\t}\n\n\tif (!isString(argument)) {\n\t\tif (isMap(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Map()';\n\t\t\t}\n\t\t\tif (!compact) {\n\t\t\t\toptions.__inline1__ = true;\n\t\t\t\toptions.__inline2__ = false;\n\t\t\t}\n\t\t\treturn 'new Map(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isSet(argument)) {\n\t\t\tif (argument.size == 0) {\n\t\t\t\treturn 'new Set()';\n\t\t\t}\n\t\t\treturn 'new Set(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isBuffer(argument)) {\n\t\t\tif (argument.length == 0) {\n\t\t\t\treturn 'Buffer.from([])';\n\t\t\t}\n\t\t\treturn 'Buffer.from(' + jsesc(Array.from(argument), options) + ')';\n\t\t}\n\t\tif (isArray(argument)) {\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tif (inline1) {\n\t\t\t\toptions.__inline1__ = false;\n\t\t\t\toptions.__inline2__ = true;\n\t\t\t}\n\t\t\tif (!inline2) {\n\t\t\t\tincreaseIndentation();\n\t\t\t}\n\t\t\tforEach(argument, (value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tif (inline2) {\n\t\t\t\t\toptions.__inline2__ = false;\n\t\t\t\t}\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact || inline2 ? '' : indent) +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\tif (inline2) {\n\t\t\t\treturn '[' + result.join(', ') + ']';\n\t\t\t}\n\t\t\treturn '[' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + ']';\n\t\t} else if (isNumber(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// Some number values (e.g. `Infinity`) cannot be represented in JSON.\n\t\t\t\treturn JSON.stringify(argument);\n\t\t\t}\n\t\t\tif (useDecNumbers) {\n\t\t\t\treturn String(argument);\n\t\t\t}\n\t\t\tif (useHexNumbers) {\n\t\t\t\tlet hexadecimal = argument.toString(16);\n\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t}\n\t\t\t\treturn '0x' + hexadecimal;\n\t\t\t}\n\t\t\tif (useBinNumbers) {\n\t\t\t\treturn '0b' + argument.toString(2);\n\t\t\t}\n\t\t\tif (useOctNumbers) {\n\t\t\t\treturn '0o' + argument.toString(8);\n\t\t\t}\n\t\t} else if (!isObject(argument)) {\n\t\t\tif (json) {\n\t\t\t\t// For some values (e.g. `undefined`, `function` objects),\n\t\t\t\t// `JSON.stringify(value)` returns `undefined` (which isn’t valid\n\t\t\t\t// JSON) instead of `'null'`.\n\t\t\t\treturn JSON.stringify(argument) || 'null';\n\t\t\t}\n\t\t\treturn String(argument);\n\t\t} else { // it’s an object\n\t\t\tresult = [];\n\t\t\toptions.wrap = true;\n\t\t\tincreaseIndentation();\n\t\t\tforOwn(argument, (key, value) => {\n\t\t\t\tisEmpty = false;\n\t\t\t\tresult.push(\n\t\t\t\t\t(compact ? '' : indent) +\n\t\t\t\t\tjsesc(key, options) + ':' +\n\t\t\t\t\t(compact ? '' : ' ') +\n\t\t\t\t\tjsesc(value, options)\n\t\t\t\t);\n\t\t\t});\n\t\t\tif (isEmpty) {\n\t\t\t\treturn '{}';\n\t\t\t}\n\t\t\treturn '{' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t(compact ? '' : oldIndent) + '}';\n\t\t}\n\t}\n\n\tconst string = argument;\n\t// Loop over each code unit in the string and escape it\n\tlet index = -1;\n\tconst length = string.length;\n\tresult = '';\n\twhile (++index < length) {\n\t\tconst character = string.charAt(index);\n\t\tif (options.es6) {\n\t\t\tconst first = string.charCodeAt(index);\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tlength > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tconst second = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\tconst codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t\tlet hexadecimal = codePoint.toString(16);\n\t\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t\t}\n\t\t\t\t\tresult += '\\\\u{' + hexadecimal + '}';\n\t\t\t\t\t++index;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!options.escapeEverything) {\n\t\t\tif (regexWhitelist.test(character)) {\n\t\t\t\t// It’s a printable ASCII character that is not `\"`, `'` or `\\`,\n\t\t\t\t// so don’t escape it.\n\t\t\t\tresult += character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (character == '\"') {\n\t\t\t\tresult += quote == character ? '\\\\\"' : character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (character == '`') {\n\t\t\t\tresult += quote == character ? '\\\\`' : character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (character == '\\'') {\n\t\t\t\tresult += quote == character ? '\\\\\\'' : character;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tcharacter == '\\0' &&\n\t\t\t!json &&\n\t\t\t!regexDigit.test(string.charAt(index + 1))\n\t\t) {\n\t\t\tresult += '\\\\0';\n\t\t\tcontinue;\n\t\t}\n\t\tif (regexSingleEscape.test(character)) {\n\t\t\t// no need for a `hasOwnProperty` check here\n\t\t\tresult += singleEscapes[character];\n\t\t\tcontinue;\n\t\t}\n\t\tconst charCode = character.charCodeAt(0);\n\t\tif (options.minimal && charCode != 0x2028 && charCode != 0x2029) {\n\t\t\tresult += character;\n\t\t\tcontinue;\n\t\t}\n\t\tlet hexadecimal = charCode.toString(16);\n\t\tif (!lowercaseHex) {\n\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t}\n\t\tconst longhand = hexadecimal.length > 2 || json;\n\t\tconst escaped = '\\\\' + (longhand ? 'u' : 'x') +\n\t\t\t('0000' + hexadecimal).slice(longhand ? -4 : -2);\n\t\tresult += escaped;\n\t\tcontinue;\n\t}\n\tif (options.wrap) {\n\t\tresult = quote + result + quote;\n\t}\n\tif (quote == '`') {\n\t\tresult = result.replace(/\\$\\{/g, '\\\\\\$\\{');\n\t}\n\tif (options.isScriptContext) {\n\t\t// https://mathiasbynens.be/notes/etago\n\t\treturn result\n\t\t\t.replace(/<\\/(script|style)/gi, '<\\\\/$1')\n\t\t\t.replace(/<!--/g, json ? '\\\\u003C!--' : '\\\\x3C!--');\n\t}\n\treturn result;\n};\n\njsesc.version = '2.5.2';\n\nmodule.exports = jsesc;\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","let tty = require(\"tty\")\n\nlet isColorSupported =\n\t!(\"NO_COLOR\" in process.env || process.argv.includes(\"--no-color\")) &&\n\t(\"FORCE_COLOR\" in process.env ||\n\t\tprocess.argv.includes(\"--color\") ||\n\t\tprocess.platform === \"win32\" ||\n\t\t(tty.isatty(1) && process.env.TERM !== \"dumb\") ||\n\t\t\"CI\" in process.env)\n\nlet formatter =\n\t(open, close, replace = open) =>\n\tinput => {\n\t\tlet string = \"\" + input\n\t\tlet index = string.indexOf(close, open.length)\n\t\treturn ~index\n\t\t\t? open + replaceClose(string, close, replace, index) + close\n\t\t\t: open + string + close\n\t}\n\nlet replaceClose = (string, close, replace, index) => {\n\tlet start = string.substring(0, index) + replace\n\tlet end = string.substring(index + close.length)\n\tlet nextIndex = end.indexOf(close)\n\treturn ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end\n}\n\nlet createColors = (enabled = isColorSupported) => ({\n\tisColorSupported: enabled,\n\treset: enabled ? s => `\\x1b[0m${s}\\x1b[0m` : String,\n\tbold: enabled ? formatter(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\") : String,\n\tdim: enabled ? formatter(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\") : String,\n\titalic: enabled ? formatter(\"\\x1b[3m\", \"\\x1b[23m\") : String,\n\tunderline: enabled ? formatter(\"\\x1b[4m\", \"\\x1b[24m\") : String,\n\tinverse: enabled ? formatter(\"\\x1b[7m\", \"\\x1b[27m\") : String,\n\thidden: enabled ? formatter(\"\\x1b[8m\", \"\\x1b[28m\") : String,\n\tstrikethrough: enabled ? formatter(\"\\x1b[9m\", \"\\x1b[29m\") : String,\n\tblack: enabled ? formatter(\"\\x1b[30m\", \"\\x1b[39m\") : String,\n\tred: enabled ? formatter(\"\\x1b[31m\", \"\\x1b[39m\") : String,\n\tgreen: enabled ? formatter(\"\\x1b[32m\", \"\\x1b[39m\") : String,\n\tyellow: enabled ? formatter(\"\\x1b[33m\", \"\\x1b[39m\") : String,\n\tblue: enabled ? formatter(\"\\x1b[34m\", \"\\x1b[39m\") : String,\n\tmagenta: enabled ? formatter(\"\\x1b[35m\", \"\\x1b[39m\") : String,\n\tcyan: enabled ? formatter(\"\\x1b[36m\", \"\\x1b[39m\") : String,\n\twhite: enabled ? formatter(\"\\x1b[37m\", \"\\x1b[39m\") : String,\n\tgray: enabled ? formatter(\"\\x1b[90m\", \"\\x1b[39m\") : String,\n\tbgBlack: enabled ? formatter(\"\\x1b[40m\", \"\\x1b[49m\") : String,\n\tbgRed: enabled ? formatter(\"\\x1b[41m\", \"\\x1b[49m\") : String,\n\tbgGreen: enabled ? formatter(\"\\x1b[42m\", \"\\x1b[49m\") : String,\n\tbgYellow: enabled ? formatter(\"\\x1b[43m\", \"\\x1b[49m\") : String,\n\tbgBlue: enabled ? formatter(\"\\x1b[44m\", \"\\x1b[49m\") : String,\n\tbgMagenta: enabled ? formatter(\"\\x1b[45m\", \"\\x1b[49m\") : String,\n\tbgCyan: enabled ? formatter(\"\\x1b[46m\", \"\\x1b[49m\") : String,\n\tbgWhite: enabled ? formatter(\"\\x1b[47m\", \"\\x1b[49m\") : String,\n})\n\nmodule.exports = createColors()\nmodule.exports.createColors = createColors\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount /*, ...nodes */) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 2; i < arguments.length; i++) {\n    walker = insert(this, walker, arguments[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst SPACES_RE = /^[ \\t]+$/;\n\nclass Buffer {\n  constructor(map) {\n    this._map = null;\n    this._buf = [];\n    this._last = \"\";\n    this._queue = [];\n    this._position = {\n      line: 1,\n      column: 0\n    };\n    this._sourcePosition = {\n      identifierName: null,\n      line: null,\n      column: null,\n      filename: null\n    };\n    this._disallowedPop = null;\n    this._map = map;\n  }\n\n  get() {\n    this._flush();\n\n    const map = this._map;\n    const result = {\n      code: this._buf.join(\"\").trimRight(),\n      map: null,\n      rawMappings: map == null ? void 0 : map.getRawMappings()\n    };\n\n    if (map) {\n      Object.defineProperty(result, \"map\", {\n        configurable: true,\n        enumerable: true,\n\n        get() {\n          return this.map = map.get();\n        },\n\n        set(value) {\n          Object.defineProperty(this, \"map\", {\n            value,\n            writable: true\n          });\n        }\n\n      });\n    }\n\n    return result;\n  }\n\n  append(str) {\n    this._flush();\n\n    const {\n      line,\n      column,\n      filename,\n      identifierName,\n      force\n    } = this._sourcePosition;\n\n    this._append(str, line, column, identifierName, filename, force);\n  }\n\n  queue(str) {\n    if (str === \"\\n\") {\n      while (this._queue.length > 0 && SPACES_RE.test(this._queue[0][0])) {\n        this._queue.shift();\n      }\n    }\n\n    const {\n      line,\n      column,\n      filename,\n      identifierName,\n      force\n    } = this._sourcePosition;\n\n    this._queue.unshift([str, line, column, identifierName, filename, force]);\n  }\n\n  _flush() {\n    let item;\n\n    while (item = this._queue.pop()) this._append(...item);\n  }\n\n  _append(str, line, column, identifierName, filename, force) {\n    this._buf.push(str);\n\n    this._last = str[str.length - 1];\n    let i = str.indexOf(\"\\n\");\n    let last = 0;\n\n    if (i !== 0) {\n      this._mark(line, column, identifierName, filename, force);\n    }\n\n    while (i !== -1) {\n      this._position.line++;\n      this._position.column = 0;\n      last = i + 1;\n\n      if (last < str.length) {\n        this._mark(++line, 0, identifierName, filename, force);\n      }\n\n      i = str.indexOf(\"\\n\", last);\n    }\n\n    this._position.column += str.length - last;\n  }\n\n  _mark(line, column, identifierName, filename, force) {\n    var _this$_map;\n\n    (_this$_map = this._map) == null ? void 0 : _this$_map.mark(this._position.line, this._position.column, line, column, identifierName, filename, force);\n  }\n\n  removeTrailingNewline() {\n    if (this._queue.length > 0 && this._queue[0][0] === \"\\n\") {\n      this._queue.shift();\n    }\n  }\n\n  removeLastSemicolon() {\n    if (this._queue.length > 0 && this._queue[0][0] === \";\") {\n      this._queue.shift();\n    }\n  }\n\n  endsWith(suffix) {\n    if (suffix.length === 1) {\n      let last;\n\n      if (this._queue.length > 0) {\n        const str = this._queue[0][0];\n        last = str[str.length - 1];\n      } else {\n        last = this._last;\n      }\n\n      return last === suffix;\n    }\n\n    const end = this._last + this._queue.reduce((acc, item) => item[0] + acc, \"\");\n\n    if (suffix.length <= end.length) {\n      return end.slice(-suffix.length) === suffix;\n    }\n\n    return false;\n  }\n\n  hasContent() {\n    return this._queue.length > 0 || !!this._last;\n  }\n\n  exactSource(loc, cb) {\n    this.source(\"start\", loc, true);\n    cb();\n    this.source(\"end\", loc);\n\n    this._disallowPop(\"start\", loc);\n  }\n\n  source(prop, loc, force) {\n    if (prop && !loc) return;\n\n    this._normalizePosition(prop, loc, this._sourcePosition, force);\n  }\n\n  withSource(prop, loc, cb) {\n    if (!this._map) return cb();\n    const originalLine = this._sourcePosition.line;\n    const originalColumn = this._sourcePosition.column;\n    const originalFilename = this._sourcePosition.filename;\n    const originalIdentifierName = this._sourcePosition.identifierName;\n    this.source(prop, loc);\n    cb();\n\n    if ((!this._sourcePosition.force || this._sourcePosition.line !== originalLine || this._sourcePosition.column !== originalColumn || this._sourcePosition.filename !== originalFilename) && (!this._disallowedPop || this._disallowedPop.line !== originalLine || this._disallowedPop.column !== originalColumn || this._disallowedPop.filename !== originalFilename)) {\n      this._sourcePosition.line = originalLine;\n      this._sourcePosition.column = originalColumn;\n      this._sourcePosition.filename = originalFilename;\n      this._sourcePosition.identifierName = originalIdentifierName;\n      this._sourcePosition.force = false;\n      this._disallowedPop = null;\n    }\n  }\n\n  _disallowPop(prop, loc) {\n    if (prop && !loc) return;\n    this._disallowedPop = this._normalizePosition(prop, loc);\n  }\n\n  _normalizePosition(prop, loc, targetObj, force) {\n    const pos = loc ? loc[prop] : null;\n\n    if (targetObj === undefined) {\n      targetObj = {\n        identifierName: null,\n        line: null,\n        column: null,\n        filename: null,\n        force: false\n      };\n    }\n\n    const origLine = targetObj.line;\n    const origColumn = targetObj.column;\n    const origFilename = targetObj.filename;\n    targetObj.identifierName = prop === \"start\" && (loc == null ? void 0 : loc.identifierName) || null;\n    targetObj.line = pos == null ? void 0 : pos.line;\n    targetObj.column = pos == null ? void 0 : pos.column;\n    targetObj.filename = loc == null ? void 0 : loc.filename;\n\n    if (force || targetObj.line !== origLine || targetObj.column !== origColumn || targetObj.filename !== origFilename) {\n      targetObj.force = force;\n    }\n\n    return targetObj;\n  }\n\n  getCurrentColumn() {\n    const extra = this._queue.reduce((acc, item) => item[0] + acc, \"\");\n\n    const lastIndex = extra.lastIndexOf(\"\\n\");\n    return lastIndex === -1 ? this._position.column + extra.length : extra.length - 1 - lastIndex;\n  }\n\n  getCurrentLine() {\n    const extra = this._queue.reduce((acc, item) => item[0] + acc, \"\");\n\n    let count = 0;\n\n    for (let i = 0; i < extra.length; i++) {\n      if (extra[i] === \"\\n\") count++;\n    }\n\n    return this._position.line + count;\n  }\n\n}\n\nexports.default = Buffer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.File = File;\nexports.Program = Program;\nexports.BlockStatement = BlockStatement;\nexports.Noop = Noop;\nexports.Directive = Directive;\nexports.DirectiveLiteral = DirectiveLiteral;\nexports.InterpreterDirective = InterpreterDirective;\nexports.Placeholder = Placeholder;\n\nfunction File(node) {\n  if (node.program) {\n    this.print(node.program.interpreter, node);\n  }\n\n  this.print(node.program, node);\n}\n\nfunction Program(node) {\n  this.printInnerComments(node, false);\n  this.printSequence(node.directives, node);\n  if (node.directives && node.directives.length) this.newline();\n  this.printSequence(node.body, node);\n}\n\nfunction BlockStatement(node) {\n  var _node$directives;\n\n  this.token(\"{\");\n  this.printInnerComments(node);\n  const hasDirectives = (_node$directives = node.directives) == null ? void 0 : _node$directives.length;\n\n  if (node.body.length || hasDirectives) {\n    this.newline();\n    this.printSequence(node.directives, node, {\n      indent: true\n    });\n    if (hasDirectives) this.newline();\n    this.printSequence(node.body, node, {\n      indent: true\n    });\n    this.removeTrailingNewline();\n    this.source(\"end\", node.loc);\n    if (!this.endsWith(\"\\n\")) this.newline();\n    this.rightBrace();\n  } else {\n    this.source(\"end\", node.loc);\n    this.token(\"}\");\n  }\n}\n\nfunction Noop() {}\n\nfunction Directive(node) {\n  this.print(node.value, node);\n  this.semicolon();\n}\n\nconst unescapedSingleQuoteRE = /(?:^|[^\\\\])(?:\\\\\\\\)*'/;\nconst unescapedDoubleQuoteRE = /(?:^|[^\\\\])(?:\\\\\\\\)*\"/;\n\nfunction DirectiveLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (raw != null) {\n    this.token(raw);\n    return;\n  }\n\n  const {\n    value\n  } = node;\n\n  if (!unescapedDoubleQuoteRE.test(value)) {\n    this.token(`\"${value}\"`);\n  } else if (!unescapedSingleQuoteRE.test(value)) {\n    this.token(`'${value}'`);\n  } else {\n    throw new Error(\"Malformed AST: it is not possible to print a directive containing\" + \" both unescaped single and double quotes.\");\n  }\n}\n\nfunction InterpreterDirective(node) {\n  this.token(`#!${node.value}\\n`);\n}\n\nfunction Placeholder(node) {\n  this.token(\"%%\");\n  this.print(node.name);\n  this.token(\"%%\");\n\n  if (node.expectedNode === \"Statement\") {\n    this.semicolon();\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClassExpression = exports.ClassDeclaration = ClassDeclaration;\nexports.ClassBody = ClassBody;\nexports.ClassProperty = ClassProperty;\nexports.ClassPrivateProperty = ClassPrivateProperty;\nexports.ClassMethod = ClassMethod;\nexports.ClassPrivateMethod = ClassPrivateMethod;\nexports._classMethodHead = _classMethodHead;\nexports.StaticBlock = StaticBlock;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ClassDeclaration(node, parent) {\n  if (!this.format.decoratorsBeforeExport || !t.isExportDefaultDeclaration(parent) && !t.isExportNamedDeclaration(parent)) {\n    this.printJoin(node.decorators, node);\n  }\n\n  if (node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (node.abstract) {\n    this.word(\"abstract\");\n    this.space();\n  }\n\n  this.word(\"class\");\n\n  if (node.id) {\n    this.space();\n    this.print(node.id, node);\n  }\n\n  this.print(node.typeParameters, node);\n\n  if (node.superClass) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.print(node.superClass, node);\n    this.print(node.superTypeParameters, node);\n  }\n\n  if (node.implements) {\n    this.space();\n    this.word(\"implements\");\n    this.space();\n    this.printList(node.implements, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ClassBody(node) {\n  this.token(\"{\");\n  this.printInnerComments(node);\n\n  if (node.body.length === 0) {\n    this.token(\"}\");\n  } else {\n    this.newline();\n    this.indent();\n    this.printSequence(node.body, node);\n    this.dedent();\n    if (!this.endsWith(\"\\n\")) this.newline();\n    this.rightBrace();\n  }\n}\n\nfunction ClassProperty(node) {\n  this.printJoin(node.decorators, node);\n  this.tsPrintClassMemberModifiers(node, true);\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(node.key, node);\n    this.token(\"]\");\n  } else {\n    this._variance(node);\n\n    this.print(node.key, node);\n  }\n\n  if (node.optional) {\n    this.token(\"?\");\n  }\n\n  if (node.definite) {\n    this.token(\"!\");\n  }\n\n  this.print(node.typeAnnotation, node);\n\n  if (node.value) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.value, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ClassPrivateProperty(node) {\n  this.printJoin(node.decorators, node);\n\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.print(node.key, node);\n  this.print(node.typeAnnotation, node);\n\n  if (node.value) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.value, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ClassMethod(node) {\n  this._classMethodHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ClassPrivateMethod(node) {\n  this._classMethodHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction _classMethodHead(node) {\n  this.printJoin(node.decorators, node);\n  this.tsPrintClassMemberModifiers(node, false);\n\n  this._methodHead(node);\n}\n\nfunction StaticBlock(node) {\n  this.word(\"static\");\n  this.space();\n  this.token(\"{\");\n\n  if (node.body.length === 0) {\n    this.token(\"}\");\n  } else {\n    this.newline();\n    this.printSequence(node.body, node, {\n      indent: true\n    });\n    this.rightBrace();\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnaryExpression = UnaryExpression;\nexports.DoExpression = DoExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.NewExpression = NewExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ThisExpression = ThisExpression;\nexports.Super = Super;\nexports.Decorator = Decorator;\nexports.OptionalMemberExpression = OptionalMemberExpression;\nexports.OptionalCallExpression = OptionalCallExpression;\nexports.CallExpression = CallExpression;\nexports.Import = Import;\nexports.EmptyStatement = EmptyStatement;\nexports.ExpressionStatement = ExpressionStatement;\nexports.AssignmentPattern = AssignmentPattern;\nexports.LogicalExpression = exports.BinaryExpression = exports.AssignmentExpression = AssignmentExpression;\nexports.BindExpression = BindExpression;\nexports.MemberExpression = MemberExpression;\nexports.MetaProperty = MetaProperty;\nexports.PrivateName = PrivateName;\nexports.V8IntrinsicIdentifier = V8IntrinsicIdentifier;\nexports.AwaitExpression = exports.YieldExpression = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar n = _interopRequireWildcard(require(\"../node\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction UnaryExpression(node) {\n  if (node.operator === \"void\" || node.operator === \"delete\" || node.operator === \"typeof\" || node.operator === \"throw\") {\n    this.word(node.operator);\n    this.space();\n  } else {\n    this.token(node.operator);\n  }\n\n  this.print(node.argument, node);\n}\n\nfunction DoExpression(node) {\n  this.word(\"do\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ParenthesizedExpression(node) {\n  this.token(\"(\");\n  this.print(node.expression, node);\n  this.token(\")\");\n}\n\nfunction UpdateExpression(node) {\n  if (node.prefix) {\n    this.token(node.operator);\n    this.print(node.argument, node);\n  } else {\n    this.startTerminatorless(true);\n    this.print(node.argument, node);\n    this.endTerminatorless();\n    this.token(node.operator);\n  }\n}\n\nfunction ConditionalExpression(node) {\n  this.print(node.test, node);\n  this.space();\n  this.token(\"?\");\n  this.space();\n  this.print(node.consequent, node);\n  this.space();\n  this.token(\":\");\n  this.space();\n  this.print(node.alternate, node);\n}\n\nfunction NewExpression(node, parent) {\n  this.word(\"new\");\n  this.space();\n  this.print(node.callee, node);\n\n  if (this.format.minified && node.arguments.length === 0 && !node.optional && !t.isCallExpression(parent, {\n    callee: node\n  }) && !t.isMemberExpression(parent) && !t.isNewExpression(parent)) {\n    return;\n  }\n\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.token(\"(\");\n  this.printList(node.arguments, node);\n  this.token(\")\");\n}\n\nfunction SequenceExpression(node) {\n  this.printList(node.expressions, node);\n}\n\nfunction ThisExpression() {\n  this.word(\"this\");\n}\n\nfunction Super() {\n  this.word(\"super\");\n}\n\nfunction Decorator(node) {\n  this.token(\"@\");\n  this.print(node.expression, node);\n  this.newline();\n}\n\nfunction OptionalMemberExpression(node) {\n  this.print(node.object, node);\n\n  if (!node.computed && t.isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  let computed = node.computed;\n\n  if (t.isLiteral(node.property) && typeof node.property.value === \"number\") {\n    computed = true;\n  }\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  if (computed) {\n    this.token(\"[\");\n    this.print(node.property, node);\n    this.token(\"]\");\n  } else {\n    if (!node.optional) {\n      this.token(\".\");\n    }\n\n    this.print(node.property, node);\n  }\n}\n\nfunction OptionalCallExpression(node) {\n  this.print(node.callee, node);\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n\n  if (node.optional) {\n    this.token(\"?.\");\n  }\n\n  this.token(\"(\");\n  this.printList(node.arguments, node);\n  this.token(\")\");\n}\n\nfunction CallExpression(node) {\n  this.print(node.callee, node);\n  this.print(node.typeArguments, node);\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n  this.printList(node.arguments, node);\n  this.token(\")\");\n}\n\nfunction Import() {\n  this.word(\"import\");\n}\n\nfunction buildYieldAwait(keyword) {\n  return function (node) {\n    this.word(keyword);\n\n    if (node.delegate) {\n      this.token(\"*\");\n    }\n\n    if (node.argument) {\n      this.space();\n      const terminatorState = this.startTerminatorless();\n      this.print(node.argument, node);\n      this.endTerminatorless(terminatorState);\n    }\n  };\n}\n\nconst YieldExpression = buildYieldAwait(\"yield\");\nexports.YieldExpression = YieldExpression;\nconst AwaitExpression = buildYieldAwait(\"await\");\nexports.AwaitExpression = AwaitExpression;\n\nfunction EmptyStatement() {\n  this.semicolon(true);\n}\n\nfunction ExpressionStatement(node) {\n  this.print(node.expression, node);\n  this.semicolon();\n}\n\nfunction AssignmentPattern(node) {\n  this.print(node.left, node);\n  if (node.left.optional) this.token(\"?\");\n  this.print(node.left.typeAnnotation, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.right, node);\n}\n\nfunction AssignmentExpression(node, parent) {\n  const parens = this.inForStatementInitCounter && node.operator === \"in\" && !n.needsParens(node, parent);\n\n  if (parens) {\n    this.token(\"(\");\n  }\n\n  this.print(node.left, node);\n  this.space();\n\n  if (node.operator === \"in\" || node.operator === \"instanceof\") {\n    this.word(node.operator);\n  } else {\n    this.token(node.operator);\n  }\n\n  this.space();\n  this.print(node.right, node);\n\n  if (parens) {\n    this.token(\")\");\n  }\n}\n\nfunction BindExpression(node) {\n  this.print(node.object, node);\n  this.token(\"::\");\n  this.print(node.callee, node);\n}\n\nfunction MemberExpression(node) {\n  this.print(node.object, node);\n\n  if (!node.computed && t.isMemberExpression(node.property)) {\n    throw new TypeError(\"Got a MemberExpression for MemberExpression property\");\n  }\n\n  let computed = node.computed;\n\n  if (t.isLiteral(node.property) && typeof node.property.value === \"number\") {\n    computed = true;\n  }\n\n  if (computed) {\n    this.token(\"[\");\n    this.print(node.property, node);\n    this.token(\"]\");\n  } else {\n    this.token(\".\");\n    this.print(node.property, node);\n  }\n}\n\nfunction MetaProperty(node) {\n  this.print(node.meta, node);\n  this.token(\".\");\n  this.print(node.property, node);\n}\n\nfunction PrivateName(node) {\n  this.token(\"#\");\n  this.print(node.id, node);\n}\n\nfunction V8IntrinsicIdentifier(node) {\n  this.token(\"%\");\n  this.word(node.name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnyTypeAnnotation = AnyTypeAnnotation;\nexports.ArrayTypeAnnotation = ArrayTypeAnnotation;\nexports.BooleanTypeAnnotation = BooleanTypeAnnotation;\nexports.BooleanLiteralTypeAnnotation = BooleanLiteralTypeAnnotation;\nexports.NullLiteralTypeAnnotation = NullLiteralTypeAnnotation;\nexports.DeclareClass = DeclareClass;\nexports.DeclareFunction = DeclareFunction;\nexports.InferredPredicate = InferredPredicate;\nexports.DeclaredPredicate = DeclaredPredicate;\nexports.DeclareInterface = DeclareInterface;\nexports.DeclareModule = DeclareModule;\nexports.DeclareModuleExports = DeclareModuleExports;\nexports.DeclareTypeAlias = DeclareTypeAlias;\nexports.DeclareOpaqueType = DeclareOpaqueType;\nexports.DeclareVariable = DeclareVariable;\nexports.DeclareExportDeclaration = DeclareExportDeclaration;\nexports.DeclareExportAllDeclaration = DeclareExportAllDeclaration;\nexports.EnumDeclaration = EnumDeclaration;\nexports.EnumBooleanBody = EnumBooleanBody;\nexports.EnumNumberBody = EnumNumberBody;\nexports.EnumStringBody = EnumStringBody;\nexports.EnumSymbolBody = EnumSymbolBody;\nexports.EnumDefaultedMember = EnumDefaultedMember;\nexports.EnumBooleanMember = EnumBooleanMember;\nexports.EnumNumberMember = EnumNumberMember;\nexports.EnumStringMember = EnumStringMember;\nexports.ExistsTypeAnnotation = ExistsTypeAnnotation;\nexports.FunctionTypeAnnotation = FunctionTypeAnnotation;\nexports.FunctionTypeParam = FunctionTypeParam;\nexports.GenericTypeAnnotation = exports.ClassImplements = exports.InterfaceExtends = InterfaceExtends;\nexports._interfaceish = _interfaceish;\nexports._variance = _variance;\nexports.InterfaceDeclaration = InterfaceDeclaration;\nexports.InterfaceTypeAnnotation = InterfaceTypeAnnotation;\nexports.IntersectionTypeAnnotation = IntersectionTypeAnnotation;\nexports.MixedTypeAnnotation = MixedTypeAnnotation;\nexports.EmptyTypeAnnotation = EmptyTypeAnnotation;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.NumberTypeAnnotation = NumberTypeAnnotation;\nexports.StringTypeAnnotation = StringTypeAnnotation;\nexports.ThisTypeAnnotation = ThisTypeAnnotation;\nexports.TupleTypeAnnotation = TupleTypeAnnotation;\nexports.TypeofTypeAnnotation = TypeofTypeAnnotation;\nexports.TypeAlias = TypeAlias;\nexports.TypeAnnotation = TypeAnnotation;\nexports.TypeParameterDeclaration = exports.TypeParameterInstantiation = TypeParameterInstantiation;\nexports.TypeParameter = TypeParameter;\nexports.OpaqueType = OpaqueType;\nexports.ObjectTypeAnnotation = ObjectTypeAnnotation;\nexports.ObjectTypeInternalSlot = ObjectTypeInternalSlot;\nexports.ObjectTypeCallProperty = ObjectTypeCallProperty;\nexports.ObjectTypeIndexer = ObjectTypeIndexer;\nexports.ObjectTypeProperty = ObjectTypeProperty;\nexports.ObjectTypeSpreadProperty = ObjectTypeSpreadProperty;\nexports.QualifiedTypeIdentifier = QualifiedTypeIdentifier;\nexports.SymbolTypeAnnotation = SymbolTypeAnnotation;\nexports.UnionTypeAnnotation = UnionTypeAnnotation;\nexports.TypeCastExpression = TypeCastExpression;\nexports.Variance = Variance;\nexports.VoidTypeAnnotation = VoidTypeAnnotation;\nObject.defineProperty(exports, \"NumberLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _types2.NumericLiteral;\n  }\n});\nObject.defineProperty(exports, \"StringLiteralTypeAnnotation\", {\n  enumerable: true,\n  get: function () {\n    return _types2.StringLiteral;\n  }\n});\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _modules = require(\"./modules\");\n\nvar _types2 = require(\"./types\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction AnyTypeAnnotation() {\n  this.word(\"any\");\n}\n\nfunction ArrayTypeAnnotation(node) {\n  this.print(node.elementType, node);\n  this.token(\"[\");\n  this.token(\"]\");\n}\n\nfunction BooleanTypeAnnotation() {\n  this.word(\"boolean\");\n}\n\nfunction BooleanLiteralTypeAnnotation(node) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nfunction NullLiteralTypeAnnotation() {\n  this.word(\"null\");\n}\n\nfunction DeclareClass(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"class\");\n  this.space();\n\n  this._interfaceish(node);\n}\n\nfunction DeclareFunction(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"function\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation.typeAnnotation, node);\n\n  if (node.predicate) {\n    this.space();\n    this.print(node.predicate, node);\n  }\n\n  this.semicolon();\n}\n\nfunction InferredPredicate() {\n  this.token(\"%\");\n  this.word(\"checks\");\n}\n\nfunction DeclaredPredicate(node) {\n  this.token(\"%\");\n  this.word(\"checks\");\n  this.token(\"(\");\n  this.print(node.value, node);\n  this.token(\")\");\n}\n\nfunction DeclareInterface(node) {\n  this.word(\"declare\");\n  this.space();\n  this.InterfaceDeclaration(node);\n}\n\nfunction DeclareModule(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.space();\n  this.print(node.id, node);\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction DeclareModuleExports(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"module\");\n  this.token(\".\");\n  this.word(\"exports\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction DeclareTypeAlias(node) {\n  this.word(\"declare\");\n  this.space();\n  this.TypeAlias(node);\n}\n\nfunction DeclareOpaqueType(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.OpaqueType(node);\n}\n\nfunction DeclareVariable(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"var\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation, node);\n  this.semicolon();\n}\n\nfunction DeclareExportDeclaration(node) {\n  this.word(\"declare\");\n  this.space();\n  this.word(\"export\");\n  this.space();\n\n  if (node.default) {\n    this.word(\"default\");\n    this.space();\n  }\n\n  FlowExportDeclaration.apply(this, arguments);\n}\n\nfunction DeclareExportAllDeclaration() {\n  this.word(\"declare\");\n  this.space();\n\n  _modules.ExportAllDeclaration.apply(this, arguments);\n}\n\nfunction EnumDeclaration(node) {\n  const {\n    id,\n    body\n  } = node;\n  this.word(\"enum\");\n  this.space();\n  this.print(id, node);\n  this.print(body, node);\n}\n\nfunction enumExplicitType(context, name, hasExplicitType) {\n  if (hasExplicitType) {\n    context.space();\n    context.word(\"of\");\n    context.space();\n    context.word(name);\n  }\n\n  context.space();\n}\n\nfunction enumBody(context, node) {\n  const {\n    members\n  } = node;\n  context.token(\"{\");\n  context.indent();\n  context.newline();\n\n  for (const member of members) {\n    context.print(member, node);\n    context.newline();\n  }\n\n  context.dedent();\n  context.token(\"}\");\n}\n\nfunction EnumBooleanBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"boolean\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumNumberBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"number\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumStringBody(node) {\n  const {\n    explicitType\n  } = node;\n  enumExplicitType(this, \"string\", explicitType);\n  enumBody(this, node);\n}\n\nfunction EnumSymbolBody(node) {\n  enumExplicitType(this, \"symbol\", true);\n  enumBody(this, node);\n}\n\nfunction EnumDefaultedMember(node) {\n  const {\n    id\n  } = node;\n  this.print(id, node);\n  this.token(\",\");\n}\n\nfunction enumInitializedMember(context, node) {\n  const {\n    id,\n    init\n  } = node;\n  context.print(id, node);\n  context.space();\n  context.token(\"=\");\n  context.space();\n  context.print(init, node);\n  context.token(\",\");\n}\n\nfunction EnumBooleanMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction EnumNumberMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction EnumStringMember(node) {\n  enumInitializedMember(this, node);\n}\n\nfunction FlowExportDeclaration(node) {\n  if (node.declaration) {\n    const declar = node.declaration;\n    this.print(declar, node);\n    if (!t.isStatement(declar)) this.semicolon();\n  } else {\n    this.token(\"{\");\n\n    if (node.specifiers.length) {\n      this.space();\n      this.printList(node.specifiers, node);\n      this.space();\n    }\n\n    this.token(\"}\");\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      this.print(node.source, node);\n    }\n\n    this.semicolon();\n  }\n}\n\nfunction ExistsTypeAnnotation() {\n  this.token(\"*\");\n}\n\nfunction FunctionTypeAnnotation(node, parent) {\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n  this.printList(node.params, node);\n\n  if (node.rest) {\n    if (node.params.length) {\n      this.token(\",\");\n      this.space();\n    }\n\n    this.token(\"...\");\n    this.print(node.rest, node);\n  }\n\n  this.token(\")\");\n\n  if (parent.type === \"ObjectTypeCallProperty\" || parent.type === \"DeclareFunction\" || parent.type === \"ObjectTypeProperty\" && parent.method) {\n    this.token(\":\");\n  } else {\n    this.space();\n    this.token(\"=>\");\n  }\n\n  this.space();\n  this.print(node.returnType, node);\n}\n\nfunction FunctionTypeParam(node) {\n  this.print(node.name, node);\n  if (node.optional) this.token(\"?\");\n\n  if (node.name) {\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.typeAnnotation, node);\n}\n\nfunction InterfaceExtends(node) {\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n}\n\nfunction _interfaceish(node) {\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n\n  if (node.extends.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends, node);\n  }\n\n  if (node.mixins && node.mixins.length) {\n    this.space();\n    this.word(\"mixins\");\n    this.space();\n    this.printList(node.mixins, node);\n  }\n\n  if (node.implements && node.implements.length) {\n    this.space();\n    this.word(\"implements\");\n    this.space();\n    this.printList(node.implements, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction _variance(node) {\n  if (node.variance) {\n    if (node.variance.kind === \"plus\") {\n      this.token(\"+\");\n    } else if (node.variance.kind === \"minus\") {\n      this.token(\"-\");\n    }\n  }\n}\n\nfunction InterfaceDeclaration(node) {\n  this.word(\"interface\");\n  this.space();\n\n  this._interfaceish(node);\n}\n\nfunction andSeparator() {\n  this.space();\n  this.token(\"&\");\n  this.space();\n}\n\nfunction InterfaceTypeAnnotation(node) {\n  this.word(\"interface\");\n\n  if (node.extends && node.extends.length) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(node.extends, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction IntersectionTypeAnnotation(node) {\n  this.printJoin(node.types, node, {\n    separator: andSeparator\n  });\n}\n\nfunction MixedTypeAnnotation() {\n  this.word(\"mixed\");\n}\n\nfunction EmptyTypeAnnotation() {\n  this.word(\"empty\");\n}\n\nfunction NullableTypeAnnotation(node) {\n  this.token(\"?\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction NumberTypeAnnotation() {\n  this.word(\"number\");\n}\n\nfunction StringTypeAnnotation() {\n  this.word(\"string\");\n}\n\nfunction ThisTypeAnnotation() {\n  this.word(\"this\");\n}\n\nfunction TupleTypeAnnotation(node) {\n  this.token(\"[\");\n  this.printList(node.types, node);\n  this.token(\"]\");\n}\n\nfunction TypeofTypeAnnotation(node) {\n  this.word(\"typeof\");\n  this.space();\n  this.print(node.argument, node);\n}\n\nfunction TypeAlias(node) {\n  this.word(\"type\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.right, node);\n  this.semicolon();\n}\n\nfunction TypeAnnotation(node) {\n  this.token(\":\");\n  this.space();\n  if (node.optional) this.token(\"?\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TypeParameterInstantiation(node) {\n  this.token(\"<\");\n  this.printList(node.params, node, {});\n  this.token(\">\");\n}\n\nfunction TypeParameter(node) {\n  this._variance(node);\n\n  this.word(node.name);\n\n  if (node.bound) {\n    this.print(node.bound, node);\n  }\n\n  if (node.default) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.default, node);\n  }\n}\n\nfunction OpaqueType(node) {\n  this.word(\"opaque\");\n  this.space();\n  this.word(\"type\");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n\n  if (node.supertype) {\n    this.token(\":\");\n    this.space();\n    this.print(node.supertype, node);\n  }\n\n  if (node.impltype) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.impltype, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ObjectTypeAnnotation(node) {\n  if (node.exact) {\n    this.token(\"{|\");\n  } else {\n    this.token(\"{\");\n  }\n\n  const props = node.properties.concat(node.callProperties || [], node.indexers || [], node.internalSlots || []);\n\n  if (props.length) {\n    this.space();\n    this.printJoin(props, node, {\n      addNewlines(leading) {\n        if (leading && !props[0]) return 1;\n      },\n\n      indent: true,\n      statement: true,\n      iterator: () => {\n        if (props.length !== 1 || node.inexact) {\n          this.token(\",\");\n          this.space();\n        }\n      }\n    });\n    this.space();\n  }\n\n  if (node.inexact) {\n    this.indent();\n    this.token(\"...\");\n\n    if (props.length) {\n      this.newline();\n    }\n\n    this.dedent();\n  }\n\n  if (node.exact) {\n    this.token(\"|}\");\n  } else {\n    this.token(\"}\");\n  }\n}\n\nfunction ObjectTypeInternalSlot(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.token(\"[\");\n  this.token(\"[\");\n  this.print(node.id, node);\n  this.token(\"]\");\n  this.token(\"]\");\n  if (node.optional) this.token(\"?\");\n\n  if (!node.method) {\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeCallProperty(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeIndexer(node) {\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  this._variance(node);\n\n  this.token(\"[\");\n\n  if (node.id) {\n    this.print(node.id, node);\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.key, node);\n  this.token(\"]\");\n  this.token(\":\");\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeProperty(node) {\n  if (node.proto) {\n    this.word(\"proto\");\n    this.space();\n  }\n\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  if (node.kind === \"get\" || node.kind === \"set\") {\n    this.word(node.kind);\n    this.space();\n  }\n\n  this._variance(node);\n\n  this.print(node.key, node);\n  if (node.optional) this.token(\"?\");\n\n  if (!node.method) {\n    this.token(\":\");\n    this.space();\n  }\n\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeSpreadProperty(node) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nfunction QualifiedTypeIdentifier(node) {\n  this.print(node.qualification, node);\n  this.token(\".\");\n  this.print(node.id, node);\n}\n\nfunction SymbolTypeAnnotation() {\n  this.word(\"symbol\");\n}\n\nfunction orSeparator() {\n  this.space();\n  this.token(\"|\");\n  this.space();\n}\n\nfunction UnionTypeAnnotation(node) {\n  this.printJoin(node.types, node, {\n    separator: orSeparator\n  });\n}\n\nfunction TypeCastExpression(node) {\n  this.token(\"(\");\n  this.print(node.expression, node);\n  this.print(node.typeAnnotation, node);\n  this.token(\")\");\n}\n\nfunction Variance(node) {\n  if (node.kind === \"plus\") {\n    this.token(\"+\");\n  } else {\n    this.token(\"-\");\n  }\n}\n\nfunction VoidTypeAnnotation() {\n  this.word(\"void\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _templateLiterals = require(\"./template-literals\");\n\nObject.keys(_templateLiterals).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _templateLiterals[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _templateLiterals[key];\n    }\n  });\n});\n\nvar _expressions = require(\"./expressions\");\n\nObject.keys(_expressions).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _expressions[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _expressions[key];\n    }\n  });\n});\n\nvar _statements = require(\"./statements\");\n\nObject.keys(_statements).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _statements[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _statements[key];\n    }\n  });\n});\n\nvar _classes = require(\"./classes\");\n\nObject.keys(_classes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _classes[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _classes[key];\n    }\n  });\n});\n\nvar _methods = require(\"./methods\");\n\nObject.keys(_methods).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _methods[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _methods[key];\n    }\n  });\n});\n\nvar _modules = require(\"./modules\");\n\nObject.keys(_modules).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _modules[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _modules[key];\n    }\n  });\n});\n\nvar _types = require(\"./types\");\n\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _types[key];\n    }\n  });\n});\n\nvar _flow = require(\"./flow\");\n\nObject.keys(_flow).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _flow[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _flow[key];\n    }\n  });\n});\n\nvar _base = require(\"./base\");\n\nObject.keys(_base).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _base[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _base[key];\n    }\n  });\n});\n\nvar _jsx = require(\"./jsx\");\n\nObject.keys(_jsx).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _jsx[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _jsx[key];\n    }\n  });\n});\n\nvar _typescript = require(\"./typescript\");\n\nObject.keys(_typescript).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _typescript[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _typescript[key];\n    }\n  });\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JSXAttribute = JSXAttribute;\nexports.JSXIdentifier = JSXIdentifier;\nexports.JSXNamespacedName = JSXNamespacedName;\nexports.JSXMemberExpression = JSXMemberExpression;\nexports.JSXSpreadAttribute = JSXSpreadAttribute;\nexports.JSXExpressionContainer = JSXExpressionContainer;\nexports.JSXSpreadChild = JSXSpreadChild;\nexports.JSXText = JSXText;\nexports.JSXElement = JSXElement;\nexports.JSXOpeningElement = JSXOpeningElement;\nexports.JSXClosingElement = JSXClosingElement;\nexports.JSXEmptyExpression = JSXEmptyExpression;\nexports.JSXFragment = JSXFragment;\nexports.JSXOpeningFragment = JSXOpeningFragment;\nexports.JSXClosingFragment = JSXClosingFragment;\n\nfunction JSXAttribute(node) {\n  this.print(node.name, node);\n\n  if (node.value) {\n    this.token(\"=\");\n    this.print(node.value, node);\n  }\n}\n\nfunction JSXIdentifier(node) {\n  this.word(node.name);\n}\n\nfunction JSXNamespacedName(node) {\n  this.print(node.namespace, node);\n  this.token(\":\");\n  this.print(node.name, node);\n}\n\nfunction JSXMemberExpression(node) {\n  this.print(node.object, node);\n  this.token(\".\");\n  this.print(node.property, node);\n}\n\nfunction JSXSpreadAttribute(node) {\n  this.token(\"{\");\n  this.token(\"...\");\n  this.print(node.argument, node);\n  this.token(\"}\");\n}\n\nfunction JSXExpressionContainer(node) {\n  this.token(\"{\");\n  this.print(node.expression, node);\n  this.token(\"}\");\n}\n\nfunction JSXSpreadChild(node) {\n  this.token(\"{\");\n  this.token(\"...\");\n  this.print(node.expression, node);\n  this.token(\"}\");\n}\n\nfunction JSXText(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (raw != null) {\n    this.token(raw);\n  } else {\n    this.token(node.value);\n  }\n}\n\nfunction JSXElement(node) {\n  const open = node.openingElement;\n  this.print(open, node);\n  if (open.selfClosing) return;\n  this.indent();\n\n  for (const child of node.children) {\n    this.print(child, node);\n  }\n\n  this.dedent();\n  this.print(node.closingElement, node);\n}\n\nfunction spaceSeparator() {\n  this.space();\n}\n\nfunction JSXOpeningElement(node) {\n  this.token(\"<\");\n  this.print(node.name, node);\n  this.print(node.typeParameters, node);\n\n  if (node.attributes.length > 0) {\n    this.space();\n    this.printJoin(node.attributes, node, {\n      separator: spaceSeparator\n    });\n  }\n\n  if (node.selfClosing) {\n    this.space();\n    this.token(\"/>\");\n  } else {\n    this.token(\">\");\n  }\n}\n\nfunction JSXClosingElement(node) {\n  this.token(\"</\");\n  this.print(node.name, node);\n  this.token(\">\");\n}\n\nfunction JSXEmptyExpression(node) {\n  this.printInnerComments(node);\n}\n\nfunction JSXFragment(node) {\n  this.print(node.openingFragment, node);\n  this.indent();\n\n  for (const child of node.children) {\n    this.print(child, node);\n  }\n\n  this.dedent();\n  this.print(node.closingFragment, node);\n}\n\nfunction JSXOpeningFragment() {\n  this.token(\"<\");\n  this.token(\">\");\n}\n\nfunction JSXClosingFragment() {\n  this.token(\"</\");\n  this.token(\">\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._params = _params;\nexports._parameters = _parameters;\nexports._param = _param;\nexports._methodHead = _methodHead;\nexports._predicate = _predicate;\nexports._functionHead = _functionHead;\nexports.FunctionDeclaration = exports.FunctionExpression = FunctionExpression;\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _params(node) {\n  this.print(node.typeParameters, node);\n  this.token(\"(\");\n\n  this._parameters(node.params, node);\n\n  this.token(\")\");\n  this.print(node.returnType, node);\n}\n\nfunction _parameters(parameters, parent) {\n  for (let i = 0; i < parameters.length; i++) {\n    this._param(parameters[i], parent);\n\n    if (i < parameters.length - 1) {\n      this.token(\",\");\n      this.space();\n    }\n  }\n}\n\nfunction _param(parameter, parent) {\n  this.printJoin(parameter.decorators, parameter);\n  this.print(parameter, parent);\n  if (parameter.optional) this.token(\"?\");\n  this.print(parameter.typeAnnotation, parameter);\n}\n\nfunction _methodHead(node) {\n  const kind = node.kind;\n  const key = node.key;\n\n  if (kind === \"get\" || kind === \"set\") {\n    this.word(kind);\n    this.space();\n  }\n\n  if (node.async) {\n    this._catchUp(\"start\", key.loc);\n\n    this.word(\"async\");\n    this.space();\n  }\n\n  if (kind === \"method\" || kind === \"init\") {\n    if (node.generator) {\n      this.token(\"*\");\n    }\n  }\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(key, node);\n    this.token(\"]\");\n  } else {\n    this.print(key, node);\n  }\n\n  if (node.optional) {\n    this.token(\"?\");\n  }\n\n  this._params(node);\n}\n\nfunction _predicate(node) {\n  if (node.predicate) {\n    if (!node.returnType) {\n      this.token(\":\");\n    }\n\n    this.space();\n    this.print(node.predicate, node);\n  }\n}\n\nfunction _functionHead(node) {\n  if (node.async) {\n    this.word(\"async\");\n    this.space();\n  }\n\n  this.word(\"function\");\n  if (node.generator) this.token(\"*\");\n  this.space();\n\n  if (node.id) {\n    this.print(node.id, node);\n  }\n\n  this._params(node);\n\n  this._predicate(node);\n}\n\nfunction FunctionExpression(node) {\n  this._functionHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ArrowFunctionExpression(node) {\n  if (node.async) {\n    this.word(\"async\");\n    this.space();\n  }\n\n  const firstParam = node.params[0];\n\n  if (node.params.length === 1 && t.isIdentifier(firstParam) && !hasTypes(node, firstParam)) {\n    if ((this.format.retainLines || node.async) && node.loc && node.body.loc && node.loc.start.line < node.body.loc.start.line) {\n      this.token(\"(\");\n\n      if (firstParam.loc && firstParam.loc.start.line > node.loc.start.line) {\n        this.indent();\n        this.print(firstParam, node);\n        this.dedent();\n\n        this._catchUp(\"start\", node.body.loc);\n      } else {\n        this.print(firstParam, node);\n      }\n\n      this.token(\")\");\n    } else {\n      this.print(firstParam, node);\n    }\n  } else {\n    this._params(node);\n  }\n\n  this._predicate(node);\n\n  this.space();\n  this.token(\"=>\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction hasTypes(node, param) {\n  return node.typeParameters || node.returnType || param.typeAnnotation || param.optional || param.trailingComments;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImportSpecifier = ImportSpecifier;\nexports.ImportDefaultSpecifier = ImportDefaultSpecifier;\nexports.ExportDefaultSpecifier = ExportDefaultSpecifier;\nexports.ExportSpecifier = ExportSpecifier;\nexports.ExportNamespaceSpecifier = ExportNamespaceSpecifier;\nexports.ExportAllDeclaration = ExportAllDeclaration;\nexports.ExportNamedDeclaration = ExportNamedDeclaration;\nexports.ExportDefaultDeclaration = ExportDefaultDeclaration;\nexports.ImportDeclaration = ImportDeclaration;\nexports.ImportAttribute = ImportAttribute;\nexports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ImportSpecifier(node) {\n  if (node.importKind === \"type\" || node.importKind === \"typeof\") {\n    this.word(node.importKind);\n    this.space();\n  }\n\n  this.print(node.imported, node);\n\n  if (node.local && node.local.name !== node.imported.name) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(node.local, node);\n  }\n}\n\nfunction ImportDefaultSpecifier(node) {\n  this.print(node.local, node);\n}\n\nfunction ExportDefaultSpecifier(node) {\n  this.print(node.exported, node);\n}\n\nfunction ExportSpecifier(node) {\n  this.print(node.local, node);\n\n  if (node.exported && node.local.name !== node.exported.name) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(node.exported, node);\n  }\n}\n\nfunction ExportNamespaceSpecifier(node) {\n  this.token(\"*\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(node.exported, node);\n}\n\nfunction ExportAllDeclaration(node) {\n  this.word(\"export\");\n  this.space();\n\n  if (node.exportKind === \"type\") {\n    this.word(\"type\");\n    this.space();\n  }\n\n  this.token(\"*\");\n  this.space();\n  this.word(\"from\");\n  this.space();\n  this.print(node.source, node);\n  this.printAssertions(node);\n  this.semicolon();\n}\n\nfunction ExportNamedDeclaration(node) {\n  if (this.format.decoratorsBeforeExport && t.isClassDeclaration(node.declaration)) {\n    this.printJoin(node.declaration.decorators, node);\n  }\n\n  this.word(\"export\");\n  this.space();\n  ExportDeclaration.apply(this, arguments);\n}\n\nfunction ExportDefaultDeclaration(node) {\n  if (this.format.decoratorsBeforeExport && t.isClassDeclaration(node.declaration)) {\n    this.printJoin(node.declaration.decorators, node);\n  }\n\n  this.word(\"export\");\n  this.space();\n  this.word(\"default\");\n  this.space();\n  ExportDeclaration.apply(this, arguments);\n}\n\nfunction ExportDeclaration(node) {\n  if (node.declaration) {\n    const declar = node.declaration;\n    this.print(declar, node);\n    if (!t.isStatement(declar)) this.semicolon();\n  } else {\n    if (node.exportKind === \"type\") {\n      this.word(\"type\");\n      this.space();\n    }\n\n    const specifiers = node.specifiers.slice(0);\n    let hasSpecial = false;\n\n    for (;;) {\n      const first = specifiers[0];\n\n      if (t.isExportDefaultSpecifier(first) || t.isExportNamespaceSpecifier(first)) {\n        hasSpecial = true;\n        this.print(specifiers.shift(), node);\n\n        if (specifiers.length) {\n          this.token(\",\");\n          this.space();\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (specifiers.length || !specifiers.length && !hasSpecial) {\n      this.token(\"{\");\n\n      if (specifiers.length) {\n        this.space();\n        this.printList(specifiers, node);\n        this.space();\n      }\n\n      this.token(\"}\");\n    }\n\n    if (node.source) {\n      this.space();\n      this.word(\"from\");\n      this.space();\n      this.print(node.source, node);\n      this.printAssertions(node);\n    }\n\n    this.semicolon();\n  }\n}\n\nfunction ImportDeclaration(node) {\n  var _node$attributes;\n\n  this.word(\"import\");\n  this.space();\n\n  if (node.importKind === \"type\" || node.importKind === \"typeof\") {\n    this.word(node.importKind);\n    this.space();\n  }\n\n  const specifiers = node.specifiers.slice(0);\n\n  if (specifiers == null ? void 0 : specifiers.length) {\n    for (;;) {\n      const first = specifiers[0];\n\n      if (t.isImportDefaultSpecifier(first) || t.isImportNamespaceSpecifier(first)) {\n        this.print(specifiers.shift(), node);\n\n        if (specifiers.length) {\n          this.token(\",\");\n          this.space();\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (specifiers.length) {\n      this.token(\"{\");\n      this.space();\n      this.printList(specifiers, node);\n      this.space();\n      this.token(\"}\");\n    }\n\n    this.space();\n    this.word(\"from\");\n    this.space();\n  }\n\n  this.print(node.source, node);\n  this.printAssertions(node);\n\n  if ((_node$attributes = node.attributes) == null ? void 0 : _node$attributes.length) {\n    this.space();\n    this.word(\"with\");\n    this.space();\n    this.printList(node.attributes, node);\n  }\n\n  this.semicolon();\n}\n\nfunction ImportAttribute(node) {\n  this.print(node.key);\n  this.token(\":\");\n  this.space();\n  this.print(node.value);\n}\n\nfunction ImportNamespaceSpecifier(node) {\n  this.token(\"*\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(node.local, node);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WithStatement = WithStatement;\nexports.IfStatement = IfStatement;\nexports.ForStatement = ForStatement;\nexports.WhileStatement = WhileStatement;\nexports.DoWhileStatement = DoWhileStatement;\nexports.LabeledStatement = LabeledStatement;\nexports.TryStatement = TryStatement;\nexports.CatchClause = CatchClause;\nexports.SwitchStatement = SwitchStatement;\nexports.SwitchCase = SwitchCase;\nexports.DebuggerStatement = DebuggerStatement;\nexports.VariableDeclaration = VariableDeclaration;\nexports.VariableDeclarator = VariableDeclarator;\nexports.ThrowStatement = exports.BreakStatement = exports.ReturnStatement = exports.ContinueStatement = exports.ForOfStatement = exports.ForInStatement = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction WithStatement(node) {\n  this.word(\"with\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.object, node);\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nfunction IfStatement(node) {\n  this.word(\"if\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.test, node);\n  this.token(\")\");\n  this.space();\n  const needsBlock = node.alternate && t.isIfStatement(getLastStatement(node.consequent));\n\n  if (needsBlock) {\n    this.token(\"{\");\n    this.newline();\n    this.indent();\n  }\n\n  this.printAndIndentOnComments(node.consequent, node);\n\n  if (needsBlock) {\n    this.dedent();\n    this.newline();\n    this.token(\"}\");\n  }\n\n  if (node.alternate) {\n    if (this.endsWith(\"}\")) this.space();\n    this.word(\"else\");\n    this.space();\n    this.printAndIndentOnComments(node.alternate, node);\n  }\n}\n\nfunction getLastStatement(statement) {\n  if (!t.isStatement(statement.body)) return statement;\n  return getLastStatement(statement.body);\n}\n\nfunction ForStatement(node) {\n  this.word(\"for\");\n  this.space();\n  this.token(\"(\");\n  this.inForStatementInitCounter++;\n  this.print(node.init, node);\n  this.inForStatementInitCounter--;\n  this.token(\";\");\n\n  if (node.test) {\n    this.space();\n    this.print(node.test, node);\n  }\n\n  this.token(\";\");\n\n  if (node.update) {\n    this.space();\n    this.print(node.update, node);\n  }\n\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nfunction WhileStatement(node) {\n  this.word(\"while\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.test, node);\n  this.token(\")\");\n  this.printBlock(node);\n}\n\nconst buildForXStatement = function (op) {\n  return function (node) {\n    this.word(\"for\");\n    this.space();\n\n    if (op === \"of\" && node.await) {\n      this.word(\"await\");\n      this.space();\n    }\n\n    this.token(\"(\");\n    this.print(node.left, node);\n    this.space();\n    this.word(op);\n    this.space();\n    this.print(node.right, node);\n    this.token(\")\");\n    this.printBlock(node);\n  };\n};\n\nconst ForInStatement = buildForXStatement(\"in\");\nexports.ForInStatement = ForInStatement;\nconst ForOfStatement = buildForXStatement(\"of\");\nexports.ForOfStatement = ForOfStatement;\n\nfunction DoWhileStatement(node) {\n  this.word(\"do\");\n  this.space();\n  this.print(node.body, node);\n  this.space();\n  this.word(\"while\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.test, node);\n  this.token(\")\");\n  this.semicolon();\n}\n\nfunction buildLabelStatement(prefix, key = \"label\") {\n  return function (node) {\n    this.word(prefix);\n    const label = node[key];\n\n    if (label) {\n      this.space();\n      const isLabel = key == \"label\";\n      const terminatorState = this.startTerminatorless(isLabel);\n      this.print(label, node);\n      this.endTerminatorless(terminatorState);\n    }\n\n    this.semicolon();\n  };\n}\n\nconst ContinueStatement = buildLabelStatement(\"continue\");\nexports.ContinueStatement = ContinueStatement;\nconst ReturnStatement = buildLabelStatement(\"return\", \"argument\");\nexports.ReturnStatement = ReturnStatement;\nconst BreakStatement = buildLabelStatement(\"break\");\nexports.BreakStatement = BreakStatement;\nconst ThrowStatement = buildLabelStatement(\"throw\", \"argument\");\nexports.ThrowStatement = ThrowStatement;\n\nfunction LabeledStatement(node) {\n  this.print(node.label, node);\n  this.token(\":\");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction TryStatement(node) {\n  this.word(\"try\");\n  this.space();\n  this.print(node.block, node);\n  this.space();\n\n  if (node.handlers) {\n    this.print(node.handlers[0], node);\n  } else {\n    this.print(node.handler, node);\n  }\n\n  if (node.finalizer) {\n    this.space();\n    this.word(\"finally\");\n    this.space();\n    this.print(node.finalizer, node);\n  }\n}\n\nfunction CatchClause(node) {\n  this.word(\"catch\");\n  this.space();\n\n  if (node.param) {\n    this.token(\"(\");\n    this.print(node.param, node);\n    this.print(node.param.typeAnnotation, node);\n    this.token(\")\");\n    this.space();\n  }\n\n  this.print(node.body, node);\n}\n\nfunction SwitchStatement(node) {\n  this.word(\"switch\");\n  this.space();\n  this.token(\"(\");\n  this.print(node.discriminant, node);\n  this.token(\")\");\n  this.space();\n  this.token(\"{\");\n  this.printSequence(node.cases, node, {\n    indent: true,\n\n    addNewlines(leading, cas) {\n      if (!leading && node.cases[node.cases.length - 1] === cas) return -1;\n    }\n\n  });\n  this.token(\"}\");\n}\n\nfunction SwitchCase(node) {\n  if (node.test) {\n    this.word(\"case\");\n    this.space();\n    this.print(node.test, node);\n    this.token(\":\");\n  } else {\n    this.word(\"default\");\n    this.token(\":\");\n  }\n\n  if (node.consequent.length) {\n    this.newline();\n    this.printSequence(node.consequent, node, {\n      indent: true\n    });\n  }\n}\n\nfunction DebuggerStatement() {\n  this.word(\"debugger\");\n  this.semicolon();\n}\n\nfunction variableDeclarationIndent() {\n  this.token(\",\");\n  this.newline();\n  if (this.endsWith(\"\\n\")) for (let i = 0; i < 4; i++) this.space(true);\n}\n\nfunction constDeclarationIndent() {\n  this.token(\",\");\n  this.newline();\n  if (this.endsWith(\"\\n\")) for (let i = 0; i < 6; i++) this.space(true);\n}\n\nfunction VariableDeclaration(node, parent) {\n  if (node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(node.kind);\n  this.space();\n  let hasInits = false;\n\n  if (!t.isFor(parent)) {\n    for (const declar of node.declarations) {\n      if (declar.init) {\n        hasInits = true;\n      }\n    }\n  }\n\n  let separator;\n\n  if (hasInits) {\n    separator = node.kind === \"const\" ? constDeclarationIndent : variableDeclarationIndent;\n  }\n\n  this.printList(node.declarations, node, {\n    separator\n  });\n\n  if (t.isFor(parent)) {\n    if (parent.left === node || parent.init === node) return;\n  }\n\n  this.semicolon();\n}\n\nfunction VariableDeclarator(node) {\n  this.print(node.id, node);\n  if (node.definite) this.token(\"!\");\n  this.print(node.id.typeAnnotation, node);\n\n  if (node.init) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.init, node);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nexports.TemplateElement = TemplateElement;\nexports.TemplateLiteral = TemplateLiteral;\n\nfunction TaggedTemplateExpression(node) {\n  this.print(node.tag, node);\n  this.print(node.typeParameters, node);\n  this.print(node.quasi, node);\n}\n\nfunction TemplateElement(node, parent) {\n  const isFirst = parent.quasis[0] === node;\n  const isLast = parent.quasis[parent.quasis.length - 1] === node;\n  const value = (isFirst ? \"`\" : \"}\") + node.value.raw + (isLast ? \"`\" : \"${\");\n  this.token(value);\n}\n\nfunction TemplateLiteral(node) {\n  const quasis = node.quasis;\n\n  for (let i = 0; i < quasis.length; i++) {\n    this.print(quasis[i], node);\n\n    if (i + 1 < quasis.length) {\n      this.print(node.expressions[i], node);\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Identifier = Identifier;\nexports.ArgumentPlaceholder = ArgumentPlaceholder;\nexports.SpreadElement = exports.RestElement = RestElement;\nexports.ObjectPattern = exports.ObjectExpression = ObjectExpression;\nexports.ObjectMethod = ObjectMethod;\nexports.ObjectProperty = ObjectProperty;\nexports.ArrayPattern = exports.ArrayExpression = ArrayExpression;\nexports.RecordExpression = RecordExpression;\nexports.TupleExpression = TupleExpression;\nexports.RegExpLiteral = RegExpLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.StringLiteral = StringLiteral;\nexports.BigIntLiteral = BigIntLiteral;\nexports.DecimalLiteral = DecimalLiteral;\nexports.PipelineTopicExpression = PipelineTopicExpression;\nexports.PipelineBareFunction = PipelineBareFunction;\nexports.PipelinePrimaryTopicReference = PipelinePrimaryTopicReference;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _jsesc = _interopRequireDefault(require(\"jsesc\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction Identifier(node) {\n  this.exactSource(node.loc, () => {\n    this.word(node.name);\n  });\n}\n\nfunction ArgumentPlaceholder() {\n  this.token(\"?\");\n}\n\nfunction RestElement(node) {\n  this.token(\"...\");\n  this.print(node.argument, node);\n}\n\nfunction ObjectExpression(node) {\n  const props = node.properties;\n  this.token(\"{\");\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, {\n      indent: true,\n      statement: true\n    });\n    this.space();\n  }\n\n  this.token(\"}\");\n}\n\nfunction ObjectMethod(node) {\n  this.printJoin(node.decorators, node);\n\n  this._methodHead(node);\n\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ObjectProperty(node) {\n  this.printJoin(node.decorators, node);\n\n  if (node.computed) {\n    this.token(\"[\");\n    this.print(node.key, node);\n    this.token(\"]\");\n  } else {\n    if (t.isAssignmentPattern(node.value) && t.isIdentifier(node.key) && node.key.name === node.value.left.name) {\n      this.print(node.value, node);\n      return;\n    }\n\n    this.print(node.key, node);\n\n    if (node.shorthand && t.isIdentifier(node.key) && t.isIdentifier(node.value) && node.key.name === node.value.name) {\n      return;\n    }\n  }\n\n  this.token(\":\");\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ArrayExpression(node) {\n  const elems = node.elements;\n  const len = elems.length;\n  this.token(\"[\");\n  this.printInnerComments(node);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(\",\");\n    } else {\n      this.token(\",\");\n    }\n  }\n\n  this.token(\"]\");\n}\n\nfunction RecordExpression(node) {\n  const props = node.properties;\n  let startToken;\n  let endToken;\n\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"{|\";\n    endToken = \"|}\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#{\";\n    endToken = \"}\";\n  } else {\n    throw new Error(`The \"recordAndTupleSyntaxType\" generator option must be \"bar\" or \"hash\" (${JSON.stringify(this.format.recordAndTupleSyntaxType)} received).`);\n  }\n\n  this.token(startToken);\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, {\n      indent: true,\n      statement: true\n    });\n    this.space();\n  }\n\n  this.token(endToken);\n}\n\nfunction TupleExpression(node) {\n  const elems = node.elements;\n  const len = elems.length;\n  let startToken;\n  let endToken;\n\n  if (this.format.recordAndTupleSyntaxType === \"bar\") {\n    startToken = \"[|\";\n    endToken = \"|]\";\n  } else if (this.format.recordAndTupleSyntaxType === \"hash\") {\n    startToken = \"#[\";\n    endToken = \"]\";\n  } else {\n    throw new Error(`${this.format.recordAndTupleSyntaxType} is not a valid recordAndTuple syntax type`);\n  }\n\n  this.token(startToken);\n  this.printInnerComments(node);\n\n  for (let i = 0; i < elems.length; i++) {\n    const elem = elems[i];\n\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(\",\");\n    }\n  }\n\n  this.token(endToken);\n}\n\nfunction RegExpLiteral(node) {\n  this.word(`/${node.pattern}/${node.flags}`);\n}\n\nfunction BooleanLiteral(node) {\n  this.word(node.value ? \"true\" : \"false\");\n}\n\nfunction NullLiteral() {\n  this.word(\"null\");\n}\n\nfunction NumericLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n  const opts = this.format.jsescOption;\n  const value = node.value + \"\";\n\n  if (opts.numbers) {\n    this.number((0, _jsesc.default)(node.value, opts));\n  } else if (raw == null) {\n    this.number(value);\n  } else if (this.format.minified) {\n    this.number(raw.length < value.length ? raw : value);\n  } else {\n    this.number(raw);\n  }\n}\n\nfunction StringLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw != null) {\n    this.token(raw);\n    return;\n  }\n\n  const opts = this.format.jsescOption;\n\n  if (this.format.jsonCompatibleStrings) {\n    opts.json = true;\n  }\n\n  const val = (0, _jsesc.default)(node.value, opts);\n  return this.token(val);\n}\n\nfunction BigIntLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw != null) {\n    this.token(raw);\n    return;\n  }\n\n  this.token(node.value + \"n\");\n}\n\nfunction DecimalLiteral(node) {\n  const raw = this.getPossibleRaw(node);\n\n  if (!this.format.minified && raw != null) {\n    this.token(raw);\n    return;\n  }\n\n  this.token(node.value + \"m\");\n}\n\nfunction PipelineTopicExpression(node) {\n  this.print(node.expression, node);\n}\n\nfunction PipelineBareFunction(node) {\n  this.print(node.callee, node);\n}\n\nfunction PipelinePrimaryTopicReference() {\n  this.token(\"#\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TSTypeAnnotation = TSTypeAnnotation;\nexports.TSTypeParameterDeclaration = exports.TSTypeParameterInstantiation = TSTypeParameterInstantiation;\nexports.TSTypeParameter = TSTypeParameter;\nexports.TSParameterProperty = TSParameterProperty;\nexports.TSDeclareFunction = TSDeclareFunction;\nexports.TSDeclareMethod = TSDeclareMethod;\nexports.TSQualifiedName = TSQualifiedName;\nexports.TSCallSignatureDeclaration = TSCallSignatureDeclaration;\nexports.TSConstructSignatureDeclaration = TSConstructSignatureDeclaration;\nexports.TSPropertySignature = TSPropertySignature;\nexports.tsPrintPropertyOrMethodName = tsPrintPropertyOrMethodName;\nexports.TSMethodSignature = TSMethodSignature;\nexports.TSIndexSignature = TSIndexSignature;\nexports.TSAnyKeyword = TSAnyKeyword;\nexports.TSBigIntKeyword = TSBigIntKeyword;\nexports.TSUnknownKeyword = TSUnknownKeyword;\nexports.TSNumberKeyword = TSNumberKeyword;\nexports.TSObjectKeyword = TSObjectKeyword;\nexports.TSBooleanKeyword = TSBooleanKeyword;\nexports.TSStringKeyword = TSStringKeyword;\nexports.TSSymbolKeyword = TSSymbolKeyword;\nexports.TSVoidKeyword = TSVoidKeyword;\nexports.TSUndefinedKeyword = TSUndefinedKeyword;\nexports.TSNullKeyword = TSNullKeyword;\nexports.TSNeverKeyword = TSNeverKeyword;\nexports.TSIntrinsicKeyword = TSIntrinsicKeyword;\nexports.TSThisType = TSThisType;\nexports.TSFunctionType = TSFunctionType;\nexports.TSConstructorType = TSConstructorType;\nexports.tsPrintFunctionOrConstructorType = tsPrintFunctionOrConstructorType;\nexports.TSTypeReference = TSTypeReference;\nexports.TSTypePredicate = TSTypePredicate;\nexports.TSTypeQuery = TSTypeQuery;\nexports.TSTypeLiteral = TSTypeLiteral;\nexports.tsPrintTypeLiteralOrInterfaceBody = tsPrintTypeLiteralOrInterfaceBody;\nexports.tsPrintBraced = tsPrintBraced;\nexports.TSArrayType = TSArrayType;\nexports.TSTupleType = TSTupleType;\nexports.TSOptionalType = TSOptionalType;\nexports.TSRestType = TSRestType;\nexports.TSNamedTupleMember = TSNamedTupleMember;\nexports.TSUnionType = TSUnionType;\nexports.TSIntersectionType = TSIntersectionType;\nexports.tsPrintUnionOrIntersectionType = tsPrintUnionOrIntersectionType;\nexports.TSConditionalType = TSConditionalType;\nexports.TSInferType = TSInferType;\nexports.TSParenthesizedType = TSParenthesizedType;\nexports.TSTypeOperator = TSTypeOperator;\nexports.TSIndexedAccessType = TSIndexedAccessType;\nexports.TSMappedType = TSMappedType;\nexports.TSLiteralType = TSLiteralType;\nexports.TSExpressionWithTypeArguments = TSExpressionWithTypeArguments;\nexports.TSInterfaceDeclaration = TSInterfaceDeclaration;\nexports.TSInterfaceBody = TSInterfaceBody;\nexports.TSTypeAliasDeclaration = TSTypeAliasDeclaration;\nexports.TSAsExpression = TSAsExpression;\nexports.TSTypeAssertion = TSTypeAssertion;\nexports.TSEnumDeclaration = TSEnumDeclaration;\nexports.TSEnumMember = TSEnumMember;\nexports.TSModuleDeclaration = TSModuleDeclaration;\nexports.TSModuleBlock = TSModuleBlock;\nexports.TSImportType = TSImportType;\nexports.TSImportEqualsDeclaration = TSImportEqualsDeclaration;\nexports.TSExternalModuleReference = TSExternalModuleReference;\nexports.TSNonNullExpression = TSNonNullExpression;\nexports.TSExportAssignment = TSExportAssignment;\nexports.TSNamespaceExportDeclaration = TSNamespaceExportDeclaration;\nexports.tsPrintSignatureDeclarationBase = tsPrintSignatureDeclarationBase;\nexports.tsPrintClassMemberModifiers = tsPrintClassMemberModifiers;\n\nfunction TSTypeAnnotation(node) {\n  this.token(\":\");\n  this.space();\n  if (node.optional) this.token(\"?\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TSTypeParameterInstantiation(node) {\n  this.token(\"<\");\n  this.printList(node.params, node, {});\n  this.token(\">\");\n}\n\nfunction TSTypeParameter(node) {\n  this.word(node.name);\n\n  if (node.constraint) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.print(node.constraint, node);\n  }\n\n  if (node.default) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(node.default, node);\n  }\n}\n\nfunction TSParameterProperty(node) {\n  if (node.accessibility) {\n    this.word(node.accessibility);\n    this.space();\n  }\n\n  if (node.readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this._param(node.parameter);\n}\n\nfunction TSDeclareFunction(node) {\n  if (node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this._functionHead(node);\n\n  this.token(\";\");\n}\n\nfunction TSDeclareMethod(node) {\n  this._classMethodHead(node);\n\n  this.token(\";\");\n}\n\nfunction TSQualifiedName(node) {\n  this.print(node.left, node);\n  this.token(\".\");\n  this.print(node.right, node);\n}\n\nfunction TSCallSignatureDeclaration(node) {\n  this.tsPrintSignatureDeclarationBase(node);\n  this.token(\";\");\n}\n\nfunction TSConstructSignatureDeclaration(node) {\n  this.word(\"new\");\n  this.space();\n  this.tsPrintSignatureDeclarationBase(node);\n  this.token(\";\");\n}\n\nfunction TSPropertySignature(node) {\n  const {\n    readonly,\n    initializer\n  } = node;\n\n  if (readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this.tsPrintPropertyOrMethodName(node);\n  this.print(node.typeAnnotation, node);\n\n  if (initializer) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(initializer, node);\n  }\n\n  this.token(\";\");\n}\n\nfunction tsPrintPropertyOrMethodName(node) {\n  if (node.computed) {\n    this.token(\"[\");\n  }\n\n  this.print(node.key, node);\n\n  if (node.computed) {\n    this.token(\"]\");\n  }\n\n  if (node.optional) {\n    this.token(\"?\");\n  }\n}\n\nfunction TSMethodSignature(node) {\n  this.tsPrintPropertyOrMethodName(node);\n  this.tsPrintSignatureDeclarationBase(node);\n  this.token(\";\");\n}\n\nfunction TSIndexSignature(node) {\n  const {\n    readonly\n  } = node;\n\n  if (readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this.token(\"[\");\n\n  this._parameters(node.parameters, node);\n\n  this.token(\"]\");\n  this.print(node.typeAnnotation, node);\n  this.token(\";\");\n}\n\nfunction TSAnyKeyword() {\n  this.word(\"any\");\n}\n\nfunction TSBigIntKeyword() {\n  this.word(\"bigint\");\n}\n\nfunction TSUnknownKeyword() {\n  this.word(\"unknown\");\n}\n\nfunction TSNumberKeyword() {\n  this.word(\"number\");\n}\n\nfunction TSObjectKeyword() {\n  this.word(\"object\");\n}\n\nfunction TSBooleanKeyword() {\n  this.word(\"boolean\");\n}\n\nfunction TSStringKeyword() {\n  this.word(\"string\");\n}\n\nfunction TSSymbolKeyword() {\n  this.word(\"symbol\");\n}\n\nfunction TSVoidKeyword() {\n  this.word(\"void\");\n}\n\nfunction TSUndefinedKeyword() {\n  this.word(\"undefined\");\n}\n\nfunction TSNullKeyword() {\n  this.word(\"null\");\n}\n\nfunction TSNeverKeyword() {\n  this.word(\"never\");\n}\n\nfunction TSIntrinsicKeyword() {\n  this.word(\"intrinsic\");\n}\n\nfunction TSThisType() {\n  this.word(\"this\");\n}\n\nfunction TSFunctionType(node) {\n  this.tsPrintFunctionOrConstructorType(node);\n}\n\nfunction TSConstructorType(node) {\n  this.word(\"new\");\n  this.space();\n  this.tsPrintFunctionOrConstructorType(node);\n}\n\nfunction tsPrintFunctionOrConstructorType(node) {\n  const {\n    typeParameters,\n    parameters\n  } = node;\n  this.print(typeParameters, node);\n  this.token(\"(\");\n\n  this._parameters(parameters, node);\n\n  this.token(\")\");\n  this.space();\n  this.token(\"=>\");\n  this.space();\n  this.print(node.typeAnnotation.typeAnnotation, node);\n}\n\nfunction TSTypeReference(node) {\n  this.print(node.typeName, node);\n  this.print(node.typeParameters, node);\n}\n\nfunction TSTypePredicate(node) {\n  if (node.asserts) {\n    this.word(\"asserts\");\n    this.space();\n  }\n\n  this.print(node.parameterName);\n\n  if (node.typeAnnotation) {\n    this.space();\n    this.word(\"is\");\n    this.space();\n    this.print(node.typeAnnotation.typeAnnotation);\n  }\n}\n\nfunction TSTypeQuery(node) {\n  this.word(\"typeof\");\n  this.space();\n  this.print(node.exprName);\n}\n\nfunction TSTypeLiteral(node) {\n  this.tsPrintTypeLiteralOrInterfaceBody(node.members, node);\n}\n\nfunction tsPrintTypeLiteralOrInterfaceBody(members, node) {\n  this.tsPrintBraced(members, node);\n}\n\nfunction tsPrintBraced(members, node) {\n  this.token(\"{\");\n\n  if (members.length) {\n    this.indent();\n    this.newline();\n\n    for (const member of members) {\n      this.print(member, node);\n      this.newline();\n    }\n\n    this.dedent();\n    this.rightBrace();\n  } else {\n    this.token(\"}\");\n  }\n}\n\nfunction TSArrayType(node) {\n  this.print(node.elementType, node);\n  this.token(\"[]\");\n}\n\nfunction TSTupleType(node) {\n  this.token(\"[\");\n  this.printList(node.elementTypes, node);\n  this.token(\"]\");\n}\n\nfunction TSOptionalType(node) {\n  this.print(node.typeAnnotation, node);\n  this.token(\"?\");\n}\n\nfunction TSRestType(node) {\n  this.token(\"...\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TSNamedTupleMember(node) {\n  this.print(node.label, node);\n  if (node.optional) this.token(\"?\");\n  this.token(\":\");\n  this.space();\n  this.print(node.elementType, node);\n}\n\nfunction TSUnionType(node) {\n  this.tsPrintUnionOrIntersectionType(node, \"|\");\n}\n\nfunction TSIntersectionType(node) {\n  this.tsPrintUnionOrIntersectionType(node, \"&\");\n}\n\nfunction tsPrintUnionOrIntersectionType(node, sep) {\n  this.printJoin(node.types, node, {\n    separator() {\n      this.space();\n      this.token(sep);\n      this.space();\n    }\n\n  });\n}\n\nfunction TSConditionalType(node) {\n  this.print(node.checkType);\n  this.space();\n  this.word(\"extends\");\n  this.space();\n  this.print(node.extendsType);\n  this.space();\n  this.token(\"?\");\n  this.space();\n  this.print(node.trueType);\n  this.space();\n  this.token(\":\");\n  this.space();\n  this.print(node.falseType);\n}\n\nfunction TSInferType(node) {\n  this.token(\"infer\");\n  this.space();\n  this.print(node.typeParameter);\n}\n\nfunction TSParenthesizedType(node) {\n  this.token(\"(\");\n  this.print(node.typeAnnotation, node);\n  this.token(\")\");\n}\n\nfunction TSTypeOperator(node) {\n  this.word(node.operator);\n  this.space();\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TSIndexedAccessType(node) {\n  this.print(node.objectType, node);\n  this.token(\"[\");\n  this.print(node.indexType, node);\n  this.token(\"]\");\n}\n\nfunction TSMappedType(node) {\n  const {\n    nameType,\n    optional,\n    readonly,\n    typeParameter\n  } = node;\n  this.token(\"{\");\n  this.space();\n\n  if (readonly) {\n    tokenIfPlusMinus(this, readonly);\n    this.word(\"readonly\");\n    this.space();\n  }\n\n  this.token(\"[\");\n  this.word(typeParameter.name);\n  this.space();\n  this.word(\"in\");\n  this.space();\n  this.print(typeParameter.constraint, typeParameter);\n\n  if (nameType) {\n    this.space();\n    this.word(\"as\");\n    this.space();\n    this.print(nameType, node);\n  }\n\n  this.token(\"]\");\n\n  if (optional) {\n    tokenIfPlusMinus(this, optional);\n    this.token(\"?\");\n  }\n\n  this.token(\":\");\n  this.space();\n  this.print(node.typeAnnotation, node);\n  this.space();\n  this.token(\"}\");\n}\n\nfunction tokenIfPlusMinus(self, tok) {\n  if (tok !== true) {\n    self.token(tok);\n  }\n}\n\nfunction TSLiteralType(node) {\n  this.print(node.literal, node);\n}\n\nfunction TSExpressionWithTypeArguments(node) {\n  this.print(node.expression, node);\n  this.print(node.typeParameters, node);\n}\n\nfunction TSInterfaceDeclaration(node) {\n  const {\n    declare,\n    id,\n    typeParameters,\n    extends: extendz,\n    body\n  } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"interface\");\n  this.space();\n  this.print(id, node);\n  this.print(typeParameters, node);\n\n  if (extendz) {\n    this.space();\n    this.word(\"extends\");\n    this.space();\n    this.printList(extendz, node);\n  }\n\n  this.space();\n  this.print(body, node);\n}\n\nfunction TSInterfaceBody(node) {\n  this.tsPrintTypeLiteralOrInterfaceBody(node.body, node);\n}\n\nfunction TSTypeAliasDeclaration(node) {\n  const {\n    declare,\n    id,\n    typeParameters,\n    typeAnnotation\n  } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  this.word(\"type\");\n  this.space();\n  this.print(id, node);\n  this.print(typeParameters, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(typeAnnotation, node);\n  this.token(\";\");\n}\n\nfunction TSAsExpression(node) {\n  const {\n    expression,\n    typeAnnotation\n  } = node;\n  this.print(expression, node);\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.print(typeAnnotation, node);\n}\n\nfunction TSTypeAssertion(node) {\n  const {\n    typeAnnotation,\n    expression\n  } = node;\n  this.token(\"<\");\n  this.print(typeAnnotation, node);\n  this.token(\">\");\n  this.space();\n  this.print(expression, node);\n}\n\nfunction TSEnumDeclaration(node) {\n  const {\n    declare,\n    const: isConst,\n    id,\n    members\n  } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (isConst) {\n    this.word(\"const\");\n    this.space();\n  }\n\n  this.word(\"enum\");\n  this.space();\n  this.print(id, node);\n  this.space();\n  this.tsPrintBraced(members, node);\n}\n\nfunction TSEnumMember(node) {\n  const {\n    id,\n    initializer\n  } = node;\n  this.print(id, node);\n\n  if (initializer) {\n    this.space();\n    this.token(\"=\");\n    this.space();\n    this.print(initializer, node);\n  }\n\n  this.token(\",\");\n}\n\nfunction TSModuleDeclaration(node) {\n  const {\n    declare,\n    id\n  } = node;\n\n  if (declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (!node.global) {\n    this.word(id.type === \"Identifier\" ? \"namespace\" : \"module\");\n    this.space();\n  }\n\n  this.print(id, node);\n\n  if (!node.body) {\n    this.token(\";\");\n    return;\n  }\n\n  let body = node.body;\n\n  while (body.type === \"TSModuleDeclaration\") {\n    this.token(\".\");\n    this.print(body.id, body);\n    body = body.body;\n  }\n\n  this.space();\n  this.print(body, node);\n}\n\nfunction TSModuleBlock(node) {\n  this.tsPrintBraced(node.body, node);\n}\n\nfunction TSImportType(node) {\n  const {\n    argument,\n    qualifier,\n    typeParameters\n  } = node;\n  this.word(\"import\");\n  this.token(\"(\");\n  this.print(argument, node);\n  this.token(\")\");\n\n  if (qualifier) {\n    this.token(\".\");\n    this.print(qualifier, node);\n  }\n\n  if (typeParameters) {\n    this.print(typeParameters, node);\n  }\n}\n\nfunction TSImportEqualsDeclaration(node) {\n  const {\n    isExport,\n    id,\n    moduleReference\n  } = node;\n\n  if (isExport) {\n    this.word(\"export\");\n    this.space();\n  }\n\n  this.word(\"import\");\n  this.space();\n  this.print(id, node);\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(moduleReference, node);\n  this.token(\";\");\n}\n\nfunction TSExternalModuleReference(node) {\n  this.token(\"require(\");\n  this.print(node.expression, node);\n  this.token(\")\");\n}\n\nfunction TSNonNullExpression(node) {\n  this.print(node.expression, node);\n  this.token(\"!\");\n}\n\nfunction TSExportAssignment(node) {\n  this.word(\"export\");\n  this.space();\n  this.token(\"=\");\n  this.space();\n  this.print(node.expression, node);\n  this.token(\";\");\n}\n\nfunction TSNamespaceExportDeclaration(node) {\n  this.word(\"export\");\n  this.space();\n  this.word(\"as\");\n  this.space();\n  this.word(\"namespace\");\n  this.space();\n  this.print(node.id, node);\n}\n\nfunction tsPrintSignatureDeclarationBase(node) {\n  const {\n    typeParameters,\n    parameters\n  } = node;\n  this.print(typeParameters, node);\n  this.token(\"(\");\n\n  this._parameters(parameters, node);\n\n  this.token(\")\");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction tsPrintClassMemberModifiers(node, isField) {\n  if (isField && node.declare) {\n    this.word(\"declare\");\n    this.space();\n  }\n\n  if (node.accessibility) {\n    this.word(node.accessibility);\n    this.space();\n  }\n\n  if (node.static) {\n    this.word(\"static\");\n    this.space();\n  }\n\n  if (node.abstract) {\n    this.word(\"abstract\");\n    this.space();\n  }\n\n  if (isField && node.readonly) {\n    this.word(\"readonly\");\n    this.space();\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.CodeGenerator = void 0;\n\nvar _sourceMap = _interopRequireDefault(require(\"./source-map\"));\n\nvar _printer = _interopRequireDefault(require(\"./printer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass Generator extends _printer.default {\n  constructor(ast, opts = {}, code) {\n    const format = normalizeOptions(code, opts);\n    const map = opts.sourceMaps ? new _sourceMap.default(opts, code) : null;\n    super(format, map);\n    this.ast = void 0;\n    this.ast = ast;\n  }\n\n  generate() {\n    return super.generate(this.ast);\n  }\n\n}\n\nfunction normalizeOptions(code, opts) {\n  const format = {\n    auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n    auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n    shouldPrintComment: opts.shouldPrintComment,\n    retainLines: opts.retainLines,\n    retainFunctionParens: opts.retainFunctionParens,\n    comments: opts.comments == null || opts.comments,\n    compact: opts.compact,\n    minified: opts.minified,\n    concise: opts.concise,\n    jsonCompatibleStrings: opts.jsonCompatibleStrings,\n    indent: {\n      adjustMultilineComment: true,\n      style: \"  \",\n      base: 0\n    },\n    decoratorsBeforeExport: !!opts.decoratorsBeforeExport,\n    jsescOption: Object.assign({\n      quotes: \"double\",\n      wrap: true\n    }, opts.jsescOption),\n    recordAndTupleSyntaxType: opts.recordAndTupleSyntaxType\n  };\n\n  if (format.minified) {\n    format.compact = true;\n\n    format.shouldPrintComment = format.shouldPrintComment || (() => format.comments);\n  } else {\n    format.shouldPrintComment = format.shouldPrintComment || (value => format.comments || value.indexOf(\"@license\") >= 0 || value.indexOf(\"@preserve\") >= 0);\n  }\n\n  if (format.compact === \"auto\") {\n    format.compact = code.length > 500000;\n\n    if (format.compact) {\n      console.error(\"[BABEL] Note: The code generator has deoptimised the styling of \" + `${opts.filename} as it exceeds the max of ${\"500KB\"}.`);\n    }\n  }\n\n  if (format.compact) {\n    format.indent.adjustMultilineComment = false;\n  }\n\n  return format;\n}\n\nclass CodeGenerator {\n  constructor(ast, opts, code) {\n    this._generator = new Generator(ast, opts, code);\n  }\n\n  generate() {\n    return this._generator.generate();\n  }\n\n}\n\nexports.CodeGenerator = CodeGenerator;\n\nfunction _default(ast, opts, code) {\n  const gen = new Generator(ast, opts, code);\n  return gen.generate();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.needsWhitespace = needsWhitespace;\nexports.needsWhitespaceBefore = needsWhitespaceBefore;\nexports.needsWhitespaceAfter = needsWhitespaceAfter;\nexports.needsParens = needsParens;\n\nvar whitespace = _interopRequireWildcard(require(\"./whitespace\"));\n\nvar parens = _interopRequireWildcard(require(\"./parentheses\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction expandAliases(obj) {\n  const newObj = {};\n\n  function add(type, func) {\n    const fn = newObj[type];\n    newObj[type] = fn ? function (node, parent, stack) {\n      const result = fn(node, parent, stack);\n      return result == null ? func(node, parent, stack) : result;\n    } : func;\n  }\n\n  for (const type of Object.keys(obj)) {\n    const aliases = t.FLIPPED_ALIAS_KEYS[type];\n\n    if (aliases) {\n      for (const alias of aliases) {\n        add(alias, obj[type]);\n      }\n    } else {\n      add(type, obj[type]);\n    }\n  }\n\n  return newObj;\n}\n\nconst expandedParens = expandAliases(parens);\nconst expandedWhitespaceNodes = expandAliases(whitespace.nodes);\nconst expandedWhitespaceList = expandAliases(whitespace.list);\n\nfunction find(obj, node, parent, printStack) {\n  const fn = obj[node.type];\n  return fn ? fn(node, parent, printStack) : null;\n}\n\nfunction isOrHasCallExpression(node) {\n  if (t.isCallExpression(node)) {\n    return true;\n  }\n\n  return t.isMemberExpression(node) && isOrHasCallExpression(node.object);\n}\n\nfunction needsWhitespace(node, parent, type) {\n  if (!node) return 0;\n\n  if (t.isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  let linesInfo = find(expandedWhitespaceNodes, node, parent);\n\n  if (!linesInfo) {\n    const items = find(expandedWhitespaceList, node, parent);\n\n    if (items) {\n      for (let i = 0; i < items.length; i++) {\n        linesInfo = needsWhitespace(items[i], node, type);\n        if (linesInfo) break;\n      }\n    }\n  }\n\n  if (typeof linesInfo === \"object\" && linesInfo !== null) {\n    return linesInfo[type] || 0;\n  }\n\n  return 0;\n}\n\nfunction needsWhitespaceBefore(node, parent) {\n  return needsWhitespace(node, parent, \"before\");\n}\n\nfunction needsWhitespaceAfter(node, parent) {\n  return needsWhitespace(node, parent, \"after\");\n}\n\nfunction needsParens(node, parent, printStack) {\n  if (!parent) return false;\n\n  if (t.isNewExpression(parent) && parent.callee === node) {\n    if (isOrHasCallExpression(node)) return true;\n  }\n\n  return find(expandedParens, node, parent, printStack);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.FunctionTypeAnnotation = FunctionTypeAnnotation;\nexports.UpdateExpression = UpdateExpression;\nexports.ObjectExpression = ObjectExpression;\nexports.DoExpression = DoExpression;\nexports.Binary = Binary;\nexports.IntersectionTypeAnnotation = exports.UnionTypeAnnotation = UnionTypeAnnotation;\nexports.TSAsExpression = TSAsExpression;\nexports.TSTypeAssertion = TSTypeAssertion;\nexports.TSIntersectionType = exports.TSUnionType = TSUnionType;\nexports.TSInferType = TSInferType;\nexports.BinaryExpression = BinaryExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.AwaitExpression = exports.YieldExpression = YieldExpression;\nexports.ClassExpression = ClassExpression;\nexports.UnaryLike = UnaryLike;\nexports.FunctionExpression = FunctionExpression;\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.OptionalCallExpression = exports.OptionalMemberExpression = OptionalMemberExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.LogicalExpression = LogicalExpression;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst PRECEDENCE = {\n  \"||\": 0,\n  \"??\": 0,\n  \"&&\": 1,\n  \"|\": 2,\n  \"^\": 3,\n  \"&\": 4,\n  \"==\": 5,\n  \"===\": 5,\n  \"!=\": 5,\n  \"!==\": 5,\n  \"<\": 6,\n  \">\": 6,\n  \"<=\": 6,\n  \">=\": 6,\n  in: 6,\n  instanceof: 6,\n  \">>\": 7,\n  \"<<\": 7,\n  \">>>\": 7,\n  \"+\": 8,\n  \"-\": 8,\n  \"*\": 9,\n  \"/\": 9,\n  \"%\": 9,\n  \"**\": 10\n};\n\nconst isClassExtendsClause = (node, parent) => (t.isClassDeclaration(parent) || t.isClassExpression(parent)) && parent.superClass === node;\n\nconst hasPostfixPart = (node, parent) => (t.isMemberExpression(parent) || t.isOptionalMemberExpression(parent)) && parent.object === node || (t.isCallExpression(parent) || t.isOptionalCallExpression(parent) || t.isNewExpression(parent)) && parent.callee === node || t.isTaggedTemplateExpression(parent) && parent.tag === node || t.isTSNonNullExpression(parent);\n\nfunction NullableTypeAnnotation(node, parent) {\n  return t.isArrayTypeAnnotation(parent);\n}\n\nfunction FunctionTypeAnnotation(node, parent, printStack) {\n  return t.isUnionTypeAnnotation(parent) || t.isIntersectionTypeAnnotation(parent) || t.isArrayTypeAnnotation(parent) || t.isTypeAnnotation(parent) && t.isArrowFunctionExpression(printStack[printStack.length - 3]);\n}\n\nfunction UpdateExpression(node, parent) {\n  return hasPostfixPart(node, parent) || isClassExtendsClause(node, parent);\n}\n\nfunction ObjectExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, {\n    considerArrow: true\n  });\n}\n\nfunction DoExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack);\n}\n\nfunction Binary(node, parent) {\n  if (node.operator === \"**\" && t.isBinaryExpression(parent, {\n    operator: \"**\"\n  })) {\n    return parent.left === node;\n  }\n\n  if (isClassExtendsClause(node, parent)) {\n    return true;\n  }\n\n  if (hasPostfixPart(node, parent) || t.isUnaryLike(parent) || t.isAwaitExpression(parent)) {\n    return true;\n  }\n\n  if (t.isBinary(parent)) {\n    const parentOp = parent.operator;\n    const parentPos = PRECEDENCE[parentOp];\n    const nodeOp = node.operator;\n    const nodePos = PRECEDENCE[nodeOp];\n\n    if (parentPos === nodePos && parent.right === node && !t.isLogicalExpression(parent) || parentPos > nodePos) {\n      return true;\n    }\n  }\n}\n\nfunction UnionTypeAnnotation(node, parent) {\n  return t.isArrayTypeAnnotation(parent) || t.isNullableTypeAnnotation(parent) || t.isIntersectionTypeAnnotation(parent) || t.isUnionTypeAnnotation(parent);\n}\n\nfunction TSAsExpression() {\n  return true;\n}\n\nfunction TSTypeAssertion() {\n  return true;\n}\n\nfunction TSUnionType(node, parent) {\n  return t.isTSArrayType(parent) || t.isTSOptionalType(parent) || t.isTSIntersectionType(parent) || t.isTSUnionType(parent) || t.isTSRestType(parent);\n}\n\nfunction TSInferType(node, parent) {\n  return t.isTSArrayType(parent) || t.isTSOptionalType(parent);\n}\n\nfunction BinaryExpression(node, parent) {\n  return node.operator === \"in\" && (t.isVariableDeclarator(parent) || t.isFor(parent));\n}\n\nfunction SequenceExpression(node, parent) {\n  if (t.isForStatement(parent) || t.isThrowStatement(parent) || t.isReturnStatement(parent) || t.isIfStatement(parent) && parent.test === node || t.isWhileStatement(parent) && parent.test === node || t.isForInStatement(parent) && parent.right === node || t.isSwitchStatement(parent) && parent.discriminant === node || t.isExpressionStatement(parent) && parent.expression === node) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction YieldExpression(node, parent) {\n  return t.isBinary(parent) || t.isUnaryLike(parent) || hasPostfixPart(node, parent) || t.isAwaitExpression(parent) && t.isYieldExpression(node) || t.isConditionalExpression(parent) && node === parent.test || isClassExtendsClause(node, parent);\n}\n\nfunction ClassExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, {\n    considerDefaultExports: true\n  });\n}\n\nfunction UnaryLike(node, parent) {\n  return hasPostfixPart(node, parent) || t.isBinaryExpression(parent, {\n    operator: \"**\",\n    left: node\n  }) || isClassExtendsClause(node, parent);\n}\n\nfunction FunctionExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, {\n    considerDefaultExports: true\n  });\n}\n\nfunction ArrowFunctionExpression(node, parent) {\n  return t.isExportDeclaration(parent) || ConditionalExpression(node, parent);\n}\n\nfunction ConditionalExpression(node, parent) {\n  if (t.isUnaryLike(parent) || t.isBinary(parent) || t.isConditionalExpression(parent, {\n    test: node\n  }) || t.isAwaitExpression(parent) || t.isTSTypeAssertion(parent) || t.isTSAsExpression(parent)) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nfunction OptionalMemberExpression(node, parent) {\n  return t.isCallExpression(parent, {\n    callee: node\n  }) || t.isMemberExpression(parent, {\n    object: node\n  });\n}\n\nfunction AssignmentExpression(node, parent, printStack) {\n  if (t.isObjectPattern(node.left)) {\n    return true;\n  } else {\n    return ConditionalExpression(node, parent, printStack);\n  }\n}\n\nfunction LogicalExpression(node, parent) {\n  switch (node.operator) {\n    case \"||\":\n      if (!t.isLogicalExpression(parent)) return false;\n      return parent.operator === \"??\" || parent.operator === \"&&\";\n\n    case \"&&\":\n      return t.isLogicalExpression(parent, {\n        operator: \"??\"\n      });\n\n    case \"??\":\n      return t.isLogicalExpression(parent) && parent.operator !== \"??\";\n  }\n}\n\nfunction isFirstInStatement(printStack, {\n  considerArrow = false,\n  considerDefaultExports = false\n} = {}) {\n  let i = printStack.length - 1;\n  let node = printStack[i];\n  i--;\n  let parent = printStack[i];\n\n  while (i >= 0) {\n    if (t.isExpressionStatement(parent, {\n      expression: node\n    }) || considerDefaultExports && t.isExportDefaultDeclaration(parent, {\n      declaration: node\n    }) || considerArrow && t.isArrowFunctionExpression(parent, {\n      body: node\n    })) {\n      return true;\n    }\n\n    if (hasPostfixPart(node, parent) && !t.isNewExpression(parent) || t.isSequenceExpression(parent) && parent.expressions[0] === node || t.isConditional(parent, {\n      test: node\n    }) || t.isBinary(parent, {\n      left: node\n    }) || t.isAssignmentExpression(parent, {\n      left: node\n    })) {\n      node = parent;\n      i--;\n      parent = printStack[i];\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.list = exports.nodes = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction crawl(node, state = {}) {\n  if (t.isMemberExpression(node) || t.isOptionalMemberExpression(node)) {\n    crawl(node.object, state);\n    if (node.computed) crawl(node.property, state);\n  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {\n    crawl(node.left, state);\n    crawl(node.right, state);\n  } else if (t.isCallExpression(node) || t.isOptionalCallExpression(node)) {\n    state.hasCall = true;\n    crawl(node.callee, state);\n  } else if (t.isFunction(node)) {\n    state.hasFunction = true;\n  } else if (t.isIdentifier(node)) {\n    state.hasHelper = state.hasHelper || isHelper(node.callee);\n  }\n\n  return state;\n}\n\nfunction isHelper(node) {\n  if (t.isMemberExpression(node)) {\n    return isHelper(node.object) || isHelper(node.property);\n  } else if (t.isIdentifier(node)) {\n    return node.name === \"require\" || node.name[0] === \"_\";\n  } else if (t.isCallExpression(node)) {\n    return isHelper(node.callee);\n  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {\n    return t.isIdentifier(node.left) && isHelper(node.left) || isHelper(node.right);\n  } else {\n    return false;\n  }\n}\n\nfunction isType(node) {\n  return t.isLiteral(node) || t.isObjectExpression(node) || t.isArrayExpression(node) || t.isIdentifier(node) || t.isMemberExpression(node);\n}\n\nconst nodes = {\n  AssignmentExpression(node) {\n    const state = crawl(node.right);\n\n    if (state.hasCall && state.hasHelper || state.hasFunction) {\n      return {\n        before: state.hasFunction,\n        after: true\n      };\n    }\n  },\n\n  SwitchCase(node, parent) {\n    return {\n      before: node.consequent.length || parent.cases[0] === node,\n      after: !node.consequent.length && parent.cases[parent.cases.length - 1] === node\n    };\n  },\n\n  LogicalExpression(node) {\n    if (t.isFunction(node.left) || t.isFunction(node.right)) {\n      return {\n        after: true\n      };\n    }\n  },\n\n  Literal(node) {\n    if (node.value === \"use strict\") {\n      return {\n        after: true\n      };\n    }\n  },\n\n  CallExpression(node) {\n    if (t.isFunction(node.callee) || isHelper(node)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n\n  OptionalCallExpression(node) {\n    if (t.isFunction(node.callee)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n\n  VariableDeclaration(node) {\n    for (let i = 0; i < node.declarations.length; i++) {\n      const declar = node.declarations[i];\n      let enabled = isHelper(declar.id) && !isType(declar.init);\n\n      if (!enabled) {\n        const state = crawl(declar.init);\n        enabled = isHelper(declar.init) && state.hasCall || state.hasFunction;\n      }\n\n      if (enabled) {\n        return {\n          before: true,\n          after: true\n        };\n      }\n    }\n  },\n\n  IfStatement(node) {\n    if (t.isBlockStatement(node.consequent)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  }\n\n};\nexports.nodes = nodes;\n\nnodes.ObjectProperty = nodes.ObjectTypeProperty = nodes.ObjectMethod = function (node, parent) {\n  if (parent.properties[0] === node) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeCallProperty = function (node, parent) {\n  var _parent$properties;\n\n  if (parent.callProperties[0] === node && !((_parent$properties = parent.properties) == null ? void 0 : _parent$properties.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeIndexer = function (node, parent) {\n  var _parent$properties2, _parent$callPropertie;\n\n  if (parent.indexers[0] === node && !((_parent$properties2 = parent.properties) == null ? void 0 : _parent$properties2.length) && !((_parent$callPropertie = parent.callProperties) == null ? void 0 : _parent$callPropertie.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nnodes.ObjectTypeInternalSlot = function (node, parent) {\n  var _parent$properties3, _parent$callPropertie2, _parent$indexers;\n\n  if (parent.internalSlots[0] === node && !((_parent$properties3 = parent.properties) == null ? void 0 : _parent$properties3.length) && !((_parent$callPropertie2 = parent.callProperties) == null ? void 0 : _parent$callPropertie2.length) && !((_parent$indexers = parent.indexers) == null ? void 0 : _parent$indexers.length)) {\n    return {\n      before: true\n    };\n  }\n};\n\nconst list = {\n  VariableDeclaration(node) {\n    return node.declarations.map(decl => decl.init);\n  },\n\n  ArrayExpression(node) {\n    return node.elements;\n  },\n\n  ObjectExpression(node) {\n    return node.properties;\n  }\n\n};\nexports.list = list;\n[[\"Function\", true], [\"Class\", true], [\"Loop\", true], [\"LabeledStatement\", true], [\"SwitchStatement\", true], [\"TryStatement\", true]].forEach(function ([type, amounts]) {\n  if (typeof amounts === \"boolean\") {\n    amounts = {\n      after: amounts,\n      before: amounts\n    };\n  }\n\n  [type].concat(t.FLIPPED_ALIAS_KEYS[type] || []).forEach(function (type) {\n    nodes[type] = function () {\n      return amounts;\n    };\n  });\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _buffer = _interopRequireDefault(require(\"./buffer\"));\n\nvar n = _interopRequireWildcard(require(\"./node\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar generatorFunctions = _interopRequireWildcard(require(\"./generators\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst SCIENTIFIC_NOTATION = /e/i;\nconst ZERO_DECIMAL_INTEGER = /\\.0+$/;\nconst NON_DECIMAL_LITERAL = /^0[box]/;\nconst PURE_ANNOTATION_RE = /^\\s*[@#]__PURE__\\s*$/;\n\nclass Printer {\n  constructor(format, map) {\n    this.inForStatementInitCounter = 0;\n    this._printStack = [];\n    this._indent = 0;\n    this._insideAux = false;\n    this._printedCommentStarts = {};\n    this._parenPushNewlineState = null;\n    this._noLineTerminator = false;\n    this._printAuxAfterOnNextUserNode = false;\n    this._printedComments = new WeakSet();\n    this._endsWithInteger = false;\n    this._endsWithWord = false;\n    this.format = format || {};\n    this._buf = new _buffer.default(map);\n  }\n\n  generate(ast) {\n    this.print(ast);\n\n    this._maybeAddAuxComment();\n\n    return this._buf.get();\n  }\n\n  indent() {\n    if (this.format.compact || this.format.concise) return;\n    this._indent++;\n  }\n\n  dedent() {\n    if (this.format.compact || this.format.concise) return;\n    this._indent--;\n  }\n\n  semicolon(force = false) {\n    this._maybeAddAuxComment();\n\n    this._append(\";\", !force);\n  }\n\n  rightBrace() {\n    if (this.format.minified) {\n      this._buf.removeLastSemicolon();\n    }\n\n    this.token(\"}\");\n  }\n\n  space(force = false) {\n    if (this.format.compact) return;\n\n    if (this._buf.hasContent() && !this.endsWith(\" \") && !this.endsWith(\"\\n\") || force) {\n      this._space();\n    }\n  }\n\n  word(str) {\n    if (this._endsWithWord || this.endsWith(\"/\") && str.indexOf(\"/\") === 0) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._append(str);\n\n    this._endsWithWord = true;\n  }\n\n  number(str) {\n    this.word(str);\n    this._endsWithInteger = Number.isInteger(+str) && !NON_DECIMAL_LITERAL.test(str) && !SCIENTIFIC_NOTATION.test(str) && !ZERO_DECIMAL_INTEGER.test(str) && str[str.length - 1] !== \".\";\n  }\n\n  token(str) {\n    if (str === \"--\" && this.endsWith(\"!\") || str[0] === \"+\" && this.endsWith(\"+\") || str[0] === \"-\" && this.endsWith(\"-\") || str[0] === \".\" && this._endsWithInteger) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n\n    this._append(str);\n  }\n\n  newline(i) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    if (this.endsWith(\"\\n\\n\")) return;\n    if (typeof i !== \"number\") i = 1;\n    i = Math.min(2, i);\n    if (this.endsWith(\"{\\n\") || this.endsWith(\":\\n\")) i--;\n    if (i <= 0) return;\n\n    for (let j = 0; j < i; j++) {\n      this._newline();\n    }\n  }\n\n  endsWith(str) {\n    return this._buf.endsWith(str);\n  }\n\n  removeTrailingNewline() {\n    this._buf.removeTrailingNewline();\n  }\n\n  exactSource(loc, cb) {\n    this._catchUp(\"start\", loc);\n\n    this._buf.exactSource(loc, cb);\n  }\n\n  source(prop, loc) {\n    this._catchUp(prop, loc);\n\n    this._buf.source(prop, loc);\n  }\n\n  withSource(prop, loc, cb) {\n    this._catchUp(prop, loc);\n\n    this._buf.withSource(prop, loc, cb);\n  }\n\n  _space() {\n    this._append(\" \", true);\n  }\n\n  _newline() {\n    this._append(\"\\n\", true);\n  }\n\n  _append(str, queue = false) {\n    this._maybeAddParen(str);\n\n    this._maybeIndent(str);\n\n    if (queue) this._buf.queue(str);else this._buf.append(str);\n    this._endsWithWord = false;\n    this._endsWithInteger = false;\n  }\n\n  _maybeIndent(str) {\n    if (this._indent && this.endsWith(\"\\n\") && str[0] !== \"\\n\") {\n      this._buf.queue(this._getIndent());\n    }\n  }\n\n  _maybeAddParen(str) {\n    const parenPushNewlineState = this._parenPushNewlineState;\n    if (!parenPushNewlineState) return;\n    let i;\n\n    for (i = 0; i < str.length && str[i] === \" \"; i++) continue;\n\n    if (i === str.length) {\n      return;\n    }\n\n    const cha = str[i];\n\n    if (cha !== \"\\n\") {\n      if (cha !== \"/\" || i + 1 === str.length) {\n        this._parenPushNewlineState = null;\n        return;\n      }\n\n      const chaPost = str[i + 1];\n\n      if (chaPost === \"*\") {\n        if (PURE_ANNOTATION_RE.test(str.slice(i + 2, str.length - 2))) {\n          return;\n        }\n      } else if (chaPost !== \"/\") {\n        this._parenPushNewlineState = null;\n        return;\n      }\n    }\n\n    this.token(\"(\");\n    this.indent();\n    parenPushNewlineState.printed = true;\n  }\n\n  _catchUp(prop, loc) {\n    if (!this.format.retainLines) return;\n    const pos = loc ? loc[prop] : null;\n\n    if ((pos == null ? void 0 : pos.line) != null) {\n      const count = pos.line - this._buf.getCurrentLine();\n\n      for (let i = 0; i < count; i++) {\n        this._newline();\n      }\n    }\n  }\n\n  _getIndent() {\n    return this.format.indent.style.repeat(this._indent);\n  }\n\n  startTerminatorless(isLabel = false) {\n    if (isLabel) {\n      this._noLineTerminator = true;\n      return null;\n    } else {\n      return this._parenPushNewlineState = {\n        printed: false\n      };\n    }\n  }\n\n  endTerminatorless(state) {\n    this._noLineTerminator = false;\n\n    if (state == null ? void 0 : state.printed) {\n      this.dedent();\n      this.newline();\n      this.token(\")\");\n    }\n  }\n\n  print(node, parent) {\n    if (!node) return;\n    const oldConcise = this.format.concise;\n\n    if (node._compact) {\n      this.format.concise = true;\n    }\n\n    const printMethod = this[node.type];\n\n    if (!printMethod) {\n      throw new ReferenceError(`unknown node of type ${JSON.stringify(node.type)} with constructor ${JSON.stringify(node == null ? void 0 : node.constructor.name)}`);\n    }\n\n    this._printStack.push(node);\n\n    const oldInAux = this._insideAux;\n    this._insideAux = !node.loc;\n\n    this._maybeAddAuxComment(this._insideAux && !oldInAux);\n\n    let needsParens = n.needsParens(node, parent, this._printStack);\n\n    if (this.format.retainFunctionParens && node.type === \"FunctionExpression\" && node.extra && node.extra.parenthesized) {\n      needsParens = true;\n    }\n\n    if (needsParens) this.token(\"(\");\n\n    this._printLeadingComments(node);\n\n    const loc = t.isProgram(node) || t.isFile(node) ? null : node.loc;\n    this.withSource(\"start\", loc, () => {\n      printMethod.call(this, node, parent);\n    });\n\n    this._printTrailingComments(node);\n\n    if (needsParens) this.token(\")\");\n\n    this._printStack.pop();\n\n    this.format.concise = oldConcise;\n    this._insideAux = oldInAux;\n  }\n\n  _maybeAddAuxComment(enteredPositionlessNode) {\n    if (enteredPositionlessNode) this._printAuxBeforeComment();\n    if (!this._insideAux) this._printAuxAfterComment();\n  }\n\n  _printAuxBeforeComment() {\n    if (this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = true;\n    const comment = this.format.auxiliaryCommentBefore;\n\n    if (comment) {\n      this._printComment({\n        type: \"CommentBlock\",\n        value: comment\n      });\n    }\n  }\n\n  _printAuxAfterComment() {\n    if (!this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = false;\n    const comment = this.format.auxiliaryCommentAfter;\n\n    if (comment) {\n      this._printComment({\n        type: \"CommentBlock\",\n        value: comment\n      });\n    }\n  }\n\n  getPossibleRaw(node) {\n    const extra = node.extra;\n\n    if (extra && extra.raw != null && extra.rawValue != null && node.value === extra.rawValue) {\n      return extra.raw;\n    }\n  }\n\n  printJoin(nodes, parent, opts = {}) {\n    if (!(nodes == null ? void 0 : nodes.length)) return;\n    if (opts.indent) this.indent();\n    const newlineOpts = {\n      addNewlines: opts.addNewlines\n    };\n\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      if (!node) continue;\n      if (opts.statement) this._printNewline(true, node, parent, newlineOpts);\n      this.print(node, parent);\n\n      if (opts.iterator) {\n        opts.iterator(node, i);\n      }\n\n      if (opts.separator && i < nodes.length - 1) {\n        opts.separator.call(this);\n      }\n\n      if (opts.statement) this._printNewline(false, node, parent, newlineOpts);\n    }\n\n    if (opts.indent) this.dedent();\n  }\n\n  printAndIndentOnComments(node, parent) {\n    const indent = node.leadingComments && node.leadingComments.length > 0;\n    if (indent) this.indent();\n    this.print(node, parent);\n    if (indent) this.dedent();\n  }\n\n  printBlock(parent) {\n    const node = parent.body;\n\n    if (!t.isEmptyStatement(node)) {\n      this.space();\n    }\n\n    this.print(node, parent);\n  }\n\n  _printTrailingComments(node) {\n    this._printComments(this._getComments(false, node));\n  }\n\n  _printLeadingComments(node) {\n    this._printComments(this._getComments(true, node), true);\n  }\n\n  printInnerComments(node, indent = true) {\n    var _node$innerComments;\n\n    if (!((_node$innerComments = node.innerComments) == null ? void 0 : _node$innerComments.length)) return;\n    if (indent) this.indent();\n\n    this._printComments(node.innerComments);\n\n    if (indent) this.dedent();\n  }\n\n  printSequence(nodes, parent, opts = {}) {\n    opts.statement = true;\n    return this.printJoin(nodes, parent, opts);\n  }\n\n  printList(items, parent, opts = {}) {\n    if (opts.separator == null) {\n      opts.separator = commaSeparator;\n    }\n\n    return this.printJoin(items, parent, opts);\n  }\n\n  _printNewline(leading, node, parent, opts) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    let lines = 0;\n\n    if (this._buf.hasContent()) {\n      if (!leading) lines++;\n      if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;\n      const needs = leading ? n.needsWhitespaceBefore : n.needsWhitespaceAfter;\n      if (needs(node, parent)) lines++;\n    }\n\n    this.newline(lines);\n  }\n\n  _getComments(leading, node) {\n    return node && (leading ? node.leadingComments : node.trailingComments) || [];\n  }\n\n  _printComment(comment, skipNewLines) {\n    if (!this.format.shouldPrintComment(comment.value)) return;\n    if (comment.ignore) return;\n    if (this._printedComments.has(comment)) return;\n\n    this._printedComments.add(comment);\n\n    if (comment.start != null) {\n      if (this._printedCommentStarts[comment.start]) return;\n      this._printedCommentStarts[comment.start] = true;\n    }\n\n    const isBlockComment = comment.type === \"CommentBlock\";\n    const printNewLines = isBlockComment && !skipNewLines && !this._noLineTerminator;\n    if (printNewLines && this._buf.hasContent()) this.newline(1);\n    if (!this.endsWith(\"[\") && !this.endsWith(\"{\")) this.space();\n    let val = !isBlockComment && !this._noLineTerminator ? `//${comment.value}\\n` : `/*${comment.value}*/`;\n\n    if (isBlockComment && this.format.indent.adjustMultilineComment) {\n      var _comment$loc;\n\n      const offset = (_comment$loc = comment.loc) == null ? void 0 : _comment$loc.start.column;\n\n      if (offset) {\n        const newlineRegex = new RegExp(\"\\\\n\\\\s{1,\" + offset + \"}\", \"g\");\n        val = val.replace(newlineRegex, \"\\n\");\n      }\n\n      const indentSize = Math.max(this._getIndent().length, this.format.retainLines ? 0 : this._buf.getCurrentColumn());\n      val = val.replace(/\\n(?!$)/g, `\\n${\" \".repeat(indentSize)}`);\n    }\n\n    if (this.endsWith(\"/\")) this._space();\n    this.withSource(\"start\", comment.loc, () => {\n      this._append(val);\n    });\n    if (printNewLines) this.newline(1);\n  }\n\n  _printComments(comments, inlinePureAnnotation) {\n    if (!(comments == null ? void 0 : comments.length)) return;\n\n    if (inlinePureAnnotation && comments.length === 1 && PURE_ANNOTATION_RE.test(comments[0].value)) {\n      this._printComment(comments[0], this._buf.hasContent() && !this.endsWith(\"\\n\"));\n    } else {\n      for (const comment of comments) {\n        this._printComment(comment);\n      }\n    }\n  }\n\n  printAssertions(node) {\n    var _node$assertions;\n\n    if ((_node$assertions = node.assertions) == null ? void 0 : _node$assertions.length) {\n      this.space();\n      this.word(\"assert\");\n      this.space();\n      this.token(\"{\");\n      this.space();\n      this.printList(node.assertions, node);\n      this.space();\n      this.token(\"}\");\n    }\n  }\n\n}\n\nexports.default = Printer;\nObject.assign(Printer.prototype, generatorFunctions);\n\nfunction commaSeparator() {\n  this.token(\",\");\n  this.space();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sourceMap = _interopRequireDefault(require(\"source-map\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass SourceMap {\n  constructor(opts, code) {\n    this._cachedMap = null;\n    this._code = code;\n    this._opts = opts;\n    this._rawMappings = [];\n  }\n\n  get() {\n    if (!this._cachedMap) {\n      const map = this._cachedMap = new _sourceMap.default.SourceMapGenerator({\n        sourceRoot: this._opts.sourceRoot\n      });\n      const code = this._code;\n\n      if (typeof code === \"string\") {\n        map.setSourceContent(this._opts.sourceFileName.replace(/\\\\/g, \"/\"), code);\n      } else if (typeof code === \"object\") {\n        Object.keys(code).forEach(sourceFileName => {\n          map.setSourceContent(sourceFileName.replace(/\\\\/g, \"/\"), code[sourceFileName]);\n        });\n      }\n\n      this._rawMappings.forEach(mapping => map.addMapping(mapping), map);\n    }\n\n    return this._cachedMap.toJSON();\n  }\n\n  getRawMappings() {\n    return this._rawMappings.slice();\n  }\n\n  mark(generatedLine, generatedColumn, line, column, identifierName, filename, force) {\n    if (this._lastGenLine !== generatedLine && line === null) return;\n\n    if (!force && this._lastGenLine === generatedLine && this._lastSourceLine === line && this._lastSourceColumn === column) {\n      return;\n    }\n\n    this._cachedMap = null;\n    this._lastGenLine = generatedLine;\n    this._lastSourceLine = line;\n    this._lastSourceColumn = column;\n\n    this._rawMappings.push({\n      name: identifierName || undefined,\n      generated: {\n        line: generatedLine,\n        column: generatedColumn\n      },\n      source: line == null ? undefined : (filename || this._opts.sourceFileName).replace(/\\\\/g, \"/\"),\n      original: line == null ? undefined : {\n        line: line,\n        column: column\n      }\n    });\n  }\n\n}\n\nexports.default = SourceMap;","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: $ReadOnlyArray<number>): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (const char of Array.from(name)) {\n    const cp = char.codePointAt(0);\n    if (isFirst) {\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n      isFirst = false;\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","// @flow\n\nconst reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../parser\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport type { Options } from \"../options\";\nimport type { Pos, Position } from \"../util/location\";\nimport type State from \"../tokenizer/state\";\nimport { types as tc } from \"../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart, isKeyword } from \"../util/identifier\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport { Errors } from \"../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized:\n    \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName:\n    \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues:\n    \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType:\n    \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied:\n    \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType:\n    \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType:\n    \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType:\n    \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName:\n    \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized:\n    \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized:\n    \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind:\n    \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: State): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\";\n\n    constructor(options: ?Options, input: string) {\n      super(options, input);\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(tt.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (\n        moduloLoc.line !== checksLoc.line ||\n        moduloLoc.column !== checksLoc.column - 1\n      ) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        name = this.parseIdentifier();\n        if (this.eat(tt.question)) {\n          optional = true;\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(\n      params: N.FlowFunctionTypeParam[] = [],\n    ): { params: N.FlowFunctionTypeParam[], rest: ?N.FlowFunctionTypeParam } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n      return { params, rest };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start,\n        startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      while (this.match(tt.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(tt.bracketL);\n        this.expect(tt.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const lookahead = this.lookahead();\n        if (lookahead.type === tt.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\"\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node));\n      } else {\n        return super.toAssignable(node);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(\n          expr,\n          bindingType,\n          checkClashes,\n          contextDescription,\n        );\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(\n        specifier.local,\n        BIND_LEXICAL,\n        undefined,\n        contextDescription,\n      );\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(\n            specifier.start,\n            Errors.ImportBindingIsString,\n            firstIdent.value,\n          );\n        }\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          firstIdentLoc,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(\n        specifier.local,\n        BIND_LEXICAL,\n        undefined,\n        \"import specifier\",\n      );\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral();\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      booleanMembers: Array<N.Node>,\n      numberMembers: Array<N.Node>,\n      stringMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      while (!this.match(tt.braceR)) {\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return members;\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const members = this.flowEnumMembers({ enumName, explicitType });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (\n        this.match(tt.name) &&\n        this.state.value === \"of\" &&\n        prevType === tt.name &&\n        this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) ===\n          \"interface\"\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\nexports.scope = exports.path = void 0;\nlet path = new WeakMap();\nexports.path = path;\nlet scope = new WeakMap();\nexports.scope = scope;\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new WeakMap();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new WeakMap();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"./path\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst testing = process.env.NODE_ENV === \"test\";\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = t.VISITOR_KEYS[node.type];\n    if (!(keys == null ? void 0 : keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) return true;\n    }\n\n    return false;\n  }\n\n  create(node, obj, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.trap) {\n      throw new Error(\"Infinite cycle detected\");\n    }\n\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = [];\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n\n      if (testing && queue.length >= 10000) {\n        this.trap = true;\n      }\n\n      if (visited.indexOf(path.node) >= 0) continue;\n      visited.push(path.node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Hub {\n  getCode() {}\n\n  getScope() {}\n\n  addHelper() {\n    throw new Error(\"Helpers are not supported by the default hub.\");\n  }\n\n  buildError(node, msg, Error = TypeError) {\n    return new Error(msg);\n  }\n\n}\n\nexports.default = Hub;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = traverse;\nObject.defineProperty(exports, \"NodePath\", {\n  enumerable: true,\n  get: function () {\n    return _path.default;\n  }\n});\nObject.defineProperty(exports, \"Scope\", {\n  enumerable: true,\n  get: function () {\n    return _scope.default;\n  }\n});\nObject.defineProperty(exports, \"Hub\", {\n  enumerable: true,\n  get: function () {\n    return _hub.default;\n  }\n});\nexports.visitors = void 0;\n\nvar _context = _interopRequireDefault(require(\"./context\"));\n\nvar visitors = _interopRequireWildcard(require(\"./visitors\"));\n\nexports.visitors = visitors;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar cache = _interopRequireWildcard(require(\"./cache\"));\n\nvar _path = _interopRequireDefault(require(\"./path\"));\n\nvar _scope = _interopRequireDefault(require(\"./scope\"));\n\nvar _hub = _interopRequireDefault(require(\"./hub\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction traverse(parent, opts, scope, state, parentPath) {\n  if (!parent) return;\n  if (!opts) opts = {};\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== \"Program\" && parent.type !== \"File\") {\n      throw new Error(\"You must pass a scope and parentPath unless traversing a Program/File. \" + `Instead of that you tried to traverse a ${parent.type} node without ` + \"passing scope and parentPath.\");\n    }\n  }\n\n  if (!t.VISITOR_KEYS[parent.type]) {\n    return;\n  }\n\n  visitors.explode(opts);\n  traverse.node(parent, opts, scope, state, parentPath);\n}\n\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.cheap = function (node, enter) {\n  return t.traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, parentPath, skipKeys) {\n  const keys = t.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  const context = new _context.default(scope, opts, state, parentPath);\n\n  for (const key of keys) {\n    if (skipKeys && skipKeys[key]) continue;\n    if (context.visit(node, key)) return;\n  }\n};\n\ntraverse.clearNode = function (node, opts) {\n  t.removeProperties(node, opts);\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  t.traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasDenylistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, type, denylistTypes) {\n  if (denylistTypes == null ? void 0 : denylistTypes.includes(tree.type)) return false;\n  if (tree.type === type) return true;\n  const state = {\n    has: false,\n    type: type\n  };\n  traverse(tree, {\n    noScope: true,\n    denylist: denylistTypes,\n    enter: hasDenylistedType\n  }, null, state);\n  return state.has;\n};\n\ntraverse.cache = cache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findParent = findParent;\nexports.find = find;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getAncestry = getAncestry;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.inType = inType;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _index = _interopRequireDefault(require(\"./index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = t.VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType() {\n  let path = this;\n\n  while (path) {\n    for (const type of arguments) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n  const node = this.node;\n  if (!node) return;\n  const trailing = node.trailingComments;\n  const leading = node.leadingComments;\n  if (!trailing && !leading) return;\n  const prev = this.getSibling(this.key - 1);\n  const next = this.getSibling(this.key + 1);\n  const hasPrev = Boolean(prev.node);\n  const hasNext = Boolean(next.node);\n\n  if (hasPrev && !hasNext) {\n    prev.addComments(\"trailing\", trailing);\n  } else if (hasNext && !hasPrev) {\n    next.addComments(\"leading\", leading);\n  }\n}\n\nfunction addComment(type, content, line) {\n  t.addComment(this.node, type, content, line);\n}\n\nfunction addComments(type, comments) {\n  t.addComments(this.node, type, comments);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.call = call;\nexports._call = _call;\nexports.isBlacklisted = exports.isDenylisted = isDenylisted;\nexports.visit = visit;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.setScope = setScope;\nexports.setContext = setContext;\nexports.resync = resync;\nexports._resyncParent = _resyncParent;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncRemoved = _resyncRemoved;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.setup = setup;\nexports.setKey = setKey;\nexports.requeue = requeue;\nexports._getQueueContexts = _getQueueContexts;\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nvar _index2 = require(\"./index\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction call(key) {\n  const opts = this.opts;\n  this.debug(key);\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n    const node = this.node;\n    if (!node) return true;\n    const ret = fn.call(this.state, this, this.state);\n\n    if (ret && typeof ret === \"object\" && typeof ret.then === \"function\") {\n      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n    }\n\n    if (ret) {\n      throw new Error(`Unexpected return value from visitor method ${fn}`);\n    }\n\n    if (this.node !== node) return true;\n    if (this._traverseFlags > 0) return true;\n  }\n\n  return false;\n}\n\nfunction isDenylisted() {\n  var _this$opts$denylist;\n\n  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;\n  return denylist && denylist.indexOf(this.node.type) > -1;\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isDenylisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  if (this.shouldSkip || this.call(\"enter\") || this.shouldSkip) {\n    this.debug(\"Skip...\");\n    return this.shouldStop;\n  }\n\n  this.debug(\"Recursing into...\");\n\n  _index.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n\n  this.call(\"exit\");\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  if (this.skipKeys == null) {\n    this.skipKeys = {};\n  }\n\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this._traverseFlags |= _index2.SHOULD_SKIP | _index2.SHOULD_STOP;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n  let path = this.parentPath;\n  let target;\n\n  while (path && !target) {\n    if (path.opts && path.opts.noScope) return;\n    target = path.scope;\n    path = path.parentPath;\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  if (this.skipKeys != null) {\n    this.skipKeys = {};\n  }\n\n  this._traverseFlags = 0;\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n\n  this._resyncList();\n\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n  if (this.node === this.container[this.key]) return;\n\n  if (Array.isArray(this.container)) {\n    for (let i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (const key of Object.keys(this.container)) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n  const newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n\n  if (this.contexts.length > 0) {\n    this.setContext(this.contexts[this.contexts.length - 1]);\n  } else {\n    this.setContext(undefined);\n  }\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.listKey = listKey;\n  this.container = container;\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  var _this$node;\n\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;\n}\n\nfunction requeue(pathToQueue = this) {\n  if (pathToQueue.removed) return;\n  const contexts = this.contexts;\n\n  for (const context of contexts) {\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  let path = this;\n  let contexts = this.contexts;\n\n  while (!contexts.length) {\n    path = path.parentPath;\n    if (!path) break;\n    contexts = path.contexts;\n  }\n\n  return contexts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction toComputedKey() {\n  const node = this.node;\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(t.returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(t.expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = t.blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const thisBinding = hoistFunctionEnvironment(this, specCompliant, allowInsertArrow);\n  this.ensureBlock();\n  this.node.type = \"FunctionExpression\";\n\n  if (specCompliant) {\n    const checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      this.parentPath.scope.push({\n        id: checkBinding,\n        init: t.objectExpression([])\n      });\n    }\n\n    this.get(\"body\").unshiftContainer(\"body\", t.expressionStatement(t.callExpression(this.hub.addHelper(\"newArrowCheck\"), [t.thisExpression(), checkBinding ? t.identifier(checkBinding.name) : t.identifier(thisBinding)])));\n    this.replaceWith(t.callExpression(t.memberExpression((0, _helperFunctionName.default)(this, true) || this.node, t.identifier(\"bind\")), [checkBinding ? t.identifier(checkBinding.name) : t.thisExpression()]));\n  }\n}\n\nfunction hoistFunctionEnvironment(fnPath, specCompliant = false, allowInsertArrow = true) {\n  const thisEnvFn = fnPath.findParent(p => {\n    return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({\n      static: false\n    });\n  });\n  const inConstructor = (thisEnvFn == null ? void 0 : thisEnvFn.node.kind) === \"constructor\";\n\n  if (thisEnvFn.isClassProperty()) {\n    throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        allSuperCalls.push(child);\n      }\n\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = t.identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => t.identifier(\"arguments\"));\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = t.identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => t.metaProperty(t.identifier(\"new\"), t.identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = t.identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const isAssignment = superProp.parentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superProp.parentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superProp.parentPath.node.right;\n        args.push(value);\n      }\n\n      const call = t.callExpression(t.identifier(superBinding), args);\n\n      if (isCall) {\n        superProp.parentPath.unshiftContainer(\"arguments\", t.thisExpression());\n        superProp.replaceWith(t.memberExpression(call, t.identifier(\"call\")));\n        thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superProp.parentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || specCompliant) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (!specCompliant || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? t.jsxIdentifier(thisBinding) : t.identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (specCompliant) thisBinding = null;\n    }\n  }\n\n  return thisBinding;\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    assignmentPath.node.operator = \"=\";\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, t.assignmentExpression(\"=\", tmp, superProp.node.property), true));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(tmp.name), true), value));\n    } else {\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, superProp.node.property));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(superProp.node.property.name)), value));\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [t.assignmentExpression(\"=\", tmp, t.memberExpression(superProp.node.object, computedKey ? t.assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), t.assignmentExpression(\"=\", t.memberExpression(superProp.node.object, computedKey ? t.identifier(computedKey.name) : superProp.node.property, superProp.node.computed), t.binaryExpression(\"+\", t.identifier(tmp.name), t.numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(t.identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(t.sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return t.thisExpression();\n    const supers = new WeakSet();\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        if (supers.has(child.node)) return;\n        supers.add(child.node);\n        child.replaceWithMultiple([child.node, t.assignmentExpression(\"=\", t.identifier(thisBinding), t.identifier(\"this\"))]);\n      }\n\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return t.arrowFunctionExpression([t.restElement(argsBinding)], t.callExpression(t.super(), [t.spreadElement(t.identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = t.memberExpression(t.super(), t.identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = t.memberExpression(t.super(), t.identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = t.assignmentExpression(\"=\", fnBody, t.identifier(valueIdent.name));\n    }\n\n    return t.arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse({\n    ClassProperty(child) {\n      child.skip();\n    },\n\n    Function(child) {\n      if (child.isArrowFunctionExpression()) return;\n      child.skip();\n    },\n\n    ThisExpression(child) {\n      thisPaths.push(child);\n    },\n\n    JSXIdentifier(child) {\n      if (child.node.name !== \"this\") return;\n\n      if (!child.parentPath.isJSXMemberExpression({\n        object: child.node\n      }) && !child.parentPath.isJSXOpeningElement({\n        name: child.node\n      })) {\n        return;\n      }\n\n      thisPaths.push(child);\n    },\n\n    CallExpression(child) {\n      if (child.get(\"callee\").isSuper()) superCalls.push(child);\n    },\n\n    MemberExpression(child) {\n      if (child.get(\"object\").isSuper()) superProps.push(child);\n    },\n\n    ReferencedIdentifier(child) {\n      if (child.node.name !== \"arguments\") return;\n      argumentsPaths.push(child);\n    },\n\n    MetaProperty(child) {\n      if (!child.get(\"meta\").isIdentifier({\n        name: \"new\"\n      })) return;\n      if (!child.get(\"property\").isIdentifier({\n        name: \"target\"\n      })) return;\n      newTargetPaths.push(child);\n    }\n\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\nconst VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nconst INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  const res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction deopt(path, state) {\n  if (!state.confident) return;\n  state.deoptPath = path;\n  state.confident = false;\n}\n\nfunction evaluateCached(path, state) {\n  const {\n    node\n  } = path;\n  const {\n    seen\n  } = state;\n\n  if (seen.has(node)) {\n    const existing = seen.get(node);\n\n    if (existing.resolved) {\n      return existing.value;\n    } else {\n      deopt(path, state);\n      return;\n    }\n  } else {\n    const item = {\n      resolved: false\n    };\n    seen.set(node, item);\n\n    const val = _evaluate(path, state);\n\n    if (state.confident) {\n      item.resolved = true;\n      item.value = val;\n    }\n\n    return val;\n  }\n}\n\nfunction _evaluate(path, state) {\n  if (!state.confident) return;\n  const {\n    node\n  } = path;\n\n  if (path.isSequenceExpression()) {\n    const exprs = path.get(\"expressions\");\n    return evaluateCached(exprs[exprs.length - 1], state);\n  }\n\n  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n    return node.value;\n  }\n\n  if (path.isNullLiteral()) {\n    return null;\n  }\n\n  if (path.isTemplateLiteral()) {\n    return evaluateQuasis(path, node.quasis, state);\n  }\n\n  if (path.isTaggedTemplateExpression() && path.get(\"tag\").isMemberExpression()) {\n    const object = path.get(\"tag.object\");\n    const {\n      node: {\n        name\n      }\n    } = object;\n    const property = path.get(\"tag.property\");\n\n    if (object.isIdentifier() && name === \"String\" && !path.scope.getBinding(name, true) && property.isIdentifier && property.node.name === \"raw\") {\n      return evaluateQuasis(path, node.quasi.quasis, state, true);\n    }\n  }\n\n  if (path.isConditionalExpression()) {\n    const testResult = evaluateCached(path.get(\"test\"), state);\n    if (!state.confident) return;\n\n    if (testResult) {\n      return evaluateCached(path.get(\"consequent\"), state);\n    } else {\n      return evaluateCached(path.get(\"alternate\"), state);\n    }\n  }\n\n  if (path.isExpressionWrapper()) {\n    return evaluateCached(path.get(\"expression\"), state);\n  }\n\n  if (path.isMemberExpression() && !path.parentPath.isCallExpression({\n    callee: node\n  })) {\n    const property = path.get(\"property\");\n    const object = path.get(\"object\");\n\n    if (object.isLiteral() && property.isIdentifier()) {\n      const value = object.node.value;\n      const type = typeof value;\n\n      if (type === \"number\" || type === \"string\") {\n        return value[property.node.name];\n      }\n    }\n  }\n\n  if (path.isReferencedIdentifier()) {\n    const binding = path.scope.getBinding(node.name);\n\n    if (binding && binding.constantViolations.length > 0) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding && path.node.start < binding.path.node.end) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding == null ? void 0 : binding.hasValue) {\n      return binding.value;\n    } else {\n      if (node.name === \"undefined\") {\n        return binding ? deopt(binding.path, state) : undefined;\n      } else if (node.name === \"Infinity\") {\n        return binding ? deopt(binding.path, state) : Infinity;\n      } else if (node.name === \"NaN\") {\n        return binding ? deopt(binding.path, state) : NaN;\n      }\n\n      const resolved = path.resolve();\n\n      if (resolved === path) {\n        return deopt(path, state);\n      } else {\n        return evaluateCached(resolved, state);\n      }\n    }\n  }\n\n  if (path.isUnaryExpression({\n    prefix: true\n  })) {\n    if (node.operator === \"void\") {\n      return undefined;\n    }\n\n    const argument = path.get(\"argument\");\n\n    if (node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n      return \"function\";\n    }\n\n    const arg = evaluateCached(argument, state);\n    if (!state.confident) return;\n\n    switch (node.operator) {\n      case \"!\":\n        return !arg;\n\n      case \"+\":\n        return +arg;\n\n      case \"-\":\n        return -arg;\n\n      case \"~\":\n        return ~arg;\n\n      case \"typeof\":\n        return typeof arg;\n    }\n  }\n\n  if (path.isArrayExpression()) {\n    const arr = [];\n    const elems = path.get(\"elements\");\n\n    for (const elem of elems) {\n      const elemValue = elem.evaluate();\n\n      if (elemValue.confident) {\n        arr.push(elemValue.value);\n      } else {\n        return deopt(elemValue.deopt, state);\n      }\n    }\n\n    return arr;\n  }\n\n  if (path.isObjectExpression()) {\n    const obj = {};\n    const props = path.get(\"properties\");\n\n    for (const prop of props) {\n      if (prop.isObjectMethod() || prop.isSpreadElement()) {\n        return deopt(prop, state);\n      }\n\n      const keyPath = prop.get(\"key\");\n      let key = keyPath;\n\n      if (prop.node.computed) {\n        key = key.evaluate();\n\n        if (!key.confident) {\n          return deopt(key.deopt, state);\n        }\n\n        key = key.value;\n      } else if (key.isIdentifier()) {\n        key = key.node.name;\n      } else {\n        key = key.node.value;\n      }\n\n      const valuePath = prop.get(\"value\");\n      let value = valuePath.evaluate();\n\n      if (!value.confident) {\n        return deopt(value.deopt, state);\n      }\n\n      value = value.value;\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  if (path.isLogicalExpression()) {\n    const wasConfident = state.confident;\n    const left = evaluateCached(path.get(\"left\"), state);\n    const leftConfident = state.confident;\n    state.confident = wasConfident;\n    const right = evaluateCached(path.get(\"right\"), state);\n    const rightConfident = state.confident;\n\n    switch (node.operator) {\n      case \"||\":\n        state.confident = leftConfident && (!!left || rightConfident);\n        if (!state.confident) return;\n        return left || right;\n\n      case \"&&\":\n        state.confident = leftConfident && (!left || rightConfident);\n        if (!state.confident) return;\n        return left && right;\n    }\n  }\n\n  if (path.isBinaryExpression()) {\n    const left = evaluateCached(path.get(\"left\"), state);\n    if (!state.confident) return;\n    const right = evaluateCached(path.get(\"right\"), state);\n    if (!state.confident) return;\n\n    switch (node.operator) {\n      case \"-\":\n        return left - right;\n\n      case \"+\":\n        return left + right;\n\n      case \"/\":\n        return left / right;\n\n      case \"*\":\n        return left * right;\n\n      case \"%\":\n        return left % right;\n\n      case \"**\":\n        return Math.pow(left, right);\n\n      case \"<\":\n        return left < right;\n\n      case \">\":\n        return left > right;\n\n      case \"<=\":\n        return left <= right;\n\n      case \">=\":\n        return left >= right;\n\n      case \"==\":\n        return left == right;\n\n      case \"!=\":\n        return left != right;\n\n      case \"===\":\n        return left === right;\n\n      case \"!==\":\n        return left !== right;\n\n      case \"|\":\n        return left | right;\n\n      case \"&\":\n        return left & right;\n\n      case \"^\":\n        return left ^ right;\n\n      case \"<<\":\n        return left << right;\n\n      case \">>\":\n        return left >> right;\n\n      case \">>>\":\n        return left >>> right;\n    }\n  }\n\n  if (path.isCallExpression()) {\n    const callee = path.get(\"callee\");\n    let context;\n    let func;\n\n    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name, true) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n      func = global[node.callee.name];\n    }\n\n    if (callee.isMemberExpression()) {\n      const object = callee.get(\"object\");\n      const property = callee.get(\"property\");\n\n      if (object.isIdentifier() && property.isIdentifier() && VALID_CALLEES.indexOf(object.node.name) >= 0 && INVALID_METHODS.indexOf(property.node.name) < 0) {\n        context = global[object.node.name];\n        func = context[property.node.name];\n      }\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        const type = typeof object.node.value;\n\n        if (type === \"string\" || type === \"number\") {\n          context = object.node.value;\n          func = context[property.node.name];\n        }\n      }\n    }\n\n    if (func) {\n      const args = path.get(\"arguments\").map(arg => evaluateCached(arg, state));\n      if (!state.confident) return;\n      return func.apply(context, args);\n    }\n  }\n\n  deopt(path, state);\n}\n\nfunction evaluateQuasis(path, quasis, state, raw = false) {\n  let str = \"\";\n  let i = 0;\n  const exprs = path.get(\"expressions\");\n\n  for (const elem of quasis) {\n    if (!state.confident) break;\n    str += raw ? elem.value.raw : elem.value.cooked;\n    const expr = exprs[i++];\n    if (expr) str += String(evaluateCached(expr, state));\n  }\n\n  if (!state.confident) return;\n  return str;\n}\n\nfunction evaluate() {\n  const state = {\n    confident: true,\n    deoptPath: null,\n    seen: new Map()\n  };\n  let value = evaluateCached(this, state);\n  if (!state.confident) value = undefined;\n  return {\n    confident: state.confident,\n    deopt: state.deoptPath,\n    value: value\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOpposite = getOpposite;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getSibling = getSibling;\nexports.getPrevSibling = getPrevSibling;\nexports.getNextSibling = getNextSibling;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.get = get;\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\n\nvar _index = _interopRequireDefault(require(\"./index\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getOpposite() {\n  if (this.key === \"left\") {\n    return this.getSibling(\"right\");\n  } else if (this.key === \"right\") {\n    return this.getSibling(\"left\");\n  }\n}\n\nfunction addCompletionRecords(path, paths) {\n  if (path) return paths.concat(path.getCompletionRecords());\n  return paths;\n}\n\nfunction findBreak(statements) {\n  let breakStatement;\n\n  if (!Array.isArray(statements)) {\n    statements = [statements];\n  }\n\n  for (const statement of statements) {\n    if (statement.isDoExpression() || statement.isProgram() || statement.isBlockStatement() || statement.isCatchClause() || statement.isLabeledStatement()) {\n      breakStatement = findBreak(statement.get(\"body\"));\n    } else if (statement.isIfStatement()) {\n      var _findBreak;\n\n      breakStatement = (_findBreak = findBreak(statement.get(\"consequent\"))) != null ? _findBreak : findBreak(statement.get(\"alternate\"));\n    } else if (statement.isTryStatement()) {\n      var _findBreak2;\n\n      breakStatement = (_findBreak2 = findBreak(statement.get(\"block\"))) != null ? _findBreak2 : findBreak(statement.get(\"handler\"));\n    } else if (statement.isBreakStatement()) {\n      breakStatement = statement;\n    }\n\n    if (breakStatement) {\n      return breakStatement;\n    }\n  }\n\n  return null;\n}\n\nfunction completionRecordForSwitch(cases, paths) {\n  let isLastCaseWithConsequent = true;\n\n  for (let i = cases.length - 1; i >= 0; i--) {\n    const switchCase = cases[i];\n    const consequent = switchCase.get(\"consequent\");\n    let breakStatement = findBreak(consequent);\n\n    if (breakStatement) {\n      while (breakStatement.key === 0 && breakStatement.parentPath.isBlockStatement()) {\n        breakStatement = breakStatement.parentPath;\n      }\n\n      const prevSibling = breakStatement.getPrevSibling();\n\n      if (breakStatement.key > 0 && (prevSibling.isExpressionStatement() || prevSibling.isBlockStatement())) {\n        paths = addCompletionRecords(prevSibling, paths);\n        breakStatement.remove();\n      } else {\n        breakStatement.replaceWith(breakStatement.scope.buildUndefinedNode());\n        paths = addCompletionRecords(breakStatement, paths);\n      }\n    } else if (isLastCaseWithConsequent) {\n      const statementFinder = statement => !statement.isBlockStatement() || statement.get(\"body\").some(statementFinder);\n\n      const hasConsequent = consequent.some(statementFinder);\n\n      if (hasConsequent) {\n        paths = addCompletionRecords(consequent[consequent.length - 1], paths);\n        isLastCaseWithConsequent = false;\n      }\n    }\n  }\n\n  return paths;\n}\n\nfunction getCompletionRecords() {\n  let paths = [];\n\n  if (this.isIfStatement()) {\n    paths = addCompletionRecords(this.get(\"consequent\"), paths);\n    paths = addCompletionRecords(this.get(\"alternate\"), paths);\n  } else if (this.isDoExpression() || this.isFor() || this.isWhile()) {\n    paths = addCompletionRecords(this.get(\"body\"), paths);\n  } else if (this.isProgram() || this.isBlockStatement()) {\n    paths = addCompletionRecords(this.get(\"body\").pop(), paths);\n  } else if (this.isFunction()) {\n    return this.get(\"body\").getCompletionRecords();\n  } else if (this.isTryStatement()) {\n    paths = addCompletionRecords(this.get(\"block\"), paths);\n    paths = addCompletionRecords(this.get(\"handler\"), paths);\n  } else if (this.isCatchClause()) {\n    paths = addCompletionRecords(this.get(\"body\"), paths);\n  } else if (this.isSwitchStatement()) {\n    paths = completionRecordForSwitch(this.get(\"cases\"), paths);\n  } else {\n    paths.push(this);\n  }\n\n  return paths;\n}\n\nfunction getSibling(key) {\n  return _index.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  });\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(++_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(--_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n\n  return siblings;\n}\n\nfunction get(key, context) {\n  if (context === true) context = this.context;\n  const parts = key.split(\".\");\n\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  const node = this.node;\n  const container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map((_, i) => {\n      return _index.default.get({\n        listKey: key,\n        parentPath: this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  let path = this;\n\n  for (const part of parts) {\n    if (part === \".\") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return t.getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return t.getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths(duplicates = false, outerOnly = false) {\n  const path = this;\n  let search = [].concat(path);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n    const keys = t.getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        const _ids = ids[id.node.name] = ids[id.node.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      const declaration = id.get(\"declaration\");\n\n      if (declaration.isDeclaration()) {\n        search.push(declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get(\"id\"));\n        continue;\n      }\n\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const child = id.get(key);\n\n        if (Array.isArray(child) || child.node) {\n          search = search.concat(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_SKIP = exports.SHOULD_STOP = exports.REMOVED = void 0;\n\nvar virtualTypes = _interopRequireWildcard(require(\"./lib/virtual-types\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nvar _scope = _interopRequireDefault(require(\"../scope\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _cache = require(\"../cache\");\n\nvar _generator = _interopRequireDefault(require(\"@babel/generator\"));\n\nvar NodePath_ancestry = _interopRequireWildcard(require(\"./ancestry\"));\n\nvar NodePath_inference = _interopRequireWildcard(require(\"./inference\"));\n\nvar NodePath_replacement = _interopRequireWildcard(require(\"./replacement\"));\n\nvar NodePath_evaluation = _interopRequireWildcard(require(\"./evaluation\"));\n\nvar NodePath_conversion = _interopRequireWildcard(require(\"./conversion\"));\n\nvar NodePath_introspection = _interopRequireWildcard(require(\"./introspection\"));\n\nvar NodePath_context = _interopRequireWildcard(require(\"./context\"));\n\nvar NodePath_removal = _interopRequireWildcard(require(\"./removal\"));\n\nvar NodePath_modification = _interopRequireWildcard(require(\"./modification\"));\n\nvar NodePath_family = _interopRequireWildcard(require(\"./family\"));\n\nvar NodePath_comments = _interopRequireWildcard(require(\"./comments\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst debug = (0, _debug.default)(\"babel\");\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n    const paths = _cache.path.get(parent) || [];\n\n    if (!_cache.path.has(parent)) {\n      _cache.path.set(parent, paths);\n    }\n\n    let path;\n\n    for (let i = 0; i < paths.length; i++) {\n      const pathCheck = paths[i];\n\n      if (pathCheck.node === targetNode) {\n        path = pathCheck;\n        break;\n      }\n    }\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      paths.push(path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    t.validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nexports.default = NodePath;\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  const virtualType = virtualTypes[type];\n\n  NodePath.prototype[`is${type}`] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeAnnotation = getTypeAnnotation;\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.couldBeBaseType = couldBeBaseType;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.isGenericType = isGenericType;\n\nvar inferers = _interopRequireWildcard(require(\"./inferers\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction getTypeAnnotation() {\n  if (this.typeAnnotation) return this.typeAnnotation;\n  let type = this._getTypeAnnotation() || t.anyTypeAnnotation();\n  if (t.isTypeAnnotation(type)) type = type.typeAnnotation;\n  return this.typeAnnotation = type;\n}\n\nfunction _getTypeAnnotation() {\n  var _inferer;\n\n  const node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      const declar = this.parentPath.parentPath;\n      const declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return t.stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return t.anyTypeAnnotation();\n      }\n\n      return t.voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  let inferer = inferers[node.type];\n\n  if (inferer) {\n    return inferer.call(this, node);\n  }\n\n  inferer = inferers[this.parentPath.type];\n\n  if ((_inferer = inferer) == null ? void 0 : _inferer.validParent) {\n    return this.parentPath.getTypeAnnotation();\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return t.isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return t.isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return t.isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return t.isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return t.isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return t.isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return t.isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(`Unknown base type ${baseName}`);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  const type = this.getTypeAnnotation();\n  if (t.isAnyTypeAnnotation(type)) return true;\n\n  if (t.isUnionTypeAnnotation(type)) {\n    for (const type2 of type.types) {\n      if (t.isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(right) {\n  const left = this.getTypeAnnotation();\n  right = right.getTypeAnnotation();\n\n  if (!t.isAnyTypeAnnotation(left) && t.isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n}\n\nfunction isGenericType(genericName) {\n  const type = this.getTypeAnnotation();\n  return t.isGenericTypeAnnotation(type) && t.isIdentifier(type.id, {\n    name: genericName\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _default(node) {\n  if (!this.isReferenced()) return;\n  const binding = this.scope.getBinding(node.name);\n\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return t.voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return t.numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n}\n\nfunction getTypeAnnotationBindingConstantViolations(binding, path, name) {\n  const types = [];\n  const functionConstantViolations = [];\n  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n  const testType = getConditionalAnnotation(binding, path, name);\n\n  if (testType) {\n    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations = constantViolations.concat(functionConstantViolations);\n\n    for (const violation of constantViolations) {\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (!types.length) {\n    return;\n  }\n\n  if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(types);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(types);\n  }\n\n  return t.createUnionTypeAnnotation(types);\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  const violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(violation => {\n    violation = violation.resolve();\n\n    const status = violation._guessExecutionStatusRelativeTo(path);\n\n    if (functions && status === \"unknown\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  const operator = path.node.operator;\n  const right = path.get(\"right\").resolve();\n  const left = path.get(\"left\").resolve();\n  let target;\n\n  if (left.isIdentifier({\n    name\n  })) {\n    target = right;\n  } else if (right.isIdentifier({\n    name\n  })) {\n    target = left;\n  }\n\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    }\n\n    if (t.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return t.numberTypeAnnotation();\n    }\n\n    return;\n  }\n\n  if (operator !== \"===\" && operator !== \"==\") return;\n  let typeofPath;\n  let typePath;\n\n  if (left.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = right;\n    typePath = left;\n  }\n\n  if (!typeofPath) return;\n  if (!typeofPath.get(\"argument\").isIdentifier({\n    name\n  })) return;\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n  const typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n  return t.createTypeAnnotationBasedOnTypeof(typeValue);\n}\n\nfunction getParentConditionalPath(binding, path, name) {\n  let parentPath;\n\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      }\n\n      return parentPath;\n    }\n\n    if (parentPath.isFunction()) {\n      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;\n    }\n\n    path = parentPath;\n  }\n}\n\nfunction getConditionalAnnotation(binding, path, name) {\n  const ifStatement = getParentConditionalPath(binding, path, name);\n  if (!ifStatement) return;\n  const test = ifStatement.get(\"test\");\n  const paths = [test];\n  const types = [];\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.isLogicalExpression()) {\n      if (path.node.operator === \"&&\") {\n        paths.push(path.get(\"left\"));\n        paths.push(path.get(\"right\"));\n      }\n    } else if (path.isBinaryExpression()) {\n      const type = inferAnnotationFromBinaryExpression(name, path);\n      if (type) types.push(type);\n    }\n  }\n\n  if (types.length) {\n    if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {\n      return {\n        typeAnnotation: t.createTSUnionType(types),\n        ifStatement\n      };\n    }\n\n    if (t.createFlowUnionType) {\n      return {\n        typeAnnotation: t.createFlowUnionType(types),\n        ifStatement\n      };\n    }\n\n    return {\n      typeAnnotation: t.createUnionTypeAnnotation(types),\n      ifStatement\n    };\n  }\n\n  return getConditionalAnnotation(ifStatement, name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.StringLiteral = StringLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.RegExpLiteral = RegExpLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _infererReference.default;\n  }\n});\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _infererReference = _interopRequireDefault(require(\"./inferer-reference\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction VariableDeclarator() {\n  var _type;\n\n  const id = this.get(\"id\");\n  if (!id.isIdentifier()) return;\n  const init = this.get(\"init\");\n  let type = init.getTypeAnnotation();\n\n  if (((_type = type) == null ? void 0 : _type.type) === \"AnyTypeAnnotation\") {\n    if (init.isCallExpression() && init.get(\"callee\").isIdentifier({\n      name: \"Array\"\n    }) && !init.scope.hasBinding(\"Array\", true)) {\n      type = ArrayExpression();\n    }\n  }\n\n  return type;\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    return t.genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"void\") {\n    return t.voidTypeAnnotation();\n  } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.stringTypeAnnotation();\n  } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  const operator = node.operator;\n\n  if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    const right = this.get(\"right\");\n    const left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return t.numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return t.stringTypeAnnotation();\n    }\n\n    return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  const argumentTypes = [this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()];\n\n  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(argumentTypes);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(argumentTypes);\n  }\n\n  return t.createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction ConditionalExpression() {\n  const argumentTypes = [this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()];\n\n  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(argumentTypes);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(argumentTypes);\n  }\n\n  return t.createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction ParenthesizedExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"++\" || operator === \"--\") {\n    return t.numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return t.numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return t.booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return t.nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return t.genericTypeAnnotation(t.identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return t.genericTypeAnnotation(t.identifier(\"Function\"));\n}\n\nconst isArrayFrom = t.buildMatchMemberExpression(\"Array.from\");\nconst isObjectKeys = t.buildMatchMemberExpression(\"Object.keys\");\nconst isObjectValues = t.buildMatchMemberExpression(\"Object.values\");\nconst isObjectEntries = t.buildMatchMemberExpression(\"Object.entries\");\n\nfunction CallExpression() {\n  const {\n    callee\n  } = this.node;\n\n  if (isObjectKeys(callee)) {\n    return t.arrayTypeAnnotation(t.stringTypeAnnotation());\n  } else if (isArrayFrom(callee) || isObjectValues(callee)) {\n    return t.arrayTypeAnnotation(t.anyTypeAnnotation());\n  } else if (isObjectEntries(callee)) {\n    return t.arrayTypeAnnotation(t.tupleTypeAnnotation([t.stringTypeAnnotation(), t.anyTypeAnnotation()]));\n  }\n\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return t.genericTypeAnnotation(t.identifier(\"AsyncIterator\"));\n      } else {\n        return t.genericTypeAnnotation(t.identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchesPattern = matchesPattern;\nexports.has = has;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.equals = equals;\nexports.isNodeType = isNodeType;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.referencesImport = referencesImport;\nexports.getSource = getSource;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports.resolve = resolve;\nexports._resolve = _resolve;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.is = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction matchesPattern(pattern, allowPartial) {\n  return t.matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return t.isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return t.isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return t.isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || t.isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return t.STATEMENT_OR_BLOCK_KEYS.includes(this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) return false;\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && path.node.imported.name === importName) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  const funcParent = {\n    this: getOuterFunction(this),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: this.getAncestry()\n  };\n  if (paths.target.indexOf(this) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = t.VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new WeakSet();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(target) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    const status = this._guessExecutionStatusRelativeTo(path);\n\n    executionOrderCheckedNodes.delete(path.node);\n\n    if (allStatus && allStatus !== status) {\n      return \"unknown\";\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!t.isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.get(\"operator\").node !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    let {\n      node\n    } = path;\n    if (path.isFunction()) node = node.body;\n\n    for (const directive of node.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst referenceVisitor = {\n  ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && t.react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === \"this\") {\n      let scope = path.scope;\n\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (scope = scope.parent);\n\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    const binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    for (const violation of binding.constantViolations) {\n      if (violation.scope !== binding.path.scope) {\n        state.mutableBinding = true;\n        path.stop();\n        return;\n      }\n    }\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n    state.bindings[path.node.name] = binding;\n  }\n\n};\n\nclass PathHoister {\n  constructor(path, scope) {\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.mutableBinding = false;\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n    this.attachAfter = false;\n  }\n\n  isCompatibleScope(scope) {\n    for (const key of Object.keys(this.bindings)) {\n      const binding = this.bindings[key];\n\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getCompatibleScopes() {\n    let scope = this.path.scope;\n\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  }\n\n  getAttachmentPath() {\n    let path = this._getAttachmentPath();\n\n    if (!path) return;\n    let targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (const name of Object.keys(this.bindings)) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n        const binding = this.bindings[name];\n\n        if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n          continue;\n        }\n\n        const bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n        if (bindingParentPath.key >= path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (const violationPath of binding.constantViolations) {\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  _getAttachmentPath() {\n    const scopes = this.scopes;\n    const scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n        const bodies = scope.path.get(\"body\").get(\"body\");\n\n        for (let i = 0; i < bodies.length; i++) {\n          if (bodies[i].node._blockHoist) continue;\n          return bodies[i];\n        }\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  }\n\n  getNextScopeAttachmentParent() {\n    const scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  }\n\n  getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n        return path;\n      }\n    } while (path = path.parentPath);\n  }\n\n  hasOwnParamBindings(scope) {\n    for (const name of Object.keys(this.bindings)) {\n      if (!scope.hasOwnBinding(name)) continue;\n      const binding = this.bindings[name];\n      if (binding.kind === \"param\" && binding.constant) return true;\n    }\n\n    return false;\n  }\n\n  run() {\n    this.path.traverse(referenceVisitor, this);\n    if (this.mutableBinding) return;\n    this.getCompatibleScopes();\n    const attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n    let uid = attachTo.scope.generateUidIdentifier(\"ref\");\n    const declarator = t.variableDeclarator(uid, this.path.node);\n    const insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : t.variableDeclaration(\"var\", [declarator])]);\n    const parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = t.JSXExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(t.cloneNode(uid));\n    return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n  }\n\n}\n\nexports.default = PathHoister;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hooks = void 0;\nconst hooks = [function (self, parent) {\n  const removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];\nexports.hooks = hooks;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ForAwaitStatement = exports.NumericLiteralTypeAnnotation = exports.ExistentialTypeParam = exports.SpreadProperty = exports.RestProperty = exports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = void 0;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n\n  checkPath(path, opts) {\n    const {\n      node,\n      parent\n    } = path;\n\n    if (!t.isIdentifier(node, opts) && !t.isJSXMemberExpression(parent, opts)) {\n      if (t.isJSXIdentifier(node, opts)) {\n        if (t.react.isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return t.isReferenced(node, parent, path.parentPath.parent);\n  }\n\n};\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    return t.isMemberExpression(node) && t.isReferenced(node, parent);\n  }\n\n};\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = {\n  types: [\"Identifier\"],\n\n  checkPath(path) {\n    const {\n      node,\n      parent\n    } = path;\n    const grandparent = path.parentPath.parent;\n    return t.isIdentifier(node) && t.isBinding(node, parent, grandparent);\n  }\n\n};\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = {\n  types: [\"Statement\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    if (t.isStatement(node)) {\n      if (t.isVariableDeclaration(node)) {\n        if (t.isForXStatement(parent, {\n          left: node\n        })) return false;\n        if (t.isForStatement(parent, {\n          init: node\n        })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Statement = Statement;\nconst Expression = {\n  types: [\"Expression\"],\n\n  checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return t.isExpression(path.node);\n    }\n  }\n\n};\nexports.Expression = Expression;\nconst Scope = {\n  types: [\"Scopable\", \"Pattern\"],\n\n  checkPath(path) {\n    return t.isScope(path.node, path.parent);\n  }\n\n};\nexports.Scope = Scope;\nconst Referenced = {\n  checkPath(path) {\n    return t.isReferenced(path.node, path.parent);\n  }\n\n};\nexports.Referenced = Referenced;\nconst BlockScoped = {\n  checkPath(path) {\n    return t.isBlockScoped(path.node);\n  }\n\n};\nexports.BlockScoped = BlockScoped;\nconst Var = {\n  types: [\"VariableDeclaration\"],\n\n  checkPath(path) {\n    return t.isVar(path.node);\n  }\n\n};\nexports.Var = Var;\nconst User = {\n  checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n\n};\nexports.User = User;\nconst Generated = {\n  checkPath(path) {\n    return !path.isUser();\n  }\n\n};\nexports.Generated = Generated;\nconst Pure = {\n  checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n\n};\nexports.Pure = Pure;\nconst Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n\n  checkPath({\n    node\n  }) {\n    if (t.isFlow(node)) {\n      return true;\n    } else if (t.isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (t.isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (t.isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Flow = Flow;\nconst RestProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectPattern();\n  }\n\n};\nexports.RestProperty = RestProperty;\nconst SpreadProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectExpression();\n  }\n\n};\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = {\n  types: [\"ExistsTypeAnnotation\"]\n};\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = {\n  types: [\"NumberLiteralTypeAnnotation\"]\n};\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = {\n  types: [\"ForOfStatement\"],\n\n  checkPath({\n    node\n  }) {\n    return node.await === true;\n  }\n\n};\nexports.ForAwaitStatement = ForAwaitStatement;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = _interopRequireDefault(require(\"./lib/hoister\"));\n\nvar _index = _interopRequireDefault(require(\"./index\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction insertBefore(nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertBefore(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const shouldInsertCurrentNode = this.node && (!this.isExpressionStatement() || this.node.expression != null);\n    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [this.node] : []));\n    return this.unshiftContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n  const paths = [];\n  this.container.splice(from, 0, ...nodes);\n\n  for (let i = 0; i < nodes.length; i++) {\n    const to = from + i;\n    const path = this.getSibling(to);\n    paths.push(path);\n\n    if (this.context && this.context.queue) {\n      path.pushContext(this.context);\n    }\n  }\n\n  const contexts = this._getQueueContexts();\n\n  for (const path of paths) {\n    path.setScope();\n    path.debug(\"Inserted.\");\n\n    for (const context of contexts) {\n      context.maybeQueue(path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nfunction insertAfter(nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertAfter(nodes.map(node => {\n      return t.isExpression(node) ? t.expressionStatement(node) : node;\n    }));\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      let {\n        scope\n      } = this;\n\n      if (parentPath.isMethod({\n        computed: true,\n        key: this.node\n      })) {\n        scope = scope.parent;\n      }\n\n      const temp = scope.generateDeclaredUidIdentifier();\n      nodes.unshift(t.expressionStatement(t.assignmentExpression(\"=\", t.cloneNode(temp), this.node)));\n      nodes.push(t.expressionStatement(t.cloneNode(temp)));\n    }\n\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertAfter(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const shouldInsertCurrentNode = this.node && (!this.isExpressionStatement() || this.node.expression != null);\n    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [this.node] : []));\n    return this.pushContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  const paths = _cache.path.get(this.parent);\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (nodes.constructor !== Array) {\n    nodes = [nodes];\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    let msg;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if (typeof node !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      const type = Array.isArray(node) ? \"array\" : typeof node;\n      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey,\n    key: 0\n  });\n\n  return path._containerInsertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n  const container = this.node[listKey];\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey,\n    key: container.length\n  });\n\n  return path.replaceWithMultiple(nodes);\n}\n\nfunction hoist(scope = this.scope) {\n  const hoister = new _hoister.default(this, scope);\n  return hoister.run();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remove = remove;\nexports._removeFromScope = _removeFromScope;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._remove = _remove;\nexports._markRemoved = _markRemoved;\nexports._assertUnremoved = _assertUnremoved;\n\nvar _removalHooks = require(\"./lib/removal-hooks\");\n\nvar _index = require(\"./index\");\n\nfunction remove() {\n  var _this$opts;\n\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (!((_this$opts = this.opts) == null ? void 0 : _this$opts.noScope)) {\n    this._removeFromScope();\n  }\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n\n  this._remove();\n\n  this._markRemoved();\n}\n\nfunction _removeFromScope() {\n  const bindings = this.getBindingIdentifiers();\n  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));\n}\n\nfunction _callRemovalHooks() {\n  for (const fn of _removalHooks.hooks) {\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\nexports.replaceWith = replaceWith;\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nvar _index2 = _interopRequireDefault(require(\"./index\"));\n\nvar _parser = require(\"@babel/parser\");\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst hoistVariablesVisitor = {\n  Function(path) {\n    path.skip();\n  },\n\n  VariableDeclaration(path) {\n    if (path.node.kind !== \"var\") return;\n    const bindings = path.getBindingIdentifiers();\n\n    for (const key of Object.keys(bindings)) {\n      path.scope.push({\n        id: bindings[key]\n      });\n    }\n\n    const exprs = [];\n\n    for (const declar of path.node.declarations) {\n      if (declar.init) {\n        exprs.push(t.expressionStatement(t.assignmentExpression(\"=\", declar.id, declar.init)));\n      }\n    }\n\n    path.replaceWithMultiple(exprs);\n  }\n\n};\n\nfunction replaceWithMultiple(nodes) {\n  this.resync();\n  nodes = this._verifyNodeList(nodes);\n  t.inheritLeadingComments(nodes[0], this.node);\n  t.inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n\n  return paths;\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n\n  try {\n    replacement = `(${replacement})`;\n    replacement = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n\n    throw err;\n  }\n\n  replacement = replacement.program.body[0].expression;\n\n  _index.default.removeProperties(replacement);\n\n  return this.replaceWith(replacement);\n}\n\nfunction replaceWith(replacement) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n\n  if (replacement instanceof _index2.default) {\n    replacement = replacement.node;\n  }\n\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n\n  if (this.node === replacement) {\n    return [this];\n  }\n\n  if (this.isProgram() && !t.isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n\n  let nodePath = \"\";\n\n  if (this.isNodeType(\"Statement\") && t.isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = t.expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n\n  if (this.isNodeType(\"Expression\") && t.isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  const oldNode = this.node;\n\n  if (oldNode) {\n    t.inheritsComments(replacement, oldNode);\n    t.removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n\n  this.type = replacement.type;\n  this.setScope();\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\n\nfunction _replaceWith(node) {\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n\n  if (this.inList) {\n    t.validate(this.parent, this.key, [node]);\n  } else {\n    t.validate(this.parent, this.key, node);\n  }\n\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n  const toSequenceExpression = t.toSequenceExpression(nodes, this.scope);\n\n  if (toSequenceExpression) {\n    return this.replaceWith(toSequenceExpression)[0].get(\"expressions\");\n  }\n\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.is(\"async\");\n  const container = t.arrowFunctionExpression([], t.blockStatement(nodes));\n  this.replaceWith(t.callExpression(container, []));\n  this.traverse(hoistVariablesVisitor);\n  const completionRecords = this.get(\"callee\").getCompletionRecords();\n\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\n      if (!uid) {\n        const callee = this.get(\"callee\");\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", t.returnStatement(t.cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = t.identifier(uid.name);\n      }\n\n      path.get(\"expression\").replaceWith(t.assignmentExpression(\"=\", t.cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(t.returnStatement(path.node.expression));\n    }\n  }\n\n  const callee = this.get(\"callee\");\n  callee.arrowFunctionToExpression();\n\n  if (isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", t.FUNCTION_TYPES)) {\n    callee.set(\"async\", true);\n    this.replaceWith(t.awaitExpression(this.node));\n  }\n\n  return callee.get(\"body.body\");\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n\n      const paths = this._containerInsertAfter(nodes);\n\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Binding {\n  constructor({\n    identifier,\n    scope,\n    path,\n    kind\n  }) {\n    this.constantViolations = [];\n    this.constant = true;\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n    this.clearValue();\n  }\n\n  deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  }\n\n  setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  }\n\n  clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  }\n\n  reassign(path) {\n    this.constant = false;\n\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.constantViolations.push(path);\n  }\n\n  reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  }\n\n  dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  }\n\n}\n\nexports.default = Binding;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renamer = _interopRequireDefault(require(\"./lib/renamer\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nvar _binding = _interopRequireDefault(require(\"./binding\"));\n\nvar _globals = _interopRequireDefault(require(\"globals\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _cache = require(\"../cache\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction gatherNodeParts(node, parts) {\n  switch (node == null ? void 0 : node.type) {\n    default:\n      if (t.isModuleDeclaration(node)) {\n        if (node.source) {\n          gatherNodeParts(node.source, parts);\n        } else if (node.specifiers && node.specifiers.length) {\n          for (const e of node.specifiers) gatherNodeParts(e, parts);\n        } else if (node.declaration) {\n          gatherNodeParts(node.declaration, parts);\n        }\n      } else if (t.isModuleSpecifier(node)) {\n        gatherNodeParts(node.local, parts);\n      } else if (t.isLiteral(node)) {\n        parts.push(node.value);\n      }\n\n      break;\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n    case \"JSXMemberExpression\":\n      gatherNodeParts(node.object, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"Identifier\":\n    case \"JSXIdentifier\":\n      parts.push(node.name);\n      break;\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n    case \"NewExpression\":\n      gatherNodeParts(node.callee, parts);\n      break;\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n      for (const e of node.properties) {\n        gatherNodeParts(e, parts);\n      }\n\n      break;\n\n    case \"SpreadElement\":\n    case \"RestElement\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"ObjectProperty\":\n    case \"ObjectMethod\":\n    case \"ClassProperty\":\n    case \"ClassMethod\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n      gatherNodeParts(node.key, parts);\n      break;\n\n    case \"ThisExpression\":\n      parts.push(\"this\");\n      break;\n\n    case \"Super\":\n      parts.push(\"super\");\n      break;\n\n    case \"Import\":\n      parts.push(\"import\");\n      break;\n\n    case \"DoExpression\":\n      parts.push(\"do\");\n      break;\n\n    case \"YieldExpression\":\n      parts.push(\"yield\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AwaitExpression\":\n      parts.push(\"await\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AssignmentExpression\":\n      gatherNodeParts(node.left, parts);\n      break;\n\n    case \"VariableDeclarator\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"FunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"PrivateName\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"ParenthesizedExpression\":\n      gatherNodeParts(node.expression, parts);\n      break;\n\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"MetaProperty\":\n      gatherNodeParts(node.meta, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"JSXElement\":\n      gatherNodeParts(node.openingElement, parts);\n      break;\n\n    case \"JSXOpeningElement\":\n      parts.push(node.name);\n      break;\n\n    case \"JSXFragment\":\n      gatherNodeParts(node.openingFragment, parts);\n      break;\n\n    case \"JSXOpeningFragment\":\n      parts.push(\"Fragment\");\n      break;\n\n    case \"JSXNamespacedName\":\n      gatherNodeParts(node.namespace, parts);\n      gatherNodeParts(node.name, parts);\n      break;\n  }\n}\n\nconst collectorVisitor = {\n  For(path) {\n    for (const key of t.FOR_INIT_KEYS) {\n      const declar = path.get(key);\n\n      if (declar.isVar()) {\n        const parentScope = path.scope.getFunctionParent() || path.scope.getProgramParent();\n        parentScope.registerBinding(\"var\", declar);\n      }\n    }\n  },\n\n  Declaration(path) {\n    if (path.isBlockScoped()) return;\n\n    if (path.isExportDeclaration() && path.get(\"declaration\").isDeclaration()) {\n      return;\n    }\n\n    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();\n    parent.registerDeclaration(path);\n  },\n\n  ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n\n  ForXStatement(path, state) {\n    const left = path.get(\"left\");\n\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(path);\n    }\n  },\n\n  ExportDeclaration: {\n    exit(path) {\n      const {\n        node,\n        scope\n      } = path;\n      const declar = node.declaration;\n\n      if (t.isClassDeclaration(declar) || t.isFunctionDeclaration(declar)) {\n        const id = declar.id;\n        if (!id) return;\n        const binding = scope.getBinding(id.name);\n        if (binding) binding.reference(path);\n      } else if (t.isVariableDeclaration(declar)) {\n        for (const decl of declar.declarations) {\n          for (const name of Object.keys(t.getBindingIdentifiers(decl))) {\n            const binding = scope.getBinding(name);\n            if (binding) binding.reference(path);\n          }\n        }\n      }\n    }\n\n  },\n\n  LabeledStatement(path) {\n    path.scope.getProgramParent().addGlobal(path.node);\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n\n  AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n\n  UpdateExpression(path, state) {\n    state.constantViolations.push(path);\n  },\n\n  UnaryExpression(path, state) {\n    if (path.node.operator === \"delete\") {\n      state.constantViolations.push(path);\n    }\n  },\n\n  BlockScoped(path) {\n    let scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    const parent = scope.getBlockParent();\n    parent.registerDeclaration(path);\n\n    if (path.isClassDeclaration() && path.node.id) {\n      const id = path.node.id;\n      const name = id.name;\n      path.scope.bindings[name] = path.scope.parent.getBinding(name);\n    }\n  },\n\n  Block(path) {\n    const paths = path.get(\"body\");\n\n    for (const bodyPath of paths) {\n      if (bodyPath.isFunctionDeclaration()) {\n        path.scope.getBlockParent().registerDeclaration(bodyPath);\n      }\n    }\n  },\n\n  CatchClause(path) {\n    path.scope.registerBinding(\"let\", path);\n  },\n\n  Function(path) {\n    if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path.get(\"id\"), path);\n    }\n\n    const params = path.get(\"params\");\n\n    for (const param of params) {\n      path.scope.registerBinding(\"param\", param);\n    }\n  },\n\n  ClassExpression(path) {\n    if (path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path);\n    }\n  }\n\n};\nlet uid = 0;\n\nclass Scope {\n  constructor(path) {\n    const {\n      node\n    } = path;\n\n    const cached = _cache.scope.get(node);\n\n    if ((cached == null ? void 0 : cached.path) === path) {\n      return cached;\n    }\n\n    _cache.scope.set(node, this);\n\n    this.uid = uid++;\n    this.block = node;\n    this.path = path;\n    this.labels = new Map();\n    this.inited = false;\n  }\n\n  get parent() {\n    const parent = this.path.findParent(p => p.isScope());\n    return parent == null ? void 0 : parent.scope;\n  }\n\n  get parentBlock() {\n    return this.path.parent;\n  }\n\n  get hub() {\n    return this.path.hub;\n  }\n\n  traverse(node, opts, state) {\n    (0, _index.default)(node, opts, this, state, this.path);\n  }\n\n  generateDeclaredUidIdentifier(name) {\n    const id = this.generateUidIdentifier(name);\n    this.push({\n      id\n    });\n    return t.cloneNode(id);\n  }\n\n  generateUidIdentifier(name) {\n    return t.identifier(this.generateUid(name));\n  }\n\n  generateUid(name = \"temp\") {\n    name = t.toIdentifier(name).replace(/^_+/, \"\").replace(/[0-9]+$/g, \"\");\n    let uid;\n    let i = 1;\n\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    const program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n    return uid;\n  }\n\n  _generateUid(name, i) {\n    let id = name;\n    if (i > 1) id += i;\n    return `_${id}`;\n  }\n\n  generateUidBasedOnNode(node, defaultName) {\n    const parts = [];\n    gatherNodeParts(node, parts);\n    let id = parts.join(\"$\");\n    id = id.replace(/^_/, \"\") || defaultName || \"ref\";\n    return this.generateUid(id.slice(0, 20));\n  }\n\n  generateUidIdentifierBasedOnNode(node, defaultName) {\n    return t.identifier(this.generateUidBasedOnNode(node, defaultName));\n  }\n\n  isStatic(node) {\n    if (t.isThisExpression(node) || t.isSuper(node)) {\n      return true;\n    }\n\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  }\n\n  maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      const id = this.generateUidIdentifierBasedOnNode(node);\n\n      if (!dontPush) {\n        this.push({\n          id\n        });\n        return t.cloneNode(id);\n      }\n\n      return id;\n    }\n  }\n\n  checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === \"param\") return;\n    if (local.kind === \"local\") return;\n    const duplicate = kind === \"let\" || local.kind === \"let\" || local.kind === \"const\" || local.kind === \"module\" || local.kind === \"param\" && (kind === \"let\" || kind === \"const\");\n\n    if (duplicate) {\n      throw this.hub.buildError(id, `Duplicate declaration \"${name}\"`, TypeError);\n    }\n  }\n\n  rename(oldName, newName, block) {\n    const binding = this.getBinding(oldName);\n\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer.default(binding, oldName, newName).rename(block);\n    }\n  }\n\n  _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  }\n\n  dump() {\n    const sep = \"-\".repeat(60);\n    console.log(sep);\n    let scope = this;\n\n    do {\n      console.log(\"#\", scope.block.type);\n\n      for (const name of Object.keys(scope.bindings)) {\n        const binding = scope.bindings[name];\n        console.log(\" -\", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n\n    console.log(sep);\n  }\n\n  toArray(node, i, allowArrayLike) {\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if ((binding == null ? void 0 : binding.constant) && binding.path.isGenericType(\"Array\")) {\n        return node;\n      }\n    }\n\n    if (t.isArrayExpression(node)) {\n      return node;\n    }\n\n    if (t.isIdentifier(node, {\n      name: \"arguments\"\n    })) {\n      return t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier(\"Array\"), t.identifier(\"prototype\")), t.identifier(\"slice\")), t.identifier(\"call\")), [node]);\n    }\n\n    let helperName;\n    const args = [node];\n\n    if (i === true) {\n      helperName = \"toConsumableArray\";\n    } else if (i) {\n      args.push(t.numericLiteral(i));\n      helperName = \"slicedToArray\";\n    } else {\n      helperName = \"toArray\";\n    }\n\n    if (allowArrayLike) {\n      args.unshift(this.hub.addHelper(helperName));\n      helperName = \"maybeArrayLike\";\n    }\n\n    return t.callExpression(this.hub.addHelper(helperName), args);\n  }\n\n  hasLabel(name) {\n    return !!this.getLabel(name);\n  }\n\n  getLabel(name) {\n    return this.labels.get(name);\n  }\n\n  registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  }\n\n  registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding(\"hoisted\", path.get(\"id\"), path);\n    } else if (path.isVariableDeclaration()) {\n      const declarations = path.get(\"declarations\");\n\n      for (const declar of declarations) {\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      this.registerBinding(\"let\", path);\n    } else if (path.isImportDeclaration()) {\n      const specifiers = path.get(\"specifiers\");\n\n      for (const specifier of specifiers) {\n        this.registerBinding(\"module\", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      const declar = path.get(\"declaration\");\n\n      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {\n        this.registerDeclaration(declar);\n      }\n    } else {\n      this.registerBinding(\"unknown\", path);\n    }\n  }\n\n  buildUndefinedNode() {\n    return t.unaryExpression(\"void\", t.numericLiteral(0), true);\n  }\n\n  registerConstantViolation(path) {\n    const ids = path.getBindingIdentifiers();\n\n    for (const name of Object.keys(ids)) {\n      const binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  }\n\n  registerBinding(kind, path, bindingPath = path) {\n    if (!kind) throw new ReferenceError(\"no `kind`\");\n\n    if (path.isVariableDeclaration()) {\n      const declarators = path.get(\"declarations\");\n\n      for (const declar of declarators) {\n        this.registerBinding(kind, declar);\n      }\n\n      return;\n    }\n\n    const parent = this.getProgramParent();\n    const ids = path.getOuterBindingIdentifiers(true);\n\n    for (const name of Object.keys(ids)) {\n      parent.references[name] = true;\n\n      for (const id of ids[name]) {\n        const local = this.getOwnBinding(name);\n\n        if (local) {\n          if (local.identifier === id) continue;\n          this.checkBlockScopedCollisions(local, kind, name, id);\n        }\n\n        if (local) {\n          this.registerConstantViolation(bindingPath);\n        } else {\n          this.bindings[name] = new _binding.default({\n            identifier: id,\n            scope: this,\n            path: bindingPath,\n            kind: kind\n          });\n        }\n      }\n    }\n  }\n\n  addGlobal(node) {\n    this.globals[node.name] = node;\n  }\n\n  hasUid(name) {\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasGlobal(name) {\n    let scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasReference(name) {\n    return !!this.getProgramParent().references[name];\n  }\n\n  isPure(node, constantsOnly) {\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (t.isClass(node)) {\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {\n        return false;\n      }\n\n      return this.isPure(node.body, constantsOnly);\n    } else if (t.isClassBody(node)) {\n      for (const method of node.body) {\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (t.isArrayExpression(node)) {\n      for (const elem of node.elements) {\n        if (!this.isPure(elem, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isObjectExpression(node)) {\n      for (const prop of node.properties) {\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isMethod(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      if (node.kind === \"get\" || node.kind === \"set\") return false;\n      return true;\n    } else if (t.isProperty(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      return this.isPure(node.value, constantsOnly);\n    } else if (t.isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else if (t.isTaggedTemplateExpression(node)) {\n      return t.matchesPattern(node.tag, \"String.raw\") && !this.hasBinding(\"String\", true) && this.isPure(node.quasi, constantsOnly);\n    } else if (t.isTemplateLiteral(node)) {\n      for (const expression of node.expressions) {\n        if (!this.isPure(expression, constantsOnly)) return false;\n      }\n\n      return true;\n    } else {\n      return t.isPureish(node);\n    }\n  }\n\n  setData(key, val) {\n    return this.data[key] = val;\n  }\n\n  getData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  }\n\n  removeData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  }\n\n  init() {\n    if (!this.inited) {\n      this.inited = true;\n      this.crawl();\n    }\n  }\n\n  crawl() {\n    const path = this.path;\n    this.references = Object.create(null);\n    this.bindings = Object.create(null);\n    this.globals = Object.create(null);\n    this.uids = Object.create(null);\n    this.data = Object.create(null);\n\n    if (path.isFunction()) {\n      if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n        this.registerBinding(\"local\", path.get(\"id\"), path);\n      }\n\n      const params = path.get(\"params\");\n\n      for (const param of params) {\n        this.registerBinding(\"param\", param);\n      }\n    }\n\n    const programParent = this.getProgramParent();\n    if (programParent.crawling) return;\n    const state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n    this.crawling = true;\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (const path of state.assignments) {\n      const ids = path.getBindingIdentifiers();\n\n      for (const name of Object.keys(ids)) {\n        if (path.scope.getBinding(name)) continue;\n        programParent.addGlobal(ids[name]);\n      }\n\n      path.scope.registerConstantViolation(path);\n    }\n\n    for (const ref of state.references) {\n      const binding = ref.scope.getBinding(ref.node.name);\n\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        programParent.addGlobal(ref.node);\n      }\n    }\n\n    for (const path of state.constantViolations) {\n      path.scope.registerConstantViolation(path);\n    }\n  }\n\n  push(opts) {\n    let path = this.path;\n\n    if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = (this.getFunctionParent() || this.getProgramParent()).path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      path.ensureBlock();\n      path = path.get(\"body\");\n    }\n\n    const unique = opts.unique;\n    const kind = opts.kind || \"var\";\n    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n    const dataKey = `declaration:${kind}:${blockHoist}`;\n    let declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      const declar = t.variableDeclaration(kind, []);\n      declar._blockHoist = blockHoist;\n      [declarPath] = path.unshiftContainer(\"body\", [declar]);\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    const declarator = t.variableDeclarator(opts.id, opts.init);\n    declarPath.node.declarations.push(declarator);\n    this.registerBinding(kind, declarPath.get(\"declarations\").pop());\n  }\n\n  getProgramParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"Couldn't find a Program\");\n  }\n\n  getFunctionParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return null;\n  }\n\n  getBlockParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getAllBindings() {\n    const ids = Object.create(null);\n    let scope = this;\n\n    do {\n      for (const key of Object.keys(scope.bindings)) {\n        if (key in ids === false) {\n          ids[key] = scope.bindings[key];\n        }\n      }\n\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  }\n\n  getAllBindingsOfKind() {\n    const ids = Object.create(null);\n\n    for (const kind of arguments) {\n      let scope = this;\n\n      do {\n        for (const name of Object.keys(scope.bindings)) {\n          const binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  }\n\n  bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  }\n\n  getBinding(name) {\n    let scope = this;\n    let previousPath;\n\n    do {\n      const binding = scope.getOwnBinding(name);\n\n      if (binding) {\n        var _previousPath;\n\n        if (((_previousPath = previousPath) == null ? void 0 : _previousPath.isPattern()) && binding.kind !== \"param\") {} else {\n          return binding;\n        }\n      }\n\n      previousPath = scope.path;\n    } while (scope = scope.parent);\n  }\n\n  getOwnBinding(name) {\n    return this.bindings[name];\n  }\n\n  getBindingIdentifier(name) {\n    var _this$getBinding;\n\n    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;\n  }\n\n  getOwnBindingIdentifier(name) {\n    const binding = this.bindings[name];\n    return binding == null ? void 0 : binding.identifier;\n  }\n\n  hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  }\n\n  hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && Scope.globals.includes(name)) return true;\n    if (!noGlobals && Scope.contextVariables.includes(name)) return true;\n    return false;\n  }\n\n  parentHasBinding(name, noGlobals) {\n    var _this$parent;\n\n    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);\n  }\n\n  moveBindingTo(name, scope) {\n    const info = this.getBinding(name);\n\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  }\n\n  removeOwnBinding(name) {\n    delete this.bindings[name];\n  }\n\n  removeBinding(name) {\n    var _this$getBinding2;\n\n    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  }\n\n}\n\nexports.default = Scope;\nScope.globals = Object.keys(_globals.default.builtin);\nScope.contextVariables = [\"arguments\", \"undefined\", \"Infinity\", \"NaN\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = _interopRequireDefault(require(\"../binding\"));\n\nvar _helperSplitExportDeclaration = _interopRequireDefault(require(\"@babel/helper-split-export-declaration\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      path.skip();\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return;\n    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n    if (this.binding.kind !== \"hoisted\") return;\n    path.node.id = t.identifier(this.oldName);\n    path.node._blockHoist = 3;\n    path.replaceWith(t.variableDeclaration(\"let\", [t.variableDeclarator(t.identifier(this.newName), t.toExpression(path.node))]));\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return;\n    if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n    if (this.binding.kind !== \"local\") return;\n    path.node.id = t.identifier(this.oldName);\n    this.binding.scope.parent.push({\n      id: t.identifier(this.newName)\n    });\n    path.replaceWith(t.assignmentExpression(\"=\", t.identifier(this.newName), path.node));\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    scope.traverse(block || scope.block, renameVisitor, this);\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (binding.type === \"hoisted\") {}\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n      this.maybeConvertFromClassFunctionExpression(parentDeclar);\n    }\n  }\n\n}\n\nexports.default = Renamer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n\nvar virtualTypes = _interopRequireWildcard(require(\"./path/lib/virtual-types\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = t.FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecratedKey = t.DEPRECATED_KEYS[nodeType];\n\n    if (deprecratedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecratedKey}`);\n      aliases = [deprecratedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (t.TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport default function testErorrStack() {\n  // If source maps are applied, this Error will have a stack frame with line 12.\n  throw Error('Test Error stack');\n}\n\nexport const SOURCE_STACK_FRAME_LINE_NUMBER = 12;","module.exports = require(\"os\");","module.exports = require(\"tty\");","module.exports = require(\"util\");","import highlight, { shouldHighlight } from \"@babel/highlight\";\n\nimport _colors, { createColors } from \"picocolors\";\nimport type { Colors, Formatter } from \"picocolors/types\";\n// See https://github.com/alexeyraspopov/picocolors/issues/62\nconst colors =\n  typeof process === \"object\" &&\n  (process.env.FORCE_COLOR === \"0\" || process.env.FORCE_COLOR === \"false\")\n    ? createColors(false)\n    : _colors;\n\nconst compose: <T, U, V>(f: (gv: U) => V, g: (v: T) => U) => (v: T) => V =\n  (f, g) => v =>\n    f(g(v));\n\nlet pcWithForcedColor: Colors = undefined;\nfunction getColors(forceColor: boolean) {\n  if (forceColor) {\n    pcWithForcedColor ??= createColors(true);\n    return pcWithForcedColor;\n  }\n  return colors;\n}\n\nlet deprecationWarningShown = false;\n\ntype Location = {\n  column: number;\n  line: number;\n};\n\ntype NodeLocation = {\n  end?: Location;\n  start: Location;\n};\n\nexport interface Options {\n  /** Syntax highlight the code as JavaScript for terminals. default: false */\n  highlightCode?: boolean;\n  /**  The number of lines to show above the error. default: 2 */\n  linesAbove?: number;\n  /**  The number of lines to show below the error. default: 3 */\n  linesBelow?: number;\n  /**\n   * Forcibly syntax highlight the code as JavaScript (for non-terminals);\n   * overrides highlightCode.\n   * default: false\n   */\n  forceColor?: boolean;\n  /**\n   * Pass in a string to be displayed inline (if possible) next to the\n   * highlighted location in the code. If it can't be positioned inline,\n   * it will be placed above the code frame.\n   * default: nothing\n   */\n  message?: string;\n}\n\n/**\n * Styles for code frame token types.\n */\nfunction getDefs(colors: Colors) {\n  return {\n    gutter: colors.gray,\n    marker: compose(colors.red, colors.bold),\n    message: compose(colors.red, colors.bold),\n  };\n}\n\n/**\n * RegExp to test for newlines in terminal.\n */\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\n/**\n * Extract what lines should be marked and highlighted.\n */\n\ntype MarkerLines = Record<number, true | [number, number]>;\n\nfunction getMarkerLines(\n  loc: NodeLocation,\n  source: Array<string>,\n  opts: Options,\n): {\n  start: number;\n  end: number;\n  markerLines: MarkerLines;\n} {\n  const startLoc: Location = {\n    column: 0,\n    line: -1,\n    ...loc.start,\n  };\n  const endLoc: Location = {\n    ...startLoc,\n    ...loc.end,\n  };\n  const { linesAbove = 2, linesBelow = 3 } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines: MarkerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return { start, end, markerLines };\n}\n\nexport function codeFrameColumns(\n  rawLines: string,\n  loc: NodeLocation,\n  opts: Options = {},\n): string {\n  const highlighted =\n    (opts.highlightCode || opts.forceColor) && shouldHighlight(opts);\n  const colors = getColors(opts.forceColor);\n  const defs = getDefs(colors);\n  const maybeHighlight = (fmt: Formatter, string: string) => {\n    return highlighted ? fmt(string) : string;\n  };\n  const lines = rawLines.split(NEWLINE);\n  const { start, end, markerLines } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n\n  const numberMaxWidth = String(end).length;\n\n  const highlightedLines = highlighted ? highlight(rawLines, opts) : rawLines;\n\n  let frame = highlightedLines\n    .split(NEWLINE, end)\n    .slice(start, end)\n    .map((line, index) => {\n      const number = start + 1 + index;\n      const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n      const gutter = ` ${paddedNumber} |`;\n      const hasMarker = markerLines[number];\n      const lastMarkerLine = !markerLines[number + 1];\n      if (hasMarker) {\n        let markerLine = \"\";\n        if (Array.isArray(hasMarker)) {\n          const markerSpacing = line\n            .slice(0, Math.max(hasMarker[0] - 1, 0))\n            .replace(/[^\\t]/g, \" \");\n          const numberOfMarkers = hasMarker[1] || 1;\n\n          markerLine = [\n            \"\\n \",\n            maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")),\n            \" \",\n            markerSpacing,\n            maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers),\n          ].join(\"\");\n\n          if (lastMarkerLine && opts.message) {\n            markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n          }\n        }\n        return [\n          maybeHighlight(defs.marker, \">\"),\n          maybeHighlight(defs.gutter, gutter),\n          line.length > 0 ? ` ${line}` : \"\",\n          markerLine,\n        ].join(\"\");\n      } else {\n        return ` ${maybeHighlight(defs.gutter, gutter)}${\n          line.length > 0 ? ` ${line}` : \"\"\n        }`;\n      }\n    })\n    .join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return colors.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\n/**\n * Create a code frame, adding line numbers, code highlighting, and pointing to a given position.\n */\n\nexport default function (\n  rawLines: string,\n  lineNumber: number,\n  colNumber?: number | null,\n  opts: Options = {},\n): string {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n\n    const message =\n      \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      // A string is directly supplied to emitWarning, because when supplying an\n      // Error object node throws in the tests because of different contexts\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n\n  const location: NodeLocation = {\n    start: { column: colNumber, line: lineNumber },\n  };\n\n  return codeFrameColumns(rawLines, location, opts);\n}\n","// We inline this package\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.cjs`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c8a\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7cd\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7dc\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0897-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.cjs`.\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,13,10,2,14,2,6,2,1,2,10,2,14,2,6,2,1,4,51,13,310,10,21,11,7,25,5,2,41,2,8,70,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,39,27,10,22,251,41,7,1,17,2,60,28,11,0,9,21,43,17,47,20,28,22,13,52,58,1,3,0,14,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,20,1,64,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,31,9,2,0,3,0,2,37,2,0,26,0,2,0,45,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,38,6,186,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,19,72,200,32,32,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,16,0,2,12,2,33,125,0,80,921,103,110,18,195,2637,96,16,1071,18,5,26,3994,6,582,6842,29,1763,568,8,30,18,78,18,29,19,47,17,3,32,20,6,18,433,44,212,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,42,9,8936,3,2,6,2,1,2,290,16,0,30,2,3,0,15,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,1845,30,7,5,262,61,147,44,11,6,17,0,322,29,19,43,485,27,229,29,3,0,496,6,2,3,2,1,2,14,2,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42719,33,4153,7,221,3,5761,15,7472,16,621,2467,541,1507,4938,6,4191];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,7,9,32,4,318,1,80,3,71,10,50,3,123,2,54,14,32,10,3,1,11,3,46,10,8,0,46,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,3,0,158,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,68,8,2,0,3,0,2,3,2,4,2,0,15,1,83,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,7,19,58,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,343,9,54,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,10,1,2,0,49,6,4,4,14,10,5350,0,7,14,11465,27,2343,9,87,9,39,4,60,6,26,9,535,9,470,0,2,54,8,3,82,0,12,1,19628,1,4178,9,519,45,3,22,543,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,101,0,161,6,10,9,357,0,62,13,499,13,245,1,2,9,726,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","import isNode from \"../validators/isNode.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function assertNode(node?: any): asserts node is t.Node {\n  if (!isNode(node)) {\n    const type = node?.type ?? JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}\n","/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport is from \"../../validators/is.ts\";\nimport type * as t from \"../../index.ts\";\nimport deprecationWarning from \"../../utils/deprecationWarning.ts\";\n\nfunction assert(type: string, node: any, opts?: any): void {\n  if (!is(type, node, opts)) {\n    throw new Error(\n      `Expected type \"${type}\" with option ${JSON.stringify(opts)}, ` +\n        `but instead got \"${node.type}\".`,\n    );\n  }\n}\n\nexport function assertArrayExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayExpression {\n  assert(\"ArrayExpression\", node, opts);\n}\nexport function assertAssignmentExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AssignmentExpression {\n  assert(\"AssignmentExpression\", node, opts);\n}\nexport function assertBinaryExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BinaryExpression {\n  assert(\"BinaryExpression\", node, opts);\n}\nexport function assertInterpreterDirective(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterpreterDirective {\n  assert(\"InterpreterDirective\", node, opts);\n}\nexport function assertDirective(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Directive {\n  assert(\"Directive\", node, opts);\n}\nexport function assertDirectiveLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DirectiveLiteral {\n  assert(\"DirectiveLiteral\", node, opts);\n}\nexport function assertBlockStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BlockStatement {\n  assert(\"BlockStatement\", node, opts);\n}\nexport function assertBreakStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BreakStatement {\n  assert(\"BreakStatement\", node, opts);\n}\nexport function assertCallExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CallExpression {\n  assert(\"CallExpression\", node, opts);\n}\nexport function assertCatchClause(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CatchClause {\n  assert(\"CatchClause\", node, opts);\n}\nexport function assertConditionalExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ConditionalExpression {\n  assert(\"ConditionalExpression\", node, opts);\n}\nexport function assertContinueStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ContinueStatement {\n  assert(\"ContinueStatement\", node, opts);\n}\nexport function assertDebuggerStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DebuggerStatement {\n  assert(\"DebuggerStatement\", node, opts);\n}\nexport function assertDoWhileStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DoWhileStatement {\n  assert(\"DoWhileStatement\", node, opts);\n}\nexport function assertEmptyStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EmptyStatement {\n  assert(\"EmptyStatement\", node, opts);\n}\nexport function assertExpressionStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExpressionStatement {\n  assert(\"ExpressionStatement\", node, opts);\n}\nexport function assertFile(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.File {\n  assert(\"File\", node, opts);\n}\nexport function assertForInStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForInStatement {\n  assert(\"ForInStatement\", node, opts);\n}\nexport function assertForStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForStatement {\n  assert(\"ForStatement\", node, opts);\n}\nexport function assertFunctionDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionDeclaration {\n  assert(\"FunctionDeclaration\", node, opts);\n}\nexport function assertFunctionExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionExpression {\n  assert(\"FunctionExpression\", node, opts);\n}\nexport function assertIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Identifier {\n  assert(\"Identifier\", node, opts);\n}\nexport function assertIfStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IfStatement {\n  assert(\"IfStatement\", node, opts);\n}\nexport function assertLabeledStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LabeledStatement {\n  assert(\"LabeledStatement\", node, opts);\n}\nexport function assertStringLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringLiteral {\n  assert(\"StringLiteral\", node, opts);\n}\nexport function assertNumericLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumericLiteral {\n  assert(\"NumericLiteral\", node, opts);\n}\nexport function assertNullLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullLiteral {\n  assert(\"NullLiteral\", node, opts);\n}\nexport function assertBooleanLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanLiteral {\n  assert(\"BooleanLiteral\", node, opts);\n}\nexport function assertRegExpLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RegExpLiteral {\n  assert(\"RegExpLiteral\", node, opts);\n}\nexport function assertLogicalExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LogicalExpression {\n  assert(\"LogicalExpression\", node, opts);\n}\nexport function assertMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MemberExpression {\n  assert(\"MemberExpression\", node, opts);\n}\nexport function assertNewExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NewExpression {\n  assert(\"NewExpression\", node, opts);\n}\nexport function assertProgram(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Program {\n  assert(\"Program\", node, opts);\n}\nexport function assertObjectExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectExpression {\n  assert(\"ObjectExpression\", node, opts);\n}\nexport function assertObjectMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectMethod {\n  assert(\"ObjectMethod\", node, opts);\n}\nexport function assertObjectProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectProperty {\n  assert(\"ObjectProperty\", node, opts);\n}\nexport function assertRestElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RestElement {\n  assert(\"RestElement\", node, opts);\n}\nexport function assertReturnStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ReturnStatement {\n  assert(\"ReturnStatement\", node, opts);\n}\nexport function assertSequenceExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SequenceExpression {\n  assert(\"SequenceExpression\", node, opts);\n}\nexport function assertParenthesizedExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ParenthesizedExpression {\n  assert(\"ParenthesizedExpression\", node, opts);\n}\nexport function assertSwitchCase(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SwitchCase {\n  assert(\"SwitchCase\", node, opts);\n}\nexport function assertSwitchStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SwitchStatement {\n  assert(\"SwitchStatement\", node, opts);\n}\nexport function assertThisExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThisExpression {\n  assert(\"ThisExpression\", node, opts);\n}\nexport function assertThrowStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThrowStatement {\n  assert(\"ThrowStatement\", node, opts);\n}\nexport function assertTryStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TryStatement {\n  assert(\"TryStatement\", node, opts);\n}\nexport function assertUnaryExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnaryExpression {\n  assert(\"UnaryExpression\", node, opts);\n}\nexport function assertUpdateExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UpdateExpression {\n  assert(\"UpdateExpression\", node, opts);\n}\nexport function assertVariableDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VariableDeclaration {\n  assert(\"VariableDeclaration\", node, opts);\n}\nexport function assertVariableDeclarator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VariableDeclarator {\n  assert(\"VariableDeclarator\", node, opts);\n}\nexport function assertWhileStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.WhileStatement {\n  assert(\"WhileStatement\", node, opts);\n}\nexport function assertWithStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.WithStatement {\n  assert(\"WithStatement\", node, opts);\n}\nexport function assertAssignmentPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AssignmentPattern {\n  assert(\"AssignmentPattern\", node, opts);\n}\nexport function assertArrayPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayPattern {\n  assert(\"ArrayPattern\", node, opts);\n}\nexport function assertArrowFunctionExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrowFunctionExpression {\n  assert(\"ArrowFunctionExpression\", node, opts);\n}\nexport function assertClassBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassBody {\n  assert(\"ClassBody\", node, opts);\n}\nexport function assertClassExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassExpression {\n  assert(\"ClassExpression\", node, opts);\n}\nexport function assertClassDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassDeclaration {\n  assert(\"ClassDeclaration\", node, opts);\n}\nexport function assertExportAllDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportAllDeclaration {\n  assert(\"ExportAllDeclaration\", node, opts);\n}\nexport function assertExportDefaultDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDefaultDeclaration {\n  assert(\"ExportDefaultDeclaration\", node, opts);\n}\nexport function assertExportNamedDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportNamedDeclaration {\n  assert(\"ExportNamedDeclaration\", node, opts);\n}\nexport function assertExportSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportSpecifier {\n  assert(\"ExportSpecifier\", node, opts);\n}\nexport function assertForOfStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForOfStatement {\n  assert(\"ForOfStatement\", node, opts);\n}\nexport function assertImportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportDeclaration {\n  assert(\"ImportDeclaration\", node, opts);\n}\nexport function assertImportDefaultSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportDefaultSpecifier {\n  assert(\"ImportDefaultSpecifier\", node, opts);\n}\nexport function assertImportNamespaceSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportNamespaceSpecifier {\n  assert(\"ImportNamespaceSpecifier\", node, opts);\n}\nexport function assertImportSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportSpecifier {\n  assert(\"ImportSpecifier\", node, opts);\n}\nexport function assertImportExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportExpression {\n  assert(\"ImportExpression\", node, opts);\n}\nexport function assertMetaProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MetaProperty {\n  assert(\"MetaProperty\", node, opts);\n}\nexport function assertClassMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassMethod {\n  assert(\"ClassMethod\", node, opts);\n}\nexport function assertObjectPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectPattern {\n  assert(\"ObjectPattern\", node, opts);\n}\nexport function assertSpreadElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SpreadElement {\n  assert(\"SpreadElement\", node, opts);\n}\nexport function assertSuper(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Super {\n  assert(\"Super\", node, opts);\n}\nexport function assertTaggedTemplateExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TaggedTemplateExpression {\n  assert(\"TaggedTemplateExpression\", node, opts);\n}\nexport function assertTemplateElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TemplateElement {\n  assert(\"TemplateElement\", node, opts);\n}\nexport function assertTemplateLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TemplateLiteral {\n  assert(\"TemplateLiteral\", node, opts);\n}\nexport function assertYieldExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.YieldExpression {\n  assert(\"YieldExpression\", node, opts);\n}\nexport function assertAwaitExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AwaitExpression {\n  assert(\"AwaitExpression\", node, opts);\n}\nexport function assertImport(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Import {\n  assert(\"Import\", node, opts);\n}\nexport function assertBigIntLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BigIntLiteral {\n  assert(\"BigIntLiteral\", node, opts);\n}\nexport function assertExportNamespaceSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportNamespaceSpecifier {\n  assert(\"ExportNamespaceSpecifier\", node, opts);\n}\nexport function assertOptionalMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalMemberExpression {\n  assert(\"OptionalMemberExpression\", node, opts);\n}\nexport function assertOptionalCallExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalCallExpression {\n  assert(\"OptionalCallExpression\", node, opts);\n}\nexport function assertClassProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassProperty {\n  assert(\"ClassProperty\", node, opts);\n}\nexport function assertClassAccessorProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassAccessorProperty {\n  assert(\"ClassAccessorProperty\", node, opts);\n}\nexport function assertClassPrivateProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassPrivateProperty {\n  assert(\"ClassPrivateProperty\", node, opts);\n}\nexport function assertClassPrivateMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassPrivateMethod {\n  assert(\"ClassPrivateMethod\", node, opts);\n}\nexport function assertPrivateName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PrivateName {\n  assert(\"PrivateName\", node, opts);\n}\nexport function assertStaticBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StaticBlock {\n  assert(\"StaticBlock\", node, opts);\n}\nexport function assertAnyTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.AnyTypeAnnotation {\n  assert(\"AnyTypeAnnotation\", node, opts);\n}\nexport function assertArrayTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArrayTypeAnnotation {\n  assert(\"ArrayTypeAnnotation\", node, opts);\n}\nexport function assertBooleanTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanTypeAnnotation {\n  assert(\"BooleanTypeAnnotation\", node, opts);\n}\nexport function assertBooleanLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BooleanLiteralTypeAnnotation {\n  assert(\"BooleanLiteralTypeAnnotation\", node, opts);\n}\nexport function assertNullLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullLiteralTypeAnnotation {\n  assert(\"NullLiteralTypeAnnotation\", node, opts);\n}\nexport function assertClassImplements(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ClassImplements {\n  assert(\"ClassImplements\", node, opts);\n}\nexport function assertDeclareClass(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareClass {\n  assert(\"DeclareClass\", node, opts);\n}\nexport function assertDeclareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareFunction {\n  assert(\"DeclareFunction\", node, opts);\n}\nexport function assertDeclareInterface(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareInterface {\n  assert(\"DeclareInterface\", node, opts);\n}\nexport function assertDeclareModule(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareModule {\n  assert(\"DeclareModule\", node, opts);\n}\nexport function assertDeclareModuleExports(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareModuleExports {\n  assert(\"DeclareModuleExports\", node, opts);\n}\nexport function assertDeclareTypeAlias(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareTypeAlias {\n  assert(\"DeclareTypeAlias\", node, opts);\n}\nexport function assertDeclareOpaqueType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareOpaqueType {\n  assert(\"DeclareOpaqueType\", node, opts);\n}\nexport function assertDeclareVariable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareVariable {\n  assert(\"DeclareVariable\", node, opts);\n}\nexport function assertDeclareExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareExportDeclaration {\n  assert(\"DeclareExportDeclaration\", node, opts);\n}\nexport function assertDeclareExportAllDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclareExportAllDeclaration {\n  assert(\"DeclareExportAllDeclaration\", node, opts);\n}\nexport function assertDeclaredPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DeclaredPredicate {\n  assert(\"DeclaredPredicate\", node, opts);\n}\nexport function assertExistsTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExistsTypeAnnotation {\n  assert(\"ExistsTypeAnnotation\", node, opts);\n}\nexport function assertFunctionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionTypeAnnotation {\n  assert(\"FunctionTypeAnnotation\", node, opts);\n}\nexport function assertFunctionTypeParam(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionTypeParam {\n  assert(\"FunctionTypeParam\", node, opts);\n}\nexport function assertGenericTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.GenericTypeAnnotation {\n  assert(\"GenericTypeAnnotation\", node, opts);\n}\nexport function assertInferredPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InferredPredicate {\n  assert(\"InferredPredicate\", node, opts);\n}\nexport function assertInterfaceExtends(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceExtends {\n  assert(\"InterfaceExtends\", node, opts);\n}\nexport function assertInterfaceDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceDeclaration {\n  assert(\"InterfaceDeclaration\", node, opts);\n}\nexport function assertInterfaceTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.InterfaceTypeAnnotation {\n  assert(\"InterfaceTypeAnnotation\", node, opts);\n}\nexport function assertIntersectionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IntersectionTypeAnnotation {\n  assert(\"IntersectionTypeAnnotation\", node, opts);\n}\nexport function assertMixedTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.MixedTypeAnnotation {\n  assert(\"MixedTypeAnnotation\", node, opts);\n}\nexport function assertEmptyTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EmptyTypeAnnotation {\n  assert(\"EmptyTypeAnnotation\", node, opts);\n}\nexport function assertNullableTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NullableTypeAnnotation {\n  assert(\"NullableTypeAnnotation\", node, opts);\n}\nexport function assertNumberLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumberLiteralTypeAnnotation {\n  assert(\"NumberLiteralTypeAnnotation\", node, opts);\n}\nexport function assertNumberTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.NumberTypeAnnotation {\n  assert(\"NumberTypeAnnotation\", node, opts);\n}\nexport function assertObjectTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeAnnotation {\n  assert(\"ObjectTypeAnnotation\", node, opts);\n}\nexport function assertObjectTypeInternalSlot(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeInternalSlot {\n  assert(\"ObjectTypeInternalSlot\", node, opts);\n}\nexport function assertObjectTypeCallProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeCallProperty {\n  assert(\"ObjectTypeCallProperty\", node, opts);\n}\nexport function assertObjectTypeIndexer(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeIndexer {\n  assert(\"ObjectTypeIndexer\", node, opts);\n}\nexport function assertObjectTypeProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeProperty {\n  assert(\"ObjectTypeProperty\", node, opts);\n}\nexport function assertObjectTypeSpreadProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectTypeSpreadProperty {\n  assert(\"ObjectTypeSpreadProperty\", node, opts);\n}\nexport function assertOpaqueType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OpaqueType {\n  assert(\"OpaqueType\", node, opts);\n}\nexport function assertQualifiedTypeIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.QualifiedTypeIdentifier {\n  assert(\"QualifiedTypeIdentifier\", node, opts);\n}\nexport function assertStringLiteralTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringLiteralTypeAnnotation {\n  assert(\"StringLiteralTypeAnnotation\", node, opts);\n}\nexport function assertStringTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.StringTypeAnnotation {\n  assert(\"StringTypeAnnotation\", node, opts);\n}\nexport function assertSymbolTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.SymbolTypeAnnotation {\n  assert(\"SymbolTypeAnnotation\", node, opts);\n}\nexport function assertThisTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ThisTypeAnnotation {\n  assert(\"ThisTypeAnnotation\", node, opts);\n}\nexport function assertTupleTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TupleTypeAnnotation {\n  assert(\"TupleTypeAnnotation\", node, opts);\n}\nexport function assertTypeofTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeofTypeAnnotation {\n  assert(\"TypeofTypeAnnotation\", node, opts);\n}\nexport function assertTypeAlias(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeAlias {\n  assert(\"TypeAlias\", node, opts);\n}\nexport function assertTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeAnnotation {\n  assert(\"TypeAnnotation\", node, opts);\n}\nexport function assertTypeCastExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeCastExpression {\n  assert(\"TypeCastExpression\", node, opts);\n}\nexport function assertTypeParameter(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameter {\n  assert(\"TypeParameter\", node, opts);\n}\nexport function assertTypeParameterDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameterDeclaration {\n  assert(\"TypeParameterDeclaration\", node, opts);\n}\nexport function assertTypeParameterInstantiation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeParameterInstantiation {\n  assert(\"TypeParameterInstantiation\", node, opts);\n}\nexport function assertUnionTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnionTypeAnnotation {\n  assert(\"UnionTypeAnnotation\", node, opts);\n}\nexport function assertVariance(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Variance {\n  assert(\"Variance\", node, opts);\n}\nexport function assertVoidTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.VoidTypeAnnotation {\n  assert(\"VoidTypeAnnotation\", node, opts);\n}\nexport function assertEnumDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumDeclaration {\n  assert(\"EnumDeclaration\", node, opts);\n}\nexport function assertEnumBooleanBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBooleanBody {\n  assert(\"EnumBooleanBody\", node, opts);\n}\nexport function assertEnumNumberBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumNumberBody {\n  assert(\"EnumNumberBody\", node, opts);\n}\nexport function assertEnumStringBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumStringBody {\n  assert(\"EnumStringBody\", node, opts);\n}\nexport function assertEnumSymbolBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumSymbolBody {\n  assert(\"EnumSymbolBody\", node, opts);\n}\nexport function assertEnumBooleanMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBooleanMember {\n  assert(\"EnumBooleanMember\", node, opts);\n}\nexport function assertEnumNumberMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumNumberMember {\n  assert(\"EnumNumberMember\", node, opts);\n}\nexport function assertEnumStringMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumStringMember {\n  assert(\"EnumStringMember\", node, opts);\n}\nexport function assertEnumDefaultedMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumDefaultedMember {\n  assert(\"EnumDefaultedMember\", node, opts);\n}\nexport function assertIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.IndexedAccessType {\n  assert(\"IndexedAccessType\", node, opts);\n}\nexport function assertOptionalIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.OptionalIndexedAccessType {\n  assert(\"OptionalIndexedAccessType\", node, opts);\n}\nexport function assertJSXAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXAttribute {\n  assert(\"JSXAttribute\", node, opts);\n}\nexport function assertJSXClosingElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXClosingElement {\n  assert(\"JSXClosingElement\", node, opts);\n}\nexport function assertJSXElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXElement {\n  assert(\"JSXElement\", node, opts);\n}\nexport function assertJSXEmptyExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXEmptyExpression {\n  assert(\"JSXEmptyExpression\", node, opts);\n}\nexport function assertJSXExpressionContainer(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXExpressionContainer {\n  assert(\"JSXExpressionContainer\", node, opts);\n}\nexport function assertJSXSpreadChild(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXSpreadChild {\n  assert(\"JSXSpreadChild\", node, opts);\n}\nexport function assertJSXIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXIdentifier {\n  assert(\"JSXIdentifier\", node, opts);\n}\nexport function assertJSXMemberExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXMemberExpression {\n  assert(\"JSXMemberExpression\", node, opts);\n}\nexport function assertJSXNamespacedName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXNamespacedName {\n  assert(\"JSXNamespacedName\", node, opts);\n}\nexport function assertJSXOpeningElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXOpeningElement {\n  assert(\"JSXOpeningElement\", node, opts);\n}\nexport function assertJSXSpreadAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXSpreadAttribute {\n  assert(\"JSXSpreadAttribute\", node, opts);\n}\nexport function assertJSXText(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXText {\n  assert(\"JSXText\", node, opts);\n}\nexport function assertJSXFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXFragment {\n  assert(\"JSXFragment\", node, opts);\n}\nexport function assertJSXOpeningFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXOpeningFragment {\n  assert(\"JSXOpeningFragment\", node, opts);\n}\nexport function assertJSXClosingFragment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSXClosingFragment {\n  assert(\"JSXClosingFragment\", node, opts);\n}\nexport function assertNoop(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Noop {\n  assert(\"Noop\", node, opts);\n}\nexport function assertPlaceholder(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Placeholder {\n  assert(\"Placeholder\", node, opts);\n}\nexport function assertV8IntrinsicIdentifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.V8IntrinsicIdentifier {\n  assert(\"V8IntrinsicIdentifier\", node, opts);\n}\nexport function assertArgumentPlaceholder(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ArgumentPlaceholder {\n  assert(\"ArgumentPlaceholder\", node, opts);\n}\nexport function assertBindExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BindExpression {\n  assert(\"BindExpression\", node, opts);\n}\nexport function assertImportAttribute(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportAttribute {\n  assert(\"ImportAttribute\", node, opts);\n}\nexport function assertDecorator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Decorator {\n  assert(\"Decorator\", node, opts);\n}\nexport function assertDoExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DoExpression {\n  assert(\"DoExpression\", node, opts);\n}\nexport function assertExportDefaultSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDefaultSpecifier {\n  assert(\"ExportDefaultSpecifier\", node, opts);\n}\nexport function assertRecordExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.RecordExpression {\n  assert(\"RecordExpression\", node, opts);\n}\nexport function assertTupleExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TupleExpression {\n  assert(\"TupleExpression\", node, opts);\n}\nexport function assertDecimalLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.DecimalLiteral {\n  assert(\"DecimalLiteral\", node, opts);\n}\nexport function assertModuleExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ModuleExpression {\n  assert(\"ModuleExpression\", node, opts);\n}\nexport function assertTopicReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TopicReference {\n  assert(\"TopicReference\", node, opts);\n}\nexport function assertPipelineTopicExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelineTopicExpression {\n  assert(\"PipelineTopicExpression\", node, opts);\n}\nexport function assertPipelineBareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelineBareFunction {\n  assert(\"PipelineBareFunction\", node, opts);\n}\nexport function assertPipelinePrimaryTopicReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PipelinePrimaryTopicReference {\n  assert(\"PipelinePrimaryTopicReference\", node, opts);\n}\nexport function assertTSParameterProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSParameterProperty {\n  assert(\"TSParameterProperty\", node, opts);\n}\nexport function assertTSDeclareFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSDeclareFunction {\n  assert(\"TSDeclareFunction\", node, opts);\n}\nexport function assertTSDeclareMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSDeclareMethod {\n  assert(\"TSDeclareMethod\", node, opts);\n}\nexport function assertTSQualifiedName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSQualifiedName {\n  assert(\"TSQualifiedName\", node, opts);\n}\nexport function assertTSCallSignatureDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSCallSignatureDeclaration {\n  assert(\"TSCallSignatureDeclaration\", node, opts);\n}\nexport function assertTSConstructSignatureDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConstructSignatureDeclaration {\n  assert(\"TSConstructSignatureDeclaration\", node, opts);\n}\nexport function assertTSPropertySignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSPropertySignature {\n  assert(\"TSPropertySignature\", node, opts);\n}\nexport function assertTSMethodSignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSMethodSignature {\n  assert(\"TSMethodSignature\", node, opts);\n}\nexport function assertTSIndexSignature(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIndexSignature {\n  assert(\"TSIndexSignature\", node, opts);\n}\nexport function assertTSAnyKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSAnyKeyword {\n  assert(\"TSAnyKeyword\", node, opts);\n}\nexport function assertTSBooleanKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBooleanKeyword {\n  assert(\"TSBooleanKeyword\", node, opts);\n}\nexport function assertTSBigIntKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBigIntKeyword {\n  assert(\"TSBigIntKeyword\", node, opts);\n}\nexport function assertTSIntrinsicKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIntrinsicKeyword {\n  assert(\"TSIntrinsicKeyword\", node, opts);\n}\nexport function assertTSNeverKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNeverKeyword {\n  assert(\"TSNeverKeyword\", node, opts);\n}\nexport function assertTSNullKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNullKeyword {\n  assert(\"TSNullKeyword\", node, opts);\n}\nexport function assertTSNumberKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNumberKeyword {\n  assert(\"TSNumberKeyword\", node, opts);\n}\nexport function assertTSObjectKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSObjectKeyword {\n  assert(\"TSObjectKeyword\", node, opts);\n}\nexport function assertTSStringKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSStringKeyword {\n  assert(\"TSStringKeyword\", node, opts);\n}\nexport function assertTSSymbolKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSSymbolKeyword {\n  assert(\"TSSymbolKeyword\", node, opts);\n}\nexport function assertTSUndefinedKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUndefinedKeyword {\n  assert(\"TSUndefinedKeyword\", node, opts);\n}\nexport function assertTSUnknownKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUnknownKeyword {\n  assert(\"TSUnknownKeyword\", node, opts);\n}\nexport function assertTSVoidKeyword(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSVoidKeyword {\n  assert(\"TSVoidKeyword\", node, opts);\n}\nexport function assertTSThisType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSThisType {\n  assert(\"TSThisType\", node, opts);\n}\nexport function assertTSFunctionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSFunctionType {\n  assert(\"TSFunctionType\", node, opts);\n}\nexport function assertTSConstructorType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConstructorType {\n  assert(\"TSConstructorType\", node, opts);\n}\nexport function assertTSTypeReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeReference {\n  assert(\"TSTypeReference\", node, opts);\n}\nexport function assertTSTypePredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypePredicate {\n  assert(\"TSTypePredicate\", node, opts);\n}\nexport function assertTSTypeQuery(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeQuery {\n  assert(\"TSTypeQuery\", node, opts);\n}\nexport function assertTSTypeLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeLiteral {\n  assert(\"TSTypeLiteral\", node, opts);\n}\nexport function assertTSArrayType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSArrayType {\n  assert(\"TSArrayType\", node, opts);\n}\nexport function assertTSTupleType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTupleType {\n  assert(\"TSTupleType\", node, opts);\n}\nexport function assertTSOptionalType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSOptionalType {\n  assert(\"TSOptionalType\", node, opts);\n}\nexport function assertTSRestType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSRestType {\n  assert(\"TSRestType\", node, opts);\n}\nexport function assertTSNamedTupleMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNamedTupleMember {\n  assert(\"TSNamedTupleMember\", node, opts);\n}\nexport function assertTSUnionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSUnionType {\n  assert(\"TSUnionType\", node, opts);\n}\nexport function assertTSIntersectionType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIntersectionType {\n  assert(\"TSIntersectionType\", node, opts);\n}\nexport function assertTSConditionalType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSConditionalType {\n  assert(\"TSConditionalType\", node, opts);\n}\nexport function assertTSInferType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInferType {\n  assert(\"TSInferType\", node, opts);\n}\nexport function assertTSParenthesizedType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSParenthesizedType {\n  assert(\"TSParenthesizedType\", node, opts);\n}\nexport function assertTSTypeOperator(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeOperator {\n  assert(\"TSTypeOperator\", node, opts);\n}\nexport function assertTSIndexedAccessType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSIndexedAccessType {\n  assert(\"TSIndexedAccessType\", node, opts);\n}\nexport function assertTSMappedType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSMappedType {\n  assert(\"TSMappedType\", node, opts);\n}\nexport function assertTSTemplateLiteralType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTemplateLiteralType {\n  assert(\"TSTemplateLiteralType\", node, opts);\n}\nexport function assertTSLiteralType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSLiteralType {\n  assert(\"TSLiteralType\", node, opts);\n}\nexport function assertTSExpressionWithTypeArguments(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExpressionWithTypeArguments {\n  assert(\"TSExpressionWithTypeArguments\", node, opts);\n}\nexport function assertTSInterfaceDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInterfaceDeclaration {\n  assert(\"TSInterfaceDeclaration\", node, opts);\n}\nexport function assertTSInterfaceBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInterfaceBody {\n  assert(\"TSInterfaceBody\", node, opts);\n}\nexport function assertTSTypeAliasDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAliasDeclaration {\n  assert(\"TSTypeAliasDeclaration\", node, opts);\n}\nexport function assertTSInstantiationExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSInstantiationExpression {\n  assert(\"TSInstantiationExpression\", node, opts);\n}\nexport function assertTSAsExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSAsExpression {\n  assert(\"TSAsExpression\", node, opts);\n}\nexport function assertTSSatisfiesExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSSatisfiesExpression {\n  assert(\"TSSatisfiesExpression\", node, opts);\n}\nexport function assertTSTypeAssertion(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAssertion {\n  assert(\"TSTypeAssertion\", node, opts);\n}\nexport function assertTSEnumBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEnumBody {\n  assert(\"TSEnumBody\", node, opts);\n}\nexport function assertTSEnumDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEnumDeclaration {\n  assert(\"TSEnumDeclaration\", node, opts);\n}\nexport function assertTSEnumMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEnumMember {\n  assert(\"TSEnumMember\", node, opts);\n}\nexport function assertTSModuleDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSModuleDeclaration {\n  assert(\"TSModuleDeclaration\", node, opts);\n}\nexport function assertTSModuleBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSModuleBlock {\n  assert(\"TSModuleBlock\", node, opts);\n}\nexport function assertTSImportType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSImportType {\n  assert(\"TSImportType\", node, opts);\n}\nexport function assertTSImportEqualsDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSImportEqualsDeclaration {\n  assert(\"TSImportEqualsDeclaration\", node, opts);\n}\nexport function assertTSExternalModuleReference(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExternalModuleReference {\n  assert(\"TSExternalModuleReference\", node, opts);\n}\nexport function assertTSNonNullExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNonNullExpression {\n  assert(\"TSNonNullExpression\", node, opts);\n}\nexport function assertTSExportAssignment(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSExportAssignment {\n  assert(\"TSExportAssignment\", node, opts);\n}\nexport function assertTSNamespaceExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSNamespaceExportDeclaration {\n  assert(\"TSNamespaceExportDeclaration\", node, opts);\n}\nexport function assertTSTypeAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeAnnotation {\n  assert(\"TSTypeAnnotation\", node, opts);\n}\nexport function assertTSTypeParameterInstantiation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameterInstantiation {\n  assert(\"TSTypeParameterInstantiation\", node, opts);\n}\nexport function assertTSTypeParameterDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameterDeclaration {\n  assert(\"TSTypeParameterDeclaration\", node, opts);\n}\nexport function assertTSTypeParameter(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeParameter {\n  assert(\"TSTypeParameter\", node, opts);\n}\nexport function assertStandardized(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Standardized {\n  assert(\"Standardized\", node, opts);\n}\nexport function assertExpression(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Expression {\n  assert(\"Expression\", node, opts);\n}\nexport function assertBinary(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Binary {\n  assert(\"Binary\", node, opts);\n}\nexport function assertScopable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Scopable {\n  assert(\"Scopable\", node, opts);\n}\nexport function assertBlockParent(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.BlockParent {\n  assert(\"BlockParent\", node, opts);\n}\nexport function assertBlock(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Block {\n  assert(\"Block\", node, opts);\n}\nexport function assertStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Statement {\n  assert(\"Statement\", node, opts);\n}\nexport function assertTerminatorless(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Terminatorless {\n  assert(\"Terminatorless\", node, opts);\n}\nexport function assertCompletionStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.CompletionStatement {\n  assert(\"CompletionStatement\", node, opts);\n}\nexport function assertConditional(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Conditional {\n  assert(\"Conditional\", node, opts);\n}\nexport function assertLoop(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Loop {\n  assert(\"Loop\", node, opts);\n}\nexport function assertWhile(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.While {\n  assert(\"While\", node, opts);\n}\nexport function assertExpressionWrapper(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExpressionWrapper {\n  assert(\"ExpressionWrapper\", node, opts);\n}\nexport function assertFor(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.For {\n  assert(\"For\", node, opts);\n}\nexport function assertForXStatement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ForXStatement {\n  assert(\"ForXStatement\", node, opts);\n}\nexport function assertFunction(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Function {\n  assert(\"Function\", node, opts);\n}\nexport function assertFunctionParent(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FunctionParent {\n  assert(\"FunctionParent\", node, opts);\n}\nexport function assertPureish(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Pureish {\n  assert(\"Pureish\", node, opts);\n}\nexport function assertDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Declaration {\n  assert(\"Declaration\", node, opts);\n}\nexport function assertPatternLike(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.PatternLike {\n  assert(\"PatternLike\", node, opts);\n}\nexport function assertLVal(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.LVal {\n  assert(\"LVal\", node, opts);\n}\nexport function assertTSEntityName(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSEntityName {\n  assert(\"TSEntityName\", node, opts);\n}\nexport function assertLiteral(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Literal {\n  assert(\"Literal\", node, opts);\n}\nexport function assertImmutable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Immutable {\n  assert(\"Immutable\", node, opts);\n}\nexport function assertUserWhitespacable(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UserWhitespacable {\n  assert(\"UserWhitespacable\", node, opts);\n}\nexport function assertMethod(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Method {\n  assert(\"Method\", node, opts);\n}\nexport function assertObjectMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ObjectMember {\n  assert(\"ObjectMember\", node, opts);\n}\nexport function assertProperty(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Property {\n  assert(\"Property\", node, opts);\n}\nexport function assertUnaryLike(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.UnaryLike {\n  assert(\"UnaryLike\", node, opts);\n}\nexport function assertPattern(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Pattern {\n  assert(\"Pattern\", node, opts);\n}\nexport function assertClass(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Class {\n  assert(\"Class\", node, opts);\n}\nexport function assertImportOrExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ImportOrExportDeclaration {\n  assert(\"ImportOrExportDeclaration\", node, opts);\n}\nexport function assertExportDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ExportDeclaration {\n  assert(\"ExportDeclaration\", node, opts);\n}\nexport function assertModuleSpecifier(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.ModuleSpecifier {\n  assert(\"ModuleSpecifier\", node, opts);\n}\nexport function assertAccessor(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Accessor {\n  assert(\"Accessor\", node, opts);\n}\nexport function assertPrivate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Private {\n  assert(\"Private\", node, opts);\n}\nexport function assertFlow(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Flow {\n  assert(\"Flow\", node, opts);\n}\nexport function assertFlowType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowType {\n  assert(\"FlowType\", node, opts);\n}\nexport function assertFlowBaseAnnotation(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowBaseAnnotation {\n  assert(\"FlowBaseAnnotation\", node, opts);\n}\nexport function assertFlowDeclaration(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowDeclaration {\n  assert(\"FlowDeclaration\", node, opts);\n}\nexport function assertFlowPredicate(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.FlowPredicate {\n  assert(\"FlowPredicate\", node, opts);\n}\nexport function assertEnumBody(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumBody {\n  assert(\"EnumBody\", node, opts);\n}\nexport function assertEnumMember(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.EnumMember {\n  assert(\"EnumMember\", node, opts);\n}\nexport function assertJSX(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.JSX {\n  assert(\"JSX\", node, opts);\n}\nexport function assertMiscellaneous(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.Miscellaneous {\n  assert(\"Miscellaneous\", node, opts);\n}\nexport function assertTypeScript(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TypeScript {\n  assert(\"TypeScript\", node, opts);\n}\nexport function assertTSTypeElement(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSTypeElement {\n  assert(\"TSTypeElement\", node, opts);\n}\nexport function assertTSType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSType {\n  assert(\"TSType\", node, opts);\n}\nexport function assertTSBaseType(\n  node: object | null | undefined,\n  opts?: object | null,\n): asserts node is t.TSBaseType {\n  assert(\"TSBaseType\", node, opts);\n}\nexport function assertNumberLiteral(node: any, opts: any): void {\n  deprecationWarning(\"assertNumberLiteral\", \"assertNumericLiteral\");\n  assert(\"NumberLiteral\", node, opts);\n}\nexport function assertRegexLiteral(node: any, opts: any): void {\n  deprecationWarning(\"assertRegexLiteral\", \"assertRegExpLiteral\");\n  assert(\"RegexLiteral\", node, opts);\n}\nexport function assertRestProperty(node: any, opts: any): void {\n  deprecationWarning(\"assertRestProperty\", \"assertRestElement\");\n  assert(\"RestProperty\", node, opts);\n}\nexport function assertSpreadProperty(node: any, opts: any): void {\n  deprecationWarning(\"assertSpreadProperty\", \"assertSpreadElement\");\n  assert(\"SpreadProperty\", node, opts);\n}\nexport function assertModuleDeclaration(node: any, opts: any): void {\n  deprecationWarning(\n    \"assertModuleDeclaration\",\n    \"assertImportOrExportDeclaration\",\n  );\n  assert(\"ModuleDeclaration\", node, opts);\n}\n","import { unionTypeAnnotation } from \"../generated/index.ts\";\nimport removeTypeDuplicates from \"../../modifications/flow/removeTypeDuplicates.ts\";\nimport type * as t from \"../../index.ts\";\n\n/**\n * Takes an array of `types` and flattens them, removing duplicates and\n * returns a `UnionTypeAnnotation` node containing them.\n */\nexport default function createFlowUnionType<T extends t.FlowType>(\n  types: [T] | Array<T>,\n): T | t.UnionTypeAnnotation {\n  const flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0] as T;\n  } else {\n    return unionTypeAnnotation(flattened);\n  }\n}\n","import {\n  anyTypeAnnotation,\n  stringTypeAnnotation,\n  numberTypeAnnotation,\n  voidTypeAnnotation,\n  booleanTypeAnnotation,\n  genericTypeAnnotation,\n  identifier,\n} from \"../generated/index.ts\";\nimport type * as t from \"../../index.ts\";\n\nexport default createTypeAnnotationBasedOnTypeof as {\n  (type: \"string\"): t.StringTypeAnnotation;\n  (type: \"number\"): t.NumberTypeAnnotation;\n  (type: \"undefined\"): t.VoidTypeAnnotation;\n  (type: \"boolean\"): t.BooleanTypeAnnotation;\n  (type: \"function\"): t.GenericTypeAnnotation;\n  (type: \"object\"): t.GenericTypeAnnotation;\n  (type: \"symbol\"): t.GenericTypeAnnotation;\n  (type: \"bigint\"): t.AnyTypeAnnotation;\n};\n\n/**\n * Create a type annotation based on typeof expression.\n */\nfunction createTypeAnnotationBasedOnTypeof(type: string): t.FlowType {\n  switch (type) {\n    case \"string\":\n      return stringTypeAnnotation();\n    case \"number\":\n      return numberTypeAnnotation();\n    case \"undefined\":\n      return voidTypeAnnotation();\n    case \"boolean\":\n      return booleanTypeAnnotation();\n    case \"function\":\n      return genericTypeAnnotation(identifier(\"Function\"));\n    case \"object\":\n      return genericTypeAnnotation(identifier(\"Object\"));\n    case \"symbol\":\n      return genericTypeAnnotation(identifier(\"Symbol\"));\n    case \"bigint\":\n      // todo: use BigInt annotation when Flow supports BigInt\n      // https://github.com/facebook/flow/issues/6639\n      return anyTypeAnnotation();\n  }\n  throw new Error(\"Invalid typeof value: \" + type);\n}\n","/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\n\nexport * from \"./lowercase.ts\";\nexport * from \"./uppercase.ts\";\n\n// Uppercase builders and AST types conflict with each other, which is\n// not allowed by TypeScript when using `export * from ...`\n// We instead explicity list the AST types here, so that:\n// - From a TypeScript perspective, the AST types win over the uppercase\n//   builders (which is the standard behavior for JS when a named\n//   re-export conflicts with a * re-export.)\n// - At runtime, this `export type` is removed, leaving only the uppercase\n//   builders behind (which are thus visible to JavaScript code).\n// This ensures compatibility with legacy code that uses the uppercase\n// builders, while allowing TypeScript users to use the lowercase builders\n// together with the AST types.\n\n// prettier-ignore\nexport type {\n  ArrayExpression, AssignmentExpression, BinaryExpression, InterpreterDirective, Directive, DirectiveLiteral, BlockStatement, BreakStatement, CallExpression, CatchClause, ConditionalExpression, ContinueStatement, DebuggerStatement, DoWhileStatement, EmptyStatement, ExpressionStatement, File, ForInStatement, ForStatement, FunctionDeclaration, FunctionExpression, Identifier, IfStatement, LabeledStatement, StringLiteral, NumericLiteral, NullLiteral, BooleanLiteral, RegExpLiteral, LogicalExpression, MemberExpression, NewExpression, Program, ObjectExpression, ObjectMethod, ObjectProperty, RestElement, ReturnStatement, SequenceExpression, ParenthesizedExpression, SwitchCase, SwitchStatement, ThisExpression, ThrowStatement, TryStatement, UnaryExpression, UpdateExpression, VariableDeclaration, VariableDeclarator, WhileStatement, WithStatement, AssignmentPattern, ArrayPattern, ArrowFunctionExpression, ClassBody, ClassExpression, ClassDeclaration, ExportAllDeclaration, ExportDefaultDeclaration, ExportNamedDeclaration, ExportSpecifier, ForOfStatement, ImportDeclaration, ImportDefaultSpecifier, ImportNamespaceSpecifier, ImportSpecifier, ImportExpression, MetaProperty, ClassMethod, ObjectPattern, SpreadElement, Super, TaggedTemplateExpression, TemplateElement, TemplateLiteral, YieldExpression, AwaitExpression, Import, BigIntLiteral, ExportNamespaceSpecifier, OptionalMemberExpression, OptionalCallExpression, ClassProperty, ClassAccessorProperty, ClassPrivateProperty, ClassPrivateMethod, PrivateName, StaticBlock, AnyTypeAnnotation, ArrayTypeAnnotation, BooleanTypeAnnotation, BooleanLiteralTypeAnnotation, NullLiteralTypeAnnotation, ClassImplements, DeclareClass, DeclareFunction, DeclareInterface, DeclareModule, DeclareModuleExports, DeclareTypeAlias, DeclareOpaqueType, DeclareVariable, DeclareExportDeclaration, DeclareExportAllDeclaration, DeclaredPredicate, ExistsTypeAnnotation, FunctionTypeAnnotation, FunctionTypeParam, GenericTypeAnnotation, InferredPredicate, InterfaceExtends, InterfaceDeclaration, InterfaceTypeAnnotation, IntersectionTypeAnnotation, MixedTypeAnnotation, EmptyTypeAnnotation, NullableTypeAnnotation, NumberLiteralTypeAnnotation, NumberTypeAnnotation, ObjectTypeAnnotation, ObjectTypeInternalSlot, ObjectTypeCallProperty, ObjectTypeIndexer, ObjectTypeProperty, ObjectTypeSpreadProperty, OpaqueType, QualifiedTypeIdentifier, StringLiteralTypeAnnotation, StringTypeAnnotation, SymbolTypeAnnotation, ThisTypeAnnotation, TupleTypeAnnotation, TypeofTypeAnnotation, TypeAlias, TypeAnnotation, TypeCastExpression, TypeParameter, TypeParameterDeclaration, TypeParameterInstantiation, UnionTypeAnnotation, Variance, VoidTypeAnnotation, EnumDeclaration, EnumBooleanBody, EnumNumberBody, EnumStringBody, EnumSymbolBody, EnumBooleanMember, EnumNumberMember, EnumStringMember, EnumDefaultedMember, IndexedAccessType, OptionalIndexedAccessType, JSXAttribute, JSXClosingElement, JSXElement, JSXEmptyExpression, JSXExpressionContainer, JSXSpreadChild, JSXIdentifier, JSXMemberExpression, JSXNamespacedName, JSXOpeningElement, JSXSpreadAttribute, JSXText, JSXFragment, JSXOpeningFragment, JSXClosingFragment, Noop, Placeholder, V8IntrinsicIdentifier, ArgumentPlaceholder, BindExpression, ImportAttribute, Decorator, DoExpression, ExportDefaultSpecifier, RecordExpression, TupleExpression, DecimalLiteral, ModuleExpression, TopicReference, PipelineTopicExpression, PipelineBareFunction, PipelinePrimaryTopicReference, TSParameterProperty, TSDeclareFunction, TSDeclareMethod, TSQualifiedName, TSCallSignatureDeclaration, TSConstructSignatureDeclaration, TSPropertySignature, TSMethodSignature, TSIndexSignature, TSAnyKeyword, TSBooleanKeyword, TSBigIntKeyword, TSIntrinsicKeyword, TSNeverKeyword, TSNullKeyword, TSNumberKeyword, TSObjectKeyword, TSStringKeyword, TSSymbolKeyword, TSUndefinedKeyword, TSUnknownKeyword, TSVoidKeyword, TSThisType, TSFunctionType, TSConstructorType, TSTypeReference, TSTypePredicate, TSTypeQuery, TSTypeLiteral, TSArrayType, TSTupleType, TSOptionalType, TSRestType, TSNamedTupleMember, TSUnionType, TSIntersectionType, TSConditionalType, TSInferType, TSParenthesizedType, TSTypeOperator, TSIndexedAccessType, TSMappedType, TSTemplateLiteralType, TSLiteralType, TSExpressionWithTypeArguments, TSInterfaceDeclaration, TSInterfaceBody, TSTypeAliasDeclaration, TSInstantiationExpression, TSAsExpression, TSSatisfiesExpression, TSTypeAssertion, TSEnumBody, TSEnumDeclaration, TSEnumMember, TSModuleDeclaration, TSModuleBlock, TSImportType, TSImportEqualsDeclaration, TSExternalModuleReference, TSNonNullExpression, TSExportAssignment, TSNamespaceExportDeclaration, TSTypeAnnotation, TSTypeParameterInstantiation, TSTypeParameterDeclaration, TSTypeParameter,\n  NumberLiteral, RegexLiteral, RestProperty, SpreadProperty\n} from \"../../ast-types/generated/index.ts\";\n\n// This will re-export all the type definitions that do not conflict with\n// uppercase builders, such as aliases.\nexport type * from \"../../ast-types/generated/index.ts\";\n","/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport * as _validate from \"../../validators/validate.ts\";\nimport type * as t from \"../../ast-types/generated/index.ts\";\nimport deprecationWarning from \"../../utils/deprecationWarning.ts\";\nimport * as utils from \"../../definitions/utils.ts\";\n\nconst { validateInternal: validate } = _validate;\nconst { NODE_FIELDS } = utils;\n\nexport function arrayExpression(\n  elements: Array<null | t.Expression | t.SpreadElement> = [],\n): t.ArrayExpression {\n  const node: t.ArrayExpression = {\n    type: \"ArrayExpression\",\n    elements,\n  };\n  const defs = NODE_FIELDS.ArrayExpression;\n  validate(defs.elements, node, \"elements\", elements, 1);\n  return node;\n}\nexport function assignmentExpression(\n  operator: string,\n  left: t.LVal | t.OptionalMemberExpression,\n  right: t.Expression,\n): t.AssignmentExpression {\n  const node: t.AssignmentExpression = {\n    type: \"AssignmentExpression\",\n    operator,\n    left,\n    right,\n  };\n  const defs = NODE_FIELDS.AssignmentExpression;\n  validate(defs.operator, node, \"operator\", operator);\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport function binaryExpression(\n  operator:\n    | \"+\"\n    | \"-\"\n    | \"/\"\n    | \"%\"\n    | \"*\"\n    | \"**\"\n    | \"&\"\n    | \"|\"\n    | \">>\"\n    | \">>>\"\n    | \"<<\"\n    | \"^\"\n    | \"==\"\n    | \"===\"\n    | \"!=\"\n    | \"!==\"\n    | \"in\"\n    | \"instanceof\"\n    | \">\"\n    | \"<\"\n    | \">=\"\n    | \"<=\"\n    | \"|>\",\n  left: t.Expression | t.PrivateName,\n  right: t.Expression,\n): t.BinaryExpression {\n  const node: t.BinaryExpression = {\n    type: \"BinaryExpression\",\n    operator,\n    left,\n    right,\n  };\n  const defs = NODE_FIELDS.BinaryExpression;\n  validate(defs.operator, node, \"operator\", operator);\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport function interpreterDirective(value: string): t.InterpreterDirective {\n  const node: t.InterpreterDirective = {\n    type: \"InterpreterDirective\",\n    value,\n  };\n  const defs = NODE_FIELDS.InterpreterDirective;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function directive(value: t.DirectiveLiteral): t.Directive {\n  const node: t.Directive = {\n    type: \"Directive\",\n    value,\n  };\n  const defs = NODE_FIELDS.Directive;\n  validate(defs.value, node, \"value\", value, 1);\n  return node;\n}\nexport function directiveLiteral(value: string): t.DirectiveLiteral {\n  const node: t.DirectiveLiteral = {\n    type: \"DirectiveLiteral\",\n    value,\n  };\n  const defs = NODE_FIELDS.DirectiveLiteral;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function blockStatement(\n  body: Array<t.Statement>,\n  directives: Array<t.Directive> = [],\n): t.BlockStatement {\n  const node: t.BlockStatement = {\n    type: \"BlockStatement\",\n    body,\n    directives,\n  };\n  const defs = NODE_FIELDS.BlockStatement;\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.directives, node, \"directives\", directives, 1);\n  return node;\n}\nexport function breakStatement(\n  label: t.Identifier | null = null,\n): t.BreakStatement {\n  const node: t.BreakStatement = {\n    type: \"BreakStatement\",\n    label,\n  };\n  const defs = NODE_FIELDS.BreakStatement;\n  validate(defs.label, node, \"label\", label, 1);\n  return node;\n}\nexport function callExpression(\n  callee: t.Expression | t.Super | t.V8IntrinsicIdentifier,\n  _arguments: Array<t.Expression | t.SpreadElement | t.ArgumentPlaceholder>,\n): t.CallExpression {\n  const node: t.CallExpression = {\n    type: \"CallExpression\",\n    callee,\n    arguments: _arguments,\n  };\n  const defs = NODE_FIELDS.CallExpression;\n  validate(defs.callee, node, \"callee\", callee, 1);\n  validate(defs.arguments, node, \"arguments\", _arguments, 1);\n  return node;\n}\nexport function catchClause(\n  param:\n    | t.Identifier\n    | t.ArrayPattern\n    | t.ObjectPattern\n    | null\n    | undefined = null,\n  body: t.BlockStatement,\n): t.CatchClause {\n  const node: t.CatchClause = {\n    type: \"CatchClause\",\n    param,\n    body,\n  };\n  const defs = NODE_FIELDS.CatchClause;\n  validate(defs.param, node, \"param\", param, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function conditionalExpression(\n  test: t.Expression,\n  consequent: t.Expression,\n  alternate: t.Expression,\n): t.ConditionalExpression {\n  const node: t.ConditionalExpression = {\n    type: \"ConditionalExpression\",\n    test,\n    consequent,\n    alternate,\n  };\n  const defs = NODE_FIELDS.ConditionalExpression;\n  validate(defs.test, node, \"test\", test, 1);\n  validate(defs.consequent, node, \"consequent\", consequent, 1);\n  validate(defs.alternate, node, \"alternate\", alternate, 1);\n  return node;\n}\nexport function continueStatement(\n  label: t.Identifier | null = null,\n): t.ContinueStatement {\n  const node: t.ContinueStatement = {\n    type: \"ContinueStatement\",\n    label,\n  };\n  const defs = NODE_FIELDS.ContinueStatement;\n  validate(defs.label, node, \"label\", label, 1);\n  return node;\n}\nexport function debuggerStatement(): t.DebuggerStatement {\n  return {\n    type: \"DebuggerStatement\",\n  };\n}\nexport function doWhileStatement(\n  test: t.Expression,\n  body: t.Statement,\n): t.DoWhileStatement {\n  const node: t.DoWhileStatement = {\n    type: \"DoWhileStatement\",\n    test,\n    body,\n  };\n  const defs = NODE_FIELDS.DoWhileStatement;\n  validate(defs.test, node, \"test\", test, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function emptyStatement(): t.EmptyStatement {\n  return {\n    type: \"EmptyStatement\",\n  };\n}\nexport function expressionStatement(\n  expression: t.Expression,\n): t.ExpressionStatement {\n  const node: t.ExpressionStatement = {\n    type: \"ExpressionStatement\",\n    expression,\n  };\n  const defs = NODE_FIELDS.ExpressionStatement;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport function file(\n  program: t.Program,\n  comments: Array<t.CommentBlock | t.CommentLine> | null = null,\n  tokens: Array<any> | null = null,\n): t.File {\n  const node: t.File = {\n    type: \"File\",\n    program,\n    comments,\n    tokens,\n  };\n  const defs = NODE_FIELDS.File;\n  validate(defs.program, node, \"program\", program, 1);\n  validate(defs.comments, node, \"comments\", comments, 1);\n  validate(defs.tokens, node, \"tokens\", tokens);\n  return node;\n}\nexport function forInStatement(\n  left: t.VariableDeclaration | t.LVal,\n  right: t.Expression,\n  body: t.Statement,\n): t.ForInStatement {\n  const node: t.ForInStatement = {\n    type: \"ForInStatement\",\n    left,\n    right,\n    body,\n  };\n  const defs = NODE_FIELDS.ForInStatement;\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function forStatement(\n  init: t.VariableDeclaration | t.Expression | null | undefined = null,\n  test: t.Expression | null | undefined = null,\n  update: t.Expression | null | undefined = null,\n  body: t.Statement,\n): t.ForStatement {\n  const node: t.ForStatement = {\n    type: \"ForStatement\",\n    init,\n    test,\n    update,\n    body,\n  };\n  const defs = NODE_FIELDS.ForStatement;\n  validate(defs.init, node, \"init\", init, 1);\n  validate(defs.test, node, \"test\", test, 1);\n  validate(defs.update, node, \"update\", update, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function functionDeclaration(\n  id: t.Identifier | null | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  generator: boolean = false,\n  async: boolean = false,\n): t.FunctionDeclaration {\n  const node: t.FunctionDeclaration = {\n    type: \"FunctionDeclaration\",\n    id,\n    params,\n    body,\n    generator,\n    async,\n  };\n  const defs = NODE_FIELDS.FunctionDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.generator, node, \"generator\", generator);\n  validate(defs.async, node, \"async\", async);\n  return node;\n}\nexport function functionExpression(\n  id: t.Identifier | null | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  generator: boolean = false,\n  async: boolean = false,\n): t.FunctionExpression {\n  const node: t.FunctionExpression = {\n    type: \"FunctionExpression\",\n    id,\n    params,\n    body,\n    generator,\n    async,\n  };\n  const defs = NODE_FIELDS.FunctionExpression;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.generator, node, \"generator\", generator);\n  validate(defs.async, node, \"async\", async);\n  return node;\n}\nexport function identifier(name: string): t.Identifier {\n  const node: t.Identifier = {\n    type: \"Identifier\",\n    name,\n  };\n  const defs = NODE_FIELDS.Identifier;\n  validate(defs.name, node, \"name\", name);\n  return node;\n}\nexport function ifStatement(\n  test: t.Expression,\n  consequent: t.Statement,\n  alternate: t.Statement | null = null,\n): t.IfStatement {\n  const node: t.IfStatement = {\n    type: \"IfStatement\",\n    test,\n    consequent,\n    alternate,\n  };\n  const defs = NODE_FIELDS.IfStatement;\n  validate(defs.test, node, \"test\", test, 1);\n  validate(defs.consequent, node, \"consequent\", consequent, 1);\n  validate(defs.alternate, node, \"alternate\", alternate, 1);\n  return node;\n}\nexport function labeledStatement(\n  label: t.Identifier,\n  body: t.Statement,\n): t.LabeledStatement {\n  const node: t.LabeledStatement = {\n    type: \"LabeledStatement\",\n    label,\n    body,\n  };\n  const defs = NODE_FIELDS.LabeledStatement;\n  validate(defs.label, node, \"label\", label, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function stringLiteral(value: string): t.StringLiteral {\n  const node: t.StringLiteral = {\n    type: \"StringLiteral\",\n    value,\n  };\n  const defs = NODE_FIELDS.StringLiteral;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function numericLiteral(value: number): t.NumericLiteral {\n  const node: t.NumericLiteral = {\n    type: \"NumericLiteral\",\n    value,\n  };\n  const defs = NODE_FIELDS.NumericLiteral;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function nullLiteral(): t.NullLiteral {\n  return {\n    type: \"NullLiteral\",\n  };\n}\nexport function booleanLiteral(value: boolean): t.BooleanLiteral {\n  const node: t.BooleanLiteral = {\n    type: \"BooleanLiteral\",\n    value,\n  };\n  const defs = NODE_FIELDS.BooleanLiteral;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function regExpLiteral(\n  pattern: string,\n  flags: string = \"\",\n): t.RegExpLiteral {\n  const node: t.RegExpLiteral = {\n    type: \"RegExpLiteral\",\n    pattern,\n    flags,\n  };\n  const defs = NODE_FIELDS.RegExpLiteral;\n  validate(defs.pattern, node, \"pattern\", pattern);\n  validate(defs.flags, node, \"flags\", flags);\n  return node;\n}\nexport function logicalExpression(\n  operator: \"||\" | \"&&\" | \"??\",\n  left: t.Expression,\n  right: t.Expression,\n): t.LogicalExpression {\n  const node: t.LogicalExpression = {\n    type: \"LogicalExpression\",\n    operator,\n    left,\n    right,\n  };\n  const defs = NODE_FIELDS.LogicalExpression;\n  validate(defs.operator, node, \"operator\", operator);\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport function memberExpression(\n  object: t.Expression | t.Super,\n  property: t.Expression | t.Identifier | t.PrivateName,\n  computed: boolean = false,\n  optional: boolean | null = null,\n): t.MemberExpression {\n  const node: t.MemberExpression = {\n    type: \"MemberExpression\",\n    object,\n    property,\n    computed,\n    optional,\n  };\n  const defs = NODE_FIELDS.MemberExpression;\n  validate(defs.object, node, \"object\", object, 1);\n  validate(defs.property, node, \"property\", property, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.optional, node, \"optional\", optional);\n  return node;\n}\nexport function newExpression(\n  callee: t.Expression | t.Super | t.V8IntrinsicIdentifier,\n  _arguments: Array<t.Expression | t.SpreadElement | t.ArgumentPlaceholder>,\n): t.NewExpression {\n  const node: t.NewExpression = {\n    type: \"NewExpression\",\n    callee,\n    arguments: _arguments,\n  };\n  const defs = NODE_FIELDS.NewExpression;\n  validate(defs.callee, node, \"callee\", callee, 1);\n  validate(defs.arguments, node, \"arguments\", _arguments, 1);\n  return node;\n}\nexport function program(\n  body: Array<t.Statement>,\n  directives: Array<t.Directive> = [],\n  sourceType: \"script\" | \"module\" = \"script\",\n  interpreter: t.InterpreterDirective | null = null,\n): t.Program {\n  const node: t.Program = {\n    type: \"Program\",\n    body,\n    directives,\n    sourceType,\n    interpreter,\n  };\n  const defs = NODE_FIELDS.Program;\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.directives, node, \"directives\", directives, 1);\n  validate(defs.sourceType, node, \"sourceType\", sourceType);\n  validate(defs.interpreter, node, \"interpreter\", interpreter, 1);\n  return node;\n}\nexport function objectExpression(\n  properties: Array<t.ObjectMethod | t.ObjectProperty | t.SpreadElement>,\n): t.ObjectExpression {\n  const node: t.ObjectExpression = {\n    type: \"ObjectExpression\",\n    properties,\n  };\n  const defs = NODE_FIELDS.ObjectExpression;\n  validate(defs.properties, node, \"properties\", properties, 1);\n  return node;\n}\nexport function objectMethod(\n  kind: \"method\" | \"get\" | \"set\" | undefined = \"method\",\n  key:\n    | t.Expression\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement,\n  computed: boolean = false,\n  generator: boolean = false,\n  async: boolean = false,\n): t.ObjectMethod {\n  const node: t.ObjectMethod = {\n    type: \"ObjectMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    generator,\n    async,\n  };\n  const defs = NODE_FIELDS.ObjectMethod;\n  validate(defs.kind, node, \"kind\", kind);\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.generator, node, \"generator\", generator);\n  validate(defs.async, node, \"async\", async);\n  return node;\n}\nexport function objectProperty(\n  key:\n    | t.Expression\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.DecimalLiteral\n    | t.PrivateName,\n  value: t.Expression | t.PatternLike,\n  computed: boolean = false,\n  shorthand: boolean = false,\n  decorators: Array<t.Decorator> | null = null,\n): t.ObjectProperty {\n  const node: t.ObjectProperty = {\n    type: \"ObjectProperty\",\n    key,\n    value,\n    computed,\n    shorthand,\n    decorators,\n  };\n  const defs = NODE_FIELDS.ObjectProperty;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.shorthand, node, \"shorthand\", shorthand);\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  return node;\n}\nexport function restElement(argument: t.LVal): t.RestElement {\n  const node: t.RestElement = {\n    type: \"RestElement\",\n    argument,\n  };\n  const defs = NODE_FIELDS.RestElement;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nexport function returnStatement(\n  argument: t.Expression | null = null,\n): t.ReturnStatement {\n  const node: t.ReturnStatement = {\n    type: \"ReturnStatement\",\n    argument,\n  };\n  const defs = NODE_FIELDS.ReturnStatement;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nexport function sequenceExpression(\n  expressions: Array<t.Expression>,\n): t.SequenceExpression {\n  const node: t.SequenceExpression = {\n    type: \"SequenceExpression\",\n    expressions,\n  };\n  const defs = NODE_FIELDS.SequenceExpression;\n  validate(defs.expressions, node, \"expressions\", expressions, 1);\n  return node;\n}\nexport function parenthesizedExpression(\n  expression: t.Expression,\n): t.ParenthesizedExpression {\n  const node: t.ParenthesizedExpression = {\n    type: \"ParenthesizedExpression\",\n    expression,\n  };\n  const defs = NODE_FIELDS.ParenthesizedExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport function switchCase(\n  test: t.Expression | null | undefined = null,\n  consequent: Array<t.Statement>,\n): t.SwitchCase {\n  const node: t.SwitchCase = {\n    type: \"SwitchCase\",\n    test,\n    consequent,\n  };\n  const defs = NODE_FIELDS.SwitchCase;\n  validate(defs.test, node, \"test\", test, 1);\n  validate(defs.consequent, node, \"consequent\", consequent, 1);\n  return node;\n}\nexport function switchStatement(\n  discriminant: t.Expression,\n  cases: Array<t.SwitchCase>,\n): t.SwitchStatement {\n  const node: t.SwitchStatement = {\n    type: \"SwitchStatement\",\n    discriminant,\n    cases,\n  };\n  const defs = NODE_FIELDS.SwitchStatement;\n  validate(defs.discriminant, node, \"discriminant\", discriminant, 1);\n  validate(defs.cases, node, \"cases\", cases, 1);\n  return node;\n}\nexport function thisExpression(): t.ThisExpression {\n  return {\n    type: \"ThisExpression\",\n  };\n}\nexport function throwStatement(argument: t.Expression): t.ThrowStatement {\n  const node: t.ThrowStatement = {\n    type: \"ThrowStatement\",\n    argument,\n  };\n  const defs = NODE_FIELDS.ThrowStatement;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nexport function tryStatement(\n  block: t.BlockStatement,\n  handler: t.CatchClause | null = null,\n  finalizer: t.BlockStatement | null = null,\n): t.TryStatement {\n  const node: t.TryStatement = {\n    type: \"TryStatement\",\n    block,\n    handler,\n    finalizer,\n  };\n  const defs = NODE_FIELDS.TryStatement;\n  validate(defs.block, node, \"block\", block, 1);\n  validate(defs.handler, node, \"handler\", handler, 1);\n  validate(defs.finalizer, node, \"finalizer\", finalizer, 1);\n  return node;\n}\nexport function unaryExpression(\n  operator: \"void\" | \"throw\" | \"delete\" | \"!\" | \"+\" | \"-\" | \"~\" | \"typeof\",\n  argument: t.Expression,\n  prefix: boolean = true,\n): t.UnaryExpression {\n  const node: t.UnaryExpression = {\n    type: \"UnaryExpression\",\n    operator,\n    argument,\n    prefix,\n  };\n  const defs = NODE_FIELDS.UnaryExpression;\n  validate(defs.operator, node, \"operator\", operator);\n  validate(defs.argument, node, \"argument\", argument, 1);\n  validate(defs.prefix, node, \"prefix\", prefix);\n  return node;\n}\nexport function updateExpression(\n  operator: \"++\" | \"--\",\n  argument: t.Expression,\n  prefix: boolean = false,\n): t.UpdateExpression {\n  const node: t.UpdateExpression = {\n    type: \"UpdateExpression\",\n    operator,\n    argument,\n    prefix,\n  };\n  const defs = NODE_FIELDS.UpdateExpression;\n  validate(defs.operator, node, \"operator\", operator);\n  validate(defs.argument, node, \"argument\", argument, 1);\n  validate(defs.prefix, node, \"prefix\", prefix);\n  return node;\n}\nexport function variableDeclaration(\n  kind: \"var\" | \"let\" | \"const\" | \"using\" | \"await using\",\n  declarations: Array<t.VariableDeclarator>,\n): t.VariableDeclaration {\n  const node: t.VariableDeclaration = {\n    type: \"VariableDeclaration\",\n    kind,\n    declarations,\n  };\n  const defs = NODE_FIELDS.VariableDeclaration;\n  validate(defs.kind, node, \"kind\", kind);\n  validate(defs.declarations, node, \"declarations\", declarations, 1);\n  return node;\n}\nexport function variableDeclarator(\n  id: t.LVal,\n  init: t.Expression | null = null,\n): t.VariableDeclarator {\n  const node: t.VariableDeclarator = {\n    type: \"VariableDeclarator\",\n    id,\n    init,\n  };\n  const defs = NODE_FIELDS.VariableDeclarator;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.init, node, \"init\", init, 1);\n  return node;\n}\nexport function whileStatement(\n  test: t.Expression,\n  body: t.Statement,\n): t.WhileStatement {\n  const node: t.WhileStatement = {\n    type: \"WhileStatement\",\n    test,\n    body,\n  };\n  const defs = NODE_FIELDS.WhileStatement;\n  validate(defs.test, node, \"test\", test, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function withStatement(\n  object: t.Expression,\n  body: t.Statement,\n): t.WithStatement {\n  const node: t.WithStatement = {\n    type: \"WithStatement\",\n    object,\n    body,\n  };\n  const defs = NODE_FIELDS.WithStatement;\n  validate(defs.object, node, \"object\", object, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function assignmentPattern(\n  left:\n    | t.Identifier\n    | t.ObjectPattern\n    | t.ArrayPattern\n    | t.MemberExpression\n    | t.TSAsExpression\n    | t.TSSatisfiesExpression\n    | t.TSTypeAssertion\n    | t.TSNonNullExpression,\n  right: t.Expression,\n): t.AssignmentPattern {\n  const node: t.AssignmentPattern = {\n    type: \"AssignmentPattern\",\n    left,\n    right,\n  };\n  const defs = NODE_FIELDS.AssignmentPattern;\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport function arrayPattern(\n  elements: Array<null | t.PatternLike | t.LVal>,\n): t.ArrayPattern {\n  const node: t.ArrayPattern = {\n    type: \"ArrayPattern\",\n    elements,\n  };\n  const defs = NODE_FIELDS.ArrayPattern;\n  validate(defs.elements, node, \"elements\", elements, 1);\n  return node;\n}\nexport function arrowFunctionExpression(\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  body: t.BlockStatement | t.Expression,\n  async: boolean = false,\n): t.ArrowFunctionExpression {\n  const node: t.ArrowFunctionExpression = {\n    type: \"ArrowFunctionExpression\",\n    params,\n    body,\n    async,\n    expression: null,\n  };\n  const defs = NODE_FIELDS.ArrowFunctionExpression;\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.async, node, \"async\", async);\n  return node;\n}\nexport function classBody(\n  body: Array<\n    | t.ClassMethod\n    | t.ClassPrivateMethod\n    | t.ClassProperty\n    | t.ClassPrivateProperty\n    | t.ClassAccessorProperty\n    | t.TSDeclareMethod\n    | t.TSIndexSignature\n    | t.StaticBlock\n  >,\n): t.ClassBody {\n  const node: t.ClassBody = {\n    type: \"ClassBody\",\n    body,\n  };\n  const defs = NODE_FIELDS.ClassBody;\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function classExpression(\n  id: t.Identifier | null | undefined = null,\n  superClass: t.Expression | null | undefined = null,\n  body: t.ClassBody,\n  decorators: Array<t.Decorator> | null = null,\n): t.ClassExpression {\n  const node: t.ClassExpression = {\n    type: \"ClassExpression\",\n    id,\n    superClass,\n    body,\n    decorators,\n  };\n  const defs = NODE_FIELDS.ClassExpression;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.superClass, node, \"superClass\", superClass, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  return node;\n}\nexport function classDeclaration(\n  id: t.Identifier | null | undefined = null,\n  superClass: t.Expression | null | undefined = null,\n  body: t.ClassBody,\n  decorators: Array<t.Decorator> | null = null,\n): t.ClassDeclaration {\n  const node: t.ClassDeclaration = {\n    type: \"ClassDeclaration\",\n    id,\n    superClass,\n    body,\n    decorators,\n  };\n  const defs = NODE_FIELDS.ClassDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.superClass, node, \"superClass\", superClass, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  return node;\n}\nexport function exportAllDeclaration(\n  source: t.StringLiteral,\n): t.ExportAllDeclaration {\n  const node: t.ExportAllDeclaration = {\n    type: \"ExportAllDeclaration\",\n    source,\n  };\n  const defs = NODE_FIELDS.ExportAllDeclaration;\n  validate(defs.source, node, \"source\", source, 1);\n  return node;\n}\nexport function exportDefaultDeclaration(\n  declaration:\n    | t.TSDeclareFunction\n    | t.FunctionDeclaration\n    | t.ClassDeclaration\n    | t.Expression,\n): t.ExportDefaultDeclaration {\n  const node: t.ExportDefaultDeclaration = {\n    type: \"ExportDefaultDeclaration\",\n    declaration,\n  };\n  const defs = NODE_FIELDS.ExportDefaultDeclaration;\n  validate(defs.declaration, node, \"declaration\", declaration, 1);\n  return node;\n}\nexport function exportNamedDeclaration(\n  declaration: t.Declaration | null = null,\n  specifiers: Array<\n    t.ExportSpecifier | t.ExportDefaultSpecifier | t.ExportNamespaceSpecifier\n  > = [],\n  source: t.StringLiteral | null = null,\n): t.ExportNamedDeclaration {\n  const node: t.ExportNamedDeclaration = {\n    type: \"ExportNamedDeclaration\",\n    declaration,\n    specifiers,\n    source,\n  };\n  const defs = NODE_FIELDS.ExportNamedDeclaration;\n  validate(defs.declaration, node, \"declaration\", declaration, 1);\n  validate(defs.specifiers, node, \"specifiers\", specifiers, 1);\n  validate(defs.source, node, \"source\", source, 1);\n  return node;\n}\nexport function exportSpecifier(\n  local: t.Identifier,\n  exported: t.Identifier | t.StringLiteral,\n): t.ExportSpecifier {\n  const node: t.ExportSpecifier = {\n    type: \"ExportSpecifier\",\n    local,\n    exported,\n  };\n  const defs = NODE_FIELDS.ExportSpecifier;\n  validate(defs.local, node, \"local\", local, 1);\n  validate(defs.exported, node, \"exported\", exported, 1);\n  return node;\n}\nexport function forOfStatement(\n  left: t.VariableDeclaration | t.LVal,\n  right: t.Expression,\n  body: t.Statement,\n  _await: boolean = false,\n): t.ForOfStatement {\n  const node: t.ForOfStatement = {\n    type: \"ForOfStatement\",\n    left,\n    right,\n    body,\n    await: _await,\n  };\n  const defs = NODE_FIELDS.ForOfStatement;\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.await, node, \"await\", _await);\n  return node;\n}\nexport function importDeclaration(\n  specifiers: Array<\n    t.ImportSpecifier | t.ImportDefaultSpecifier | t.ImportNamespaceSpecifier\n  >,\n  source: t.StringLiteral,\n): t.ImportDeclaration {\n  const node: t.ImportDeclaration = {\n    type: \"ImportDeclaration\",\n    specifiers,\n    source,\n  };\n  const defs = NODE_FIELDS.ImportDeclaration;\n  validate(defs.specifiers, node, \"specifiers\", specifiers, 1);\n  validate(defs.source, node, \"source\", source, 1);\n  return node;\n}\nexport function importDefaultSpecifier(\n  local: t.Identifier,\n): t.ImportDefaultSpecifier {\n  const node: t.ImportDefaultSpecifier = {\n    type: \"ImportDefaultSpecifier\",\n    local,\n  };\n  const defs = NODE_FIELDS.ImportDefaultSpecifier;\n  validate(defs.local, node, \"local\", local, 1);\n  return node;\n}\nexport function importNamespaceSpecifier(\n  local: t.Identifier,\n): t.ImportNamespaceSpecifier {\n  const node: t.ImportNamespaceSpecifier = {\n    type: \"ImportNamespaceSpecifier\",\n    local,\n  };\n  const defs = NODE_FIELDS.ImportNamespaceSpecifier;\n  validate(defs.local, node, \"local\", local, 1);\n  return node;\n}\nexport function importSpecifier(\n  local: t.Identifier,\n  imported: t.Identifier | t.StringLiteral,\n): t.ImportSpecifier {\n  const node: t.ImportSpecifier = {\n    type: \"ImportSpecifier\",\n    local,\n    imported,\n  };\n  const defs = NODE_FIELDS.ImportSpecifier;\n  validate(defs.local, node, \"local\", local, 1);\n  validate(defs.imported, node, \"imported\", imported, 1);\n  return node;\n}\nexport function importExpression(\n  source: t.Expression,\n  options: t.Expression | null = null,\n): t.ImportExpression {\n  const node: t.ImportExpression = {\n    type: \"ImportExpression\",\n    source,\n    options,\n  };\n  const defs = NODE_FIELDS.ImportExpression;\n  validate(defs.source, node, \"source\", source, 1);\n  validate(defs.options, node, \"options\", options, 1);\n  return node;\n}\nexport function metaProperty(\n  meta: t.Identifier,\n  property: t.Identifier,\n): t.MetaProperty {\n  const node: t.MetaProperty = {\n    type: \"MetaProperty\",\n    meta,\n    property,\n  };\n  const defs = NODE_FIELDS.MetaProperty;\n  validate(defs.meta, node, \"meta\", meta, 1);\n  validate(defs.property, node, \"property\", property, 1);\n  return node;\n}\nexport function classMethod(\n  kind: \"get\" | \"set\" | \"method\" | \"constructor\" | undefined = \"method\",\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  body: t.BlockStatement,\n  computed: boolean = false,\n  _static: boolean = false,\n  generator: boolean = false,\n  async: boolean = false,\n): t.ClassMethod {\n  const node: t.ClassMethod = {\n    type: \"ClassMethod\",\n    kind,\n    key,\n    params,\n    body,\n    computed,\n    static: _static,\n    generator,\n    async,\n  };\n  const defs = NODE_FIELDS.ClassMethod;\n  validate(defs.kind, node, \"kind\", kind);\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.static, node, \"static\", _static);\n  validate(defs.generator, node, \"generator\", generator);\n  validate(defs.async, node, \"async\", async);\n  return node;\n}\nexport function objectPattern(\n  properties: Array<t.RestElement | t.ObjectProperty>,\n): t.ObjectPattern {\n  const node: t.ObjectPattern = {\n    type: \"ObjectPattern\",\n    properties,\n  };\n  const defs = NODE_FIELDS.ObjectPattern;\n  validate(defs.properties, node, \"properties\", properties, 1);\n  return node;\n}\nexport function spreadElement(argument: t.Expression): t.SpreadElement {\n  const node: t.SpreadElement = {\n    type: \"SpreadElement\",\n    argument,\n  };\n  const defs = NODE_FIELDS.SpreadElement;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nfunction _super(): t.Super {\n  return {\n    type: \"Super\",\n  };\n}\nexport { _super as super };\nexport function taggedTemplateExpression(\n  tag: t.Expression,\n  quasi: t.TemplateLiteral,\n): t.TaggedTemplateExpression {\n  const node: t.TaggedTemplateExpression = {\n    type: \"TaggedTemplateExpression\",\n    tag,\n    quasi,\n  };\n  const defs = NODE_FIELDS.TaggedTemplateExpression;\n  validate(defs.tag, node, \"tag\", tag, 1);\n  validate(defs.quasi, node, \"quasi\", quasi, 1);\n  return node;\n}\nexport function templateElement(\n  value: { raw: string; cooked?: string },\n  tail: boolean = false,\n): t.TemplateElement {\n  const node: t.TemplateElement = {\n    type: \"TemplateElement\",\n    value,\n    tail,\n  };\n  const defs = NODE_FIELDS.TemplateElement;\n  validate(defs.value, node, \"value\", value);\n  validate(defs.tail, node, \"tail\", tail);\n  return node;\n}\nexport function templateLiteral(\n  quasis: Array<t.TemplateElement>,\n  expressions: Array<t.Expression | t.TSType>,\n): t.TemplateLiteral {\n  const node: t.TemplateLiteral = {\n    type: \"TemplateLiteral\",\n    quasis,\n    expressions,\n  };\n  const defs = NODE_FIELDS.TemplateLiteral;\n  validate(defs.quasis, node, \"quasis\", quasis, 1);\n  validate(defs.expressions, node, \"expressions\", expressions, 1);\n  return node;\n}\nexport function yieldExpression(\n  argument: t.Expression | null = null,\n  delegate: boolean = false,\n): t.YieldExpression {\n  const node: t.YieldExpression = {\n    type: \"YieldExpression\",\n    argument,\n    delegate,\n  };\n  const defs = NODE_FIELDS.YieldExpression;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  validate(defs.delegate, node, \"delegate\", delegate);\n  return node;\n}\nexport function awaitExpression(argument: t.Expression): t.AwaitExpression {\n  const node: t.AwaitExpression = {\n    type: \"AwaitExpression\",\n    argument,\n  };\n  const defs = NODE_FIELDS.AwaitExpression;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nfunction _import(): t.Import {\n  return {\n    type: \"Import\",\n  };\n}\nexport { _import as import };\nexport function bigIntLiteral(value: string): t.BigIntLiteral {\n  const node: t.BigIntLiteral = {\n    type: \"BigIntLiteral\",\n    value,\n  };\n  const defs = NODE_FIELDS.BigIntLiteral;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function exportNamespaceSpecifier(\n  exported: t.Identifier,\n): t.ExportNamespaceSpecifier {\n  const node: t.ExportNamespaceSpecifier = {\n    type: \"ExportNamespaceSpecifier\",\n    exported,\n  };\n  const defs = NODE_FIELDS.ExportNamespaceSpecifier;\n  validate(defs.exported, node, \"exported\", exported, 1);\n  return node;\n}\nexport function optionalMemberExpression(\n  object: t.Expression,\n  property: t.Expression | t.Identifier,\n  computed: boolean | undefined = false,\n  optional: boolean,\n): t.OptionalMemberExpression {\n  const node: t.OptionalMemberExpression = {\n    type: \"OptionalMemberExpression\",\n    object,\n    property,\n    computed,\n    optional,\n  };\n  const defs = NODE_FIELDS.OptionalMemberExpression;\n  validate(defs.object, node, \"object\", object, 1);\n  validate(defs.property, node, \"property\", property, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.optional, node, \"optional\", optional);\n  return node;\n}\nexport function optionalCallExpression(\n  callee: t.Expression,\n  _arguments: Array<t.Expression | t.SpreadElement | t.ArgumentPlaceholder>,\n  optional: boolean,\n): t.OptionalCallExpression {\n  const node: t.OptionalCallExpression = {\n    type: \"OptionalCallExpression\",\n    callee,\n    arguments: _arguments,\n    optional,\n  };\n  const defs = NODE_FIELDS.OptionalCallExpression;\n  validate(defs.callee, node, \"callee\", callee, 1);\n  validate(defs.arguments, node, \"arguments\", _arguments, 1);\n  validate(defs.optional, node, \"optional\", optional);\n  return node;\n}\nexport function classProperty(\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  value: t.Expression | null = null,\n  typeAnnotation: t.TypeAnnotation | t.TSTypeAnnotation | t.Noop | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  computed: boolean = false,\n  _static: boolean = false,\n): t.ClassProperty {\n  const node: t.ClassProperty = {\n    type: \"ClassProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static,\n  };\n  const defs = NODE_FIELDS.ClassProperty;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.static, node, \"static\", _static);\n  return node;\n}\nexport function classAccessorProperty(\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression\n    | t.PrivateName,\n  value: t.Expression | null = null,\n  typeAnnotation: t.TypeAnnotation | t.TSTypeAnnotation | t.Noop | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  computed: boolean = false,\n  _static: boolean = false,\n): t.ClassAccessorProperty {\n  const node: t.ClassAccessorProperty = {\n    type: \"ClassAccessorProperty\",\n    key,\n    value,\n    typeAnnotation,\n    decorators,\n    computed,\n    static: _static,\n  };\n  const defs = NODE_FIELDS.ClassAccessorProperty;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  validate(defs.computed, node, \"computed\", computed);\n  validate(defs.static, node, \"static\", _static);\n  return node;\n}\nexport function classPrivateProperty(\n  key: t.PrivateName,\n  value: t.Expression | null = null,\n  decorators: Array<t.Decorator> | null = null,\n  _static: boolean = false,\n): t.ClassPrivateProperty {\n  const node: t.ClassPrivateProperty = {\n    type: \"ClassPrivateProperty\",\n    key,\n    value,\n    decorators,\n    static: _static,\n  };\n  const defs = NODE_FIELDS.ClassPrivateProperty;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  validate(defs.static, node, \"static\", _static);\n  return node;\n}\nexport function classPrivateMethod(\n  kind: \"get\" | \"set\" | \"method\" | undefined = \"method\",\n  key: t.PrivateName,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  body: t.BlockStatement,\n  _static: boolean = false,\n): t.ClassPrivateMethod {\n  const node: t.ClassPrivateMethod = {\n    type: \"ClassPrivateMethod\",\n    kind,\n    key,\n    params,\n    body,\n    static: _static,\n  };\n  const defs = NODE_FIELDS.ClassPrivateMethod;\n  validate(defs.kind, node, \"kind\", kind);\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.static, node, \"static\", _static);\n  return node;\n}\nexport function privateName(id: t.Identifier): t.PrivateName {\n  const node: t.PrivateName = {\n    type: \"PrivateName\",\n    id,\n  };\n  const defs = NODE_FIELDS.PrivateName;\n  validate(defs.id, node, \"id\", id, 1);\n  return node;\n}\nexport function staticBlock(body: Array<t.Statement>): t.StaticBlock {\n  const node: t.StaticBlock = {\n    type: \"StaticBlock\",\n    body,\n  };\n  const defs = NODE_FIELDS.StaticBlock;\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function anyTypeAnnotation(): t.AnyTypeAnnotation {\n  return {\n    type: \"AnyTypeAnnotation\",\n  };\n}\nexport function arrayTypeAnnotation(\n  elementType: t.FlowType,\n): t.ArrayTypeAnnotation {\n  const node: t.ArrayTypeAnnotation = {\n    type: \"ArrayTypeAnnotation\",\n    elementType,\n  };\n  const defs = NODE_FIELDS.ArrayTypeAnnotation;\n  validate(defs.elementType, node, \"elementType\", elementType, 1);\n  return node;\n}\nexport function booleanTypeAnnotation(): t.BooleanTypeAnnotation {\n  return {\n    type: \"BooleanTypeAnnotation\",\n  };\n}\nexport function booleanLiteralTypeAnnotation(\n  value: boolean,\n): t.BooleanLiteralTypeAnnotation {\n  const node: t.BooleanLiteralTypeAnnotation = {\n    type: \"BooleanLiteralTypeAnnotation\",\n    value,\n  };\n  const defs = NODE_FIELDS.BooleanLiteralTypeAnnotation;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function nullLiteralTypeAnnotation(): t.NullLiteralTypeAnnotation {\n  return {\n    type: \"NullLiteralTypeAnnotation\",\n  };\n}\nexport function classImplements(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.ClassImplements {\n  const node: t.ClassImplements = {\n    type: \"ClassImplements\",\n    id,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.ClassImplements;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport function declareClass(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.DeclareClass {\n  const node: t.DeclareClass = {\n    type: \"DeclareClass\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  };\n  const defs = NODE_FIELDS.DeclareClass;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.extends, node, \"extends\", _extends, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function declareFunction(id: t.Identifier): t.DeclareFunction {\n  const node: t.DeclareFunction = {\n    type: \"DeclareFunction\",\n    id,\n  };\n  const defs = NODE_FIELDS.DeclareFunction;\n  validate(defs.id, node, \"id\", id, 1);\n  return node;\n}\nexport function declareInterface(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.DeclareInterface {\n  const node: t.DeclareInterface = {\n    type: \"DeclareInterface\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  };\n  const defs = NODE_FIELDS.DeclareInterface;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.extends, node, \"extends\", _extends, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function declareModule(\n  id: t.Identifier | t.StringLiteral,\n  body: t.BlockStatement,\n  kind: \"CommonJS\" | \"ES\" | null = null,\n): t.DeclareModule {\n  const node: t.DeclareModule = {\n    type: \"DeclareModule\",\n    id,\n    body,\n    kind,\n  };\n  const defs = NODE_FIELDS.DeclareModule;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.kind, node, \"kind\", kind);\n  return node;\n}\nexport function declareModuleExports(\n  typeAnnotation: t.TypeAnnotation,\n): t.DeclareModuleExports {\n  const node: t.DeclareModuleExports = {\n    type: \"DeclareModuleExports\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.DeclareModuleExports;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport function declareTypeAlias(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  right: t.FlowType,\n): t.DeclareTypeAlias {\n  const node: t.DeclareTypeAlias = {\n    type: \"DeclareTypeAlias\",\n    id,\n    typeParameters,\n    right,\n  };\n  const defs = NODE_FIELDS.DeclareTypeAlias;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport function declareOpaqueType(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null = null,\n  supertype: t.FlowType | null = null,\n): t.DeclareOpaqueType {\n  const node: t.DeclareOpaqueType = {\n    type: \"DeclareOpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n  };\n  const defs = NODE_FIELDS.DeclareOpaqueType;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.supertype, node, \"supertype\", supertype, 1);\n  return node;\n}\nexport function declareVariable(id: t.Identifier): t.DeclareVariable {\n  const node: t.DeclareVariable = {\n    type: \"DeclareVariable\",\n    id,\n  };\n  const defs = NODE_FIELDS.DeclareVariable;\n  validate(defs.id, node, \"id\", id, 1);\n  return node;\n}\nexport function declareExportDeclaration(\n  declaration: t.Flow | null = null,\n  specifiers: Array<\n    t.ExportSpecifier | t.ExportNamespaceSpecifier\n  > | null = null,\n  source: t.StringLiteral | null = null,\n  attributes: Array<t.ImportAttribute> | null = null,\n): t.DeclareExportDeclaration {\n  const node: t.DeclareExportDeclaration = {\n    type: \"DeclareExportDeclaration\",\n    declaration,\n    specifiers,\n    source,\n    attributes,\n  };\n  const defs = NODE_FIELDS.DeclareExportDeclaration;\n  validate(defs.declaration, node, \"declaration\", declaration, 1);\n  validate(defs.specifiers, node, \"specifiers\", specifiers, 1);\n  validate(defs.source, node, \"source\", source, 1);\n  validate(defs.attributes, node, \"attributes\", attributes, 1);\n  return node;\n}\nexport function declareExportAllDeclaration(\n  source: t.StringLiteral,\n  attributes: Array<t.ImportAttribute> | null = null,\n): t.DeclareExportAllDeclaration {\n  const node: t.DeclareExportAllDeclaration = {\n    type: \"DeclareExportAllDeclaration\",\n    source,\n    attributes,\n  };\n  const defs = NODE_FIELDS.DeclareExportAllDeclaration;\n  validate(defs.source, node, \"source\", source, 1);\n  validate(defs.attributes, node, \"attributes\", attributes, 1);\n  return node;\n}\nexport function declaredPredicate(value: t.Flow): t.DeclaredPredicate {\n  const node: t.DeclaredPredicate = {\n    type: \"DeclaredPredicate\",\n    value,\n  };\n  const defs = NODE_FIELDS.DeclaredPredicate;\n  validate(defs.value, node, \"value\", value, 1);\n  return node;\n}\nexport function existsTypeAnnotation(): t.ExistsTypeAnnotation {\n  return {\n    type: \"ExistsTypeAnnotation\",\n  };\n}\nexport function functionTypeAnnotation(\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  params: Array<t.FunctionTypeParam>,\n  rest: t.FunctionTypeParam | null | undefined = null,\n  returnType: t.FlowType,\n): t.FunctionTypeAnnotation {\n  const node: t.FunctionTypeAnnotation = {\n    type: \"FunctionTypeAnnotation\",\n    typeParameters,\n    params,\n    rest,\n    returnType,\n  };\n  const defs = NODE_FIELDS.FunctionTypeAnnotation;\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.rest, node, \"rest\", rest, 1);\n  validate(defs.returnType, node, \"returnType\", returnType, 1);\n  return node;\n}\nexport function functionTypeParam(\n  name: t.Identifier | null | undefined = null,\n  typeAnnotation: t.FlowType,\n): t.FunctionTypeParam {\n  const node: t.FunctionTypeParam = {\n    type: \"FunctionTypeParam\",\n    name,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.FunctionTypeParam;\n  validate(defs.name, node, \"name\", name, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport function genericTypeAnnotation(\n  id: t.Identifier | t.QualifiedTypeIdentifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.GenericTypeAnnotation {\n  const node: t.GenericTypeAnnotation = {\n    type: \"GenericTypeAnnotation\",\n    id,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.GenericTypeAnnotation;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport function inferredPredicate(): t.InferredPredicate {\n  return {\n    type: \"InferredPredicate\",\n  };\n}\nexport function interfaceExtends(\n  id: t.Identifier | t.QualifiedTypeIdentifier,\n  typeParameters: t.TypeParameterInstantiation | null = null,\n): t.InterfaceExtends {\n  const node: t.InterfaceExtends = {\n    type: \"InterfaceExtends\",\n    id,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.InterfaceExtends;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport function interfaceDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.InterfaceDeclaration {\n  const node: t.InterfaceDeclaration = {\n    type: \"InterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  };\n  const defs = NODE_FIELDS.InterfaceDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.extends, node, \"extends\", _extends, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function interfaceTypeAnnotation(\n  _extends: Array<t.InterfaceExtends> | null | undefined = null,\n  body: t.ObjectTypeAnnotation,\n): t.InterfaceTypeAnnotation {\n  const node: t.InterfaceTypeAnnotation = {\n    type: \"InterfaceTypeAnnotation\",\n    extends: _extends,\n    body,\n  };\n  const defs = NODE_FIELDS.InterfaceTypeAnnotation;\n  validate(defs.extends, node, \"extends\", _extends, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function intersectionTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.IntersectionTypeAnnotation {\n  const node: t.IntersectionTypeAnnotation = {\n    type: \"IntersectionTypeAnnotation\",\n    types,\n  };\n  const defs = NODE_FIELDS.IntersectionTypeAnnotation;\n  validate(defs.types, node, \"types\", types, 1);\n  return node;\n}\nexport function mixedTypeAnnotation(): t.MixedTypeAnnotation {\n  return {\n    type: \"MixedTypeAnnotation\",\n  };\n}\nexport function emptyTypeAnnotation(): t.EmptyTypeAnnotation {\n  return {\n    type: \"EmptyTypeAnnotation\",\n  };\n}\nexport function nullableTypeAnnotation(\n  typeAnnotation: t.FlowType,\n): t.NullableTypeAnnotation {\n  const node: t.NullableTypeAnnotation = {\n    type: \"NullableTypeAnnotation\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.NullableTypeAnnotation;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport function numberLiteralTypeAnnotation(\n  value: number,\n): t.NumberLiteralTypeAnnotation {\n  const node: t.NumberLiteralTypeAnnotation = {\n    type: \"NumberLiteralTypeAnnotation\",\n    value,\n  };\n  const defs = NODE_FIELDS.NumberLiteralTypeAnnotation;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function numberTypeAnnotation(): t.NumberTypeAnnotation {\n  return {\n    type: \"NumberTypeAnnotation\",\n  };\n}\nexport function objectTypeAnnotation(\n  properties: Array<t.ObjectTypeProperty | t.ObjectTypeSpreadProperty>,\n  indexers: Array<t.ObjectTypeIndexer> = [],\n  callProperties: Array<t.ObjectTypeCallProperty> = [],\n  internalSlots: Array<t.ObjectTypeInternalSlot> = [],\n  exact: boolean = false,\n): t.ObjectTypeAnnotation {\n  const node: t.ObjectTypeAnnotation = {\n    type: \"ObjectTypeAnnotation\",\n    properties,\n    indexers,\n    callProperties,\n    internalSlots,\n    exact,\n  };\n  const defs = NODE_FIELDS.ObjectTypeAnnotation;\n  validate(defs.properties, node, \"properties\", properties, 1);\n  validate(defs.indexers, node, \"indexers\", indexers, 1);\n  validate(defs.callProperties, node, \"callProperties\", callProperties, 1);\n  validate(defs.internalSlots, node, \"internalSlots\", internalSlots, 1);\n  validate(defs.exact, node, \"exact\", exact);\n  return node;\n}\nexport function objectTypeInternalSlot(\n  id: t.Identifier,\n  value: t.FlowType,\n  optional: boolean,\n  _static: boolean,\n  method: boolean,\n): t.ObjectTypeInternalSlot {\n  const node: t.ObjectTypeInternalSlot = {\n    type: \"ObjectTypeInternalSlot\",\n    id,\n    value,\n    optional,\n    static: _static,\n    method,\n  };\n  const defs = NODE_FIELDS.ObjectTypeInternalSlot;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.optional, node, \"optional\", optional);\n  validate(defs.static, node, \"static\", _static);\n  validate(defs.method, node, \"method\", method);\n  return node;\n}\nexport function objectTypeCallProperty(\n  value: t.FlowType,\n): t.ObjectTypeCallProperty {\n  const node: t.ObjectTypeCallProperty = {\n    type: \"ObjectTypeCallProperty\",\n    value,\n    static: null,\n  };\n  const defs = NODE_FIELDS.ObjectTypeCallProperty;\n  validate(defs.value, node, \"value\", value, 1);\n  return node;\n}\nexport function objectTypeIndexer(\n  id: t.Identifier | null | undefined = null,\n  key: t.FlowType,\n  value: t.FlowType,\n  variance: t.Variance | null = null,\n): t.ObjectTypeIndexer {\n  const node: t.ObjectTypeIndexer = {\n    type: \"ObjectTypeIndexer\",\n    id,\n    key,\n    value,\n    variance,\n    static: null,\n  };\n  const defs = NODE_FIELDS.ObjectTypeIndexer;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.variance, node, \"variance\", variance, 1);\n  return node;\n}\nexport function objectTypeProperty(\n  key: t.Identifier | t.StringLiteral,\n  value: t.FlowType,\n  variance: t.Variance | null = null,\n): t.ObjectTypeProperty {\n  const node: t.ObjectTypeProperty = {\n    type: \"ObjectTypeProperty\",\n    key,\n    value,\n    variance,\n    kind: null,\n    method: null,\n    optional: null,\n    proto: null,\n    static: null,\n  };\n  const defs = NODE_FIELDS.ObjectTypeProperty;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  validate(defs.variance, node, \"variance\", variance, 1);\n  return node;\n}\nexport function objectTypeSpreadProperty(\n  argument: t.FlowType,\n): t.ObjectTypeSpreadProperty {\n  const node: t.ObjectTypeSpreadProperty = {\n    type: \"ObjectTypeSpreadProperty\",\n    argument,\n  };\n  const defs = NODE_FIELDS.ObjectTypeSpreadProperty;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nexport function opaqueType(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  supertype: t.FlowType | null | undefined = null,\n  impltype: t.FlowType,\n): t.OpaqueType {\n  const node: t.OpaqueType = {\n    type: \"OpaqueType\",\n    id,\n    typeParameters,\n    supertype,\n    impltype,\n  };\n  const defs = NODE_FIELDS.OpaqueType;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.supertype, node, \"supertype\", supertype, 1);\n  validate(defs.impltype, node, \"impltype\", impltype, 1);\n  return node;\n}\nexport function qualifiedTypeIdentifier(\n  id: t.Identifier,\n  qualification: t.Identifier | t.QualifiedTypeIdentifier,\n): t.QualifiedTypeIdentifier {\n  const node: t.QualifiedTypeIdentifier = {\n    type: \"QualifiedTypeIdentifier\",\n    id,\n    qualification,\n  };\n  const defs = NODE_FIELDS.QualifiedTypeIdentifier;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.qualification, node, \"qualification\", qualification, 1);\n  return node;\n}\nexport function stringLiteralTypeAnnotation(\n  value: string,\n): t.StringLiteralTypeAnnotation {\n  const node: t.StringLiteralTypeAnnotation = {\n    type: \"StringLiteralTypeAnnotation\",\n    value,\n  };\n  const defs = NODE_FIELDS.StringLiteralTypeAnnotation;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function stringTypeAnnotation(): t.StringTypeAnnotation {\n  return {\n    type: \"StringTypeAnnotation\",\n  };\n}\nexport function symbolTypeAnnotation(): t.SymbolTypeAnnotation {\n  return {\n    type: \"SymbolTypeAnnotation\",\n  };\n}\nexport function thisTypeAnnotation(): t.ThisTypeAnnotation {\n  return {\n    type: \"ThisTypeAnnotation\",\n  };\n}\nexport function tupleTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.TupleTypeAnnotation {\n  const node: t.TupleTypeAnnotation = {\n    type: \"TupleTypeAnnotation\",\n    types,\n  };\n  const defs = NODE_FIELDS.TupleTypeAnnotation;\n  validate(defs.types, node, \"types\", types, 1);\n  return node;\n}\nexport function typeofTypeAnnotation(\n  argument: t.FlowType,\n): t.TypeofTypeAnnotation {\n  const node: t.TypeofTypeAnnotation = {\n    type: \"TypeofTypeAnnotation\",\n    argument,\n  };\n  const defs = NODE_FIELDS.TypeofTypeAnnotation;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nexport function typeAlias(\n  id: t.Identifier,\n  typeParameters: t.TypeParameterDeclaration | null | undefined = null,\n  right: t.FlowType,\n): t.TypeAlias {\n  const node: t.TypeAlias = {\n    type: \"TypeAlias\",\n    id,\n    typeParameters,\n    right,\n  };\n  const defs = NODE_FIELDS.TypeAlias;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport function typeAnnotation(typeAnnotation: t.FlowType): t.TypeAnnotation {\n  const node: t.TypeAnnotation = {\n    type: \"TypeAnnotation\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TypeAnnotation;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport function typeCastExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TypeAnnotation,\n): t.TypeCastExpression {\n  const node: t.TypeCastExpression = {\n    type: \"TypeCastExpression\",\n    expression,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TypeCastExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport function typeParameter(\n  bound: t.TypeAnnotation | null = null,\n  _default: t.FlowType | null = null,\n  variance: t.Variance | null = null,\n): t.TypeParameter {\n  const node: t.TypeParameter = {\n    type: \"TypeParameter\",\n    bound,\n    default: _default,\n    variance,\n    name: null,\n  };\n  const defs = NODE_FIELDS.TypeParameter;\n  validate(defs.bound, node, \"bound\", bound, 1);\n  validate(defs.default, node, \"default\", _default, 1);\n  validate(defs.variance, node, \"variance\", variance, 1);\n  return node;\n}\nexport function typeParameterDeclaration(\n  params: Array<t.TypeParameter>,\n): t.TypeParameterDeclaration {\n  const node: t.TypeParameterDeclaration = {\n    type: \"TypeParameterDeclaration\",\n    params,\n  };\n  const defs = NODE_FIELDS.TypeParameterDeclaration;\n  validate(defs.params, node, \"params\", params, 1);\n  return node;\n}\nexport function typeParameterInstantiation(\n  params: Array<t.FlowType>,\n): t.TypeParameterInstantiation {\n  const node: t.TypeParameterInstantiation = {\n    type: \"TypeParameterInstantiation\",\n    params,\n  };\n  const defs = NODE_FIELDS.TypeParameterInstantiation;\n  validate(defs.params, node, \"params\", params, 1);\n  return node;\n}\nexport function unionTypeAnnotation(\n  types: Array<t.FlowType>,\n): t.UnionTypeAnnotation {\n  const node: t.UnionTypeAnnotation = {\n    type: \"UnionTypeAnnotation\",\n    types,\n  };\n  const defs = NODE_FIELDS.UnionTypeAnnotation;\n  validate(defs.types, node, \"types\", types, 1);\n  return node;\n}\nexport function variance(kind: \"minus\" | \"plus\"): t.Variance {\n  const node: t.Variance = {\n    type: \"Variance\",\n    kind,\n  };\n  const defs = NODE_FIELDS.Variance;\n  validate(defs.kind, node, \"kind\", kind);\n  return node;\n}\nexport function voidTypeAnnotation(): t.VoidTypeAnnotation {\n  return {\n    type: \"VoidTypeAnnotation\",\n  };\n}\nexport function enumDeclaration(\n  id: t.Identifier,\n  body:\n    | t.EnumBooleanBody\n    | t.EnumNumberBody\n    | t.EnumStringBody\n    | t.EnumSymbolBody,\n): t.EnumDeclaration {\n  const node: t.EnumDeclaration = {\n    type: \"EnumDeclaration\",\n    id,\n    body,\n  };\n  const defs = NODE_FIELDS.EnumDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function enumBooleanBody(\n  members: Array<t.EnumBooleanMember>,\n): t.EnumBooleanBody {\n  const node: t.EnumBooleanBody = {\n    type: \"EnumBooleanBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  };\n  const defs = NODE_FIELDS.EnumBooleanBody;\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport function enumNumberBody(\n  members: Array<t.EnumNumberMember>,\n): t.EnumNumberBody {\n  const node: t.EnumNumberBody = {\n    type: \"EnumNumberBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  };\n  const defs = NODE_FIELDS.EnumNumberBody;\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport function enumStringBody(\n  members: Array<t.EnumStringMember | t.EnumDefaultedMember>,\n): t.EnumStringBody {\n  const node: t.EnumStringBody = {\n    type: \"EnumStringBody\",\n    members,\n    explicitType: null,\n    hasUnknownMembers: null,\n  };\n  const defs = NODE_FIELDS.EnumStringBody;\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport function enumSymbolBody(\n  members: Array<t.EnumDefaultedMember>,\n): t.EnumSymbolBody {\n  const node: t.EnumSymbolBody = {\n    type: \"EnumSymbolBody\",\n    members,\n    hasUnknownMembers: null,\n  };\n  const defs = NODE_FIELDS.EnumSymbolBody;\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport function enumBooleanMember(id: t.Identifier): t.EnumBooleanMember {\n  const node: t.EnumBooleanMember = {\n    type: \"EnumBooleanMember\",\n    id,\n    init: null,\n  };\n  const defs = NODE_FIELDS.EnumBooleanMember;\n  validate(defs.id, node, \"id\", id, 1);\n  return node;\n}\nexport function enumNumberMember(\n  id: t.Identifier,\n  init: t.NumericLiteral,\n): t.EnumNumberMember {\n  const node: t.EnumNumberMember = {\n    type: \"EnumNumberMember\",\n    id,\n    init,\n  };\n  const defs = NODE_FIELDS.EnumNumberMember;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.init, node, \"init\", init, 1);\n  return node;\n}\nexport function enumStringMember(\n  id: t.Identifier,\n  init: t.StringLiteral,\n): t.EnumStringMember {\n  const node: t.EnumStringMember = {\n    type: \"EnumStringMember\",\n    id,\n    init,\n  };\n  const defs = NODE_FIELDS.EnumStringMember;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.init, node, \"init\", init, 1);\n  return node;\n}\nexport function enumDefaultedMember(id: t.Identifier): t.EnumDefaultedMember {\n  const node: t.EnumDefaultedMember = {\n    type: \"EnumDefaultedMember\",\n    id,\n  };\n  const defs = NODE_FIELDS.EnumDefaultedMember;\n  validate(defs.id, node, \"id\", id, 1);\n  return node;\n}\nexport function indexedAccessType(\n  objectType: t.FlowType,\n  indexType: t.FlowType,\n): t.IndexedAccessType {\n  const node: t.IndexedAccessType = {\n    type: \"IndexedAccessType\",\n    objectType,\n    indexType,\n  };\n  const defs = NODE_FIELDS.IndexedAccessType;\n  validate(defs.objectType, node, \"objectType\", objectType, 1);\n  validate(defs.indexType, node, \"indexType\", indexType, 1);\n  return node;\n}\nexport function optionalIndexedAccessType(\n  objectType: t.FlowType,\n  indexType: t.FlowType,\n): t.OptionalIndexedAccessType {\n  const node: t.OptionalIndexedAccessType = {\n    type: \"OptionalIndexedAccessType\",\n    objectType,\n    indexType,\n    optional: null,\n  };\n  const defs = NODE_FIELDS.OptionalIndexedAccessType;\n  validate(defs.objectType, node, \"objectType\", objectType, 1);\n  validate(defs.indexType, node, \"indexType\", indexType, 1);\n  return node;\n}\nexport function jsxAttribute(\n  name: t.JSXIdentifier | t.JSXNamespacedName,\n  value:\n    | t.JSXElement\n    | t.JSXFragment\n    | t.StringLiteral\n    | t.JSXExpressionContainer\n    | null = null,\n): t.JSXAttribute {\n  const node: t.JSXAttribute = {\n    type: \"JSXAttribute\",\n    name,\n    value,\n  };\n  const defs = NODE_FIELDS.JSXAttribute;\n  validate(defs.name, node, \"name\", name, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  return node;\n}\nexport { jsxAttribute as jSXAttribute };\nexport function jsxClosingElement(\n  name: t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName,\n): t.JSXClosingElement {\n  const node: t.JSXClosingElement = {\n    type: \"JSXClosingElement\",\n    name,\n  };\n  const defs = NODE_FIELDS.JSXClosingElement;\n  validate(defs.name, node, \"name\", name, 1);\n  return node;\n}\nexport { jsxClosingElement as jSXClosingElement };\nexport function jsxElement(\n  openingElement: t.JSXOpeningElement,\n  closingElement: t.JSXClosingElement | null | undefined = null,\n  children: Array<\n    | t.JSXText\n    | t.JSXExpressionContainer\n    | t.JSXSpreadChild\n    | t.JSXElement\n    | t.JSXFragment\n  >,\n  selfClosing: boolean | null = null,\n): t.JSXElement {\n  const node: t.JSXElement = {\n    type: \"JSXElement\",\n    openingElement,\n    closingElement,\n    children,\n    selfClosing,\n  };\n  const defs = NODE_FIELDS.JSXElement;\n  validate(defs.openingElement, node, \"openingElement\", openingElement, 1);\n  validate(defs.closingElement, node, \"closingElement\", closingElement, 1);\n  validate(defs.children, node, \"children\", children, 1);\n  validate(defs.selfClosing, node, \"selfClosing\", selfClosing);\n  return node;\n}\nexport { jsxElement as jSXElement };\nexport function jsxEmptyExpression(): t.JSXEmptyExpression {\n  return {\n    type: \"JSXEmptyExpression\",\n  };\n}\nexport { jsxEmptyExpression as jSXEmptyExpression };\nexport function jsxExpressionContainer(\n  expression: t.Expression | t.JSXEmptyExpression,\n): t.JSXExpressionContainer {\n  const node: t.JSXExpressionContainer = {\n    type: \"JSXExpressionContainer\",\n    expression,\n  };\n  const defs = NODE_FIELDS.JSXExpressionContainer;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport { jsxExpressionContainer as jSXExpressionContainer };\nexport function jsxSpreadChild(expression: t.Expression): t.JSXSpreadChild {\n  const node: t.JSXSpreadChild = {\n    type: \"JSXSpreadChild\",\n    expression,\n  };\n  const defs = NODE_FIELDS.JSXSpreadChild;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport { jsxSpreadChild as jSXSpreadChild };\nexport function jsxIdentifier(name: string): t.JSXIdentifier {\n  const node: t.JSXIdentifier = {\n    type: \"JSXIdentifier\",\n    name,\n  };\n  const defs = NODE_FIELDS.JSXIdentifier;\n  validate(defs.name, node, \"name\", name);\n  return node;\n}\nexport { jsxIdentifier as jSXIdentifier };\nexport function jsxMemberExpression(\n  object: t.JSXMemberExpression | t.JSXIdentifier,\n  property: t.JSXIdentifier,\n): t.JSXMemberExpression {\n  const node: t.JSXMemberExpression = {\n    type: \"JSXMemberExpression\",\n    object,\n    property,\n  };\n  const defs = NODE_FIELDS.JSXMemberExpression;\n  validate(defs.object, node, \"object\", object, 1);\n  validate(defs.property, node, \"property\", property, 1);\n  return node;\n}\nexport { jsxMemberExpression as jSXMemberExpression };\nexport function jsxNamespacedName(\n  namespace: t.JSXIdentifier,\n  name: t.JSXIdentifier,\n): t.JSXNamespacedName {\n  const node: t.JSXNamespacedName = {\n    type: \"JSXNamespacedName\",\n    namespace,\n    name,\n  };\n  const defs = NODE_FIELDS.JSXNamespacedName;\n  validate(defs.namespace, node, \"namespace\", namespace, 1);\n  validate(defs.name, node, \"name\", name, 1);\n  return node;\n}\nexport { jsxNamespacedName as jSXNamespacedName };\nexport function jsxOpeningElement(\n  name: t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName,\n  attributes: Array<t.JSXAttribute | t.JSXSpreadAttribute>,\n  selfClosing: boolean = false,\n): t.JSXOpeningElement {\n  const node: t.JSXOpeningElement = {\n    type: \"JSXOpeningElement\",\n    name,\n    attributes,\n    selfClosing,\n  };\n  const defs = NODE_FIELDS.JSXOpeningElement;\n  validate(defs.name, node, \"name\", name, 1);\n  validate(defs.attributes, node, \"attributes\", attributes, 1);\n  validate(defs.selfClosing, node, \"selfClosing\", selfClosing);\n  return node;\n}\nexport { jsxOpeningElement as jSXOpeningElement };\nexport function jsxSpreadAttribute(\n  argument: t.Expression,\n): t.JSXSpreadAttribute {\n  const node: t.JSXSpreadAttribute = {\n    type: \"JSXSpreadAttribute\",\n    argument,\n  };\n  const defs = NODE_FIELDS.JSXSpreadAttribute;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  return node;\n}\nexport { jsxSpreadAttribute as jSXSpreadAttribute };\nexport function jsxText(value: string): t.JSXText {\n  const node: t.JSXText = {\n    type: \"JSXText\",\n    value,\n  };\n  const defs = NODE_FIELDS.JSXText;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport { jsxText as jSXText };\nexport function jsxFragment(\n  openingFragment: t.JSXOpeningFragment,\n  closingFragment: t.JSXClosingFragment,\n  children: Array<\n    | t.JSXText\n    | t.JSXExpressionContainer\n    | t.JSXSpreadChild\n    | t.JSXElement\n    | t.JSXFragment\n  >,\n): t.JSXFragment {\n  const node: t.JSXFragment = {\n    type: \"JSXFragment\",\n    openingFragment,\n    closingFragment,\n    children,\n  };\n  const defs = NODE_FIELDS.JSXFragment;\n  validate(defs.openingFragment, node, \"openingFragment\", openingFragment, 1);\n  validate(defs.closingFragment, node, \"closingFragment\", closingFragment, 1);\n  validate(defs.children, node, \"children\", children, 1);\n  return node;\n}\nexport { jsxFragment as jSXFragment };\nexport function jsxOpeningFragment(): t.JSXOpeningFragment {\n  return {\n    type: \"JSXOpeningFragment\",\n  };\n}\nexport { jsxOpeningFragment as jSXOpeningFragment };\nexport function jsxClosingFragment(): t.JSXClosingFragment {\n  return {\n    type: \"JSXClosingFragment\",\n  };\n}\nexport { jsxClosingFragment as jSXClosingFragment };\nexport function noop(): t.Noop {\n  return {\n    type: \"Noop\",\n  };\n}\nexport function placeholder(\n  expectedNode:\n    | \"Identifier\"\n    | \"StringLiteral\"\n    | \"Expression\"\n    | \"Statement\"\n    | \"Declaration\"\n    | \"BlockStatement\"\n    | \"ClassBody\"\n    | \"Pattern\",\n  name: t.Identifier,\n): t.Placeholder {\n  const node: t.Placeholder = {\n    type: \"Placeholder\",\n    expectedNode,\n    name,\n  };\n  const defs = NODE_FIELDS.Placeholder;\n  validate(defs.expectedNode, node, \"expectedNode\", expectedNode);\n  validate(defs.name, node, \"name\", name, 1);\n  return node;\n}\nexport function v8IntrinsicIdentifier(name: string): t.V8IntrinsicIdentifier {\n  const node: t.V8IntrinsicIdentifier = {\n    type: \"V8IntrinsicIdentifier\",\n    name,\n  };\n  const defs = NODE_FIELDS.V8IntrinsicIdentifier;\n  validate(defs.name, node, \"name\", name);\n  return node;\n}\nexport function argumentPlaceholder(): t.ArgumentPlaceholder {\n  return {\n    type: \"ArgumentPlaceholder\",\n  };\n}\nexport function bindExpression(\n  object: t.Expression,\n  callee: t.Expression,\n): t.BindExpression {\n  const node: t.BindExpression = {\n    type: \"BindExpression\",\n    object,\n    callee,\n  };\n  const defs = NODE_FIELDS.BindExpression;\n  validate(defs.object, node, \"object\", object, 1);\n  validate(defs.callee, node, \"callee\", callee, 1);\n  return node;\n}\nexport function importAttribute(\n  key: t.Identifier | t.StringLiteral,\n  value: t.StringLiteral,\n): t.ImportAttribute {\n  const node: t.ImportAttribute = {\n    type: \"ImportAttribute\",\n    key,\n    value,\n  };\n  const defs = NODE_FIELDS.ImportAttribute;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.value, node, \"value\", value, 1);\n  return node;\n}\nexport function decorator(expression: t.Expression): t.Decorator {\n  const node: t.Decorator = {\n    type: \"Decorator\",\n    expression,\n  };\n  const defs = NODE_FIELDS.Decorator;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport function doExpression(\n  body: t.BlockStatement,\n  async: boolean = false,\n): t.DoExpression {\n  const node: t.DoExpression = {\n    type: \"DoExpression\",\n    body,\n    async,\n  };\n  const defs = NODE_FIELDS.DoExpression;\n  validate(defs.body, node, \"body\", body, 1);\n  validate(defs.async, node, \"async\", async);\n  return node;\n}\nexport function exportDefaultSpecifier(\n  exported: t.Identifier,\n): t.ExportDefaultSpecifier {\n  const node: t.ExportDefaultSpecifier = {\n    type: \"ExportDefaultSpecifier\",\n    exported,\n  };\n  const defs = NODE_FIELDS.ExportDefaultSpecifier;\n  validate(defs.exported, node, \"exported\", exported, 1);\n  return node;\n}\nexport function recordExpression(\n  properties: Array<t.ObjectProperty | t.SpreadElement>,\n): t.RecordExpression {\n  const node: t.RecordExpression = {\n    type: \"RecordExpression\",\n    properties,\n  };\n  const defs = NODE_FIELDS.RecordExpression;\n  validate(defs.properties, node, \"properties\", properties, 1);\n  return node;\n}\nexport function tupleExpression(\n  elements: Array<t.Expression | t.SpreadElement> = [],\n): t.TupleExpression {\n  const node: t.TupleExpression = {\n    type: \"TupleExpression\",\n    elements,\n  };\n  const defs = NODE_FIELDS.TupleExpression;\n  validate(defs.elements, node, \"elements\", elements, 1);\n  return node;\n}\nexport function decimalLiteral(value: string): t.DecimalLiteral {\n  const node: t.DecimalLiteral = {\n    type: \"DecimalLiteral\",\n    value,\n  };\n  const defs = NODE_FIELDS.DecimalLiteral;\n  validate(defs.value, node, \"value\", value);\n  return node;\n}\nexport function moduleExpression(body: t.Program): t.ModuleExpression {\n  const node: t.ModuleExpression = {\n    type: \"ModuleExpression\",\n    body,\n  };\n  const defs = NODE_FIELDS.ModuleExpression;\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport function topicReference(): t.TopicReference {\n  return {\n    type: \"TopicReference\",\n  };\n}\nexport function pipelineTopicExpression(\n  expression: t.Expression,\n): t.PipelineTopicExpression {\n  const node: t.PipelineTopicExpression = {\n    type: \"PipelineTopicExpression\",\n    expression,\n  };\n  const defs = NODE_FIELDS.PipelineTopicExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport function pipelineBareFunction(\n  callee: t.Expression,\n): t.PipelineBareFunction {\n  const node: t.PipelineBareFunction = {\n    type: \"PipelineBareFunction\",\n    callee,\n  };\n  const defs = NODE_FIELDS.PipelineBareFunction;\n  validate(defs.callee, node, \"callee\", callee, 1);\n  return node;\n}\nexport function pipelinePrimaryTopicReference(): t.PipelinePrimaryTopicReference {\n  return {\n    type: \"PipelinePrimaryTopicReference\",\n  };\n}\nexport function tsParameterProperty(\n  parameter: t.Identifier | t.AssignmentPattern,\n): t.TSParameterProperty {\n  const node: t.TSParameterProperty = {\n    type: \"TSParameterProperty\",\n    parameter,\n  };\n  const defs = NODE_FIELDS.TSParameterProperty;\n  validate(defs.parameter, node, \"parameter\", parameter, 1);\n  return node;\n}\nexport { tsParameterProperty as tSParameterProperty };\nexport function tsDeclareFunction(\n  id: t.Identifier | null | undefined = null,\n  typeParameters:\n    | t.TSTypeParameterDeclaration\n    | t.Noop\n    | null\n    | undefined = null,\n  params: Array<t.Identifier | t.Pattern | t.RestElement>,\n  returnType: t.TSTypeAnnotation | t.Noop | null = null,\n): t.TSDeclareFunction {\n  const node: t.TSDeclareFunction = {\n    type: \"TSDeclareFunction\",\n    id,\n    typeParameters,\n    params,\n    returnType,\n  };\n  const defs = NODE_FIELDS.TSDeclareFunction;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.returnType, node, \"returnType\", returnType, 1);\n  return node;\n}\nexport { tsDeclareFunction as tSDeclareFunction };\nexport function tsDeclareMethod(\n  decorators: Array<t.Decorator> | null | undefined = null,\n  key:\n    | t.Identifier\n    | t.StringLiteral\n    | t.NumericLiteral\n    | t.BigIntLiteral\n    | t.Expression,\n  typeParameters:\n    | t.TSTypeParameterDeclaration\n    | t.Noop\n    | null\n    | undefined = null,\n  params: Array<\n    t.Identifier | t.Pattern | t.RestElement | t.TSParameterProperty\n  >,\n  returnType: t.TSTypeAnnotation | t.Noop | null = null,\n): t.TSDeclareMethod {\n  const node: t.TSDeclareMethod = {\n    type: \"TSDeclareMethod\",\n    decorators,\n    key,\n    typeParameters,\n    params,\n    returnType,\n  };\n  const defs = NODE_FIELDS.TSDeclareMethod;\n  validate(defs.decorators, node, \"decorators\", decorators, 1);\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.params, node, \"params\", params, 1);\n  validate(defs.returnType, node, \"returnType\", returnType, 1);\n  return node;\n}\nexport { tsDeclareMethod as tSDeclareMethod };\nexport function tsQualifiedName(\n  left: t.TSEntityName,\n  right: t.Identifier,\n): t.TSQualifiedName {\n  const node: t.TSQualifiedName = {\n    type: \"TSQualifiedName\",\n    left,\n    right,\n  };\n  const defs = NODE_FIELDS.TSQualifiedName;\n  validate(defs.left, node, \"left\", left, 1);\n  validate(defs.right, node, \"right\", right, 1);\n  return node;\n}\nexport { tsQualifiedName as tSQualifiedName };\nexport function tsCallSignatureDeclaration(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSCallSignatureDeclaration {\n  const node: t.TSCallSignatureDeclaration = {\n    type: \"TSCallSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSCallSignatureDeclaration;\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.parameters, node, \"parameters\", parameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsCallSignatureDeclaration as tSCallSignatureDeclaration };\nexport function tsConstructSignatureDeclaration(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSConstructSignatureDeclaration {\n  const node: t.TSConstructSignatureDeclaration = {\n    type: \"TSConstructSignatureDeclaration\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSConstructSignatureDeclaration;\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.parameters, node, \"parameters\", parameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsConstructSignatureDeclaration as tSConstructSignatureDeclaration };\nexport function tsPropertySignature(\n  key: t.Expression,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSPropertySignature {\n  const node: t.TSPropertySignature = {\n    type: \"TSPropertySignature\",\n    key,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSPropertySignature;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsPropertySignature as tSPropertySignature };\nexport function tsMethodSignature(\n  key: t.Expression,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSMethodSignature {\n  const node: t.TSMethodSignature = {\n    type: \"TSMethodSignature\",\n    key,\n    typeParameters,\n    parameters,\n    typeAnnotation,\n    kind: null,\n  };\n  const defs = NODE_FIELDS.TSMethodSignature;\n  validate(defs.key, node, \"key\", key, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.parameters, node, \"parameters\", parameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsMethodSignature as tSMethodSignature };\nexport function tsIndexSignature(\n  parameters: Array<t.Identifier>,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSIndexSignature {\n  const node: t.TSIndexSignature = {\n    type: \"TSIndexSignature\",\n    parameters,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSIndexSignature;\n  validate(defs.parameters, node, \"parameters\", parameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsIndexSignature as tSIndexSignature };\nexport function tsAnyKeyword(): t.TSAnyKeyword {\n  return {\n    type: \"TSAnyKeyword\",\n  };\n}\nexport { tsAnyKeyword as tSAnyKeyword };\nexport function tsBooleanKeyword(): t.TSBooleanKeyword {\n  return {\n    type: \"TSBooleanKeyword\",\n  };\n}\nexport { tsBooleanKeyword as tSBooleanKeyword };\nexport function tsBigIntKeyword(): t.TSBigIntKeyword {\n  return {\n    type: \"TSBigIntKeyword\",\n  };\n}\nexport { tsBigIntKeyword as tSBigIntKeyword };\nexport function tsIntrinsicKeyword(): t.TSIntrinsicKeyword {\n  return {\n    type: \"TSIntrinsicKeyword\",\n  };\n}\nexport { tsIntrinsicKeyword as tSIntrinsicKeyword };\nexport function tsNeverKeyword(): t.TSNeverKeyword {\n  return {\n    type: \"TSNeverKeyword\",\n  };\n}\nexport { tsNeverKeyword as tSNeverKeyword };\nexport function tsNullKeyword(): t.TSNullKeyword {\n  return {\n    type: \"TSNullKeyword\",\n  };\n}\nexport { tsNullKeyword as tSNullKeyword };\nexport function tsNumberKeyword(): t.TSNumberKeyword {\n  return {\n    type: \"TSNumberKeyword\",\n  };\n}\nexport { tsNumberKeyword as tSNumberKeyword };\nexport function tsObjectKeyword(): t.TSObjectKeyword {\n  return {\n    type: \"TSObjectKeyword\",\n  };\n}\nexport { tsObjectKeyword as tSObjectKeyword };\nexport function tsStringKeyword(): t.TSStringKeyword {\n  return {\n    type: \"TSStringKeyword\",\n  };\n}\nexport { tsStringKeyword as tSStringKeyword };\nexport function tsSymbolKeyword(): t.TSSymbolKeyword {\n  return {\n    type: \"TSSymbolKeyword\",\n  };\n}\nexport { tsSymbolKeyword as tSSymbolKeyword };\nexport function tsUndefinedKeyword(): t.TSUndefinedKeyword {\n  return {\n    type: \"TSUndefinedKeyword\",\n  };\n}\nexport { tsUndefinedKeyword as tSUndefinedKeyword };\nexport function tsUnknownKeyword(): t.TSUnknownKeyword {\n  return {\n    type: \"TSUnknownKeyword\",\n  };\n}\nexport { tsUnknownKeyword as tSUnknownKeyword };\nexport function tsVoidKeyword(): t.TSVoidKeyword {\n  return {\n    type: \"TSVoidKeyword\",\n  };\n}\nexport { tsVoidKeyword as tSVoidKeyword };\nexport function tsThisType(): t.TSThisType {\n  return {\n    type: \"TSThisType\",\n  };\n}\nexport { tsThisType as tSThisType };\nexport function tsFunctionType(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSFunctionType {\n  const node: t.TSFunctionType = {\n    type: \"TSFunctionType\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSFunctionType;\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.parameters, node, \"parameters\", parameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsFunctionType as tSFunctionType };\nexport function tsConstructorType(\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  parameters: Array<\n    t.ArrayPattern | t.Identifier | t.ObjectPattern | t.RestElement\n  >,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n): t.TSConstructorType {\n  const node: t.TSConstructorType = {\n    type: \"TSConstructorType\",\n    typeParameters,\n    parameters,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSConstructorType;\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.parameters, node, \"parameters\", parameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsConstructorType as tSConstructorType };\nexport function tsTypeReference(\n  typeName: t.TSEntityName,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSTypeReference {\n  const node: t.TSTypeReference = {\n    type: \"TSTypeReference\",\n    typeName,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.TSTypeReference;\n  validate(defs.typeName, node, \"typeName\", typeName, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport { tsTypeReference as tSTypeReference };\nexport function tsTypePredicate(\n  parameterName: t.Identifier | t.TSThisType,\n  typeAnnotation: t.TSTypeAnnotation | null = null,\n  asserts: boolean | null = null,\n): t.TSTypePredicate {\n  const node: t.TSTypePredicate = {\n    type: \"TSTypePredicate\",\n    parameterName,\n    typeAnnotation,\n    asserts,\n  };\n  const defs = NODE_FIELDS.TSTypePredicate;\n  validate(defs.parameterName, node, \"parameterName\", parameterName, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  validate(defs.asserts, node, \"asserts\", asserts);\n  return node;\n}\nexport { tsTypePredicate as tSTypePredicate };\nexport function tsTypeQuery(\n  exprName: t.TSEntityName | t.TSImportType,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSTypeQuery {\n  const node: t.TSTypeQuery = {\n    type: \"TSTypeQuery\",\n    exprName,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.TSTypeQuery;\n  validate(defs.exprName, node, \"exprName\", exprName, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport { tsTypeQuery as tSTypeQuery };\nexport function tsTypeLiteral(\n  members: Array<t.TSTypeElement>,\n): t.TSTypeLiteral {\n  const node: t.TSTypeLiteral = {\n    type: \"TSTypeLiteral\",\n    members,\n  };\n  const defs = NODE_FIELDS.TSTypeLiteral;\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport { tsTypeLiteral as tSTypeLiteral };\nexport function tsArrayType(elementType: t.TSType): t.TSArrayType {\n  const node: t.TSArrayType = {\n    type: \"TSArrayType\",\n    elementType,\n  };\n  const defs = NODE_FIELDS.TSArrayType;\n  validate(defs.elementType, node, \"elementType\", elementType, 1);\n  return node;\n}\nexport { tsArrayType as tSArrayType };\nexport function tsTupleType(\n  elementTypes: Array<t.TSType | t.TSNamedTupleMember>,\n): t.TSTupleType {\n  const node: t.TSTupleType = {\n    type: \"TSTupleType\",\n    elementTypes,\n  };\n  const defs = NODE_FIELDS.TSTupleType;\n  validate(defs.elementTypes, node, \"elementTypes\", elementTypes, 1);\n  return node;\n}\nexport { tsTupleType as tSTupleType };\nexport function tsOptionalType(typeAnnotation: t.TSType): t.TSOptionalType {\n  const node: t.TSOptionalType = {\n    type: \"TSOptionalType\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSOptionalType;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsOptionalType as tSOptionalType };\nexport function tsRestType(typeAnnotation: t.TSType): t.TSRestType {\n  const node: t.TSRestType = {\n    type: \"TSRestType\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSRestType;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsRestType as tSRestType };\nexport function tsNamedTupleMember(\n  label: t.Identifier,\n  elementType: t.TSType,\n  optional: boolean = false,\n): t.TSNamedTupleMember {\n  const node: t.TSNamedTupleMember = {\n    type: \"TSNamedTupleMember\",\n    label,\n    elementType,\n    optional,\n  };\n  const defs = NODE_FIELDS.TSNamedTupleMember;\n  validate(defs.label, node, \"label\", label, 1);\n  validate(defs.elementType, node, \"elementType\", elementType, 1);\n  validate(defs.optional, node, \"optional\", optional);\n  return node;\n}\nexport { tsNamedTupleMember as tSNamedTupleMember };\nexport function tsUnionType(types: Array<t.TSType>): t.TSUnionType {\n  const node: t.TSUnionType = {\n    type: \"TSUnionType\",\n    types,\n  };\n  const defs = NODE_FIELDS.TSUnionType;\n  validate(defs.types, node, \"types\", types, 1);\n  return node;\n}\nexport { tsUnionType as tSUnionType };\nexport function tsIntersectionType(\n  types: Array<t.TSType>,\n): t.TSIntersectionType {\n  const node: t.TSIntersectionType = {\n    type: \"TSIntersectionType\",\n    types,\n  };\n  const defs = NODE_FIELDS.TSIntersectionType;\n  validate(defs.types, node, \"types\", types, 1);\n  return node;\n}\nexport { tsIntersectionType as tSIntersectionType };\nexport function tsConditionalType(\n  checkType: t.TSType,\n  extendsType: t.TSType,\n  trueType: t.TSType,\n  falseType: t.TSType,\n): t.TSConditionalType {\n  const node: t.TSConditionalType = {\n    type: \"TSConditionalType\",\n    checkType,\n    extendsType,\n    trueType,\n    falseType,\n  };\n  const defs = NODE_FIELDS.TSConditionalType;\n  validate(defs.checkType, node, \"checkType\", checkType, 1);\n  validate(defs.extendsType, node, \"extendsType\", extendsType, 1);\n  validate(defs.trueType, node, \"trueType\", trueType, 1);\n  validate(defs.falseType, node, \"falseType\", falseType, 1);\n  return node;\n}\nexport { tsConditionalType as tSConditionalType };\nexport function tsInferType(typeParameter: t.TSTypeParameter): t.TSInferType {\n  const node: t.TSInferType = {\n    type: \"TSInferType\",\n    typeParameter,\n  };\n  const defs = NODE_FIELDS.TSInferType;\n  validate(defs.typeParameter, node, \"typeParameter\", typeParameter, 1);\n  return node;\n}\nexport { tsInferType as tSInferType };\nexport function tsParenthesizedType(\n  typeAnnotation: t.TSType,\n): t.TSParenthesizedType {\n  const node: t.TSParenthesizedType = {\n    type: \"TSParenthesizedType\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSParenthesizedType;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsParenthesizedType as tSParenthesizedType };\nexport function tsTypeOperator(typeAnnotation: t.TSType): t.TSTypeOperator {\n  const node: t.TSTypeOperator = {\n    type: \"TSTypeOperator\",\n    typeAnnotation,\n    operator: null,\n  };\n  const defs = NODE_FIELDS.TSTypeOperator;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsTypeOperator as tSTypeOperator };\nexport function tsIndexedAccessType(\n  objectType: t.TSType,\n  indexType: t.TSType,\n): t.TSIndexedAccessType {\n  const node: t.TSIndexedAccessType = {\n    type: \"TSIndexedAccessType\",\n    objectType,\n    indexType,\n  };\n  const defs = NODE_FIELDS.TSIndexedAccessType;\n  validate(defs.objectType, node, \"objectType\", objectType, 1);\n  validate(defs.indexType, node, \"indexType\", indexType, 1);\n  return node;\n}\nexport { tsIndexedAccessType as tSIndexedAccessType };\nexport function tsMappedType(\n  typeParameter: t.TSTypeParameter,\n  typeAnnotation: t.TSType | null = null,\n  nameType: t.TSType | null = null,\n): t.TSMappedType {\n  const node: t.TSMappedType = {\n    type: \"TSMappedType\",\n    typeParameter,\n    typeAnnotation,\n    nameType,\n  };\n  const defs = NODE_FIELDS.TSMappedType;\n  validate(defs.typeParameter, node, \"typeParameter\", typeParameter, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  validate(defs.nameType, node, \"nameType\", nameType, 1);\n  return node;\n}\nexport { tsMappedType as tSMappedType };\nexport function tsTemplateLiteralType(\n  quasis: Array<t.TemplateElement>,\n  types: Array<t.TSType>,\n): t.TSTemplateLiteralType {\n  const node: t.TSTemplateLiteralType = {\n    type: \"TSTemplateLiteralType\",\n    quasis,\n    types,\n  };\n  const defs = NODE_FIELDS.TSTemplateLiteralType;\n  validate(defs.quasis, node, \"quasis\", quasis, 1);\n  validate(defs.types, node, \"types\", types, 1);\n  return node;\n}\nexport { tsTemplateLiteralType as tSTemplateLiteralType };\nexport function tsLiteralType(\n  literal:\n    | t.NumericLiteral\n    | t.StringLiteral\n    | t.BooleanLiteral\n    | t.BigIntLiteral\n    | t.TemplateLiteral\n    | t.UnaryExpression,\n): t.TSLiteralType {\n  const node: t.TSLiteralType = {\n    type: \"TSLiteralType\",\n    literal,\n  };\n  const defs = NODE_FIELDS.TSLiteralType;\n  validate(defs.literal, node, \"literal\", literal, 1);\n  return node;\n}\nexport { tsLiteralType as tSLiteralType };\nexport function tsExpressionWithTypeArguments(\n  expression: t.TSEntityName,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSExpressionWithTypeArguments {\n  const node: t.TSExpressionWithTypeArguments = {\n    type: \"TSExpressionWithTypeArguments\",\n    expression,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.TSExpressionWithTypeArguments;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport { tsExpressionWithTypeArguments as tSExpressionWithTypeArguments };\nexport function tsInterfaceDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  _extends: Array<t.TSExpressionWithTypeArguments> | null | undefined = null,\n  body: t.TSInterfaceBody,\n): t.TSInterfaceDeclaration {\n  const node: t.TSInterfaceDeclaration = {\n    type: \"TSInterfaceDeclaration\",\n    id,\n    typeParameters,\n    extends: _extends,\n    body,\n  };\n  const defs = NODE_FIELDS.TSInterfaceDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.extends, node, \"extends\", _extends, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport { tsInterfaceDeclaration as tSInterfaceDeclaration };\nexport function tsInterfaceBody(\n  body: Array<t.TSTypeElement>,\n): t.TSInterfaceBody {\n  const node: t.TSInterfaceBody = {\n    type: \"TSInterfaceBody\",\n    body,\n  };\n  const defs = NODE_FIELDS.TSInterfaceBody;\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport { tsInterfaceBody as tSInterfaceBody };\nexport function tsTypeAliasDeclaration(\n  id: t.Identifier,\n  typeParameters: t.TSTypeParameterDeclaration | null | undefined = null,\n  typeAnnotation: t.TSType,\n): t.TSTypeAliasDeclaration {\n  const node: t.TSTypeAliasDeclaration = {\n    type: \"TSTypeAliasDeclaration\",\n    id,\n    typeParameters,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSTypeAliasDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsTypeAliasDeclaration as tSTypeAliasDeclaration };\nexport function tsInstantiationExpression(\n  expression: t.Expression,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSInstantiationExpression {\n  const node: t.TSInstantiationExpression = {\n    type: \"TSInstantiationExpression\",\n    expression,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.TSInstantiationExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport { tsInstantiationExpression as tSInstantiationExpression };\nexport function tsAsExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TSType,\n): t.TSAsExpression {\n  const node: t.TSAsExpression = {\n    type: \"TSAsExpression\",\n    expression,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSAsExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsAsExpression as tSAsExpression };\nexport function tsSatisfiesExpression(\n  expression: t.Expression,\n  typeAnnotation: t.TSType,\n): t.TSSatisfiesExpression {\n  const node: t.TSSatisfiesExpression = {\n    type: \"TSSatisfiesExpression\",\n    expression,\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSSatisfiesExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsSatisfiesExpression as tSSatisfiesExpression };\nexport function tsTypeAssertion(\n  typeAnnotation: t.TSType,\n  expression: t.Expression,\n): t.TSTypeAssertion {\n  const node: t.TSTypeAssertion = {\n    type: \"TSTypeAssertion\",\n    typeAnnotation,\n    expression,\n  };\n  const defs = NODE_FIELDS.TSTypeAssertion;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport { tsTypeAssertion as tSTypeAssertion };\nexport function tsEnumBody(members: Array<t.TSEnumMember>): t.TSEnumBody {\n  const node: t.TSEnumBody = {\n    type: \"TSEnumBody\",\n    members,\n  };\n  const defs = NODE_FIELDS.TSEnumBody;\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport { tsEnumBody as tSEnumBody };\nexport function tsEnumDeclaration(\n  id: t.Identifier,\n  members: Array<t.TSEnumMember>,\n): t.TSEnumDeclaration {\n  const node: t.TSEnumDeclaration = {\n    type: \"TSEnumDeclaration\",\n    id,\n    members,\n  };\n  const defs = NODE_FIELDS.TSEnumDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.members, node, \"members\", members, 1);\n  return node;\n}\nexport { tsEnumDeclaration as tSEnumDeclaration };\nexport function tsEnumMember(\n  id: t.Identifier | t.StringLiteral,\n  initializer: t.Expression | null = null,\n): t.TSEnumMember {\n  const node: t.TSEnumMember = {\n    type: \"TSEnumMember\",\n    id,\n    initializer,\n  };\n  const defs = NODE_FIELDS.TSEnumMember;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.initializer, node, \"initializer\", initializer, 1);\n  return node;\n}\nexport { tsEnumMember as tSEnumMember };\nexport function tsModuleDeclaration(\n  id: t.Identifier | t.StringLiteral,\n  body: t.TSModuleBlock | t.TSModuleDeclaration,\n): t.TSModuleDeclaration {\n  const node: t.TSModuleDeclaration = {\n    type: \"TSModuleDeclaration\",\n    id,\n    body,\n    kind: null,\n  };\n  const defs = NODE_FIELDS.TSModuleDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport { tsModuleDeclaration as tSModuleDeclaration };\nexport function tsModuleBlock(body: Array<t.Statement>): t.TSModuleBlock {\n  const node: t.TSModuleBlock = {\n    type: \"TSModuleBlock\",\n    body,\n  };\n  const defs = NODE_FIELDS.TSModuleBlock;\n  validate(defs.body, node, \"body\", body, 1);\n  return node;\n}\nexport { tsModuleBlock as tSModuleBlock };\nexport function tsImportType(\n  argument: t.StringLiteral,\n  qualifier: t.TSEntityName | null = null,\n  typeParameters: t.TSTypeParameterInstantiation | null = null,\n): t.TSImportType {\n  const node: t.TSImportType = {\n    type: \"TSImportType\",\n    argument,\n    qualifier,\n    typeParameters,\n  };\n  const defs = NODE_FIELDS.TSImportType;\n  validate(defs.argument, node, \"argument\", argument, 1);\n  validate(defs.qualifier, node, \"qualifier\", qualifier, 1);\n  validate(defs.typeParameters, node, \"typeParameters\", typeParameters, 1);\n  return node;\n}\nexport { tsImportType as tSImportType };\nexport function tsImportEqualsDeclaration(\n  id: t.Identifier,\n  moduleReference: t.TSEntityName | t.TSExternalModuleReference,\n): t.TSImportEqualsDeclaration {\n  const node: t.TSImportEqualsDeclaration = {\n    type: \"TSImportEqualsDeclaration\",\n    id,\n    moduleReference,\n    isExport: null,\n  };\n  const defs = NODE_FIELDS.TSImportEqualsDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  validate(defs.moduleReference, node, \"moduleReference\", moduleReference, 1);\n  return node;\n}\nexport { tsImportEqualsDeclaration as tSImportEqualsDeclaration };\nexport function tsExternalModuleReference(\n  expression: t.StringLiteral,\n): t.TSExternalModuleReference {\n  const node: t.TSExternalModuleReference = {\n    type: \"TSExternalModuleReference\",\n    expression,\n  };\n  const defs = NODE_FIELDS.TSExternalModuleReference;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport { tsExternalModuleReference as tSExternalModuleReference };\nexport function tsNonNullExpression(\n  expression: t.Expression,\n): t.TSNonNullExpression {\n  const node: t.TSNonNullExpression = {\n    type: \"TSNonNullExpression\",\n    expression,\n  };\n  const defs = NODE_FIELDS.TSNonNullExpression;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport { tsNonNullExpression as tSNonNullExpression };\nexport function tsExportAssignment(\n  expression: t.Expression,\n): t.TSExportAssignment {\n  const node: t.TSExportAssignment = {\n    type: \"TSExportAssignment\",\n    expression,\n  };\n  const defs = NODE_FIELDS.TSExportAssignment;\n  validate(defs.expression, node, \"expression\", expression, 1);\n  return node;\n}\nexport { tsExportAssignment as tSExportAssignment };\nexport function tsNamespaceExportDeclaration(\n  id: t.Identifier,\n): t.TSNamespaceExportDeclaration {\n  const node: t.TSNamespaceExportDeclaration = {\n    type: \"TSNamespaceExportDeclaration\",\n    id,\n  };\n  const defs = NODE_FIELDS.TSNamespaceExportDeclaration;\n  validate(defs.id, node, \"id\", id, 1);\n  return node;\n}\nexport { tsNamespaceExportDeclaration as tSNamespaceExportDeclaration };\nexport function tsTypeAnnotation(typeAnnotation: t.TSType): t.TSTypeAnnotation {\n  const node: t.TSTypeAnnotation = {\n    type: \"TSTypeAnnotation\",\n    typeAnnotation,\n  };\n  const defs = NODE_FIELDS.TSTypeAnnotation;\n  validate(defs.typeAnnotation, node, \"typeAnnotation\", typeAnnotation, 1);\n  return node;\n}\nexport { tsTypeAnnotation as tSTypeAnnotation };\nexport function tsTypeParameterInstantiation(\n  params: Array<t.TSType>,\n): t.TSTypeParameterInstantiation {\n  const node: t.TSTypeParameterInstantiation = {\n    type: \"TSTypeParameterInstantiation\",\n    params,\n  };\n  const defs = NODE_FIELDS.TSTypeParameterInstantiation;\n  validate(defs.params, node, \"params\", params, 1);\n  return node;\n}\nexport { tsTypeParameterInstantiation as tSTypeParameterInstantiation };\nexport function tsTypeParameterDeclaration(\n  params: Array<t.TSTypeParameter>,\n): t.TSTypeParameterDeclaration {\n  const node: t.TSTypeParameterDeclaration = {\n    type: \"TSTypeParameterDeclaration\",\n    params,\n  };\n  const defs = NODE_FIELDS.TSTypeParameterDeclaration;\n  validate(defs.params, node, \"params\", params, 1);\n  return node;\n}\nexport { tsTypeParameterDeclaration as tSTypeParameterDeclaration };\nexport function tsTypeParameter(\n  constraint: t.TSType | null | undefined = null,\n  _default: t.TSType | null | undefined = null,\n  name: string,\n): t.TSTypeParameter {\n  const node: t.TSTypeParameter = {\n    type: \"TSTypeParameter\",\n    constraint,\n    default: _default,\n    name,\n  };\n  const defs = NODE_FIELDS.TSTypeParameter;\n  validate(defs.constraint, node, \"constraint\", constraint, 1);\n  validate(defs.default, node, \"default\", _default, 1);\n  validate(defs.name, node, \"name\", name);\n  return node;\n}\nexport { tsTypeParameter as tSTypeParameter };\n/** @deprecated */\nfunction NumberLiteral(value: number) {\n  deprecationWarning(\"NumberLiteral\", \"NumericLiteral\", \"The node type \");\n  return numericLiteral(value);\n}\nexport { NumberLiteral as numberLiteral };\n/** @deprecated */\nfunction RegexLiteral(pattern: string, flags: string = \"\") {\n  deprecationWarning(\"RegexLiteral\", \"RegExpLiteral\", \"The node type \");\n  return regExpLiteral(pattern, flags);\n}\nexport { RegexLiteral as regexLiteral };\n/** @deprecated */\nfunction RestProperty(argument: t.LVal) {\n  deprecationWarning(\"RestProperty\", \"RestElement\", \"The node type \");\n  return restElement(argument);\n}\nexport { RestProperty as restProperty };\n/** @deprecated */\nfunction SpreadProperty(argument: t.Expression) {\n  deprecationWarning(\"SpreadProperty\", \"SpreadElement\", \"The node type \");\n  return spreadElement(argument);\n}\nexport { SpreadProperty as spreadProperty };\n","/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\n\nexport {\n  arrayExpression as ArrayExpression,\n  assignmentExpression as AssignmentExpression,\n  binaryExpression as BinaryExpression,\n  interpreterDirective as InterpreterDirective,\n  directive as Directive,\n  directiveLiteral as DirectiveLiteral,\n  blockStatement as BlockStatement,\n  breakStatement as BreakStatement,\n  callExpression as CallExpression,\n  catchClause as CatchClause,\n  conditionalExpression as ConditionalExpression,\n  continueStatement as ContinueStatement,\n  debuggerStatement as DebuggerStatement,\n  doWhileStatement as DoWhileStatement,\n  emptyStatement as EmptyStatement,\n  expressionStatement as ExpressionStatement,\n  file as File,\n  forInStatement as ForInStatement,\n  forStatement as ForStatement,\n  functionDeclaration as FunctionDeclaration,\n  functionExpression as FunctionExpression,\n  identifier as Identifier,\n  ifStatement as IfStatement,\n  labeledStatement as LabeledStatement,\n  stringLiteral as StringLiteral,\n  numericLiteral as NumericLiteral,\n  nullLiteral as NullLiteral,\n  booleanLiteral as BooleanLiteral,\n  regExpLiteral as RegExpLiteral,\n  logicalExpression as LogicalExpression,\n  memberExpression as MemberExpression,\n  newExpression as NewExpression,\n  program as Program,\n  objectExpression as ObjectExpression,\n  objectMethod as ObjectMethod,\n  objectProperty as ObjectProperty,\n  restElement as RestElement,\n  returnStatement as ReturnStatement,\n  sequenceExpression as SequenceExpression,\n  parenthesizedExpression as ParenthesizedExpression,\n  switchCase as SwitchCase,\n  switchStatement as SwitchStatement,\n  thisExpression as ThisExpression,\n  throwStatement as ThrowStatement,\n  tryStatement as TryStatement,\n  unaryExpression as UnaryExpression,\n  updateExpression as UpdateExpression,\n  variableDeclaration as VariableDeclaration,\n  variableDeclarator as VariableDeclarator,\n  whileStatement as WhileStatement,\n  withStatement as WithStatement,\n  assignmentPattern as AssignmentPattern,\n  arrayPattern as ArrayPattern,\n  arrowFunctionExpression as ArrowFunctionExpression,\n  classBody as ClassBody,\n  classExpression as ClassExpression,\n  classDeclaration as ClassDeclaration,\n  exportAllDeclaration as ExportAllDeclaration,\n  exportDefaultDeclaration as ExportDefaultDeclaration,\n  exportNamedDeclaration as ExportNamedDeclaration,\n  exportSpecifier as ExportSpecifier,\n  forOfStatement as ForOfStatement,\n  importDeclaration as ImportDeclaration,\n  importDefaultSpecifier as ImportDefaultSpecifier,\n  importNamespaceSpecifier as ImportNamespaceSpecifier,\n  importSpecifier as ImportSpecifier,\n  importExpression as ImportExpression,\n  metaProperty as MetaProperty,\n  classMethod as ClassMethod,\n  objectPattern as ObjectPattern,\n  spreadElement as SpreadElement,\n  super as Super,\n  taggedTemplateExpression as TaggedTemplateExpression,\n  templateElement as TemplateElement,\n  templateLiteral as TemplateLiteral,\n  yieldExpression as YieldExpression,\n  awaitExpression as AwaitExpression,\n  import as Import,\n  bigIntLiteral as BigIntLiteral,\n  exportNamespaceSpecifier as ExportNamespaceSpecifier,\n  optionalMemberExpression as OptionalMemberExpression,\n  optionalCallExpression as OptionalCallExpression,\n  classProperty as ClassProperty,\n  classAccessorProperty as ClassAccessorProperty,\n  classPrivateProperty as ClassPrivateProperty,\n  classPrivateMethod as ClassPrivateMethod,\n  privateName as PrivateName,\n  staticBlock as StaticBlock,\n  anyTypeAnnotation as AnyTypeAnnotation,\n  arrayTypeAnnotation as ArrayTypeAnnotation,\n  booleanTypeAnnotation as BooleanTypeAnnotation,\n  booleanLiteralTypeAnnotation as BooleanLiteralTypeAnnotation,\n  nullLiteralTypeAnnotation as NullLiteralTypeAnnotation,\n  classImplements as ClassImplements,\n  declareClass as DeclareClass,\n  declareFunction as DeclareFunction,\n  declareInterface as DeclareInterface,\n  declareModule as DeclareModule,\n  declareModuleExports as DeclareModuleExports,\n  declareTypeAlias as DeclareTypeAlias,\n  declareOpaqueType as DeclareOpaqueType,\n  declareVariable as DeclareVariable,\n  declareExportDeclaration as DeclareExportDeclaration,\n  declareExportAllDeclaration as DeclareExportAllDeclaration,\n  declaredPredicate as DeclaredPredicate,\n  existsTypeAnnotation as ExistsTypeAnnotation,\n  functionTypeAnnotation as FunctionTypeAnnotation,\n  functionTypeParam as FunctionTypeParam,\n  genericTypeAnnotation as GenericTypeAnnotation,\n  inferredPredicate as InferredPredicate,\n  interfaceExtends as InterfaceExtends,\n  interfaceDeclaration as InterfaceDeclaration,\n  interfaceTypeAnnotation as InterfaceTypeAnnotation,\n  intersectionTypeAnnotation as IntersectionTypeAnnotation,\n  mixedTypeAnnotation as MixedTypeAnnotation,\n  emptyTypeAnnotation as EmptyTypeAnnotation,\n  nullableTypeAnnotation as NullableTypeAnnotation,\n  numberLiteralTypeAnnotation as NumberLiteralTypeAnnotation,\n  numberTypeAnnotation as NumberTypeAnnotation,\n  objectTypeAnnotation as ObjectTypeAnnotation,\n  objectTypeInternalSlot as ObjectTypeInternalSlot,\n  objectTypeCallProperty as ObjectTypeCallProperty,\n  objectTypeIndexer as ObjectTypeIndexer,\n  objectTypeProperty as ObjectTypeProperty,\n  objectTypeSpreadProperty as ObjectTypeSpreadProperty,\n  opaqueType as OpaqueType,\n  qualifiedTypeIdentifier as QualifiedTypeIdentifier,\n  stringLiteralTypeAnnotation as StringLiteralTypeAnnotation,\n  stringTypeAnnotation as StringTypeAnnotation,\n  symbolTypeAnnotation as SymbolTypeAnnotation,\n  thisTypeAnnotation as ThisTypeAnnotation,\n  tupleTypeAnnotation as TupleTypeAnnotation,\n  typeofTypeAnnotation as TypeofTypeAnnotation,\n  typeAlias as TypeAlias,\n  typeAnnotation as TypeAnnotation,\n  typeCastExpression as TypeCastExpression,\n  typeParameter as TypeParameter,\n  typeParameterDeclaration as TypeParameterDeclaration,\n  typeParameterInstantiation as TypeParameterInstantiation,\n  unionTypeAnnotation as UnionTypeAnnotation,\n  variance as Variance,\n  voidTypeAnnotation as VoidTypeAnnotation,\n  enumDeclaration as EnumDeclaration,\n  enumBooleanBody as EnumBooleanBody,\n  enumNumberBody as EnumNumberBody,\n  enumStringBody as EnumStringBody,\n  enumSymbolBody as EnumSymbolBody,\n  enumBooleanMember as EnumBooleanMember,\n  enumNumberMember as EnumNumberMember,\n  enumStringMember as EnumStringMember,\n  enumDefaultedMember as EnumDefaultedMember,\n  indexedAccessType as IndexedAccessType,\n  optionalIndexedAccessType as OptionalIndexedAccessType,\n  jsxAttribute as JSXAttribute,\n  jsxClosingElement as JSXClosingElement,\n  jsxElement as JSXElement,\n  jsxEmptyExpression as JSXEmptyExpression,\n  jsxExpressionContainer as JSXExpressionContainer,\n  jsxSpreadChild as JSXSpreadChild,\n  jsxIdentifier as JSXIdentifier,\n  jsxMemberExpression as JSXMemberExpression,\n  jsxNamespacedName as JSXNamespacedName,\n  jsxOpeningElement as JSXOpeningElement,\n  jsxSpreadAttribute as JSXSpreadAttribute,\n  jsxText as JSXText,\n  jsxFragment as JSXFragment,\n  jsxOpeningFragment as JSXOpeningFragment,\n  jsxClosingFragment as JSXClosingFragment,\n  noop as Noop,\n  placeholder as Placeholder,\n  v8IntrinsicIdentifier as V8IntrinsicIdentifier,\n  argumentPlaceholder as ArgumentPlaceholder,\n  bindExpression as BindExpression,\n  importAttribute as ImportAttribute,\n  decorator as Decorator,\n  doExpression as DoExpression,\n  exportDefaultSpecifier as ExportDefaultSpecifier,\n  recordExpression as RecordExpression,\n  tupleExpression as TupleExpression,\n  decimalLiteral as DecimalLiteral,\n  moduleExpression as ModuleExpression,\n  topicReference as TopicReference,\n  pipelineTopicExpression as PipelineTopicExpression,\n  pipelineBareFunction as PipelineBareFunction,\n  pipelinePrimaryTopicReference as PipelinePrimaryTopicReference,\n  tsParameterProperty as TSParameterProperty,\n  tsDeclareFunction as TSDeclareFunction,\n  tsDeclareMethod as TSDeclareMethod,\n  tsQualifiedName as TSQualifiedName,\n  tsCallSignatureDeclaration as TSCallSignatureDeclaration,\n  tsConstructSignatureDeclaration as TSConstructSignatureDeclaration,\n  tsPropertySignature as TSPropertySignature,\n  tsMethodSignature as TSMethodSignature,\n  tsIndexSignature as TSIndexSignature,\n  tsAnyKeyword as TSAnyKeyword,\n  tsBooleanKeyword as TSBooleanKeyword,\n  tsBigIntKeyword as TSBigIntKeyword,\n  tsIntrinsicKeyword as TSIntrinsicKeyword,\n  tsNeverKeyword as TSNeverKeyword,\n  tsNullKeyword as TSNullKeyword,\n  tsNumberKeyword as TSNumberKeyword,\n  tsObjectKeyword as TSObjectKeyword,\n  tsStringKeyword as TSStringKeyword,\n  tsSymbolKeyword as TSSymbolKeyword,\n  tsUndefinedKeyword as TSUndefinedKeyword,\n  tsUnknownKeyword as TSUnknownKeyword,\n  tsVoidKeyword as TSVoidKeyword,\n  tsThisType as TSThisType,\n  tsFunctionType as TSFunctionType,\n  tsConstructorType as TSConstructorType,\n  tsTypeReference as TSTypeReference,\n  tsTypePredicate as TSTypePredicate,\n  tsTypeQuery as TSTypeQuery,\n  tsTypeLiteral as TSTypeLiteral,\n  tsArrayType as TSArrayType,\n  tsTupleType as TSTupleType,\n  tsOptionalType as TSOptionalType,\n  tsRestType as TSRestType,\n  tsNamedTupleMember as TSNamedTupleMember,\n  tsUnionType as TSUnionType,\n  tsIntersectionType as TSIntersectionType,\n  tsConditionalType as TSConditionalType,\n  tsInferType as TSInferType,\n  tsParenthesizedType as TSParenthesizedType,\n  tsTypeOperator as TSTypeOperator,\n  tsIndexedAccessType as TSIndexedAccessType,\n  tsMappedType as TSMappedType,\n  tsTemplateLiteralType as TSTemplateLiteralType,\n  tsLiteralType as TSLiteralType,\n  tsExpressionWithTypeArguments as TSExpressionWithTypeArguments,\n  tsInterfaceDeclaration as TSInterfaceDeclaration,\n  tsInterfaceBody as TSInterfaceBody,\n  tsTypeAliasDeclaration as TSTypeAliasDeclaration,\n  tsInstantiationExpression as TSInstantiationExpression,\n  tsAsExpression as TSAsExpression,\n  tsSatisfiesExpression as TSSatisfiesExpression,\n  tsTypeAssertion as TSTypeAssertion,\n  tsEnumBody as TSEnumBody,\n  tsEnumDeclaration as TSEnumDeclaration,\n  tsEnumMember as TSEnumMember,\n  tsModuleDeclaration as TSModuleDeclaration,\n  tsModuleBlock as TSModuleBlock,\n  tsImportType as TSImportType,\n  tsImportEqualsDeclaration as TSImportEqualsDeclaration,\n  tsExternalModuleReference as TSExternalModuleReference,\n  tsNonNullExpression as TSNonNullExpression,\n  tsExportAssignment as TSExportAssignment,\n  tsNamespaceExportDeclaration as TSNamespaceExportDeclaration,\n  tsTypeAnnotation as TSTypeAnnotation,\n  tsTypeParameterInstantiation as TSTypeParameterInstantiation,\n  tsTypeParameterDeclaration as TSTypeParameterDeclaration,\n  tsTypeParameter as TSTypeParameter,\n  numberLiteral as NumberLiteral,\n  regexLiteral as RegexLiteral,\n  restProperty as RestProperty,\n  spreadProperty as SpreadProperty,\n} from \"./lowercase.ts\";\n","import { numericLiteral, unaryExpression } from \"./generated/index.ts\";\n\nexport function buildUndefinedNode() {\n  return unaryExpression(\"void\", numericLiteral(0), true);\n}\n","import {\n  isJSXText,\n  isJSXExpressionContainer,\n  isJSXEmptyExpression,\n} from \"../../validators/generated/index.ts\";\nimport cleanJSXElementLiteralChild from \"../../utils/react/cleanJSXElementLiteralChild.ts\";\nimport type * as t from \"../../index.ts\";\n\ntype ReturnedChild =\n  | t.JSXSpreadChild\n  | t.JSXElement\n  | t.JSXFragment\n  | t.Expression;\n\nexport default function buildChildren(\n  node: t.JSXElement | t.JSXFragment,\n): ReturnedChild[] {\n  const elements = [];\n\n  for (let i = 0; i < node.children.length; i++) {\n    let child: any = node.children[i];\n\n    if (isJSXText(child)) {\n      cleanJSXElementLiteralChild(child, elements);\n      continue;\n    }\n\n    if (isJSXExpressionContainer(child)) child = child.expression;\n    if (isJSXEmptyExpression(child)) continue;\n\n    elements.push(child);\n  }\n\n  return elements;\n}\n","import { tsUnionType } from \"../generated/index.ts\";\nimport removeTypeDuplicates from \"../../modifications/typescript/removeTypeDuplicates.ts\";\nimport { isTSTypeAnnotation } from \"../../validators/generated/index.ts\";\nimport type * as t from \"../../index.ts\";\n\n/**\n * Takes an array of `types` and flattens them, removing duplicates and\n * returns a `UnionTypeAnnotation` node containing them.\n */\nexport default function createTSUnionType(\n  typeAnnotations: Array<t.TSTypeAnnotation | t.TSType>,\n): t.TSType {\n  const types = typeAnnotations.map(type => {\n    return isTSTypeAnnotation(type) ? type.typeAnnotation : type;\n  });\n  const flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return tsUnionType(flattened);\n  }\n}\n","import cloneNode from \"./cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Create a shallow clone of a `node`, including only\n * properties belonging to the node.\n * @deprecated Use t.cloneNode instead.\n */\nexport default function clone<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ false);\n}\n","import cloneNode from \"./cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Create a deep clone of a `node` and all of it's child nodes\n * including only properties belonging to the node.\n * @deprecated Use t.cloneNode instead.\n */\nexport default function cloneDeep<T extends t.Node>(node: T): T {\n  return cloneNode(node);\n}\n","import cloneNode from \"./cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n/**\n * Create a deep clone of a `node` and all of it's child nodes\n * including only properties belonging to the node.\n * excluding `_private` and location properties.\n */\nexport default function cloneDeepWithoutLoc<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ true, /* withoutLoc */ true);\n}\n","import { NODE_FIELDS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\nimport { isFile, isIdentifier } from \"../validators/generated/index.ts\";\n\nconst { hasOwn } = process.env.BABEL_8_BREAKING\n  ? Object\n  : { hasOwn: Function.call.bind(Object.prototype.hasOwnProperty) };\n\ntype CommentCache = Map<t.Comment, t.Comment>;\n\n// This function will never be called for comments, only for real nodes.\nfunction cloneIfNode(\n  obj: t.Node | undefined | null,\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: CommentCache,\n) {\n  if (obj && typeof obj.type === \"string\") {\n    return cloneNodeInternal(obj, deep, withoutLoc, commentsCache);\n  }\n\n  return obj;\n}\n\nfunction cloneIfNodeOrArray(\n  obj: t.Node | undefined | null | (t.Node | undefined | null)[],\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: CommentCache,\n) {\n  if (Array.isArray(obj)) {\n    return obj.map(node => cloneIfNode(node, deep, withoutLoc, commentsCache));\n  }\n  return cloneIfNode(obj, deep, withoutLoc, commentsCache);\n}\n\n/**\n * Create a clone of a `node` including only properties belonging to the node.\n * If the second parameter is `false`, cloneNode performs a shallow clone.\n * If the third parameter is true, the cloned nodes exclude location properties.\n */\nexport default function cloneNode<T extends t.Node>(\n  node: T,\n  deep: boolean = true,\n  withoutLoc: boolean = false,\n): T {\n  return cloneNodeInternal(node, deep, withoutLoc, new Map());\n}\n\nfunction cloneNodeInternal<T extends t.Node>(\n  node: T,\n  deep: boolean = true,\n  withoutLoc: boolean = false,\n  commentsCache: CommentCache,\n): T {\n  if (!node) return node;\n\n  const { type } = node;\n  const newNode: any = { type: node.type };\n\n  // Special-case identifiers since they are the most cloned nodes.\n  if (isIdentifier(node)) {\n    newNode.name = node.name;\n\n    if (hasOwn(node, \"optional\") && typeof node.optional === \"boolean\") {\n      newNode.optional = node.optional;\n    }\n\n    if (hasOwn(node, \"typeAnnotation\")) {\n      newNode.typeAnnotation = deep\n        ? cloneIfNodeOrArray(\n            node.typeAnnotation,\n            true,\n            withoutLoc,\n            commentsCache,\n          )\n        : node.typeAnnotation;\n    }\n\n    if (hasOwn(node, \"decorators\")) {\n      newNode.decorators = deep\n        ? cloneIfNodeOrArray(node.decorators, true, withoutLoc, commentsCache)\n        : node.decorators;\n    }\n  } else if (!hasOwn(NODE_FIELDS, type)) {\n    throw new Error(`Unknown node type: \"${type}\"`);\n  } else {\n    for (const field of Object.keys(NODE_FIELDS[type])) {\n      if (hasOwn(node, field)) {\n        if (deep) {\n          newNode[field] =\n            isFile(node) && field === \"comments\"\n              ? maybeCloneComments(\n                  node.comments,\n                  deep,\n                  withoutLoc,\n                  commentsCache,\n                )\n              : cloneIfNodeOrArray(\n                  // @ts-expect-error node[field] has been guarded by has check\n                  node[field],\n                  true,\n                  withoutLoc,\n                  commentsCache,\n                );\n        } else {\n          newNode[field] =\n            // @ts-expect-error node[field] has been guarded by has check\n            node[field];\n        }\n      }\n    }\n  }\n\n  if (hasOwn(node, \"loc\")) {\n    if (withoutLoc) {\n      newNode.loc = null;\n    } else {\n      newNode.loc = node.loc;\n    }\n  }\n  if (hasOwn(node, \"leadingComments\")) {\n    newNode.leadingComments = maybeCloneComments(\n      node.leadingComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (hasOwn(node, \"innerComments\")) {\n    newNode.innerComments = maybeCloneComments(\n      node.innerComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (hasOwn(node, \"trailingComments\")) {\n    newNode.trailingComments = maybeCloneComments(\n      node.trailingComments,\n      deep,\n      withoutLoc,\n      commentsCache,\n    );\n  }\n  if (hasOwn(node, \"extra\")) {\n    newNode.extra = {\n      ...node.extra,\n    };\n  }\n\n  return newNode;\n}\n\nfunction maybeCloneComments<T extends t.Comment>(\n  comments: ReadonlyArray<T> | null,\n  deep: boolean,\n  withoutLoc: boolean,\n  commentsCache: Map<T, T>,\n): ReadonlyArray<T> | null {\n  if (!comments || !deep) {\n    return comments;\n  }\n  return comments.map(comment => {\n    const cache = commentsCache.get(comment);\n    if (cache) return cache;\n\n    const { type, value, loc } = comment;\n\n    const ret = { type, value, loc } as T;\n    if (withoutLoc) {\n      ret.loc = null;\n    }\n\n    commentsCache.set(comment, ret);\n\n    return ret;\n  });\n}\n","import cloneNode from \"./cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Create a shallow clone of a `node` excluding `_private` and location properties.\n */\nexport default function cloneWithoutLoc<T extends t.Node>(node: T): T {\n  return cloneNode(node, /* deep */ false, /* withoutLoc */ true);\n}\n","import addComments from \"./addComments.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Add comment of certain type to a node.\n */\nexport default function addComment<T extends t.Node>(\n  node: T,\n  type: t.CommentTypeShorthand,\n  content: string,\n  line?: boolean,\n): T {\n  return addComments(node, type, [\n    {\n      type: line ? \"CommentLine\" : \"CommentBlock\",\n      value: content,\n    } as t.Comment,\n  ]);\n}\n","import type * as t from \"../index.ts\";\n\n/**\n * Add comments of certain type to a node.\n */\nexport default function addComments<T extends t.Node>(\n  node: T,\n  type: t.CommentTypeShorthand,\n  comments: Array<t.Comment>,\n): T {\n  if (!comments || !node) return node;\n\n  const key = `${type}Comments` as const;\n\n  if (node[key]) {\n    if (type === \"leading\") {\n      node[key] = comments.concat(node[key]);\n    } else {\n      node[key].push(...comments);\n    }\n  } else {\n    node[key] = comments;\n  }\n\n  return node;\n}\n","import inherit from \"../utils/inherit.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function inheritInnerComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"innerComments\", child, parent);\n}\n","import inherit from \"../utils/inherit.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function inheritLeadingComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"leadingComments\", child, parent);\n}\n","import inherit from \"../utils/inherit.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function inheritTrailingComments(\n  child: t.Node,\n  parent: t.Node,\n): void {\n  inherit(\"trailingComments\", child, parent);\n}\n","import inheritTrailingComments from \"./inheritTrailingComments.ts\";\nimport inheritLeadingComments from \"./inheritLeadingComments.ts\";\nimport inheritInnerComments from \"./inheritInnerComments.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Inherit all unique comments from `parent` node to `child` node.\n */\nexport default function inheritsComments<T extends t.Node>(\n  child: T,\n  parent: t.Node,\n): T {\n  inheritTrailingComments(child, parent);\n  inheritLeadingComments(child, parent);\n  inheritInnerComments(child, parent);\n\n  return child;\n}\n","import { COMMENT_KEYS } from \"../constants/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Remove comment properties from a node.\n */\nexport default function removeComments<T extends t.Node>(node: T): T {\n  COMMENT_KEYS.forEach(key => {\n    node[key] = null;\n  });\n\n  return node;\n}\n","/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport { FLIPPED_ALIAS_KEYS } from \"../../definitions/index.ts\";\n\nexport const STANDARDIZED_TYPES = FLIPPED_ALIAS_KEYS[\"Standardized\"];\nexport const EXPRESSION_TYPES = FLIPPED_ALIAS_KEYS[\"Expression\"];\nexport const BINARY_TYPES = FLIPPED_ALIAS_KEYS[\"Binary\"];\nexport const SCOPABLE_TYPES = FLIPPED_ALIAS_KEYS[\"Scopable\"];\nexport const BLOCKPARENT_TYPES = FLIPPED_ALIAS_KEYS[\"BlockParent\"];\nexport const BLOCK_TYPES = FLIPPED_ALIAS_KEYS[\"Block\"];\nexport const STATEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"Statement\"];\nexport const TERMINATORLESS_TYPES = FLIPPED_ALIAS_KEYS[\"Terminatorless\"];\nexport const COMPLETIONSTATEMENT_TYPES =\n  FLIPPED_ALIAS_KEYS[\"CompletionStatement\"];\nexport const CONDITIONAL_TYPES = FLIPPED_ALIAS_KEYS[\"Conditional\"];\nexport const LOOP_TYPES = FLIPPED_ALIAS_KEYS[\"Loop\"];\nexport const WHILE_TYPES = FLIPPED_ALIAS_KEYS[\"While\"];\nexport const EXPRESSIONWRAPPER_TYPES = FLIPPED_ALIAS_KEYS[\"ExpressionWrapper\"];\nexport const FOR_TYPES = FLIPPED_ALIAS_KEYS[\"For\"];\nexport const FORXSTATEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"ForXStatement\"];\nexport const FUNCTION_TYPES = FLIPPED_ALIAS_KEYS[\"Function\"];\nexport const FUNCTIONPARENT_TYPES = FLIPPED_ALIAS_KEYS[\"FunctionParent\"];\nexport const PUREISH_TYPES = FLIPPED_ALIAS_KEYS[\"Pureish\"];\nexport const DECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"Declaration\"];\nexport const PATTERNLIKE_TYPES = FLIPPED_ALIAS_KEYS[\"PatternLike\"];\nexport const LVAL_TYPES = FLIPPED_ALIAS_KEYS[\"LVal\"];\nexport const TSENTITYNAME_TYPES = FLIPPED_ALIAS_KEYS[\"TSEntityName\"];\nexport const LITERAL_TYPES = FLIPPED_ALIAS_KEYS[\"Literal\"];\nexport const IMMUTABLE_TYPES = FLIPPED_ALIAS_KEYS[\"Immutable\"];\nexport const USERWHITESPACABLE_TYPES = FLIPPED_ALIAS_KEYS[\"UserWhitespacable\"];\nexport const METHOD_TYPES = FLIPPED_ALIAS_KEYS[\"Method\"];\nexport const OBJECTMEMBER_TYPES = FLIPPED_ALIAS_KEYS[\"ObjectMember\"];\nexport const PROPERTY_TYPES = FLIPPED_ALIAS_KEYS[\"Property\"];\nexport const UNARYLIKE_TYPES = FLIPPED_ALIAS_KEYS[\"UnaryLike\"];\nexport const PATTERN_TYPES = FLIPPED_ALIAS_KEYS[\"Pattern\"];\nexport const CLASS_TYPES = FLIPPED_ALIAS_KEYS[\"Class\"];\nexport const IMPORTOREXPORTDECLARATION_TYPES =\n  FLIPPED_ALIAS_KEYS[\"ImportOrExportDeclaration\"];\nexport const EXPORTDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"ExportDeclaration\"];\nexport const MODULESPECIFIER_TYPES = FLIPPED_ALIAS_KEYS[\"ModuleSpecifier\"];\nexport const ACCESSOR_TYPES = FLIPPED_ALIAS_KEYS[\"Accessor\"];\nexport const PRIVATE_TYPES = FLIPPED_ALIAS_KEYS[\"Private\"];\nexport const FLOW_TYPES = FLIPPED_ALIAS_KEYS[\"Flow\"];\nexport const FLOWTYPE_TYPES = FLIPPED_ALIAS_KEYS[\"FlowType\"];\nexport const FLOWBASEANNOTATION_TYPES =\n  FLIPPED_ALIAS_KEYS[\"FlowBaseAnnotation\"];\nexport const FLOWDECLARATION_TYPES = FLIPPED_ALIAS_KEYS[\"FlowDeclaration\"];\nexport const FLOWPREDICATE_TYPES = FLIPPED_ALIAS_KEYS[\"FlowPredicate\"];\nexport const ENUMBODY_TYPES = FLIPPED_ALIAS_KEYS[\"EnumBody\"];\nexport const ENUMMEMBER_TYPES = FLIPPED_ALIAS_KEYS[\"EnumMember\"];\nexport const JSX_TYPES = FLIPPED_ALIAS_KEYS[\"JSX\"];\nexport const MISCELLANEOUS_TYPES = FLIPPED_ALIAS_KEYS[\"Miscellaneous\"];\nexport const TYPESCRIPT_TYPES = FLIPPED_ALIAS_KEYS[\"TypeScript\"];\nexport const TSTYPEELEMENT_TYPES = FLIPPED_ALIAS_KEYS[\"TSTypeElement\"];\nexport const TSTYPE_TYPES = FLIPPED_ALIAS_KEYS[\"TSType\"];\nexport const TSBASETYPE_TYPES = FLIPPED_ALIAS_KEYS[\"TSBaseType\"];\n/**\n * @deprecated migrate to IMPORTOREXPORTDECLARATION_TYPES.\n */\nexport const MODULEDECLARATION_TYPES = IMPORTOREXPORTDECLARATION_TYPES;\n","export const STATEMENT_OR_BLOCK_KEYS = [\"consequent\", \"body\", \"alternate\"];\nexport const FLATTENABLE_KEYS = [\"body\", \"expressions\"];\nexport const FOR_INIT_KEYS = [\"left\", \"init\"];\nexport const COMMENT_KEYS = [\n  \"leadingComments\",\n  \"trailingComments\",\n  \"innerComments\",\n] as const;\n\nexport const LOGICAL_OPERATORS = [\"||\", \"&&\", \"??\"];\nexport const UPDATE_OPERATORS = [\"++\", \"--\"];\n\nexport const BOOLEAN_NUMBER_BINARY_OPERATORS = [\">\", \"<\", \">=\", \"<=\"];\nexport const EQUALITY_BINARY_OPERATORS = [\"==\", \"===\", \"!=\", \"!==\"];\nexport const COMPARISON_BINARY_OPERATORS = [\n  ...EQUALITY_BINARY_OPERATORS,\n  \"in\",\n  \"instanceof\",\n];\nexport const BOOLEAN_BINARY_OPERATORS = [\n  ...COMPARISON_BINARY_OPERATORS,\n  ...BOOLEAN_NUMBER_BINARY_OPERATORS,\n];\nexport const NUMBER_BINARY_OPERATORS = [\n  \"-\",\n  \"/\",\n  \"%\",\n  \"*\",\n  \"**\",\n  \"&\",\n  \"|\",\n  \">>\",\n  \">>>\",\n  \"<<\",\n  \"^\",\n];\nexport const BINARY_OPERATORS = [\n  \"+\",\n  ...NUMBER_BINARY_OPERATORS,\n  ...BOOLEAN_BINARY_OPERATORS,\n  \"|>\",\n];\n\nexport const ASSIGNMENT_OPERATORS = [\n  \"=\",\n  \"+=\",\n  ...NUMBER_BINARY_OPERATORS.map(op => op + \"=\"),\n  ...LOGICAL_OPERATORS.map(op => op + \"=\"),\n];\n\nexport const BOOLEAN_UNARY_OPERATORS = [\"delete\", \"!\"];\nexport const NUMBER_UNARY_OPERATORS = [\"+\", \"-\", \"~\"];\nexport const STRING_UNARY_OPERATORS = [\"typeof\"];\nexport const UNARY_OPERATORS = [\n  \"void\",\n  \"throw\",\n  ...BOOLEAN_UNARY_OPERATORS,\n  ...NUMBER_UNARY_OPERATORS,\n  ...STRING_UNARY_OPERATORS,\n];\n\nexport const INHERIT_KEYS = {\n  optional: [\"typeAnnotation\", \"typeParameters\", \"returnType\"],\n  force: [\"start\", \"loc\", \"end\"],\n} as const;\n\nexport const BLOCK_SCOPED_SYMBOL = Symbol.for(\"var used to be block scoped\");\nexport const NOT_LOCAL_BINDING = Symbol.for(\n  \"should not be considered a local binding\",\n);\n","import toBlock from \"./toBlock.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Ensure the `key` (defaults to \"body\") of a `node` is a block.\n * Casting it to a block if it is not.\n *\n * Returns the BlockStatement\n */\nexport default function ensureBlock(\n  node: t.Node,\n  key: string = \"body\",\n): t.BlockStatement {\n  // @ts-expect-error Fixme: key may not exist in node, consider remove key = \"body\"\n  const result = toBlock(node[key], node);\n  // @ts-expect-error Fixme: key may not exist in node, consider remove key = \"body\"\n  node[key] = result;\n  return result;\n}\n","// TODO(Babel 8) Remove this file\nif (process.env.BABEL_8_BREAKING && process.env.IS_PUBLISH) {\n  throw new Error(\n    \"Internal Babel error: This file should only be loaded in Babel 7\",\n  );\n}\n\nimport getBindingIdentifiers from \"../retrievers/getBindingIdentifiers.ts\";\nimport {\n  isExpression,\n  isExpressionStatement,\n  isVariableDeclaration,\n  isIfStatement,\n  isBlockStatement,\n  isEmptyStatement,\n} from \"../validators/generated/index.ts\";\nimport {\n  sequenceExpression,\n  assignmentExpression,\n  conditionalExpression,\n} from \"../builders/generated/index.ts\";\nimport { buildUndefinedNode } from \"../builders/productions.ts\";\nimport cloneNode from \"../clone/cloneNode.ts\";\nimport type * as t from \"../index.ts\";\n\nexport type DeclarationInfo = {\n  kind: t.VariableDeclaration[\"kind\"];\n  id: t.Identifier;\n};\n\nexport default function gatherSequenceExpressions(\n  nodes: ReadonlyArray<t.Node>,\n  declars: Array<DeclarationInfo>,\n) {\n  const exprs: t.Expression[] = [];\n  let ensureLastUndefined = true;\n\n  for (const node of nodes) {\n    // if we encounter emptyStatement before a non-emptyStatement\n    // we want to disregard that\n    if (!isEmptyStatement(node)) {\n      ensureLastUndefined = false;\n    }\n\n    if (isExpression(node)) {\n      exprs.push(node);\n    } else if (isExpressionStatement(node)) {\n      exprs.push(node.expression);\n    } else if (isVariableDeclaration(node)) {\n      if (node.kind !== \"var\") return; // bailed\n\n      for (const declar of node.declarations) {\n        const bindings = getBindingIdentifiers(declar);\n        for (const key of Object.keys(bindings)) {\n          declars.push({\n            kind: node.kind,\n            id: cloneNode(bindings[key]),\n          });\n        }\n\n        if (declar.init) {\n          exprs.push(assignmentExpression(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if (isIfStatement(node)) {\n      const consequent = node.consequent\n        ? gatherSequenceExpressions([node.consequent], declars)\n        : buildUndefinedNode();\n      const alternate = node.alternate\n        ? gatherSequenceExpressions([node.alternate], declars)\n        : buildUndefinedNode();\n      if (!consequent || !alternate) return; // bailed\n\n      exprs.push(conditionalExpression(node.test, consequent, alternate));\n    } else if (isBlockStatement(node)) {\n      const body = gatherSequenceExpressions(node.body, declars);\n      if (!body) return; // bailed\n\n      exprs.push(body);\n    } else if (isEmptyStatement(node)) {\n      // empty statement so ensure the last item is undefined if we're last\n      // checks if emptyStatement is first\n      if (nodes.indexOf(node) === 0) {\n        ensureLastUndefined = true;\n      }\n    } else {\n      // bailed, we can't turn this statement into an expression\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return sequenceExpression(exprs);\n  }\n}\n","import toIdentifier from \"./toIdentifier.ts\";\n\nexport default function toBindingIdentifierName(name: string): string {\n  name = toIdentifier(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n\n  return name;\n}\n","import {\n  isBlockStatement,\n  isFunction,\n  isEmptyStatement,\n  isStatement,\n} from \"../validators/generated/index.ts\";\nimport {\n  returnStatement,\n  expressionStatement,\n  blockStatement,\n} from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function toBlock(\n  node: t.Statement | t.Expression,\n  parent?: t.Node,\n): t.BlockStatement {\n  if (isBlockStatement(node)) {\n    return node;\n  }\n\n  let blockNodes: t.Statement[] = [];\n\n  if (isEmptyStatement(node)) {\n    blockNodes = [];\n  } else {\n    if (!isStatement(node)) {\n      if (isFunction(parent)) {\n        node = returnStatement(node);\n      } else {\n        node = expressionStatement(node);\n      }\n    }\n\n    blockNodes = [node];\n  }\n\n  return blockStatement(blockNodes);\n}\n","import { isIdentifier } from \"../validators/generated/index.ts\";\nimport { stringLiteral } from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function toComputedKey(\n  node:\n    | t.ObjectMember\n    | t.ObjectProperty\n    | t.ClassMethod\n    | t.ClassProperty\n    | t.ClassAccessorProperty\n    | t.MemberExpression\n    | t.OptionalMemberExpression,\n  // @ts-expect-error todo(flow->ts): maybe check the type of node before accessing .key and .property\n  key: t.Expression | t.PrivateName = node.key || node.property,\n) {\n  if (!node.computed && isIdentifier(key)) key = stringLiteral(key.name);\n\n  return key;\n}\n","import {\n  isExpression,\n  isFunction,\n  isClass,\n  isExpressionStatement,\n} from \"../validators/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default toExpression as {\n  (node: t.Function): t.FunctionExpression;\n  (node: t.Class): t.ClassExpression;\n  (\n    node: t.ExpressionStatement | t.Expression | t.Class | t.Function,\n  ): t.Expression;\n};\n\nfunction toExpression(\n  node: t.ExpressionStatement | t.Expression | t.Class | t.Function,\n): t.Expression {\n  if (isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  // return unmodified node\n  // important for things like ArrowFunctions where\n  // type change from ArrowFunction to FunctionExpression\n  // produces bugs like -> `()=>a` to `function () a`\n  // without generating a BlockStatement for it\n  // ref: https://github.com/babel/babili/issues/130\n  if (isExpression(node)) {\n    return node;\n  }\n\n  // convert all classes and functions\n  // ClassDeclaration -> ClassExpression\n  // FunctionDeclaration, ObjectMethod, ClassMethod -> FunctionExpression\n  if (isClass(node)) {\n    // @ts-expect-error todo(flow->ts): avoid type unsafe mutations\n    node.type = \"ClassExpression\";\n  } else if (isFunction(node)) {\n    // @ts-expect-error todo(flow->ts): avoid type unsafe mutations\n    node.type = \"FunctionExpression\";\n  }\n\n  // if it's still not an expression\n  if (!isExpression(node)) {\n    throw new Error(`cannot turn ${node.type} to an expression`);\n  }\n\n  return node;\n}\n","import isValidIdentifier from \"../validators/isValidIdentifier.ts\";\nimport { isIdentifierChar } from \"@babel/helper-validator-identifier\";\n\nexport default function toIdentifier(input: string): string {\n  input = input + \"\";\n\n  // replace all non-valid identifiers with dashes\n  let name = \"\";\n  for (const c of input) {\n    name += isIdentifierChar(c.codePointAt(0)) ? c : \"-\";\n  }\n\n  // remove all dashes and numbers from start of name\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  // camel case\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!isValidIdentifier(name)) {\n    name = `_${name}`;\n  }\n\n  return name || \"_\";\n}\n","import {\n  isIdentifier,\n  isStringLiteral,\n} from \"../validators/generated/index.ts\";\nimport cloneNode from \"../clone/cloneNode.ts\";\nimport removePropertiesDeep from \"../modifications/removePropertiesDeep.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function toKeyAlias(\n  node: t.Method | t.Property,\n  key: t.Node = node.key,\n): string {\n  let alias;\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.kind`\n  if (node.kind === \"method\") {\n    return toKeyAlias.increment() + \"\";\n  } else if (isIdentifier(key)) {\n    alias = key.name;\n  } else if (isStringLiteral(key)) {\n    alias = JSON.stringify(key.value);\n  } else {\n    alias = JSON.stringify(removePropertiesDeep(cloneNode(key)));\n  }\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.computed`\n  if (node.computed) {\n    alias = `[${alias}]`;\n  }\n\n  // @ts-expect-error todo(flow->ts): maybe add node type check before checking `.static`\n  if (node.static) {\n    alias = `static:${alias}`;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= Number.MAX_SAFE_INTEGER) {\n    return (toKeyAlias.uid = 0);\n  } else {\n    return toKeyAlias.uid++;\n  }\n};\n","// TODO(Babel 8) Remove this file\nif (process.env.BABEL_8_BREAKING && process.env.IS_PUBLISH) {\n  throw new Error(\n    \"Internal Babel error: This file should only be loaded in Babel 7\",\n  );\n}\n\nimport gatherSequenceExpressions from \"./gatherSequenceExpressions.ts\";\nimport type * as t from \"../index.ts\";\nimport type { DeclarationInfo } from \"./gatherSequenceExpressions.ts\";\n\n/**\n * Turn an array of statement `nodes` into a `SequenceExpression`.\n *\n * Variable declarations are turned into simple assignments and their\n * declarations hoisted to the top of the current scope.\n *\n * Expression statements are just resolved to their expression.\n */\nexport default function toSequenceExpression(\n  nodes: ReadonlyArray<t.Node>,\n  scope: any,\n): t.SequenceExpression | undefined {\n  if (!nodes?.length) return;\n\n  const declars: DeclarationInfo[] = [];\n  const result = gatherSequenceExpressions(nodes, declars);\n  if (!result) return;\n\n  for (const declar of declars) {\n    scope.push(declar);\n  }\n\n  // @ts-expect-error fixme: gatherSequenceExpressions will return an Expression when there are only one element\n  return result;\n}\n","import {\n  isStatement,\n  isFunction,\n  isClass,\n  isAssignmentExpression,\n} from \"../validators/generated/index.ts\";\nimport { expressionStatement } from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default toStatement as {\n  (node: t.AssignmentExpression, ignore?: boolean): t.ExpressionStatement;\n\n  <T extends t.Statement>(node: T, ignore: false): T;\n  <T extends t.Statement>(node: T, ignore?: boolean): T | false;\n\n  (node: t.Class, ignore: false): t.ClassDeclaration;\n  (node: t.Class, ignore?: boolean): t.ClassDeclaration | false;\n\n  (node: t.Function, ignore: false): t.FunctionDeclaration;\n  (node: t.Function, ignore?: boolean): t.FunctionDeclaration | false;\n\n  (node: t.Node, ignore: false): t.Statement;\n  (node: t.Node, ignore?: boolean): t.Statement | false;\n};\n\nfunction toStatement(node: t.Node, ignore?: boolean): t.Statement | false {\n  if (isStatement(node)) {\n    return node;\n  }\n\n  let mustHaveId = false;\n  let newType;\n\n  if (isClass(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\" as const;\n  } else if (isFunction(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\" as const;\n  } else if (isAssignmentExpression(node)) {\n    return expressionStatement(node);\n  }\n\n  // @ts-expect-error todo(flow->ts): node.id might be missing\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(`cannot turn ${node.type} to a statement`);\n    }\n  }\n\n  // @ts-expect-error manipulating node.type\n  node.type = newType;\n\n  // @ts-expect-error todo(flow->ts) refactor to avoid type unsafe mutations like reassigning node type above\n  return node;\n}\n","import isValidIdentifier from \"../validators/isValidIdentifier.ts\";\nimport {\n  identifier,\n  booleanLiteral,\n  nullLiteral,\n  stringLiteral,\n  numericLiteral,\n  regExpLiteral,\n  arrayExpression,\n  objectProperty,\n  objectExpression,\n  unaryExpression,\n  binaryExpression,\n} from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default valueToNode as {\n  (value: undefined): t.Identifier; // TODO: This should return \"void 0\"\n  (value: boolean): t.BooleanLiteral;\n  (value: null): t.NullLiteral;\n  (value: string): t.StringLiteral;\n  // Infinities and NaN need to use a BinaryExpression; negative values must be wrapped in UnaryExpression\n  (value: number): t.NumericLiteral | t.BinaryExpression | t.UnaryExpression;\n  (value: RegExp): t.RegExpLiteral;\n  (value: ReadonlyArray<unknown>): t.ArrayExpression;\n\n  // this throws with objects that are not plain objects,\n  // or if there are non-valueToNode-able values\n  (value: object): t.ObjectExpression;\n\n  (value: unknown): t.Expression;\n};\n\n// @ts-expect-error: Object.prototype.toString must return a string\nconst objectToString: (value: unknown) => string = Function.call.bind(\n  Object.prototype.toString,\n);\n\nfunction isRegExp(value: unknown): value is RegExp {\n  return objectToString(value) === \"[object RegExp]\";\n}\n\nfunction isPlainObject(value: unknown): value is object {\n  if (\n    typeof value !== \"object\" ||\n    value === null ||\n    Object.prototype.toString.call(value) !== \"[object Object]\"\n  ) {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(value);\n  // Object.prototype's __proto__ is null. Every other class's __proto__.__proto__ is\n  // not null by default. We cannot check if proto === Object.prototype because it\n  // could come from another realm.\n  return proto === null || Object.getPrototypeOf(proto) === null;\n}\n\nfunction valueToNode(value: unknown): t.Expression {\n  // undefined\n  if (value === undefined) {\n    return identifier(\"undefined\");\n  }\n\n  // boolean\n  if (value === true || value === false) {\n    return booleanLiteral(value);\n  }\n\n  // null\n  if (value === null) {\n    return nullLiteral();\n  }\n\n  // strings\n  if (typeof value === \"string\") {\n    return stringLiteral(value);\n  }\n\n  // numbers\n  if (typeof value === \"number\") {\n    let result;\n    if (Number.isFinite(value)) {\n      result = numericLiteral(Math.abs(value));\n    } else {\n      let numerator;\n      if (Number.isNaN(value)) {\n        // NaN\n        numerator = numericLiteral(0);\n      } else {\n        // Infinity / -Infinity\n        numerator = numericLiteral(1);\n      }\n\n      result = binaryExpression(\"/\", numerator, numericLiteral(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = unaryExpression(\"-\", result);\n    }\n\n    return result;\n  }\n\n  // regexes\n  if (isRegExp(value)) {\n    const pattern = value.source;\n    const flags = /\\/([a-z]*)$/.exec(value.toString())[1];\n    return regExpLiteral(pattern, flags);\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    return arrayExpression(value.map(valueToNode));\n  }\n\n  // object\n  if (isPlainObject(value)) {\n    const props = [];\n    for (const key of Object.keys(value)) {\n      let nodeKey;\n      if (isValidIdentifier(key)) {\n        nodeKey = identifier(key);\n      } else {\n        nodeKey = stringLiteral(key);\n      }\n      props.push(\n        objectProperty(\n          nodeKey,\n          valueToNode(\n            // @ts-expect-error key must present in value\n            value[key],\n          ),\n        ),\n      );\n    }\n    return objectExpression(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}\n","import is from \"../validators/is.ts\";\nimport isValidIdentifier from \"../validators/isValidIdentifier.ts\";\nimport { isKeyword, isReservedWord } from \"@babel/helper-validator-identifier\";\nimport type * as t from \"../index.ts\";\nimport { readStringContents } from \"@babel/helper-string-parser\";\n\nimport {\n  BINARY_OPERATORS,\n  LOGICAL_OPERATORS,\n  ASSIGNMENT_OPERATORS,\n  UNARY_OPERATORS,\n  UPDATE_OPERATORS,\n} from \"../constants/index.ts\";\n\nimport {\n  defineAliasedType,\n  assertShape,\n  assertOptionalChainStart,\n  assertValueType,\n  assertNodeType,\n  assertNodeOrValueType,\n  assertEach,\n  chain,\n  assertOneOf,\n  validateOptional,\n  type Validator,\n  arrayOf,\n  arrayOfType,\n  validateArrayOfType,\n  validateType,\n} from \"./utils.ts\";\n\nconst defineType = defineAliasedType(\"Standardized\");\n\ndefineType(\"ArrayExpression\", {\n  fields: {\n    elements: {\n      validate: arrayOf(\n        assertNodeOrValueType(\"null\", \"Expression\", \"SpreadElement\"),\n      ),\n      default:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? []\n          : undefined,\n    },\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"AssignmentExpression\", {\n  fields: {\n    operator: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertValueType(\"string\")\n          : Object.assign(\n              (function () {\n                const identifier = assertOneOf(...ASSIGNMENT_OPERATORS);\n                const pattern = assertOneOf(\"=\");\n\n                return function (node: t.AssignmentExpression, key, val) {\n                  const validator = is(\"Pattern\", node.left)\n                    ? pattern\n                    : identifier;\n                  validator(node, key, val);\n                } as Validator;\n              })(),\n              { type: \"string\" },\n            ),\n    },\n    left: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertNodeType(\"LVal\", \"OptionalMemberExpression\")\n          : assertNodeType(\n              \"Identifier\",\n              \"MemberExpression\",\n              \"OptionalMemberExpression\",\n              \"ArrayPattern\",\n              \"ObjectPattern\",\n              \"TSAsExpression\",\n              \"TSSatisfiesExpression\",\n              \"TSTypeAssertion\",\n              \"TSNonNullExpression\",\n            ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"BinaryExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  fields: {\n    operator: {\n      validate: assertOneOf(...BINARY_OPERATORS),\n    },\n    left: {\n      validate: (function () {\n        const expression = assertNodeType(\"Expression\");\n        const inOp = assertNodeType(\"Expression\", \"PrivateName\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.BinaryExpression, key, val) {\n            const validator = node.operator === \"in\" ? inOp : expression;\n            validator(node, key, val);\n          } as Validator,\n          // todo(ts): can be discriminated union by `operator` property\n          { oneOfNodeTypes: [\"Expression\", \"PrivateName\"] },\n        );\n        return validator;\n      })(),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n});\n\ndefineType(\"InterpreterDirective\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"Directive\", {\n  visitor: [\"value\"],\n  fields: {\n    value: {\n      validate: assertNodeType(\"DirectiveLiteral\"),\n    },\n  },\n});\n\ndefineType(\"DirectiveLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"BlockStatement\", {\n  builder: [\"body\", \"directives\"],\n  visitor: [\"directives\", \"body\"],\n  fields: {\n    directives: {\n      validate: arrayOfType(\"Directive\"),\n      default: [],\n    },\n    body: validateArrayOfType(\"Statement\"),\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"Statement\"],\n});\n\ndefineType(\"BreakStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n});\n\ndefineType(\"CallExpression\", {\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"callee\", \"arguments\", \"typeArguments\"]\n    : [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\", \"Super\", \"V8IntrinsicIdentifier\"),\n    },\n    arguments: validateArrayOfType(\n      \"Expression\",\n      \"SpreadElement\",\n      \"ArgumentPlaceholder\",\n    ),\n    typeArguments: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterInstantiation\",\n            \"TSTypeParameterInstantiation\",\n          )\n        : assertNodeType(\"TypeParameterInstantiation\"),\n      optional: true,\n    },\n    ...(process.env.BABEL_8_BREAKING\n      ? {}\n      : {\n          optional: {\n            validate: assertValueType(\"boolean\"),\n            optional: true,\n          },\n          typeParameters: {\n            validate: assertNodeType(\"TSTypeParameterInstantiation\"),\n            optional: true,\n          },\n        }),\n    ...(process.env.BABEL_TYPES_8_BREAKING\n      ? {}\n      : {\n          optional: {\n            validate: assertValueType(\"boolean\"),\n            optional: true,\n          },\n        }),\n  },\n});\n\ndefineType(\"CatchClause\", {\n  visitor: [\"param\", \"body\"],\n  fields: {\n    param: {\n      validate: assertNodeType(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n  aliases: [\"Scopable\", \"BlockParent\"],\n});\n\ndefineType(\"ConditionalExpression\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    consequent: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    alternate: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\", \"Conditional\"],\n});\n\ndefineType(\"ContinueStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n});\n\ndefineType(\"DebuggerStatement\", {\n  aliases: [\"Statement\"],\n});\n\ndefineType(\"DoWhileStatement\", {\n  builder: [\"test\", \"body\"],\n  visitor: [\"body\", \"test\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n});\n\ndefineType(\"EmptyStatement\", {\n  aliases: [\"Statement\"],\n});\n\ndefineType(\"ExpressionStatement\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Statement\", \"ExpressionWrapper\"],\n});\n\ndefineType(\"File\", {\n  builder: [\"program\", \"comments\", \"tokens\"],\n  visitor: [\"program\"],\n  fields: {\n    program: {\n      validate: assertNodeType(\"Program\"),\n    },\n    comments: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? Object.assign(() => {}, {\n              each: { oneOfNodeTypes: [\"CommentBlock\", \"CommentLine\"] },\n            })\n          : assertEach(assertNodeType(\"CommentBlock\", \"CommentLine\")),\n      optional: true,\n    },\n    tokens: {\n      // todo(ts): add Token type\n      validate: assertEach(Object.assign(() => {}, { type: \"any\" })),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ForInStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\n    \"Scopable\",\n    \"Statement\",\n    \"For\",\n    \"BlockParent\",\n    \"Loop\",\n    \"ForXStatement\",\n  ],\n  fields: {\n    left: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertNodeType(\"VariableDeclaration\", \"LVal\")\n          : assertNodeType(\n              \"VariableDeclaration\",\n              \"Identifier\",\n              \"MemberExpression\",\n              \"ArrayPattern\",\n              \"ObjectPattern\",\n              \"TSAsExpression\",\n              \"TSSatisfiesExpression\",\n              \"TSTypeAssertion\",\n              \"TSNonNullExpression\",\n            ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"ForStatement\", {\n  visitor: [\"init\", \"test\", \"update\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\"],\n  fields: {\n    init: {\n      validate: assertNodeType(\"VariableDeclaration\", \"Expression\"),\n      optional: true,\n    },\n    test: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    update: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\nexport const functionCommon = () => ({\n  params: validateArrayOfType(\"Identifier\", \"Pattern\", \"RestElement\"),\n  generator: {\n    default: false,\n  },\n  async: {\n    default: false,\n  },\n});\n\nexport const functionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n      : assertNodeType(\n          \"TypeAnnotation\",\n          \"TSTypeAnnotation\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n  typeParameters: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeParameterDeclaration\", \"TSTypeParameterDeclaration\")\n      : assertNodeType(\n          \"TypeParameterDeclaration\",\n          \"TSTypeParameterDeclaration\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n});\n\nexport const functionDeclarationCommon = () => ({\n  ...functionCommon(),\n  declare: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  id: {\n    validate: assertNodeType(\"Identifier\"),\n    optional: true, // May be null for `export default function`\n  },\n});\n\ndefineType(\"FunctionDeclaration\", {\n  builder: [\"id\", \"params\", \"body\", \"generator\", \"async\"],\n  visitor: [\n    \"id\",\n    \"typeParameters\",\n    \"params\",\n    \"predicate\",\n    \"returnType\",\n    \"body\",\n  ],\n  fields: {\n    ...functionDeclarationCommon(),\n    ...functionTypeAnnotationCommon(),\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Statement\",\n    \"Pureish\",\n    \"Declaration\",\n  ],\n  validate:\n    !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? undefined\n      : (function () {\n          const identifier = assertNodeType(\"Identifier\");\n\n          return function (parent, key, node) {\n            if (!is(\"ExportDefaultDeclaration\", parent)) {\n              identifier(node, \"id\", node.id);\n            }\n          };\n        })(),\n});\n\ndefineType(\"FunctionExpression\", {\n  inherits: \"FunctionDeclaration\",\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Expression\",\n    \"Pureish\",\n  ],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n});\n\nexport const patternLikeCommon = () => ({\n  typeAnnotation: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n      : assertNodeType(\n          \"TypeAnnotation\",\n          \"TSTypeAnnotation\",\n          // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n          \"Noop\",\n        ),\n    optional: true,\n  },\n  optional: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  decorators: {\n    validate: arrayOfType(\"Decorator\"),\n    optional: true,\n  },\n});\n\ndefineType(\"Identifier\", {\n  builder: [\"name\"],\n  visitor: [\"typeAnnotation\", \"decorators\" /* for legacy param decorators */],\n  aliases: [\"Expression\", \"PatternLike\", \"LVal\", \"TSEntityName\"],\n  fields: {\n    ...patternLikeCommon(),\n    name: {\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertValueType(\"string\"),\n              Object.assign(\n                function (node, key, val) {\n                  if (!isValidIdentifier(val, false)) {\n                    throw new TypeError(\n                      `\"${val}\" is not a valid identifier name`,\n                    );\n                  }\n                } as Validator,\n                { type: \"string\" },\n              ),\n            )\n          : assertValueType(\"string\"),\n    },\n  },\n  validate:\n    process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n      ? function (parent, key, node) {\n          const match = /\\.(\\w+)$/.exec(key);\n          if (!match) return;\n\n          const [, parentKey] = match;\n          const nonComp = { computed: false };\n\n          // We can't check if `parent.property === node`, because nodes are validated\n          // before replacing them in the AST.\n          if (parentKey === \"property\") {\n            if (is(\"MemberExpression\", parent, nonComp)) return;\n            if (is(\"OptionalMemberExpression\", parent, nonComp)) return;\n          } else if (parentKey === \"key\") {\n            if (is(\"Property\", parent, nonComp)) return;\n            if (is(\"Method\", parent, nonComp)) return;\n          } else if (parentKey === \"exported\") {\n            if (is(\"ExportSpecifier\", parent)) return;\n          } else if (parentKey === \"imported\") {\n            if (is(\"ImportSpecifier\", parent, { imported: node })) return;\n          } else if (parentKey === \"meta\") {\n            if (is(\"MetaProperty\", parent, { meta: node })) return;\n          }\n\n          if (\n            // Ideally we should call isStrictReservedWord if this node is a descendant\n            // of a block in strict mode. Also, we should pass the inModule option so\n            // we can disable \"await\" in module.\n            (isKeyword(node.name) || isReservedWord(node.name, false)) &&\n            // Even if \"this\" is a keyword, we are using the Identifier\n            // node to represent it.\n            node.name !== \"this\"\n          ) {\n            throw new TypeError(`\"${node.name}\" is not a valid identifier`);\n          }\n        }\n      : undefined,\n});\n\ndefineType(\"IfStatement\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  aliases: [\"Statement\", \"Conditional\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    consequent: {\n      validate: assertNodeType(\"Statement\"),\n    },\n    alternate: {\n      optional: true,\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"LabeledStatement\", {\n  visitor: [\"label\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    label: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"StringLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"NumericLiteral\", {\n  builder: [\"value\"],\n  deprecatedAlias: \"NumberLiteral\",\n  fields: {\n    value: {\n      validate: chain(\n        assertValueType(\"number\"),\n        Object.assign(\n          function (node, key, val) {\n            if (1 / val < 0 || !Number.isFinite(val)) {\n              const error = new Error(\n                \"NumericLiterals must be non-negative finite numbers. \" +\n                  `You can use t.valueToNode(${val}) instead.`,\n              );\n              if (process.env.BABEL_8_BREAKING) {\n                // TODO(@nicolo-ribaudo) Fix regenerator to not pass negative\n                // numbers here.\n                if (!IS_STANDALONE) {\n                  if (!new Error().stack.includes(\"regenerator\")) {\n                    throw error;\n                  }\n                }\n              } else {\n                // TODO: Enable this warning once regenerator is fixed.\n                // https://github.com/facebook/regenerator/pull/680\n                // console.warn(error);\n              }\n            }\n          } satisfies Validator,\n          { type: \"number\" },\n        ),\n      ),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"NullLiteral\", {\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"BooleanLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"boolean\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"RegExpLiteral\", {\n  builder: [\"pattern\", \"flags\"],\n  deprecatedAlias: \"RegexLiteral\",\n  aliases: [\"Expression\", \"Pureish\", \"Literal\"],\n  fields: {\n    pattern: {\n      validate: assertValueType(\"string\"),\n    },\n    flags: {\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertValueType(\"string\"),\n              Object.assign(\n                function (node, key, val) {\n                  const invalid = /[^gimsuy]/.exec(val);\n                  if (invalid) {\n                    throw new TypeError(\n                      `\"${invalid[0]}\" is not a valid RegExp flag`,\n                    );\n                  }\n                } as Validator,\n                { type: \"string\" },\n              ),\n            )\n          : assertValueType(\"string\"),\n      default: \"\",\n    },\n  },\n});\n\ndefineType(\"LogicalExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n  fields: {\n    operator: {\n      validate: assertOneOf(...LOGICAL_OPERATORS),\n    },\n    left: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"MemberExpression\", {\n  builder: [\n    \"object\",\n    \"property\",\n    \"computed\",\n    ...(!process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? [\"optional\"]\n      : []),\n  ],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\", \"LVal\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\", \"Super\"),\n    },\n    property: {\n      validate: (function () {\n        const normal = assertNodeType(\"Identifier\", \"PrivateName\");\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = function (\n          node: t.MemberExpression,\n          key,\n          val,\n        ) {\n          const validator: Validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n        // @ts-expect-error todo(ts): can be discriminated union by `computed` property\n        validator.oneOfNodeTypes = [\"Expression\", \"Identifier\", \"PrivateName\"];\n        return validator;\n      })(),\n    },\n    computed: {\n      default: false,\n    },\n    ...(!process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? {\n          optional: {\n            validate: assertValueType(\"boolean\"),\n            optional: true,\n          },\n        }\n      : {}),\n  },\n});\n\ndefineType(\"NewExpression\", { inherits: \"CallExpression\" });\n\ndefineType(\"Program\", {\n  // Note: We explicitly leave 'interpreter' out here because it is\n  // conceptually comment-like, and Babel does not traverse comments either.\n  visitor: [\"directives\", \"body\"],\n  builder: [\"body\", \"directives\", \"sourceType\", \"interpreter\"],\n  fields: {\n    sourceType: {\n      validate: assertOneOf(\"script\", \"module\"),\n      default: \"script\",\n    },\n    interpreter: {\n      validate: assertNodeType(\"InterpreterDirective\"),\n      default: null,\n      optional: true,\n    },\n    directives: {\n      validate: arrayOfType(\"Directive\"),\n      default: [],\n    },\n    body: validateArrayOfType(\"Statement\"),\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\"],\n});\n\ndefineType(\"ObjectExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: validateArrayOfType(\n      \"ObjectMethod\",\n      \"ObjectProperty\",\n      \"SpreadElement\",\n    ),\n  },\n});\n\ndefineType(\"ObjectMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\", \"generator\", \"async\"],\n  visitor: [\n    \"decorators\",\n    \"key\",\n    \"typeParameters\",\n    \"params\",\n    \"returnType\",\n    \"body\",\n  ],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    kind: {\n      validate: assertOneOf(\"method\", \"get\", \"set\"),\n      ...(!process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n        ? { default: \"method\" }\n        : {}),\n    },\n    computed: {\n      default: false,\n    },\n    key: {\n      validate: (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = function (node: t.ObjectMethod, key, val) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n        // @ts-expect-error todo(ts): can be discriminated union by `computed` property\n        validator.oneOfNodeTypes = [\n          \"Expression\",\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        ];\n        return validator;\n      })(),\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n  aliases: [\n    \"UserWhitespacable\",\n    \"Function\",\n    \"Scopable\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Method\",\n    \"ObjectMember\",\n  ],\n});\n\ndefineType(\"ObjectProperty\", {\n  builder: [\n    \"key\",\n    \"value\",\n    \"computed\",\n    \"shorthand\",\n    ...(!process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? [\"decorators\"]\n      : []),\n  ],\n  fields: {\n    computed: {\n      default: false,\n    },\n    key: {\n      validate: (function () {\n        const normal = process.env.BABEL_8_BREAKING\n          ? assertNodeType(\n              \"Identifier\",\n              \"StringLiteral\",\n              \"NumericLiteral\",\n              \"BigIntLiteral\",\n              \"PrivateName\",\n            )\n          : assertNodeType(\n              \"Identifier\",\n              \"StringLiteral\",\n              \"NumericLiteral\",\n              \"BigIntLiteral\",\n              // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n              \"DecimalLiteral\",\n              \"PrivateName\",\n            );\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.ObjectProperty, key, val) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          } as Validator,\n          {\n            // todo(ts): can be discriminated union by `computed` property\n            oneOfNodeTypes: process.env.BABEL_8_BREAKING\n              ? [\n                  \"Expression\",\n                  \"Identifier\",\n                  \"StringLiteral\",\n                  \"NumericLiteral\",\n                  \"BigIntLiteral\",\n                  \"PrivateName\",\n                ]\n              : [\n                  \"Expression\",\n                  \"Identifier\",\n                  \"StringLiteral\",\n                  \"NumericLiteral\",\n                  \"BigIntLiteral\",\n                  \"DecimalLiteral\",\n                  \"PrivateName\",\n                ],\n          },\n        );\n        return validator;\n      })(),\n    },\n    value: {\n      // Value may be PatternLike if this is an AssignmentProperty\n      // https://github.com/babel/babylon/issues/434\n      validate: assertNodeType(\"Expression\", \"PatternLike\"),\n    },\n    shorthand: {\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertValueType(\"boolean\"),\n              Object.assign(\n                function (node: t.ObjectProperty, key, shorthand) {\n                  if (!shorthand) return;\n\n                  if (node.computed) {\n                    throw new TypeError(\n                      \"Property shorthand of ObjectProperty cannot be true if computed is true\",\n                    );\n                  }\n\n                  if (!is(\"Identifier\", node.key)) {\n                    throw new TypeError(\n                      \"Property shorthand of ObjectProperty cannot be true if key is not an Identifier\",\n                    );\n                  }\n                } as Validator,\n                { type: \"boolean\" },\n              ),\n            )\n          : assertValueType(\"boolean\"),\n      default: false,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n  },\n  visitor: [\"key\", \"value\", \"decorators\"],\n  aliases: [\"UserWhitespacable\", \"Property\", \"ObjectMember\"],\n  validate:\n    !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? undefined\n      : (function () {\n          const pattern = assertNodeType(\n            \"Identifier\",\n            \"Pattern\",\n            \"TSAsExpression\",\n            \"TSSatisfiesExpression\",\n            \"TSNonNullExpression\",\n            \"TSTypeAssertion\",\n          );\n          const expression = assertNodeType(\"Expression\");\n\n          return function (parent, key, node) {\n            const validator = is(\"ObjectPattern\", parent)\n              ? pattern\n              : expression;\n            validator(node, \"value\", node.value);\n          };\n        })(),\n});\n\ndefineType(\"RestElement\", {\n  visitor: [\"argument\", \"typeAnnotation\"],\n  builder: [\"argument\"],\n  aliases: [\"LVal\", \"PatternLike\"],\n  deprecatedAlias: \"RestProperty\",\n  fields: {\n    ...patternLikeCommon(),\n    argument: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertNodeType(\"LVal\")\n          : assertNodeType(\n              \"Identifier\",\n              \"ArrayPattern\",\n              \"ObjectPattern\",\n              \"MemberExpression\",\n              \"TSAsExpression\",\n              \"TSSatisfiesExpression\",\n              \"TSTypeAssertion\",\n              \"TSNonNullExpression\",\n            ),\n    },\n  },\n  validate:\n    process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n      ? function (parent: t.ArrayPattern | t.ObjectPattern, key) {\n          const match = /(\\w+)\\[(\\d+)\\]/.exec(key);\n          if (!match) throw new Error(\"Internal Babel error: malformed key.\");\n\n          const [, listKey, index] = match as unknown as [\n            string,\n            keyof typeof parent,\n            string,\n          ];\n          if ((parent[listKey] as t.Node[]).length > +index + 1) {\n            throw new TypeError(\n              `RestElement must be last element of ${listKey}`,\n            );\n          }\n        }\n      : undefined,\n});\n\ndefineType(\"ReturnStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"SequenceExpression\", {\n  visitor: [\"expressions\"],\n  fields: {\n    expressions: validateArrayOfType(\"Expression\"),\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"ParenthesizedExpression\", {\n  visitor: [\"expression\"],\n  aliases: [\"Expression\", \"ExpressionWrapper\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"SwitchCase\", {\n  visitor: [\"test\", \"consequent\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    consequent: validateArrayOfType(\"Statement\"),\n  },\n});\n\ndefineType(\"SwitchStatement\", {\n  visitor: [\"discriminant\", \"cases\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Scopable\"],\n  fields: {\n    discriminant: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    cases: validateArrayOfType(\"SwitchCase\"),\n  },\n});\n\ndefineType(\"ThisExpression\", {\n  aliases: process.env.BABEL_8_BREAKING\n    ? [\"Expression\", \"TSEntityName\"]\n    : [\"Expression\"],\n});\n\ndefineType(\"ThrowStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"TryStatement\", {\n  visitor: [\"block\", \"handler\", \"finalizer\"],\n  aliases: [\"Statement\"],\n  fields: {\n    block: {\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertNodeType(\"BlockStatement\"),\n              Object.assign(\n                function (node: t.TryStatement) {\n                  // This validator isn't put at the top level because we can run it\n                  // even if this node doesn't have a parent.\n\n                  if (!node.handler && !node.finalizer) {\n                    throw new TypeError(\n                      \"TryStatement expects either a handler or finalizer, or both\",\n                    );\n                  }\n                } as Validator,\n                { oneOfNodeTypes: [\"BlockStatement\"] },\n              ),\n            )\n          : assertNodeType(\"BlockStatement\"),\n    },\n    handler: {\n      optional: true,\n      validate: assertNodeType(\"CatchClause\"),\n    },\n    finalizer: {\n      optional: true,\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"UnaryExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: true,\n    },\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    operator: {\n      validate: assertOneOf(...UNARY_OPERATORS),\n    },\n  },\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\", \"Expression\"],\n});\n\ndefineType(\"UpdateExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: false,\n    },\n    argument: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertNodeType(\"Expression\")\n          : assertNodeType(\"Identifier\", \"MemberExpression\"),\n    },\n    operator: {\n      validate: assertOneOf(...UPDATE_OPERATORS),\n    },\n  },\n  visitor: [\"argument\"],\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"VariableDeclaration\", {\n  builder: [\"kind\", \"declarations\"],\n  visitor: [\"declarations\"],\n  aliases: [\"Statement\", \"Declaration\"],\n  fields: {\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    kind: {\n      validate: assertOneOf(\n        \"var\",\n        \"let\",\n        \"const\",\n        // https://github.com/tc39/proposal-explicit-resource-management\n        \"using\",\n        // https://github.com/tc39/proposal-async-explicit-resource-management\n        \"await using\",\n      ),\n    },\n    declarations: validateArrayOfType(\"VariableDeclarator\"),\n  },\n  validate:\n    process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n      ? (() => {\n          const withoutInit = assertNodeType(\"Identifier\");\n\n          return function (parent, key, node: t.VariableDeclaration) {\n            if (is(\"ForXStatement\", parent, { left: node })) {\n              if (node.declarations.length !== 1) {\n                throw new TypeError(\n                  `Exactly one VariableDeclarator is required in the VariableDeclaration of a ${parent.type}`,\n                );\n              }\n            } else {\n              node.declarations.forEach(decl => {\n                if (!decl.init) withoutInit(decl, \"id\", decl.id);\n              });\n            }\n          };\n        })()\n      : undefined,\n});\n\ndefineType(\"VariableDeclarator\", {\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertNodeType(\"LVal\")\n          : assertNodeType(\"Identifier\", \"ArrayPattern\", \"ObjectPattern\"),\n    },\n    definite: {\n      optional: true,\n      validate: assertValueType(\"boolean\"),\n    },\n    init: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"WhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n  fields: {\n    test: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\ndefineType(\"WithStatement\", {\n  visitor: [\"object\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n  },\n});\n\n// --- ES2015 ---\ndefineType(\"AssignmentPattern\", {\n  visitor: [\"left\", \"right\", \"decorators\" /* for legacy param decorators */],\n  builder: [\"left\", \"right\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    left: {\n      validate: assertNodeType(\n        \"Identifier\",\n        \"ObjectPattern\",\n        \"ArrayPattern\",\n        \"MemberExpression\",\n        \"TSAsExpression\",\n        \"TSSatisfiesExpression\",\n        \"TSTypeAssertion\",\n        \"TSNonNullExpression\",\n      ),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    // For TypeScript\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ArrayPattern\", {\n  visitor: [\"elements\", \"typeAnnotation\"],\n  builder: [\"elements\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    elements: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeOrValueType(\"null\", \"PatternLike\", \"LVal\")),\n      ),\n    },\n  },\n});\n\ndefineType(\"ArrowFunctionExpression\", {\n  builder: [\"params\", \"body\", \"async\"],\n  visitor: [\"typeParameters\", \"params\", \"predicate\", \"returnType\", \"body\"],\n  aliases: [\n    \"Scopable\",\n    \"Function\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Expression\",\n    \"Pureish\",\n  ],\n  fields: {\n    ...functionCommon(),\n    ...functionTypeAnnotationCommon(),\n    expression: {\n      // https://github.com/babel/babylon/issues/505\n      validate: assertValueType(\"boolean\"),\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\", \"Expression\"),\n    },\n    predicate: {\n      validate: assertNodeType(\"DeclaredPredicate\", \"InferredPredicate\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\n      \"ClassMethod\",\n      \"ClassPrivateMethod\",\n      \"ClassProperty\",\n      \"ClassPrivateProperty\",\n      \"ClassAccessorProperty\",\n      \"TSDeclareMethod\",\n      \"TSIndexSignature\",\n      \"StaticBlock\",\n    ),\n  },\n});\n\ndefineType(\"ClassExpression\", {\n  builder: [\"id\", \"superClass\", \"body\", \"decorators\"],\n  visitor: [\n    \"decorators\",\n    \"id\",\n    \"typeParameters\",\n    \"superClass\",\n    process.env.BABEL_8_BREAKING ? \"superTypeArguments\" : \"superTypeParameters\",\n    \"mixins\",\n    \"implements\",\n    \"body\",\n  ],\n  aliases: [\"Scopable\", \"Class\", \"Expression\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      optional: true,\n    },\n    typeParameters: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n          )\n        : assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"ClassBody\"),\n    },\n    superClass: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n    [process.env.BABEL_8_BREAKING\n      ? \"superTypeArguments\"\n      : \"superTypeParameters\"]: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n    implements: {\n      validate: arrayOfType(\n        // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        process.env.BABEL_8_BREAKING\n          ? \"TSClassImplements\"\n          : \"TSExpressionWithTypeArguments\",\n        \"ClassImplements\",\n      ),\n      optional: true,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n    mixins: {\n      validate: assertNodeType(\"InterfaceExtends\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassDeclaration\", {\n  inherits: \"ClassExpression\",\n  aliases: [\"Scopable\", \"Class\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n      // The id may be omitted if this is the child of an\n      // ExportDefaultDeclaration.\n      optional: true,\n    },\n    typeParameters: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n          )\n        : assertNodeType(\n            \"TypeParameterDeclaration\",\n            \"TSTypeParameterDeclaration\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    body: {\n      validate: assertNodeType(\"ClassBody\"),\n    },\n    superClass: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n    [process.env.BABEL_8_BREAKING\n      ? \"superTypeArguments\"\n      : \"superTypeParameters\"]: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n    implements: {\n      validate: arrayOfType(\n        // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        process.env.BABEL_8_BREAKING\n          ? \"TSClassImplements\"\n          : \"TSExpressionWithTypeArguments\",\n        \"ClassImplements\",\n      ),\n      optional: true,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n    mixins: {\n      validate: assertNodeType(\"InterfaceExtends\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    abstract: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n  },\n  validate:\n    !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? undefined\n      : (function () {\n          const identifier = assertNodeType(\"Identifier\");\n          return function (parent, key, node) {\n            if (!is(\"ExportDefaultDeclaration\", parent)) {\n              identifier(node, \"id\", node.id);\n            }\n          };\n        })(),\n});\n\nexport const importAttributes = {\n  attributes: {\n    optional: true,\n    validate: arrayOfType(\"ImportAttribute\"),\n  },\n  assertions: {\n    deprecated: true,\n    optional: true,\n    validate: arrayOfType(\"ImportAttribute\"),\n  },\n};\n\ndefineType(\"ExportAllDeclaration\", {\n  builder: [\"source\"],\n  visitor: [\"source\", \"attributes\", \"assertions\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ImportOrExportDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n    ...importAttributes,\n  },\n});\n\ndefineType(\"ExportDefaultDeclaration\", {\n  visitor: [\"declaration\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ImportOrExportDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    declaration: validateType(\n      \"TSDeclareFunction\",\n      \"FunctionDeclaration\",\n      \"ClassDeclaration\",\n      \"Expression\",\n    ),\n    exportKind: validateOptional(assertOneOf(\"value\")),\n  },\n});\n\ndefineType(\"ExportNamedDeclaration\", {\n  builder: [\"declaration\", \"specifiers\", \"source\"],\n  visitor: process.env\n    ? [\"declaration\", \"specifiers\", \"source\", \"attributes\"]\n    : [\"declaration\", \"specifiers\", \"source\", \"attributes\", \"assertions\"],\n  aliases: [\n    \"Statement\",\n    \"Declaration\",\n    \"ImportOrExportDeclaration\",\n    \"ExportDeclaration\",\n  ],\n  fields: {\n    declaration: {\n      optional: true,\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertNodeType(\"Declaration\"),\n              Object.assign(\n                function (node: t.ExportNamedDeclaration, key, val) {\n                  // This validator isn't put at the top level because we can run it\n                  // even if this node doesn't have a parent.\n\n                  if (val && node.specifiers.length) {\n                    throw new TypeError(\n                      \"Only declaration or specifiers is allowed on ExportNamedDeclaration\",\n                    );\n                  }\n\n                  // This validator isn't put at the top level because we can run it\n                  // even if this node doesn't have a parent.\n\n                  if (val && node.source) {\n                    throw new TypeError(\n                      \"Cannot export a declaration from a source\",\n                    );\n                  }\n                } as Validator,\n                { oneOfNodeTypes: [\"Declaration\"] },\n              ),\n            )\n          : assertNodeType(\"Declaration\"),\n    },\n    ...importAttributes,\n    specifiers: {\n      default: [],\n      validate: arrayOf(\n        (function () {\n          const sourced = assertNodeType(\n            \"ExportSpecifier\",\n            \"ExportDefaultSpecifier\",\n            \"ExportNamespaceSpecifier\",\n          );\n          const sourceless = assertNodeType(\"ExportSpecifier\");\n\n          if (\n            !process.env.BABEL_8_BREAKING &&\n            !process.env.BABEL_TYPES_8_BREAKING\n          )\n            return sourced;\n\n          return Object.assign(\n            function (node: t.ExportNamedDeclaration, key, val) {\n              const validator = node.source ? sourced : sourceless;\n              validator(node, key, val);\n            } as Validator,\n            {\n              oneOfNodeTypes: [\n                \"ExportSpecifier\",\n                \"ExportDefaultSpecifier\",\n                \"ExportNamespaceSpecifier\",\n              ],\n            },\n          );\n        })(),\n      ),\n    },\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n      optional: true,\n    },\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n  },\n});\n\ndefineType(\"ExportSpecifier\", {\n  visitor: [\"local\", \"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    exported: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    exportKind: {\n      // And TypeScript's \"export { type foo } from\"\n      validate: assertOneOf(\"type\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ForOfStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  builder: [\"left\", \"right\", \"body\", \"await\"],\n  aliases: [\n    \"Scopable\",\n    \"Statement\",\n    \"For\",\n    \"BlockParent\",\n    \"Loop\",\n    \"ForXStatement\",\n  ],\n  fields: {\n    left: {\n      validate: (function () {\n        if (\n          !process.env.BABEL_8_BREAKING &&\n          !process.env.BABEL_TYPES_8_BREAKING\n        ) {\n          return assertNodeType(\"VariableDeclaration\", \"LVal\");\n        }\n\n        const declaration = assertNodeType(\"VariableDeclaration\");\n        const lval = assertNodeType(\n          \"Identifier\",\n          \"MemberExpression\",\n          \"ArrayPattern\",\n          \"ObjectPattern\",\n          \"TSAsExpression\",\n          \"TSSatisfiesExpression\",\n          \"TSTypeAssertion\",\n          \"TSNonNullExpression\",\n        );\n\n        return Object.assign(\n          function (node, key, val) {\n            if (is(\"VariableDeclaration\", val)) {\n              declaration(node, key, val);\n            } else {\n              lval(node, key, val);\n            }\n          } as Validator,\n          {\n            oneOfNodeTypes: [\n              \"VariableDeclaration\",\n              \"Identifier\",\n              \"MemberExpression\",\n              \"ArrayPattern\",\n              \"ObjectPattern\",\n              \"TSAsExpression\",\n              \"TSSatisfiesExpression\",\n              \"TSTypeAssertion\",\n              \"TSNonNullExpression\",\n            ],\n          },\n        );\n      })(),\n    },\n    right: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    body: {\n      validate: assertNodeType(\"Statement\"),\n    },\n    await: {\n      default: false,\n    },\n  },\n});\n\ndefineType(\"ImportDeclaration\", {\n  builder: [\"specifiers\", \"source\"],\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"specifiers\", \"source\", \"attributes\"]\n    : [\"specifiers\", \"source\", \"attributes\", \"assertions\"],\n  aliases: [\"Statement\", \"Declaration\", \"ImportOrExportDeclaration\"],\n  fields: {\n    ...importAttributes,\n    module: {\n      optional: true,\n      validate: assertValueType(\"boolean\"),\n    },\n    phase: {\n      default: null,\n      validate: assertOneOf(\"source\", \"defer\"),\n    },\n    specifiers: validateArrayOfType(\n      \"ImportSpecifier\",\n      \"ImportDefaultSpecifier\",\n      \"ImportNamespaceSpecifier\",\n    ),\n    source: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n    importKind: {\n      // Handle TypeScript/Flowtype's extension \"import type foo from\"\n      // TypeScript doesn't support typeof\n      validate: assertOneOf(\"type\", \"typeof\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ImportDefaultSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"ImportNamespaceSpecifier\", {\n  visitor: [\"local\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"ImportSpecifier\", {\n  visitor: [\"imported\", \"local\"],\n  builder: [\"local\", \"imported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    local: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    imported: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    importKind: {\n      // Handle Flowtype's extension \"import {typeof foo} from\"\n      // And TypeScript's \"import { type foo } from\"\n      validate: assertOneOf(\"type\", \"typeof\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ImportExpression\", {\n  visitor: [\"source\", \"options\"],\n  aliases: [\"Expression\"],\n  fields: {\n    phase: {\n      default: null,\n      validate: assertOneOf(\"source\", \"defer\"),\n    },\n    source: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    options: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"MetaProperty\", {\n  visitor: [\"meta\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    meta: {\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertNodeType(\"Identifier\"),\n              Object.assign(\n                function (node: t.MetaProperty, key, val) {\n                  let property;\n                  switch (val.name) {\n                    case \"function\":\n                      property = \"sent\";\n                      break;\n                    case \"new\":\n                      property = \"target\";\n                      break;\n                    case \"import\":\n                      property = \"meta\";\n                      break;\n                  }\n                  if (!is(\"Identifier\", node.property, { name: property })) {\n                    throw new TypeError(\"Unrecognised MetaProperty\");\n                  }\n                } as Validator,\n                { oneOfNodeTypes: [\"Identifier\"] },\n              ),\n            )\n          : assertNodeType(\"Identifier\"),\n    },\n    property: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\nexport const classMethodOrPropertyCommon = () => ({\n  abstract: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  accessibility: {\n    validate: assertOneOf(\"public\", \"private\", \"protected\"),\n    optional: true,\n  },\n  static: {\n    default: false,\n  },\n  override: {\n    default: false,\n  },\n  computed: {\n    default: false,\n  },\n  optional: {\n    validate: assertValueType(\"boolean\"),\n    optional: true,\n  },\n  key: {\n    validate: chain(\n      (function () {\n        const normal = assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const computed = assertNodeType(\"Expression\");\n\n        return function (node: any, key: string, val: any) {\n          const validator = node.computed ? computed : normal;\n          validator(node, key, val);\n        };\n      })(),\n      assertNodeType(\n        \"Identifier\",\n        \"StringLiteral\",\n        \"NumericLiteral\",\n        \"BigIntLiteral\",\n        \"Expression\",\n      ),\n    ),\n  },\n});\n\nexport const classMethodOrDeclareMethodCommon = () => ({\n  ...functionCommon(),\n  ...classMethodOrPropertyCommon(),\n  params: validateArrayOfType(\n    \"Identifier\",\n    \"Pattern\",\n    \"RestElement\",\n    \"TSParameterProperty\",\n  ),\n  kind: {\n    validate: assertOneOf(\"get\", \"set\", \"method\", \"constructor\"),\n    default: \"method\",\n  },\n  access: {\n    validate: chain(\n      assertValueType(\"string\"),\n      assertOneOf(\"public\", \"private\", \"protected\"),\n    ),\n    optional: true,\n  },\n  decorators: {\n    validate: arrayOfType(\"Decorator\"),\n    optional: true,\n  },\n});\n\ndefineType(\"ClassMethod\", {\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\"],\n  builder: [\n    \"kind\",\n    \"key\",\n    \"params\",\n    \"body\",\n    \"computed\",\n    \"static\",\n    \"generator\",\n    \"async\",\n  ],\n  visitor: [\n    \"decorators\",\n    \"key\",\n    \"typeParameters\",\n    \"params\",\n    \"returnType\",\n    \"body\",\n  ],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...functionTypeAnnotationCommon(),\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"ObjectPattern\", {\n  visitor: [\n    \"properties\",\n    \"typeAnnotation\",\n    \"decorators\" /* for legacy param decorators */,\n  ],\n  builder: [\"properties\"],\n  aliases: [\"Pattern\", \"PatternLike\", \"LVal\"],\n  fields: {\n    ...patternLikeCommon(),\n    properties: validateArrayOfType(\"RestElement\", \"ObjectProperty\"),\n  },\n});\n\ndefineType(\"SpreadElement\", {\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\"],\n  deprecatedAlias: \"SpreadProperty\",\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\n  \"Super\",\n  process.env.BABEL_8_BREAKING\n    ? undefined\n    : {\n        aliases: [\"Expression\"],\n      },\n);\n\ndefineType(\"TaggedTemplateExpression\", {\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"tag\", \"typeArguments\", \"quasi\"]\n    : [\"tag\", \"typeParameters\", \"quasi\"],\n  builder: [\"tag\", \"quasi\"],\n  aliases: [\"Expression\"],\n  fields: {\n    tag: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    quasi: {\n      validate: assertNodeType(\"TemplateLiteral\"),\n    },\n    [process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\"]: {\n      validate: assertNodeType(\n        \"TypeParameterInstantiation\",\n        \"TSTypeParameterInstantiation\",\n      ),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TemplateElement\", {\n  builder: [\"value\", \"tail\"],\n  fields: {\n    value: {\n      validate: chain(\n        assertShape({\n          raw: {\n            validate: assertValueType(\"string\"),\n          },\n          cooked: {\n            validate: assertValueType(\"string\"),\n            optional: true,\n          },\n        }),\n        function templateElementCookedValidator(node: t.TemplateElement) {\n          const raw = node.value.raw;\n\n          let unterminatedCalled = false;\n\n          const error = () => {\n            // unreachable\n            throw new Error(\"Internal @babel/types error.\");\n          };\n          const { str, firstInvalidLoc } = readStringContents(\n            \"template\",\n            raw,\n            0,\n            0,\n            0,\n            {\n              unterminated() {\n                unterminatedCalled = true;\n              },\n              strictNumericEscape: error,\n              invalidEscapeSequence: error,\n              numericSeparatorInEscapeSequence: error,\n              unexpectedNumericSeparator: error,\n              invalidDigit: error,\n              invalidCodePoint: error,\n            },\n          );\n          if (!unterminatedCalled) throw new Error(\"Invalid raw\");\n\n          node.value.cooked = firstInvalidLoc ? null : str;\n        },\n      ),\n    },\n    tail: {\n      default: false,\n    },\n  },\n});\n\ndefineType(\"TemplateLiteral\", {\n  visitor: [\"quasis\", \"expressions\"],\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    quasis: validateArrayOfType(\"TemplateElement\"),\n    expressions: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(\n          assertNodeType(\n            \"Expression\",\n            // For TypeScript template literal types\n            \"TSType\",\n          ),\n        ),\n        function (node: t.TemplateLiteral, key, val) {\n          if (node.quasis.length !== val.length + 1) {\n            throw new TypeError(\n              `Number of ${\n                node.type\n              } quasis should be exactly one more than the number of expressions.\\nExpected ${\n                val.length + 1\n              } quasis but got ${node.quasis.length}`,\n            );\n          }\n        } as Validator,\n      ),\n    },\n  },\n});\n\ndefineType(\"YieldExpression\", {\n  builder: [\"argument\", \"delegate\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    delegate: {\n      validate:\n        process.env.BABEL_8_BREAKING || process.env.BABEL_TYPES_8_BREAKING\n          ? chain(\n              assertValueType(\"boolean\"),\n              Object.assign(\n                function (node: t.YieldExpression, key, val) {\n                  if (val && !node.argument) {\n                    throw new TypeError(\n                      \"Property delegate of YieldExpression cannot be true if there is no argument\",\n                    );\n                  }\n                } as Validator,\n                { type: \"boolean\" },\n              ),\n            )\n          : assertValueType(\"boolean\"),\n      default: false,\n    },\n    argument: {\n      optional: true,\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\n// --- ES2017 ---\ndefineType(\"AwaitExpression\", {\n  builder: [\"argument\"],\n  visitor: [\"argument\"],\n  aliases: [\"Expression\", \"Terminatorless\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\n// --- ES2019 ---\ndefineType(\"Import\", {\n  aliases: [\"Expression\"],\n});\n\n// --- ES2020 ---\ndefineType(\"BigIntLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n});\n\ndefineType(\"ExportNamespaceSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"OptionalMemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\", \"optional\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    property: {\n      validate: (function () {\n        const normal = assertNodeType(\"Identifier\");\n        const computed = assertNodeType(\"Expression\");\n\n        const validator: Validator = Object.assign(\n          function (node: t.OptionalMemberExpression, key, val) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          } as Validator,\n          // todo(ts): can be discriminated union by `computed` property\n          { oneOfNodeTypes: [\"Expression\", \"Identifier\"] },\n        );\n        return validator;\n      })(),\n    },\n    computed: {\n      default: false,\n    },\n    optional: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertValueType(\"boolean\")\n          : chain(assertValueType(\"boolean\"), assertOptionalChainStart()),\n    },\n  },\n});\n\ndefineType(\"OptionalCallExpression\", {\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"callee\", \"arguments\", \"typeArguments\"]\n    : [\"callee\", \"arguments\", \"typeParameters\", \"typeArguments\"],\n  builder: [\"callee\", \"arguments\", \"optional\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\"),\n    },\n    arguments: validateArrayOfType(\n      \"Expression\",\n      \"SpreadElement\",\n      \"ArgumentPlaceholder\",\n    ),\n    optional: {\n      validate:\n        !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n          ? assertValueType(\"boolean\")\n          : chain(assertValueType(\"boolean\"), assertOptionalChainStart()),\n    },\n    typeArguments: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterInstantiation\",\n            \"TSTypeParameterInstantiation\",\n          )\n        : assertNodeType(\"TypeParameterInstantiation\"),\n      optional: true,\n    },\n    ...(process.env.BABEL_8_BREAKING\n      ? {}\n      : {\n          typeParameters: {\n            validate: assertNodeType(\"TSTypeParameterInstantiation\"),\n            optional: true,\n          },\n        }),\n  },\n});\n\n// --- ES2022 ---\ndefineType(\"ClassProperty\", {\n  visitor: [\"decorators\", \"variance\", \"key\", \"typeAnnotation\", \"value\"],\n  builder: [\n    \"key\",\n    \"value\",\n    \"typeAnnotation\",\n    \"decorators\",\n    \"computed\",\n    \"static\",\n  ],\n  aliases: [\"Property\"],\n  fields: {\n    ...classMethodOrPropertyCommon(),\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassAccessorProperty\", {\n  visitor: [\"decorators\", \"key\", \"typeAnnotation\", \"value\"],\n  builder: [\n    \"key\",\n    \"value\",\n    \"typeAnnotation\",\n    \"decorators\",\n    \"computed\",\n    \"static\",\n  ],\n  aliases: [\"Property\", \"Accessor\"],\n  fields: {\n    ...classMethodOrPropertyCommon(),\n    key: {\n      validate: chain(\n        (function () {\n          const normal = assertNodeType(\n            \"Identifier\",\n            \"StringLiteral\",\n            \"NumericLiteral\",\n            \"BigIntLiteral\",\n            \"PrivateName\",\n          );\n          const computed = assertNodeType(\"Expression\");\n\n          return function (node: any, key: string, val: any) {\n            const validator = node.computed ? computed : normal;\n            validator(node, key, val);\n          };\n        })(),\n        assertNodeType(\n          \"Identifier\",\n          \"StringLiteral\",\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n          \"Expression\",\n          \"PrivateName\",\n        ),\n      ),\n    },\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    declare: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassPrivateProperty\", {\n  visitor: [\"decorators\", \"variance\", \"key\", \"typeAnnotation\", \"value\"],\n  builder: [\"key\", \"value\", \"decorators\", \"static\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: assertNodeType(\"PrivateName\"),\n    },\n    value: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n    typeAnnotation: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\"TypeAnnotation\", \"TSTypeAnnotation\")\n        : assertNodeType(\n            \"TypeAnnotation\",\n            \"TSTypeAnnotation\",\n            // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n            \"Noop\",\n          ),\n      optional: true,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n    static: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    optional: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    definite: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    variance: {\n      validate: assertNodeType(\"Variance\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\n    \"decorators\",\n    \"key\",\n    \"typeParameters\",\n    \"params\",\n    \"returnType\",\n    \"body\",\n  ],\n  aliases: [\n    \"Function\",\n    \"Scopable\",\n    \"BlockParent\",\n    \"FunctionParent\",\n    \"Method\",\n    \"Private\",\n  ],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...functionTypeAnnotationCommon(),\n    kind: {\n      validate: assertOneOf(\"get\", \"set\", \"method\"),\n      default: \"method\",\n    },\n    key: {\n      validate: assertNodeType(\"PrivateName\"),\n    },\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n  },\n});\n\ndefineType(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"StaticBlock\", {\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\"Statement\"),\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"FunctionParent\"],\n});\n","export const DEPRECATED_ALIASES = {\n  ModuleDeclaration: \"ImportOrExportDeclaration\",\n};\n","import defineType, {\n  arrayOfType,\n  assertNodeType,\n  assertValueType,\n  validateArrayOfType,\n} from \"./utils.ts\";\n\ndefineType(\"ArgumentPlaceholder\", {});\n\ndefineType(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields:\n    !process.env.BABEL_8_BREAKING && !process.env.BABEL_TYPES_8_BREAKING\n      ? {\n          object: {\n            validate: Object.assign(() => {}, {\n              oneOfNodeTypes: [\"Expression\"],\n            }),\n          },\n          callee: {\n            validate: Object.assign(() => {}, {\n              oneOfNodeTypes: [\"Expression\"],\n            }),\n          },\n        }\n      : {\n          object: {\n            validate: assertNodeType(\"Expression\"),\n          },\n          callee: {\n            validate: assertNodeType(\"Expression\"),\n          },\n        },\n});\n\ndefineType(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: assertNodeType(\"Identifier\", \"StringLiteral\"),\n    },\n    value: {\n      validate: assertNodeType(\"StringLiteral\"),\n    },\n  },\n});\n\ndefineType(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"DoExpression\", {\n  visitor: [\"body\"],\n  builder: [\"body\", \"async\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: assertNodeType(\"BlockStatement\"),\n    },\n    async: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n  },\n});\n\ndefineType(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n  },\n});\n\ndefineType(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: validateArrayOfType(\"ObjectProperty\", \"SpreadElement\"),\n  },\n});\n\ndefineType(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: arrayOfType(\"Expression\", \"SpreadElement\"),\n      default: [],\n    },\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"],\n});\n\nif (!process.env.BABEL_8_BREAKING) {\n  defineType(\"DecimalLiteral\", {\n    builder: [\"value\"],\n    fields: {\n      value: {\n        validate: assertValueType(\"string\"),\n      },\n    },\n    aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"],\n  });\n}\n\n// https://github.com/tc39/proposal-js-module-blocks\ndefineType(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: assertNodeType(\"Program\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\n// https://github.com/tc39/proposal-pipeline-operator\n// https://github.com/js-choi/proposal-hack-pipes\ndefineType(\"TopicReference\", {\n  aliases: [\"Expression\"],\n});\n\n// https://github.com/tc39/proposal-pipeline-operator\n// https://github.com/js-choi/proposal-smart-pipes\ndefineType(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n  aliases: [\"Expression\"],\n});\n\ndefineType(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"],\n});\n","import { importAttributes } from \"./core.ts\";\nimport {\n  defineAliasedType,\n  arrayOfType,\n  assertOneOf,\n  assertValueType,\n  validate,\n  validateArrayOfType,\n  validateOptional,\n  validateOptionalType,\n  validateType,\n} from \"./utils.ts\";\n\nconst defineType = defineAliasedType(\"Flow\");\n\nconst defineInterfaceishType = (\n  name: \"DeclareClass\" | \"DeclareInterface\" | \"InterfaceDeclaration\",\n) => {\n  const isDeclareClass = name === \"DeclareClass\";\n\n  defineType(name, {\n    builder: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n    visitor: [\n      \"id\",\n      \"typeParameters\",\n      \"extends\",\n      ...(isDeclareClass ? [\"mixins\", \"implements\"] : []),\n      \"body\",\n    ],\n    aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n    fields: {\n      id: validateType(\"Identifier\"),\n      typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n      extends: validateOptional(arrayOfType(\"InterfaceExtends\")),\n      ...(isDeclareClass\n        ? {\n            mixins: validateOptional(arrayOfType(\"InterfaceExtends\")),\n            implements: validateOptional(arrayOfType(\"ClassImplements\")),\n          }\n        : {}),\n      body: validateType(\"ObjectTypeAnnotation\"),\n    },\n  });\n};\n\ndefineType(\"AnyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ArrayTypeAnnotation\", {\n  visitor: [\"elementType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    elementType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"BooleanTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"BooleanLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"NullLiteralTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ClassImplements\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineInterfaceishType(\"DeclareClass\");\n\ndefineType(\"DeclareFunction\", {\n  builder: [\"id\"],\n  visitor: [\"id\", \"predicate\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    predicate: validateOptionalType(\"DeclaredPredicate\"),\n  },\n});\n\ndefineInterfaceishType(\"DeclareInterface\");\n\ndefineType(\"DeclareModule\", {\n  builder: [\"id\", \"body\", \"kind\"],\n  visitor: [\"id\", \"body\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\", \"StringLiteral\"),\n    body: validateType(\"BlockStatement\"),\n    kind: validateOptional(assertOneOf(\"CommonJS\", \"ES\")),\n  },\n});\n\ndefineType(\"DeclareModuleExports\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    typeAnnotation: validateType(\"TypeAnnotation\"),\n  },\n});\n\ndefineType(\"DeclareTypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    right: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"DeclareOpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    supertype: validateOptionalType(\"FlowType\"),\n    impltype: validateOptionalType(\"FlowType\"),\n  },\n});\n\ndefineType(\"DeclareVariable\", {\n  visitor: [\"id\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"DeclareExportDeclaration\", {\n  visitor: [\"declaration\", \"specifiers\", \"source\", \"attributes\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    declaration: validateOptionalType(\"Flow\"),\n    specifiers: validateOptional(\n      arrayOfType(\"ExportSpecifier\", \"ExportNamespaceSpecifier\"),\n    ),\n    source: validateOptionalType(\"StringLiteral\"),\n    default: validateOptional(assertValueType(\"boolean\")),\n    ...importAttributes,\n  },\n});\n\ndefineType(\"DeclareExportAllDeclaration\", {\n  visitor: [\"source\", \"attributes\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    source: validateType(\"StringLiteral\"),\n    exportKind: validateOptional(assertOneOf(\"type\", \"value\")),\n    ...importAttributes,\n  },\n});\n\ndefineType(\"DeclaredPredicate\", {\n  visitor: [\"value\"],\n  aliases: [\"FlowPredicate\"],\n  fields: {\n    value: validateType(\"Flow\"),\n  },\n});\n\ndefineType(\"ExistsTypeAnnotation\", {\n  aliases: [\"FlowType\"],\n});\n\ndefineType(\"FunctionTypeAnnotation\", {\n  builder: [\"typeParameters\", \"params\", \"rest\", \"returnType\"],\n  visitor: [\"typeParameters\", \"this\", \"params\", \"rest\", \"returnType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    params: validateArrayOfType(\"FunctionTypeParam\"),\n    rest: validateOptionalType(\"FunctionTypeParam\"),\n    this: validateOptionalType(\"FunctionTypeParam\"),\n    returnType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"FunctionTypeParam\", {\n  visitor: [\"name\", \"typeAnnotation\"],\n  fields: {\n    name: validateOptionalType(\"Identifier\"),\n    typeAnnotation: validateType(\"FlowType\"),\n    optional: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"GenericTypeAnnotation\", {\n  visitor: [\"id\", \"typeParameters\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    id: validateType(\"Identifier\", \"QualifiedTypeIdentifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"InferredPredicate\", {\n  aliases: [\"FlowPredicate\"],\n});\n\ndefineType(\"InterfaceExtends\", {\n  visitor: [\"id\", \"typeParameters\"],\n  fields: {\n    id: validateType(\"Identifier\", \"QualifiedTypeIdentifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterInstantiation\"),\n  },\n});\n\ndefineInterfaceishType(\"InterfaceDeclaration\");\n\ndefineType(\"InterfaceTypeAnnotation\", {\n  visitor: [\"extends\", \"body\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    extends: validateOptional(arrayOfType(\"InterfaceExtends\")),\n    body: validateType(\"ObjectTypeAnnotation\"),\n  },\n});\n\ndefineType(\"IntersectionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"MixedTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"EmptyTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"NullableTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    typeAnnotation: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"NumberLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"number\")),\n  },\n});\n\ndefineType(\"NumberTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ObjectTypeAnnotation\", {\n  visitor: [\"properties\", \"indexers\", \"callProperties\", \"internalSlots\"],\n  aliases: [\"FlowType\"],\n  builder: [\n    \"properties\",\n    \"indexers\",\n    \"callProperties\",\n    \"internalSlots\",\n    \"exact\",\n  ],\n  fields: {\n    properties: validate(\n      arrayOfType(\"ObjectTypeProperty\", \"ObjectTypeSpreadProperty\"),\n    ),\n    indexers: {\n      validate: arrayOfType(\"ObjectTypeIndexer\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    callProperties: {\n      validate: arrayOfType(\"ObjectTypeCallProperty\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    internalSlots: {\n      validate: arrayOfType(\"ObjectTypeInternalSlot\"),\n      optional: process.env.BABEL_8_BREAKING ? false : true,\n      default: [],\n    },\n    exact: {\n      validate: assertValueType(\"boolean\"),\n      default: false,\n    },\n    // If the inexact flag is present then this is an object type, and not a\n    // declare class, declare interface, or interface. If it is true, the\n    // object uses ... to express that it is inexact.\n    inexact: validateOptional(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeInternalSlot\", {\n  visitor: [\"id\", \"value\"],\n  builder: [\"id\", \"value\", \"optional\", \"static\", \"method\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    value: validateType(\"FlowType\"),\n    optional: validate(assertValueType(\"boolean\")),\n    static: validate(assertValueType(\"boolean\")),\n    method: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeCallProperty\", {\n  visitor: [\"value\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    value: validateType(\"FlowType\"),\n    static: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeIndexer\", {\n  visitor: [\"variance\", \"id\", \"key\", \"value\"],\n  builder: [\"id\", \"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    id: validateOptionalType(\"Identifier\"),\n    key: validateType(\"FlowType\"),\n    value: validateType(\"FlowType\"),\n    static: validate(assertValueType(\"boolean\")),\n    variance: validateOptionalType(\"Variance\"),\n  },\n});\n\ndefineType(\"ObjectTypeProperty\", {\n  visitor: [\"key\", \"value\", \"variance\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    key: validateType(\"Identifier\", \"StringLiteral\"),\n    value: validateType(\"FlowType\"),\n    kind: validate(assertOneOf(\"init\", \"get\", \"set\")),\n    static: validate(assertValueType(\"boolean\")),\n    proto: validate(assertValueType(\"boolean\")),\n    optional: validate(assertValueType(\"boolean\")),\n    variance: validateOptionalType(\"Variance\"),\n    method: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"ObjectTypeSpreadProperty\", {\n  visitor: [\"argument\"],\n  aliases: [\"UserWhitespacable\"],\n  fields: {\n    argument: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"OpaqueType\", {\n  visitor: [\"id\", \"typeParameters\", \"supertype\", \"impltype\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    supertype: validateOptionalType(\"FlowType\"),\n    impltype: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"QualifiedTypeIdentifier\", {\n  visitor: [\"qualification\", \"id\"],\n  builder: [\"id\", \"qualification\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    qualification: validateType(\"Identifier\", \"QualifiedTypeIdentifier\"),\n  },\n});\n\ndefineType(\"StringLiteralTypeAnnotation\", {\n  builder: [\"value\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    value: validate(assertValueType(\"string\")),\n  },\n});\n\ndefineType(\"StringTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"SymbolTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"ThisTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\ndefineType(\"TupleTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"TypeofTypeAnnotation\", {\n  visitor: [\"argument\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    argument: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeAlias\", {\n  visitor: [\"id\", \"typeParameters\", \"right\"],\n  aliases: [\"FlowDeclaration\", \"Statement\", \"Declaration\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TypeParameterDeclaration\"),\n    right: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"TypeCastExpression\", {\n  visitor: [\"expression\", \"typeAnnotation\"],\n  aliases: [\"ExpressionWrapper\", \"Expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeAnnotation: validateType(\"TypeAnnotation\"),\n  },\n});\n\ndefineType(\"TypeParameter\", {\n  visitor: [\"bound\", \"default\", \"variance\"],\n  fields: {\n    name: validate(assertValueType(\"string\")),\n    bound: validateOptionalType(\"TypeAnnotation\"),\n    default: validateOptionalType(\"FlowType\"),\n    variance: validateOptionalType(\"Variance\"),\n  },\n});\n\ndefineType(\"TypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validate(arrayOfType(\"TypeParameter\")),\n  },\n});\n\ndefineType(\"TypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"UnionTypeAnnotation\", {\n  visitor: [\"types\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    types: validate(arrayOfType(\"FlowType\")),\n  },\n});\n\ndefineType(\"Variance\", {\n  builder: [\"kind\"],\n  fields: {\n    kind: validate(assertOneOf(\"minus\", \"plus\")),\n  },\n});\n\ndefineType(\"VoidTypeAnnotation\", {\n  aliases: [\"FlowType\", \"FlowBaseAnnotation\"],\n});\n\n// Enums\ndefineType(\"EnumDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    body: validateType(\n      \"EnumBooleanBody\",\n      \"EnumNumberBody\",\n      \"EnumStringBody\",\n      \"EnumSymbolBody\",\n    ),\n  },\n});\n\ndefineType(\"EnumBooleanBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType(\"EnumBooleanMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumNumberBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType(\"EnumNumberMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumStringBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    explicitType: validate(assertValueType(\"boolean\")),\n    members: validateArrayOfType(\"EnumStringMember\", \"EnumDefaultedMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumSymbolBody\", {\n  aliases: [\"EnumBody\"],\n  visitor: [\"members\"],\n  fields: {\n    members: validateArrayOfType(\"EnumDefaultedMember\"),\n    hasUnknownMembers: validate(assertValueType(\"boolean\")),\n  },\n});\n\ndefineType(\"EnumBooleanMember\", {\n  aliases: [\"EnumMember\"],\n  builder: [\"id\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"BooleanLiteral\"),\n  },\n});\n\ndefineType(\"EnumNumberMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"NumericLiteral\"),\n  },\n});\n\ndefineType(\"EnumStringMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n    init: validateType(\"StringLiteral\"),\n  },\n});\n\ndefineType(\"EnumDefaultedMember\", {\n  aliases: [\"EnumMember\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"IndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: validateType(\"FlowType\"),\n    indexType: validateType(\"FlowType\"),\n  },\n});\n\ndefineType(\"OptionalIndexedAccessType\", {\n  visitor: [\"objectType\", \"indexType\"],\n  aliases: [\"FlowType\"],\n  fields: {\n    objectType: validateType(\"FlowType\"),\n    indexType: validateType(\"FlowType\"),\n    optional: validate(assertValueType(\"boolean\")),\n  },\n});\n","import \"./core.ts\";\nimport \"./flow.ts\";\nimport \"./jsx.ts\";\nimport \"./misc.ts\";\nimport \"./experimental.ts\";\nimport \"./typescript.ts\";\nimport {\n  VISITOR_KEYS,\n  ALIAS_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  NODE_FIELDS,\n  BUILDER_KEYS,\n  DEPRECATED_KEYS,\n  NODE_PARENT_VALIDATIONS,\n} from \"./utils.ts\";\nimport {\n  PLACEHOLDERS,\n  PLACEHOLDERS_ALIAS,\n  PLACEHOLDERS_FLIPPED_ALIAS,\n} from \"./placeholders.ts\";\nimport { DEPRECATED_ALIASES } from \"./deprecated-aliases.ts\";\n\n(\n  Object.keys(DEPRECATED_ALIASES) as (keyof typeof DEPRECATED_ALIASES)[]\n).forEach(deprecatedAlias => {\n  FLIPPED_ALIAS_KEYS[deprecatedAlias] =\n    FLIPPED_ALIAS_KEYS[DEPRECATED_ALIASES[deprecatedAlias]];\n});\n\nconst TYPES: Array<string> = [].concat(\n  Object.keys(VISITOR_KEYS),\n  Object.keys(FLIPPED_ALIAS_KEYS),\n  Object.keys(DEPRECATED_KEYS),\n);\n\nexport {\n  VISITOR_KEYS,\n  ALIAS_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  NODE_FIELDS,\n  BUILDER_KEYS,\n  DEPRECATED_ALIASES,\n  DEPRECATED_KEYS,\n  NODE_PARENT_VALIDATIONS,\n  PLACEHOLDERS,\n  PLACEHOLDERS_ALIAS,\n  PLACEHOLDERS_FLIPPED_ALIAS,\n  TYPES,\n};\n\nexport type { FieldOptions } from \"./utils.ts\";\n","import {\n  defineAliasedType,\n  assertNodeType,\n  assertValueType,\n  validateArrayOfType,\n} from \"./utils.ts\";\n\nconst defineType = defineAliasedType(\"JSX\");\n\ndefineType(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\"JSXIdentifier\", \"JSXNamespacedName\"),\n    },\n    value: {\n      optional: true,\n      validate: assertNodeType(\n        \"JSXElement\",\n        \"JSXFragment\",\n        \"StringLiteral\",\n        \"JSXExpressionContainer\",\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\n        \"JSXIdentifier\",\n        \"JSXMemberExpression\",\n        \"JSXNamespacedName\",\n      ),\n    },\n  },\n});\n\ndefineType(\"JSXElement\", {\n  builder: process.env.BABEL_8_BREAKING\n    ? [\"openingElement\", \"closingElement\", \"children\"]\n    : [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: assertNodeType(\"JSXOpeningElement\"),\n    },\n    closingElement: {\n      optional: true,\n      validate: assertNodeType(\"JSXClosingElement\"),\n    },\n    children: validateArrayOfType(\n      \"JSXText\",\n      \"JSXExpressionContainer\",\n      \"JSXSpreadChild\",\n      \"JSXElement\",\n      \"JSXFragment\",\n    ),\n    ...(process.env.BABEL_8_BREAKING\n      ? {}\n      : {\n          selfClosing: {\n            validate: assertValueType(\"boolean\"),\n            optional: true,\n          },\n        }),\n  },\n});\n\ndefineType(\"JSXEmptyExpression\", {});\n\ndefineType(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\", \"JSXEmptyExpression\"),\n    },\n  },\n});\n\ndefineType(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    expression: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  fields: {\n    object: {\n      validate: assertNodeType(\"JSXMemberExpression\", \"JSXIdentifier\"),\n    },\n    property: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n  },\n});\n\ndefineType(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  fields: {\n    namespace: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n    name: {\n      validate: assertNodeType(\"JSXIdentifier\"),\n    },\n  },\n});\n\ndefineType(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"name\", \"typeArguments\", \"attributes\"]\n    : [\"name\", \"typeParameters\", \"typeArguments\", \"attributes\"],\n  aliases: [\"Immutable\"],\n  fields: {\n    name: {\n      validate: assertNodeType(\n        \"JSXIdentifier\",\n        \"JSXMemberExpression\",\n        \"JSXNamespacedName\",\n      ),\n    },\n    selfClosing: {\n      default: false,\n    },\n    attributes: validateArrayOfType(\"JSXAttribute\", \"JSXSpreadAttribute\"),\n    typeArguments: {\n      validate: process.env.BABEL_8_BREAKING\n        ? assertNodeType(\n            \"TypeParameterInstantiation\",\n            \"TSTypeParameterInstantiation\",\n          )\n        : assertNodeType(\"TypeParameterInstantiation\"),\n      optional: true,\n    },\n    ...(process.env.BABEL_8_BREAKING\n      ? {}\n      : {\n          typeParameters: {\n            validate: assertNodeType(\"TSTypeParameterInstantiation\"),\n            optional: true,\n          },\n        }),\n  },\n});\n\ndefineType(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  fields: {\n    argument: {\n      validate: assertNodeType(\"Expression\"),\n    },\n  },\n});\n\ndefineType(\"JSXText\", {\n  aliases: [\"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n\ndefineType(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: assertNodeType(\"JSXOpeningFragment\"),\n    },\n    closingFragment: {\n      validate: assertNodeType(\"JSXClosingFragment\"),\n    },\n    children: validateArrayOfType(\n      \"JSXText\",\n      \"JSXExpressionContainer\",\n      \"JSXSpreadChild\",\n      \"JSXElement\",\n      \"JSXFragment\",\n    ),\n  },\n});\n\ndefineType(\"JSXOpeningFragment\", {\n  aliases: [\"Immutable\"],\n});\n\ndefineType(\"JSXClosingFragment\", {\n  aliases: [\"Immutable\"],\n});\n","import {\n  defineAliasedType,\n  assertNodeType,\n  assertOneOf,\n  assertValueType,\n} from \"./utils.ts\";\nimport { PLACEHOLDERS } from \"./placeholders.ts\";\nimport { patternLikeCommon } from \"./core.ts\";\n\nconst defineType = defineAliasedType(\"Miscellaneous\");\n\nif (!process.env.BABEL_8_BREAKING) {\n  defineType(\"Noop\", {\n    visitor: [],\n  });\n}\n\ndefineType(\"Placeholder\", {\n  visitor: [],\n  builder: [\"expectedNode\", \"name\"],\n  // aliases: [], defined in placeholders.js\n  fields: {\n    name: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    expectedNode: {\n      validate: assertOneOf(...PLACEHOLDERS),\n    },\n    ...patternLikeCommon(),\n  },\n});\n\ndefineType(\"V8IntrinsicIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n","import { ALIAS_KEYS } from \"./utils.ts\";\n\nexport const PLACEHOLDERS = [\n  \"Identifier\",\n  \"StringLiteral\",\n  \"Expression\",\n  \"Statement\",\n  \"Declaration\",\n  \"BlockStatement\",\n  \"ClassBody\",\n  \"Pattern\",\n] as const;\n\nexport const PLACEHOLDERS_ALIAS: Record<string, string[]> = {\n  Declaration: [\"Statement\"],\n  Pattern: [\"PatternLike\", \"LVal\"],\n};\n\nfor (const type of PLACEHOLDERS) {\n  const alias = ALIAS_KEYS[type];\n  if (alias?.length) PLACEHOLDERS_ALIAS[type] = alias;\n}\n\nexport const PLACEHOLDERS_FLIPPED_ALIAS: Record<string, string[]> = {};\n\nObject.keys(PLACEHOLDERS_ALIAS).forEach(type => {\n  PLACEHOLDERS_ALIAS[type].forEach(alias => {\n    if (!Object.hasOwn(PLACEHOLDERS_FLIPPED_ALIAS, alias)) {\n      PLACEHOLDERS_FLIPPED_ALIAS[alias] = [];\n    }\n    PLACEHOLDERS_FLIPPED_ALIAS[alias].push(type);\n  });\n});\n","import type * as t from \"../index.ts\";\nimport {\n  defineAliasedType,\n  arrayOfType,\n  assertEach,\n  assertNodeType,\n  assertOneOf,\n  assertValueType,\n  chain,\n  validate,\n  validateArrayOfType,\n  validateOptional,\n  validateOptionalType,\n  validateType,\n  type Validator,\n} from \"./utils.ts\";\nimport {\n  functionDeclarationCommon,\n  classMethodOrDeclareMethodCommon,\n} from \"./core.ts\";\nimport is from \"../validators/is.ts\";\n\nconst defineType = defineAliasedType(\"TypeScript\");\n\nconst bool = assertValueType(\"boolean\");\n\nconst tSFunctionTypeAnnotationCommon = () => ({\n  returnType: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TSTypeAnnotation\")\n      : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        assertNodeType(\"TSTypeAnnotation\", \"Noop\"),\n    optional: true,\n  },\n  typeParameters: {\n    validate: process.env.BABEL_8_BREAKING\n      ? assertNodeType(\"TSTypeParameterDeclaration\")\n      : // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        assertNodeType(\"TSTypeParameterDeclaration\", \"Noop\"),\n    optional: true,\n  },\n});\n\ndefineType(\"TSParameterProperty\", {\n  aliases: [\"LVal\"], // TODO: This isn't usable in general as an LVal. Should have a \"Parameter\" alias.\n  visitor: [\"parameter\"],\n  fields: {\n    accessibility: {\n      validate: assertOneOf(\"public\", \"private\", \"protected\"),\n      optional: true,\n    },\n    readonly: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    parameter: {\n      validate: assertNodeType(\"Identifier\", \"AssignmentPattern\"),\n    },\n    override: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    decorators: {\n      validate: arrayOfType(\"Decorator\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSDeclareFunction\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: {\n    ...functionDeclarationCommon(),\n    ...tSFunctionTypeAnnotationCommon(),\n  },\n});\n\ndefineType(\"TSDeclareMethod\", {\n  visitor: [\"decorators\", \"key\", \"typeParameters\", \"params\", \"returnType\"],\n  fields: {\n    ...classMethodOrDeclareMethodCommon(),\n    ...tSFunctionTypeAnnotationCommon(),\n  },\n});\n\ndefineType(\"TSQualifiedName\", {\n  aliases: [\"TSEntityName\"],\n  visitor: [\"left\", \"right\"],\n  fields: {\n    left: validateType(\"TSEntityName\"),\n    right: validateType(\"Identifier\"),\n  },\n});\n\nconst signatureDeclarationCommon = () => ({\n  typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n  [process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\"]: validateArrayOfType(\n    \"ArrayPattern\",\n    \"Identifier\",\n    \"ObjectPattern\",\n    \"RestElement\",\n  ),\n  [process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\"]:\n    validateOptionalType(\"TSTypeAnnotation\"),\n});\n\nconst callConstructSignatureDeclaration = {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n  fields: signatureDeclarationCommon(),\n};\n\ndefineType(\"TSCallSignatureDeclaration\", callConstructSignatureDeclaration);\ndefineType(\n  \"TSConstructSignatureDeclaration\",\n  callConstructSignatureDeclaration,\n);\n\nconst namedTypeElementCommon = () => ({\n  key: validateType(\"Expression\"),\n  computed: { default: false },\n  optional: validateOptional(bool),\n});\n\ndefineType(\"TSPropertySignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"key\", \"typeAnnotation\"],\n  fields: {\n    ...namedTypeElementCommon(),\n    readonly: validateOptional(bool),\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n    kind: {\n      optional: true,\n      validate: assertOneOf(\"get\", \"set\"),\n    },\n  },\n});\n\ndefineType(\"TSMethodSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\n    \"key\",\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n  fields: {\n    ...signatureDeclarationCommon(),\n    ...namedTypeElementCommon(),\n    kind: {\n      validate: assertOneOf(\"method\", \"get\", \"set\"),\n    },\n  },\n});\n\ndefineType(\"TSIndexSignature\", {\n  aliases: [\"TSTypeElement\"],\n  visitor: [\"parameters\", \"typeAnnotation\"],\n  fields: {\n    readonly: validateOptional(bool),\n    static: validateOptional(bool),\n    parameters: validateArrayOfType(\"Identifier\"), // Length must be 1\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n  },\n});\n\nconst tsKeywordTypes = [\n  \"TSAnyKeyword\",\n  \"TSBooleanKeyword\",\n  \"TSBigIntKeyword\",\n  \"TSIntrinsicKeyword\",\n  \"TSNeverKeyword\",\n  \"TSNullKeyword\",\n  \"TSNumberKeyword\",\n  \"TSObjectKeyword\",\n  \"TSStringKeyword\",\n  \"TSSymbolKeyword\",\n  \"TSUndefinedKeyword\",\n  \"TSUnknownKeyword\",\n  \"TSVoidKeyword\",\n] as const;\n\nfor (const type of tsKeywordTypes) {\n  defineType(type, {\n    aliases: [\"TSType\", \"TSBaseType\"],\n    visitor: [],\n    fields: {},\n  });\n}\n\ndefineType(\"TSThisType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [],\n  fields: {},\n});\n\nconst fnOrCtrBase = {\n  aliases: [\"TSType\"],\n  visitor: [\n    \"typeParameters\",\n    process.env.BABEL_8_BREAKING ? \"params\" : \"parameters\",\n    process.env.BABEL_8_BREAKING ? \"returnType\" : \"typeAnnotation\",\n  ],\n};\n\ndefineType(\"TSFunctionType\", {\n  ...fnOrCtrBase,\n  fields: signatureDeclarationCommon(),\n});\ndefineType(\"TSConstructorType\", {\n  ...fnOrCtrBase,\n  fields: {\n    ...signatureDeclarationCommon(),\n    abstract: validateOptional(bool),\n  },\n});\n\ndefineType(\"TSTypeReference\", {\n  aliases: [\"TSType\"],\n  visitor: [\n    \"typeName\",\n    process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\",\n  ],\n  fields: {\n    typeName: validateType(\"TSEntityName\"),\n    [process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\"]:\n      validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSTypePredicate\", {\n  aliases: [\"TSType\"],\n  visitor: [\"parameterName\", \"typeAnnotation\"],\n  builder: [\"parameterName\", \"typeAnnotation\", \"asserts\"],\n  fields: {\n    parameterName: validateType(\"Identifier\", \"TSThisType\"),\n    typeAnnotation: validateOptionalType(\"TSTypeAnnotation\"),\n    asserts: validateOptional(bool),\n  },\n});\n\ndefineType(\"TSTypeQuery\", {\n  aliases: [\"TSType\"],\n  visitor: [\n    \"exprName\",\n    process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\",\n  ],\n  fields: {\n    exprName: validateType(\"TSEntityName\", \"TSImportType\"),\n    [process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\"]:\n      validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\ndefineType(\"TSTypeLiteral\", {\n  aliases: [\"TSType\"],\n  visitor: [\"members\"],\n  fields: {\n    members: validateArrayOfType(\"TSTypeElement\"),\n  },\n});\n\ndefineType(\"TSArrayType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementType\"],\n  fields: {\n    elementType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTupleType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"elementTypes\"],\n  fields: {\n    elementTypes: validateArrayOfType(\"TSType\", \"TSNamedTupleMember\"),\n  },\n});\n\ndefineType(\"TSOptionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSRestType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSNamedTupleMember\", {\n  visitor: [\"label\", \"elementType\"],\n  builder: [\"label\", \"elementType\", \"optional\"],\n  fields: {\n    label: validateType(\"Identifier\"),\n    optional: {\n      validate: bool,\n      default: false,\n    },\n    elementType: validateType(\"TSType\"),\n  },\n});\n\nconst unionOrIntersection = {\n  aliases: [\"TSType\"],\n  visitor: [\"types\"],\n  fields: {\n    types: validateArrayOfType(\"TSType\"),\n  },\n};\n\ndefineType(\"TSUnionType\", unionOrIntersection);\ndefineType(\"TSIntersectionType\", unionOrIntersection);\n\ndefineType(\"TSConditionalType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"checkType\", \"extendsType\", \"trueType\", \"falseType\"],\n  fields: {\n    checkType: validateType(\"TSType\"),\n    extendsType: validateType(\"TSType\"),\n    trueType: validateType(\"TSType\"),\n    falseType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSInferType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeParameter\"],\n  fields: {\n    typeParameter: validateType(\"TSTypeParameter\"),\n  },\n});\n\ndefineType(\"TSParenthesizedType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTypeOperator\", {\n  aliases: [\"TSType\"],\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    operator: validate(assertValueType(\"string\")),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSIndexedAccessType\", {\n  aliases: [\"TSType\"],\n  visitor: [\"objectType\", \"indexType\"],\n  fields: {\n    objectType: validateType(\"TSType\"),\n    indexType: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSMappedType\", {\n  aliases: [\"TSType\"],\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"key\", \"constraint\", \"nameType\", \"typeAnnotation\"]\n    : [\"typeParameter\", \"nameType\", \"typeAnnotation\"],\n  builder: process.env.BABEL_8_BREAKING\n    ? [\"key\", \"constraint\", \"nameType\", \"typeAnnotation\"]\n    : [\"typeParameter\", \"typeAnnotation\", \"nameType\"],\n  fields: {\n    ...(process.env.BABEL_8_BREAKING\n      ? {\n          key: validateType(\"Identifier\"),\n          constraint: validateType(\"TSType\"),\n        }\n      : {\n          typeParameter: validateType(\"TSTypeParameter\"),\n        }),\n    readonly: validateOptional(assertOneOf(true, false, \"+\", \"-\")),\n    optional: validateOptional(assertOneOf(true, false, \"+\", \"-\")),\n    typeAnnotation: validateOptionalType(\"TSType\"),\n    nameType: validateOptionalType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTemplateLiteralType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [\"quasis\", \"types\"],\n  fields: {\n    quasis: validateArrayOfType(\"TemplateElement\"),\n    types: {\n      validate: chain(\n        assertValueType(\"array\"),\n        assertEach(assertNodeType(\"TSType\")),\n        function (node: t.TSTemplateLiteralType, key, val) {\n          if (node.quasis.length !== val.length + 1) {\n            throw new TypeError(\n              `Number of ${\n                node.type\n              } quasis should be exactly one more than the number of types.\\nExpected ${\n                val.length + 1\n              } quasis but got ${node.quasis.length}`,\n            );\n          }\n        } as Validator,\n      ),\n    },\n  },\n});\n\ndefineType(\"TSLiteralType\", {\n  aliases: [\"TSType\", \"TSBaseType\"],\n  visitor: [\"literal\"],\n  fields: {\n    literal: {\n      validate: (function () {\n        const unaryExpression = assertNodeType(\n          \"NumericLiteral\",\n          \"BigIntLiteral\",\n        );\n        const unaryOperator = assertOneOf(\"-\");\n\n        const literal = assertNodeType(\n          \"NumericLiteral\",\n          \"StringLiteral\",\n          \"BooleanLiteral\",\n          \"BigIntLiteral\",\n          \"TemplateLiteral\",\n        );\n        function validator(parent: any, key: string, node: any) {\n          // type A = -1 | 1;\n          if (is(\"UnaryExpression\", node)) {\n            // check operator first\n            unaryOperator(node, \"operator\", node.operator);\n            unaryExpression(node, \"argument\", node.argument);\n          } else {\n            // type A = 'foo' | 'bar' | false | 1;\n            literal(parent, key, node);\n          }\n        }\n\n        validator.oneOfNodeTypes = [\n          \"NumericLiteral\",\n          \"StringLiteral\",\n          \"BooleanLiteral\",\n          \"BigIntLiteral\",\n          \"TemplateLiteral\",\n          \"UnaryExpression\",\n        ];\n\n        return validator;\n      })(),\n    },\n  },\n});\n\nif (process.env.BABEL_8_BREAKING) {\n  defineType(\"TSClassImplements\", {\n    aliases: [\"TSType\"],\n    visitor: [\"expression\", \"typeArguments\"],\n    fields: {\n      expression: validateType(\"TSEntityName\"),\n      typeArguments: validateOptionalType(\"TSTypeParameterInstantiation\"),\n    },\n  });\n  defineType(\"TSInterfaceHeritage\", {\n    aliases: [\"TSType\"],\n    visitor: [\"expression\", \"typeArguments\"],\n    fields: {\n      expression: validateType(\"TSEntityName\"),\n      typeArguments: validateOptionalType(\"TSTypeParameterInstantiation\"),\n    },\n  });\n} else {\n  defineType(\"TSExpressionWithTypeArguments\", {\n    aliases: [\"TSType\"],\n    visitor: [\"expression\", \"typeParameters\"],\n    fields: {\n      expression: validateType(\"TSEntityName\"),\n      typeParameters: validateOptionalType(\"TSTypeParameterInstantiation\"),\n    },\n  });\n}\n\ndefineType(\"TSInterfaceDeclaration\", {\n  // \"Statement\" alias prevents a semicolon from appearing after it in an export declaration.\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"extends\", \"body\"],\n  fields: {\n    declare: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n    extends: validateOptional(\n      arrayOfType(\n        // @ts-ignore(Babel 7 vs Babel 8) Babel 7 AST\n        process.env.BABEL_8_BREAKING\n          ? \"TSClassImplements\"\n          : \"TSExpressionWithTypeArguments\",\n      ),\n    ),\n    body: validateType(\"TSInterfaceBody\"),\n  },\n});\n\ndefineType(\"TSInterfaceBody\", {\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\"TSTypeElement\"),\n  },\n});\n\ndefineType(\"TSTypeAliasDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"typeParameters\", \"typeAnnotation\"],\n  fields: {\n    declare: validateOptional(bool),\n    id: validateType(\"Identifier\"),\n    typeParameters: validateOptionalType(\"TSTypeParameterDeclaration\"),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSInstantiationExpression\", {\n  aliases: [\"Expression\"],\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"expression\", \"typeArguments\"]\n    : [\"expression\", \"typeParameters\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    [process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\"]:\n      validateOptionalType(\"TSTypeParameterInstantiation\"),\n  },\n});\n\nconst TSTypeExpression = {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\", \"typeAnnotation\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n    typeAnnotation: validateType(\"TSType\"),\n  },\n};\n\ndefineType(\"TSAsExpression\", TSTypeExpression);\ndefineType(\"TSSatisfiesExpression\", TSTypeExpression);\n\ndefineType(\"TSTypeAssertion\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"typeAnnotation\", \"expression\"],\n  fields: {\n    typeAnnotation: validateType(\"TSType\"),\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSEnumBody\", {\n  visitor: [\"members\"],\n  fields: {\n    members: validateArrayOfType(\"TSEnumMember\"),\n  },\n});\n\nif (process.env.BABEL_8_BREAKING) {\n  defineType(\"TSEnumDeclaration\", {\n    // \"Statement\" alias prevents a semicolon from appearing after it in an export declaration.\n    aliases: [\"Statement\", \"Declaration\"],\n    visitor: [\"id\", \"body\"],\n    fields: {\n      declare: validateOptional(bool),\n      const: validateOptional(bool),\n      id: validateType(\"Identifier\"),\n      // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n      body: validateType(\"TSEnumBody\"),\n    },\n  });\n} else {\n  defineType(\"TSEnumDeclaration\", {\n    // \"Statement\" alias prevents a semicolon from appearing after it in an export declaration.\n    aliases: [\"Statement\", \"Declaration\"],\n    visitor: [\"id\", \"members\"],\n    fields: {\n      declare: validateOptional(bool),\n      const: validateOptional(bool),\n      id: validateType(\"Identifier\"),\n      members: validateArrayOfType(\"TSEnumMember\"),\n      initializer: validateOptionalType(\"Expression\"),\n      body: validateOptionalType(\"TSEnumBody\"),\n    },\n  });\n}\n\ndefineType(\"TSEnumMember\", {\n  visitor: [\"id\", \"initializer\"],\n  fields: {\n    id: validateType(\"Identifier\", \"StringLiteral\"),\n    initializer: validateOptionalType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSModuleDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"body\"],\n  fields: {\n    kind: {\n      validate: assertOneOf(\"global\", \"module\", \"namespace\"),\n    },\n    declare: validateOptional(bool),\n    ...(!process.env.BABEL_8_BREAKING && { global: validateOptional(bool) }),\n    id: process.env.BABEL_8_BREAKING\n      ? validateType(\"TSEntityName\", \"StringLiteral\")\n      : validateType(\"Identifier\", \"StringLiteral\"),\n    body: process.env.BABEL_8_BREAKING\n      ? validateType(\"TSModuleBlock\")\n      : validateType(\"TSModuleBlock\", \"TSModuleDeclaration\"),\n  },\n});\n\ndefineType(\"TSModuleBlock\", {\n  aliases: [\"Scopable\", \"Block\", \"BlockParent\", \"FunctionParent\"],\n  visitor: [\"body\"],\n  fields: {\n    body: validateArrayOfType(\"Statement\"),\n  },\n});\n\ndefineType(\"TSImportType\", {\n  aliases: [\"TSType\"],\n  builder: [\n    \"argument\",\n    \"qualifier\",\n    process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\",\n  ],\n  visitor: [\n    \"argument\",\n    \"options\",\n    \"qualifier\",\n    process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\",\n  ],\n  fields: {\n    argument: process.env.BABEL_8_BREAKING\n      ? validateType(\"TSLiteralType\")\n      : validateType(\"StringLiteral\"),\n    qualifier: validateOptionalType(\"TSEntityName\"),\n    [process.env.BABEL_8_BREAKING ? \"typeArguments\" : \"typeParameters\"]:\n      validateOptionalType(\"TSTypeParameterInstantiation\"),\n    options: {\n      validate: assertNodeType(\"Expression\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSImportEqualsDeclaration\", {\n  aliases: [\"Statement\", \"Declaration\"],\n  visitor: [\"id\", \"moduleReference\"],\n  fields: {\n    ...(process.env.BABEL_8_BREAKING ? {} : { isExport: validate(bool) }),\n    id: validateType(\"Identifier\"),\n    moduleReference: validateType(\"TSEntityName\", \"TSExternalModuleReference\"),\n    importKind: {\n      validate: assertOneOf(\"type\", \"value\"),\n      optional: true,\n    },\n  },\n});\n\ndefineType(\"TSExternalModuleReference\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"StringLiteral\"),\n  },\n});\n\ndefineType(\"TSNonNullExpression\", {\n  aliases: [\"Expression\", \"LVal\", \"PatternLike\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSExportAssignment\", {\n  aliases: [\"Statement\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: validateType(\"Expression\"),\n  },\n});\n\ndefineType(\"TSNamespaceExportDeclaration\", {\n  aliases: [\"Statement\"],\n  visitor: [\"id\"],\n  fields: {\n    id: validateType(\"Identifier\"),\n  },\n});\n\ndefineType(\"TSTypeAnnotation\", {\n  visitor: [\"typeAnnotation\"],\n  fields: {\n    typeAnnotation: {\n      validate: assertNodeType(\"TSType\"),\n    },\n  },\n});\n\ndefineType(\"TSTypeParameterInstantiation\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validateArrayOfType(\"TSType\"),\n  },\n});\n\ndefineType(\"TSTypeParameterDeclaration\", {\n  visitor: [\"params\"],\n  fields: {\n    params: validateArrayOfType(\"TSTypeParameter\"),\n  },\n});\n\ndefineType(\"TSTypeParameter\", {\n  builder: [\"constraint\", \"default\", \"name\"],\n  visitor: process.env.BABEL_8_BREAKING\n    ? [\"name\", \"constraint\", \"default\"]\n    : [\"constraint\", \"default\"],\n  fields: {\n    name: {\n      validate: !process.env.BABEL_8_BREAKING\n        ? assertValueType(\"string\")\n        : assertNodeType(\"Identifier\"),\n    },\n    in: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    out: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    const: {\n      validate: assertValueType(\"boolean\"),\n      optional: true,\n    },\n    constraint: {\n      validate: assertNodeType(\"TSType\"),\n      optional: true,\n    },\n    default: {\n      validate: assertNodeType(\"TSType\"),\n      optional: true,\n    },\n  },\n});\n","import is from \"../validators/is.ts\";\nimport { validateField, validateChild } from \"../validators/validate.ts\";\nimport type * as t from \"../index.ts\";\n\nexport const VISITOR_KEYS: Record<string, string[]> = {};\nexport const ALIAS_KEYS: Partial<Record<NodeTypesWithoutComment, string[]>> =\n  {};\nexport const FLIPPED_ALIAS_KEYS: Record<string, NodeTypesWithoutComment[]> = {};\nexport const NODE_FIELDS: Record<string, FieldDefinitions> = {};\nexport const BUILDER_KEYS: Record<string, string[]> = {};\nexport const DEPRECATED_KEYS: Record<string, NodeTypesWithoutComment> = {};\nexport const NODE_PARENT_VALIDATIONS: Record<string, Validator> = {};\n\nfunction getType(val: any) {\n  if (Array.isArray(val)) {\n    return \"array\";\n  } else if (val === null) {\n    return \"null\";\n  } else {\n    return typeof val;\n  }\n}\n\ntype NodeTypesWithoutComment = t.Node[\"type\"] | keyof t.Aliases;\n\ntype NodeTypes = NodeTypesWithoutComment | t.Comment[\"type\"];\n\ntype PrimitiveTypes = ReturnType<typeof getType>;\n\ntype FieldDefinitions = {\n  [x: string]: FieldOptions;\n};\n\ntype DefineTypeOpts = {\n  fields?: FieldDefinitions;\n  visitor?: Array<string>;\n  aliases?: Array<string>;\n  builder?: Array<string>;\n  inherits?: NodeTypes;\n  deprecatedAlias?: string;\n  validate?: Validator;\n};\n\nexport type Validator = (\n  | { type: PrimitiveTypes }\n  | { each: Validator }\n  | { chainOf: Validator[] }\n  | { oneOf: any[] }\n  | { oneOfNodeTypes: NodeTypes[] }\n  | { oneOfNodeOrValueTypes: (NodeTypes | PrimitiveTypes)[] }\n  | { shapeOf: { [x: string]: FieldOptions } }\n  | object\n) &\n  ((node: t.Node, key: string, val: any) => void);\n\nexport type FieldOptions = {\n  default?: string | number | boolean | [];\n  optional?: boolean;\n  deprecated?: boolean;\n  validate?: Validator;\n};\n\nexport function validate(validate: Validator): FieldOptions {\n  return { validate };\n}\n\nexport function validateType(...typeNames: NodeTypes[]) {\n  return validate(assertNodeType(...typeNames));\n}\n\nexport function validateOptional(validate: Validator): FieldOptions {\n  return { validate, optional: true };\n}\n\nexport function validateOptionalType(...typeNames: NodeTypes[]): FieldOptions {\n  return { validate: assertNodeType(...typeNames), optional: true };\n}\n\nexport function arrayOf(elementType: Validator): Validator {\n  return chain(assertValueType(\"array\"), assertEach(elementType));\n}\n\nexport function arrayOfType(...typeNames: NodeTypes[]) {\n  return arrayOf(assertNodeType(...typeNames));\n}\n\nexport function validateArrayOfType(...typeNames: NodeTypes[]) {\n  return validate(arrayOfType(...typeNames));\n}\n\nexport function assertEach(callback: Validator): Validator {\n  const childValidator = process.env.BABEL_TYPES_8_BREAKING\n    ? validateChild\n    : () => {};\n\n  function validator(node: t.Node, key: string, val: any) {\n    if (!Array.isArray(val)) return;\n\n    for (let i = 0; i < val.length; i++) {\n      const subkey = `${key}[${i}]`;\n      const v = val[i];\n      callback(node, subkey, v);\n      childValidator(node, subkey, v);\n    }\n  }\n  validator.each = callback;\n  return validator;\n}\n\nexport function assertOneOf(...values: Array<any>): Validator {\n  function validate(node: any, key: string, val: any) {\n    if (!values.includes(val)) {\n      throw new TypeError(\n        `Property ${key} expected value to be one of ${JSON.stringify(\n          values,\n        )} but got ${JSON.stringify(val)}`,\n      );\n    }\n  }\n\n  validate.oneOf = values;\n\n  return validate;\n}\n\nexport function assertNodeType(...types: NodeTypes[]): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    for (const type of types) {\n      if (is(type, val)) {\n        validateChild(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(\n      `Property ${key} of ${\n        node.type\n      } expected node to be of a type ${JSON.stringify(\n        types,\n      )} but instead got ${JSON.stringify(val?.type)}`,\n    );\n  }\n\n  validate.oneOfNodeTypes = types;\n\n  return validate;\n}\n\nexport function assertNodeOrValueType(\n  ...types: (NodeTypes | PrimitiveTypes)[]\n): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    for (const type of types) {\n      if (getType(val) === type || is(type, val)) {\n        validateChild(node, key, val);\n        return;\n      }\n    }\n\n    throw new TypeError(\n      `Property ${key} of ${\n        node.type\n      } expected node to be of a type ${JSON.stringify(\n        types,\n      )} but instead got ${JSON.stringify(val?.type)}`,\n    );\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n\n  return validate;\n}\n\nexport function assertValueType(type: PrimitiveTypes): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    const valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError(\n        `Property ${key} expected type of ${type} but got ${getType(val)}`,\n      );\n    }\n  }\n\n  validate.type = type;\n\n  return validate;\n}\n\nexport function assertShape(shape: { [x: string]: FieldOptions }): Validator {\n  function validate(node: t.Node, key: string, val: any) {\n    const errors = [];\n    for (const property of Object.keys(shape)) {\n      try {\n        validateField(node, property, val[property], shape[property]);\n      } catch (error) {\n        if (error instanceof TypeError) {\n          errors.push(error.message);\n          continue;\n        }\n        throw error;\n      }\n    }\n    if (errors.length) {\n      throw new TypeError(\n        `Property ${key} of ${\n          node.type\n        } expected to have the following:\\n${errors.join(\"\\n\")}`,\n      );\n    }\n  }\n\n  validate.shapeOf = shape;\n\n  return validate;\n}\n\nexport function assertOptionalChainStart(): Validator {\n  function validate(node: t.Node) {\n    let current = node;\n    while (node) {\n      const { type } = current;\n      if (type === \"OptionalCallExpression\") {\n        if (current.optional) return;\n        current = current.callee;\n        continue;\n      }\n\n      if (type === \"OptionalMemberExpression\") {\n        if (current.optional) return;\n        current = current.object;\n        continue;\n      }\n\n      break;\n    }\n\n    throw new TypeError(\n      `Non-optional ${node.type} must chain from an optional OptionalMemberExpression or OptionalCallExpression. Found chain from ${current?.type}`,\n    );\n  }\n\n  return validate;\n}\n\nexport function chain(...fns: Array<Validator>): Validator {\n  function validate(...args: Parameters<Validator>) {\n    for (const fn of fns) {\n      fn(...args);\n    }\n  }\n  validate.chainOf = fns;\n\n  if (\n    fns.length >= 2 &&\n    \"type\" in fns[0] &&\n    fns[0].type === \"array\" &&\n    !(\"each\" in fns[1])\n  ) {\n    throw new Error(\n      `An assertValueType(\"array\") validator can only be followed by an assertEach(...) validator.`,\n    );\n  }\n\n  return validate;\n}\n\nconst validTypeOpts = new Set([\n  \"aliases\",\n  \"builder\",\n  \"deprecatedAlias\",\n  \"fields\",\n  \"inherits\",\n  \"visitor\",\n  \"validate\",\n]);\nconst validFieldKeys = new Set([\n  \"default\",\n  \"optional\",\n  \"deprecated\",\n  \"validate\",\n]);\n\nconst store = {} as Record<string, DefineTypeOpts>;\n\n// Wraps defineType to ensure these aliases are included.\nexport function defineAliasedType(...aliases: string[]) {\n  return (type: string, opts: DefineTypeOpts = {}) => {\n    let defined = opts.aliases;\n    if (!defined) {\n      if (opts.inherits) defined = store[opts.inherits].aliases?.slice();\n      defined ??= [];\n      opts.aliases = defined;\n    }\n    const additional = aliases.filter(a => !defined.includes(a));\n    defined.unshift(...additional);\n    defineType(type, opts);\n  };\n}\n\nexport default function defineType(type: string, opts: DefineTypeOpts = {}) {\n  const inherits = (opts.inherits && store[opts.inherits]) || {};\n\n  let fields = opts.fields;\n  if (!fields) {\n    fields = {};\n    if (inherits.fields) {\n      const keys = Object.getOwnPropertyNames(inherits.fields);\n      for (const key of keys) {\n        const field = inherits.fields[key];\n        const def = field.default;\n        if (\n          Array.isArray(def) ? def.length > 0 : def && typeof def === \"object\"\n        ) {\n          throw new Error(\n            \"field defaults can only be primitives or empty arrays currently\",\n          );\n        }\n        fields[key] = {\n          default: Array.isArray(def) ? [] : def,\n          optional: field.optional,\n          deprecated: field.deprecated,\n          validate: field.validate,\n        };\n      }\n    }\n  }\n\n  const visitor: Array<string> = opts.visitor || inherits.visitor || [];\n  const aliases: Array<string> = opts.aliases || inherits.aliases || [];\n  const builder: Array<string> =\n    opts.builder || inherits.builder || opts.visitor || [];\n\n  for (const k of Object.keys(opts)) {\n    if (!validTypeOpts.has(k)) {\n      throw new Error(`Unknown type option \"${k}\" on ${type}`);\n    }\n  }\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type as NodeTypesWithoutComment;\n  }\n\n  // ensure all field keys are represented in `fields`\n  for (const key of visitor.concat(builder)) {\n    fields[key] = fields[key] || {};\n  }\n\n  for (const key of Object.keys(fields)) {\n    const field = fields[key];\n\n    if (field.default !== undefined && !builder.includes(key)) {\n      field.optional = true;\n    }\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate && field.default != null) {\n      field.validate = assertValueType(getType(field.default));\n    }\n\n    for (const k of Object.keys(field)) {\n      if (!validFieldKeys.has(k)) {\n        throw new Error(`Unknown field key \"${k}\" on ${type}.${key}`);\n      }\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor = visitor;\n  BUILDER_KEYS[type] = opts.builder = builder;\n  NODE_FIELDS[type] = opts.fields = fields;\n  ALIAS_KEYS[type as NodeTypesWithoutComment] = opts.aliases = aliases;\n  aliases.forEach(alias => {\n    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];\n    FLIPPED_ALIAS_KEYS[alias].push(type as NodeTypesWithoutComment);\n  });\n\n  if (opts.validate) {\n    NODE_PARENT_VALIDATIONS[type] = opts.validate;\n  }\n\n  store[type] = opts;\n}\n","import { memberExpression } from \"../builders/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Append a node to a member expression.\n */\nexport default function appendToMemberExpression(\n  member: t.MemberExpression,\n  append: t.MemberExpression[\"property\"],\n  computed: boolean = false,\n): t.MemberExpression {\n  member.object = memberExpression(\n    member.object,\n    member.property,\n    member.computed,\n  );\n  member.property = append;\n  member.computed = !!computed;\n\n  return member;\n}\n","import {\n  isAnyTypeAnnotation,\n  isGenericTypeAnnotation,\n  isUnionTypeAnnotation,\n  isFlowBaseAnnotation,\n  isIdentifier,\n} from \"../../validators/generated/index.ts\";\nimport type * as t from \"../../index.ts\";\n\nfunction getQualifiedName(node: t.GenericTypeAnnotation[\"id\"]): string {\n  return isIdentifier(node)\n    ? node.name\n    : `${node.id.name}.${getQualifiedName(node.qualification)}`;\n}\n\n/**\n * Dedupe type annotations.\n */\nexport default function removeTypeDuplicates(\n  nodesIn: ReadonlyArray<t.FlowType | false | null | undefined>,\n): t.FlowType[] {\n  const nodes = Array.from(nodesIn);\n\n  const generics = new Map<string, t.GenericTypeAnnotation>();\n  const bases = new Map<t.FlowBaseAnnotation[\"type\"], t.FlowBaseAnnotation>();\n\n  // store union type groups to circular references\n  const typeGroups = new Set<t.FlowType[]>();\n\n  const types: t.FlowType[] = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    // detect duplicates\n    if (types.includes(node)) {\n      continue;\n    }\n\n    // this type matches anything\n    if (isAnyTypeAnnotation(node)) {\n      return [node];\n    }\n\n    if (isFlowBaseAnnotation(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if (isUnionTypeAnnotation(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n      continue;\n    }\n\n    // find a matching generic type and merge and deduplicate the type parameters\n    if (isGenericTypeAnnotation(node)) {\n      const name = getQualifiedName(node.id);\n\n      if (generics.has(name)) {\n        let existing: t.Flow = generics.get(name);\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params.push(...node.typeParameters.params);\n            existing.typeParameters.params = removeTypeDuplicates(\n              existing.typeParameters.params,\n            );\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  // add back in bases\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  // add back in generics\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}\n","import { INHERIT_KEYS } from \"../constants/index.ts\";\nimport inheritsComments from \"../comments/inheritsComments.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Inherit all contextual properties from `parent` node to `child` node.\n */\nexport default function inherits<T extends t.Node | null | undefined>(\n  child: T,\n  parent: t.Node | null | undefined,\n): T {\n  if (!child || !parent) return child;\n\n  // optionally inherit specific properties if not null\n  for (const key of INHERIT_KEYS.optional) {\n    // @ts-expect-error Fixme: refine parent types\n    if (child[key] == null) {\n      // @ts-expect-error Fixme: refine parent types\n      child[key] = parent[key];\n    }\n  }\n\n  // force inherit \"private\" properties\n  for (const key of Object.keys(parent)) {\n    if (key[0] === \"_\" && key !== \"__clone\") {\n      // @ts-expect-error Fixme: refine parent types\n      child[key] = parent[key];\n    }\n  }\n\n  // force inherit select properties\n  for (const key of INHERIT_KEYS.force) {\n    // @ts-expect-error Fixme: refine parent types\n    child[key] = parent[key];\n  }\n\n  inheritsComments(child, parent);\n\n  return child;\n}\n","import { memberExpression } from \"../builders/generated/index.ts\";\nimport { isSuper } from \"../index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Prepend a node to a member expression.\n */\nexport default function prependToMemberExpression<\n  T extends Pick<t.MemberExpression, \"object\" | \"property\">,\n>(member: T, prepend: t.MemberExpression[\"object\"]): T {\n  if (isSuper(member.object)) {\n    throw new Error(\n      \"Cannot prepend node to super property access (`super.foo`).\",\n    );\n  }\n  member.object = memberExpression(prepend, member.object);\n\n  return member;\n}\n","import { COMMENT_KEYS } from \"../constants/index.ts\";\nimport type * as t from \"../index.ts\";\n\nconst CLEAR_KEYS = [\n  \"tokens\", // only exist in t.File\n  \"start\",\n  \"end\",\n  \"loc\",\n  // Fixme: should be extra.raw / extra.rawValue?\n  \"raw\",\n  \"rawValue\",\n] as const;\n\nconst CLEAR_KEYS_PLUS_COMMENTS = [\n  ...COMMENT_KEYS,\n  \"comments\",\n  ...CLEAR_KEYS,\n] as const;\n\nexport type Options = { preserveComments?: boolean };\n/**\n * Remove all of the _* properties from a node along with the additional metadata\n * properties like location data and raw token data.\n */\nexport default function removeProperties(\n  node: t.Node,\n  opts: Options = {},\n): void {\n  const map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;\n  for (const key of map) {\n    // @ts-expect-error tokens only exist in t.File\n    if (node[key] != null) node[key] = undefined;\n  }\n\n  for (const key of Object.keys(node)) {\n    // @ts-expect-error string can not index node\n    if (key[0] === \"_\" && node[key] != null) node[key] = undefined;\n  }\n\n  const symbols: Array<symbol> = Object.getOwnPropertySymbols(node);\n  for (const sym of symbols) {\n    // @ts-expect-error Fixme: document symbol properties\n    node[sym] = null;\n  }\n}\n","import traverseFast from \"../traverse/traverseFast.ts\";\nimport removeProperties from \"./removeProperties.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function removePropertiesDeep<T extends t.Node>(\n  tree: T,\n  opts?: { preserveComments: boolean } | null,\n): T {\n  traverseFast(tree, removeProperties, opts);\n\n  return tree;\n}\n","import {\n  isIdentifier,\n  isThisExpression,\n  isTSAnyKeyword,\n  isTSTypeReference,\n  isTSUnionType,\n  isTSBaseType,\n} from \"../../validators/generated/index.ts\";\nimport type * as t from \"../../index.ts\";\n\nfunction getQualifiedName(node: t.TSTypeReference[\"typeName\"]): string {\n  return isIdentifier(node)\n    ? node.name\n    : isThisExpression(node)\n      ? \"this\"\n      : `${node.right.name}.${getQualifiedName(node.left)}`;\n}\n\n/**\n * Dedupe type annotations.\n */\nexport default function removeTypeDuplicates(\n  nodesIn: ReadonlyArray<t.TSType>,\n): Array<t.TSType> {\n  const nodes = Array.from(nodesIn);\n\n  const generics = new Map<string, t.TSTypeReference>();\n  const bases = new Map<t.TSBaseType[\"type\"], t.TSBaseType>();\n\n  // store union type groups to circular references\n  const typeGroups = new Set<t.TSType[]>();\n\n  const types: t.TSType[] = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (!node) continue;\n\n    // detect duplicates\n    if (types.includes(node)) {\n      continue;\n    }\n\n    // this type matches anything\n    if (isTSAnyKeyword(node)) {\n      return [node];\n    }\n\n    // Analogue of FlowBaseAnnotation\n    if (isTSBaseType(node)) {\n      bases.set(node.type, node);\n      continue;\n    }\n\n    if (isTSUnionType(node)) {\n      if (!typeGroups.has(node.types)) {\n        nodes.push(...node.types);\n        typeGroups.add(node.types);\n      }\n      continue;\n    }\n\n    // todo: support merging tuples: number[]\n    const typeArgumentsKey = process.env.BABEL_8_BREAKING\n      ? \"typeArguments\"\n      : \"typeParameters\";\n    // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n    if (isTSTypeReference(node) && node[typeArgumentsKey]) {\n      // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n      const typeArguments = node[typeArgumentsKey];\n      const name = getQualifiedName(node.typeName);\n\n      if (generics.has(name)) {\n        let existing: t.TypeScript = generics.get(name);\n        // @ts-ignore(Babel 7 vs Babel 8) Babel 8 AST\n        const existingTypeArguments = existing[typeArgumentsKey];\n        if (existingTypeArguments) {\n          existingTypeArguments.params.push(...typeArguments.params);\n          existingTypeArguments.params = removeTypeDuplicates(\n            existingTypeArguments.params,\n          );\n        } else {\n          existing = typeArguments;\n        }\n      } else {\n        generics.set(name, node);\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  // add back in bases\n  for (const [, baseType] of bases) {\n    types.push(baseType);\n  }\n\n  // add back in generics\n  for (const [, genericName] of generics) {\n    types.push(genericName);\n  }\n\n  return types;\n}\n","import type * as t from \"../index.ts\";\n\n/**\n * For the given node, generate a map from assignment id names to the identifier node.\n * Unlike getBindingIdentifiers, this function does not handle declarations and imports.\n * @param node the assignment expression or forXstatement\n * @returns an object map\n * @see getBindingIdentifiers\n */\nexport default function getAssignmentIdentifiers(\n  node: t.Node | t.Node[],\n): Record<string, t.Identifier> {\n  // null represents holes in an array pattern\n  const search: (t.Node | null)[] = [].concat(node);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.pop();\n    if (!id) continue;\n\n    switch (id.type) {\n      case \"ArrayPattern\":\n        search.push(...id.elements);\n        break;\n\n      case \"AssignmentExpression\":\n      case \"AssignmentPattern\":\n      case \"ForInStatement\":\n      case \"ForOfStatement\":\n        search.push(id.left);\n        break;\n\n      case \"ObjectPattern\":\n        search.push(...id.properties);\n        break;\n\n      case \"ObjectProperty\":\n        search.push(id.value);\n        break;\n\n      case \"RestElement\":\n      case \"UpdateExpression\":\n        search.push(id.argument);\n        break;\n\n      case \"UnaryExpression\":\n        if (id.operator === \"delete\") {\n          search.push(id.argument);\n        }\n        break;\n\n      case \"Identifier\":\n        ids[id.name] = id;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return ids;\n}\n","import {\n  isExportDeclaration,\n  isIdentifier,\n  isClassExpression,\n  isDeclaration,\n  isFunctionDeclaration,\n  isFunctionExpression,\n  isExportAllDeclaration,\n  isAssignmentExpression,\n  isUnaryExpression,\n  isUpdateExpression,\n} from \"../validators/generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport { getBindingIdentifiers as default };\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates: true,\n  outerOnly?: boolean,\n  newBindingsOnly?: boolean,\n): Record<string, Array<t.Identifier>>;\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: false,\n  outerOnly?: boolean,\n  newBindingsOnly?: boolean,\n): Record<string, t.Identifier>;\n\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: boolean,\n  outerOnly?: boolean,\n  newBindingsOnly?: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>>;\n\n/**\n * Return a list of binding identifiers associated with the input `node`.\n */\nfunction getBindingIdentifiers(\n  node: t.Node,\n  duplicates?: boolean,\n  outerOnly?: boolean,\n  newBindingsOnly?: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>> {\n  const search: t.Node[] = [].concat(node);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n\n    if (\n      newBindingsOnly &&\n      // These nodes do not introduce _new_ bindings, but they are included\n      // in getBindingIdentifiers.keys for backwards compatibility.\n      // TODO(@nicolo-ribaudo): Check if we can remove them from .keys in a\n      // backward-compatible way, and if not what we need to do to remove them\n      // in Babel 8.\n      (isAssignmentExpression(id) ||\n        isUnaryExpression(id) ||\n        isUpdateExpression(id))\n    ) {\n      continue;\n    }\n\n    if (isIdentifier(id)) {\n      if (duplicates) {\n        const _ids = (ids[id.name] = ids[id.name] || []);\n        _ids.push(id);\n      } else {\n        ids[id.name] = id;\n      }\n      continue;\n    }\n\n    if (isExportDeclaration(id) && !isExportAllDeclaration(id)) {\n      if (isDeclaration(id.declaration)) {\n        search.push(id.declaration);\n      }\n      continue;\n    }\n\n    if (outerOnly) {\n      if (isFunctionDeclaration(id)) {\n        search.push(id.id);\n        continue;\n      }\n\n      if (\n        isFunctionExpression(id) ||\n        (process.env.BABEL_8_BREAKING && isClassExpression(id))\n      ) {\n        continue;\n      }\n    }\n\n    const keys = getBindingIdentifiers.keys[id.type];\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const nodes =\n          // @ts-expect-error key must present in id\n          id[key] as t.Node[] | t.Node | undefined | null;\n        if (nodes) {\n          if (Array.isArray(nodes)) {\n            search.push(...nodes);\n          } else {\n            search.push(nodes);\n          }\n        }\n      }\n    }\n  }\n  return ids;\n}\n\n/**\n * Mapping of types to their identifier keys.\n */\ntype KeysMap = {\n  [N in t.Node as N[\"type\"]]?: (keyof N)[];\n};\n\nconst keys: KeysMap = {\n  DeclareClass: [\"id\"],\n  DeclareFunction: [\"id\"],\n  DeclareModule: [\"id\"],\n  DeclareVariable: [\"id\"],\n  DeclareInterface: [\"id\"],\n  DeclareTypeAlias: [\"id\"],\n  DeclareOpaqueType: [\"id\"],\n  InterfaceDeclaration: [\"id\"],\n  TypeAlias: [\"id\"],\n  OpaqueType: [\"id\"],\n\n  CatchClause: [\"param\"],\n  LabeledStatement: [\"label\"],\n  UnaryExpression: [\"argument\"],\n  AssignmentExpression: [\"left\"],\n\n  ImportSpecifier: [\"local\"],\n  ImportNamespaceSpecifier: [\"local\"],\n  ImportDefaultSpecifier: [\"local\"],\n  ImportDeclaration: [\"specifiers\"],\n  TSImportEqualsDeclaration: [\"id\"],\n\n  ExportSpecifier: [\"exported\"],\n  ExportNamespaceSpecifier: [\"exported\"],\n  ExportDefaultSpecifier: [\"exported\"],\n\n  FunctionDeclaration: [\"id\", \"params\"],\n  FunctionExpression: [\"id\", \"params\"],\n  ArrowFunctionExpression: [\"params\"],\n  ObjectMethod: [\"params\"],\n  ClassMethod: [\"params\"],\n  ClassPrivateMethod: [\"params\"],\n\n  ForInStatement: [\"left\"],\n  ForOfStatement: [\"left\"],\n\n  ClassDeclaration: [\"id\"],\n  ClassExpression: [\"id\"],\n\n  RestElement: [\"argument\"],\n  UpdateExpression: [\"argument\"],\n\n  ObjectProperty: [\"value\"],\n\n  AssignmentPattern: [\"left\"],\n  ArrayPattern: [\"elements\"],\n  ObjectPattern: [\"properties\"],\n\n  VariableDeclaration: [\"declarations\"],\n  VariableDeclarator: [\"id\"],\n};\n\ngetBindingIdentifiers.keys = keys;\n","import type * as t from \"../index.ts\";\n\nimport {\n  isAssignmentExpression,\n  isClassMethod,\n  isIdentifier,\n  isLiteral,\n  isNullLiteral,\n  isObjectMethod,\n  isObjectProperty,\n  isPrivateName,\n  isRegExpLiteral,\n  isTemplateLiteral,\n  isVariableDeclarator,\n} from \"../validators/generated/index.ts\";\n\nfunction getNameFromLiteralId(id: t.Literal): string {\n  if (isNullLiteral(id)) {\n    return \"null\";\n  }\n\n  if (isRegExpLiteral(id)) {\n    return `/${id.pattern}/${id.flags}`;\n  }\n\n  if (isTemplateLiteral(id)) {\n    return id.quasis.map(quasi => quasi.value.raw).join(\"\");\n  }\n\n  if (id.value !== undefined) {\n    return String(id.value);\n  }\n\n  return null;\n}\n\nfunction getObjectMemberKey(\n  node: t.ObjectProperty | t.ObjectMethod | t.ClassProperty | t.ClassMethod,\n): t.Expression | t.PrivateName {\n  if (!node.computed || isLiteral(node.key)) {\n    return node.key;\n  }\n}\n\ntype GetFunctionNameResult = {\n  name: string;\n  originalNode: t.Node;\n} | null;\n\nexport default function getFunctionName(\n  node: t.ObjectMethod | t.ClassMethod,\n): GetFunctionNameResult;\nexport default function getFunctionName(\n  node: t.Function | t.Class,\n  parent: t.Node,\n): GetFunctionNameResult;\nexport default function getFunctionName(\n  node: t.Function | t.Class,\n  parent?: t.Node,\n): GetFunctionNameResult {\n  if (\"id\" in node && node.id) {\n    return {\n      name: node.id.name,\n      originalNode: node.id,\n    };\n  }\n\n  let prefix = \"\";\n\n  let id;\n  if (isObjectProperty(parent, { value: node })) {\n    // { foo: () => {} };\n    id = getObjectMemberKey(parent);\n  } else if (isObjectMethod(node) || isClassMethod(node)) {\n    // { foo() {} };\n    id = getObjectMemberKey(node);\n    if (node.kind === \"get\") prefix = \"get \";\n    else if (node.kind === \"set\") prefix = \"set \";\n  } else if (isVariableDeclarator(parent, { init: node })) {\n    // let foo = function () {};\n    id = parent.id;\n  } else if (isAssignmentExpression(parent, { operator: \"=\", right: node })) {\n    // foo = function () {};\n    id = parent.left;\n  }\n\n  if (!id) return null;\n\n  const name = isLiteral(id)\n    ? getNameFromLiteralId(id)\n    : isIdentifier(id)\n      ? id.name\n      : isPrivateName(id)\n        ? id.id.name\n        : null;\n  if (name == null) return null;\n\n  return { name: prefix + name, originalNode: id };\n}\n","import getBindingIdentifiers from \"./getBindingIdentifiers.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default getOuterBindingIdentifiers as {\n  (node: t.Node, duplicates: true): Record<string, Array<t.Identifier>>;\n  (node: t.Node, duplicates?: false): Record<string, t.Identifier>;\n  (\n    node: t.Node,\n    duplicates?: boolean,\n  ): Record<string, t.Identifier> | Record<string, Array<t.Identifier>>;\n};\n\nfunction getOuterBindingIdentifiers(\n  node: t.Node,\n  duplicates: boolean,\n): Record<string, t.Identifier> | Record<string, Array<t.Identifier>> {\n  return getBindingIdentifiers(node, duplicates, true);\n}\n","import { VISITOR_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport type TraversalAncestors = Array<{\n  node: t.Node;\n  key: string;\n  index?: number;\n}>;\n\nexport type TraversalHandler<T> = (\n  this: undefined,\n  node: t.Node,\n  parent: TraversalAncestors,\n  state: T,\n) => void;\n\nexport type TraversalHandlers<T> = {\n  enter?: TraversalHandler<T>;\n  exit?: TraversalHandler<T>;\n};\n\n/**\n * A general AST traversal with both prefix and postfix handlers, and a\n * state object. Exposes ancestry data to each handler so that more complex\n * AST data can be taken into account.\n */\nexport default function traverse<T>(\n  node: t.Node,\n  handlers: TraversalHandler<T> | TraversalHandlers<T>,\n  state?: T,\n): void {\n  if (typeof handlers === \"function\") {\n    handlers = { enter: handlers };\n  }\n\n  const { enter, exit } = handlers;\n\n  traverseSimpleImpl(node, enter, exit, state, []);\n}\n\nfunction traverseSimpleImpl<T>(\n  node: any,\n  enter: Function | undefined,\n  exit: Function | undefined,\n  state: T | undefined,\n  ancestors: TraversalAncestors,\n) {\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n\n  if (enter) enter(node, ancestors, state);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (let i = 0; i < subNode.length; i++) {\n        const child = subNode[i];\n        if (!child) continue;\n\n        ancestors.push({\n          node,\n          key,\n          index: i,\n        });\n\n        traverseSimpleImpl(child, enter, exit, state, ancestors);\n\n        ancestors.pop();\n      }\n    } else if (subNode) {\n      ancestors.push({\n        node,\n        key,\n      });\n\n      traverseSimpleImpl(subNode, enter, exit, state, ancestors);\n\n      ancestors.pop();\n    }\n  }\n\n  if (exit) exit(node, ancestors, state);\n}\n","import { VISITOR_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * A prefix AST traversal implementation meant for simple searching\n * and processing.\n */\nexport default function traverseFast<Options = object>(\n  node: t.Node | null | undefined,\n  enter: (node: t.Node, opts?: Options) => void,\n  opts?: Options,\n): void {\n  if (!node) return;\n\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n\n  opts = opts || ({} as Options);\n  enter(node, opts);\n\n  for (const key of keys) {\n    const subNode: t.Node | undefined | null =\n      // @ts-expect-error key must present in node\n      node[key];\n\n    if (Array.isArray(subNode)) {\n      for (const node of subNode) {\n        traverseFast(node, enter, opts);\n      }\n    } else {\n      traverseFast(subNode, enter, opts);\n    }\n  }\n}\n","const warnings = new Set();\n\nexport default function deprecationWarning(\n  oldName: string,\n  newName: string,\n  prefix: string = \"\",\n) {\n  if (warnings.has(oldName)) return;\n  warnings.add(oldName);\n\n  const { internal, trace } = captureShortStackTrace(1, 2);\n  if (internal) {\n    // If usage comes from an internal package, there is no point in warning because\n    // 1. The new version of the package will already use the new API\n    // 2. When the deprecation will become an error (in a future major version), users\n    //    will have to update every package anyway.\n    return;\n  }\n  console.warn(\n    `${prefix}\\`${oldName}\\` has been deprecated, please migrate to \\`${newName}\\`\\n${trace}`,\n  );\n}\n\nfunction captureShortStackTrace(skip: number, length: number) {\n  const { stackTraceLimit, prepareStackTrace } = Error;\n  let stackTrace: NodeJS.CallSite[];\n  // We add 1 to also take into account this function.\n  Error.stackTraceLimit = 1 + skip + length;\n  Error.prepareStackTrace = function (err, stack) {\n    stackTrace = stack;\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  new Error().stack;\n  Error.stackTraceLimit = stackTraceLimit;\n  Error.prepareStackTrace = prepareStackTrace;\n\n  if (!stackTrace) return { internal: false, trace: \"\" };\n\n  const shortStackTrace = stackTrace.slice(1 + skip, 1 + skip + length);\n  return {\n    internal: /[\\\\/]@babel[\\\\/]/.test(shortStackTrace[1].getFileName()),\n    trace: shortStackTrace.map(frame => `    at ${frame}`).join(\"\\n\"),\n  };\n}\n","import type * as t from \"../index.ts\";\n\nexport default function inherit<\n  C extends t.Node | undefined,\n  P extends t.Node | undefined,\n>(key: keyof C & keyof P, child: C, parent: P): void {\n  if (child && parent) {\n    // @ts-expect-error Could further refine key definitions\n    child[key] = Array.from(\n      new Set([].concat(child[key], parent[key]).filter(Boolean)),\n    );\n  }\n}\n","import { stringLiteral } from \"../../builders/generated/index.ts\";\nimport type * as t from \"../../index.ts\";\nimport { inherits } from \"../../index.ts\";\n\nexport default function cleanJSXElementLiteralChild(\n  child: t.JSXText,\n  args: Array<t.Node>,\n) {\n  const lines = child.value.split(/\\r\\n|\\n|\\r/);\n\n  let lastNonEmptyLine = 0;\n\n  for (let i = 0; i < lines.length; i++) {\n    if (/[^ \\t]/.exec(lines[i])) {\n      lastNonEmptyLine = i;\n    }\n  }\n\n  let str = \"\";\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n\n    const isFirstLine = i === 0;\n    const isLastLine = i === lines.length - 1;\n    const isLastNonEmptyLine = i === lastNonEmptyLine;\n\n    // replace rendered whitespace tabs with spaces\n    let trimmedLine = line.replace(/\\t/g, \" \");\n\n    // trim whitespace touching a newline\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^ +/, \"\");\n    }\n\n    // trim whitespace touching an endline\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/ +$/, \"\");\n    }\n\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += \" \";\n      }\n\n      str += trimmedLine;\n    }\n  }\n\n  if (str) args.push(inherits(stringLiteral(str), child));\n}\n","export default function shallowEqual<T extends object>(\n  actual: object,\n  expected: T,\n): actual is T {\n  const keys = Object.keys(expected) as (keyof T)[];\n\n  for (const key of keys) {\n    if (\n      // @ts-expect-error maybe we should check whether key exists first\n      actual[key] !== expected[key]\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import matchesPattern from \"./matchesPattern.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Build a function that when called will return whether or not the\n * input `node` `MemberExpression` matches the input `match`.\n *\n * For example, given the match `React.createClass` it would match the\n * parsed nodes of `React.createClass` and `React[\"createClass\"]`.\n */\nexport default function buildMatchMemberExpression(\n  match: string,\n  allowPartial?: boolean,\n) {\n  const parts = match.split(\".\");\n\n  return (member: t.Node) => matchesPattern(member, parts, allowPartial);\n}\n","/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\n\n/* eslint-disable no-fallthrough */\n\nimport shallowEqual from \"../../utils/shallowEqual.ts\";\nimport type * as t from \"../../index.ts\";\nimport deprecationWarning from \"../../utils/deprecationWarning.ts\";\n\ntype Opts<Obj> = Partial<{\n  [Prop in keyof Obj]: Obj[Prop] extends t.Node\n    ? t.Node\n    : Obj[Prop] extends t.Node[]\n      ? t.Node[]\n      : Obj[Prop];\n}>;\n\nexport function isArrayExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrayExpression> | null,\n): node is t.ArrayExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ArrayExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAssignmentExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AssignmentExpression> | null,\n): node is t.AssignmentExpression {\n  if (!node) return false;\n\n  if (node.type !== \"AssignmentExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBinaryExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BinaryExpression> | null,\n): node is t.BinaryExpression {\n  if (!node) return false;\n\n  if (node.type !== \"BinaryExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterpreterDirective(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterpreterDirective> | null,\n): node is t.InterpreterDirective {\n  if (!node) return false;\n\n  if (node.type !== \"InterpreterDirective\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDirective(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Directive> | null,\n): node is t.Directive {\n  if (!node) return false;\n\n  if (node.type !== \"Directive\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDirectiveLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DirectiveLiteral> | null,\n): node is t.DirectiveLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"DirectiveLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBlockStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BlockStatement> | null,\n): node is t.BlockStatement {\n  if (!node) return false;\n\n  if (node.type !== \"BlockStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBreakStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BreakStatement> | null,\n): node is t.BreakStatement {\n  if (!node) return false;\n\n  if (node.type !== \"BreakStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isCallExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.CallExpression> | null,\n): node is t.CallExpression {\n  if (!node) return false;\n\n  if (node.type !== \"CallExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isCatchClause(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.CatchClause> | null,\n): node is t.CatchClause {\n  if (!node) return false;\n\n  if (node.type !== \"CatchClause\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isConditionalExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ConditionalExpression> | null,\n): node is t.ConditionalExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ConditionalExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isContinueStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ContinueStatement> | null,\n): node is t.ContinueStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ContinueStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDebuggerStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DebuggerStatement> | null,\n): node is t.DebuggerStatement {\n  if (!node) return false;\n\n  if (node.type !== \"DebuggerStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDoWhileStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DoWhileStatement> | null,\n): node is t.DoWhileStatement {\n  if (!node) return false;\n\n  if (node.type !== \"DoWhileStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEmptyStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EmptyStatement> | null,\n): node is t.EmptyStatement {\n  if (!node) return false;\n\n  if (node.type !== \"EmptyStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExpressionStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExpressionStatement> | null,\n): node is t.ExpressionStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ExpressionStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFile(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.File> | null,\n): node is t.File {\n  if (!node) return false;\n\n  if (node.type !== \"File\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForInStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForInStatement> | null,\n): node is t.ForInStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ForInStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForStatement> | null,\n): node is t.ForStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ForStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionDeclaration> | null,\n): node is t.FunctionDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionExpression> | null,\n): node is t.FunctionExpression {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Identifier> | null,\n): node is t.Identifier {\n  if (!node) return false;\n\n  if (node.type !== \"Identifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIfStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.IfStatement> | null,\n): node is t.IfStatement {\n  if (!node) return false;\n\n  if (node.type !== \"IfStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLabeledStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.LabeledStatement> | null,\n): node is t.LabeledStatement {\n  if (!node) return false;\n\n  if (node.type !== \"LabeledStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStringLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StringLiteral> | null,\n): node is t.StringLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"StringLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNumericLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumericLiteral> | null,\n): node is t.NumericLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"NumericLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNullLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NullLiteral> | null,\n): node is t.NullLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"NullLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBooleanLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BooleanLiteral> | null,\n): node is t.BooleanLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"BooleanLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isRegExpLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RegExpLiteral> | null,\n): node is t.RegExpLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"RegExpLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLogicalExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.LogicalExpression> | null,\n): node is t.LogicalExpression {\n  if (!node) return false;\n\n  if (node.type !== \"LogicalExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMemberExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.MemberExpression> | null,\n): node is t.MemberExpression {\n  if (!node) return false;\n\n  if (node.type !== \"MemberExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNewExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NewExpression> | null,\n): node is t.NewExpression {\n  if (!node) return false;\n\n  if (node.type !== \"NewExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isProgram(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Program> | null,\n): node is t.Program {\n  if (!node) return false;\n\n  if (node.type !== \"Program\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectExpression> | null,\n): node is t.ObjectExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectMethod> | null,\n): node is t.ObjectMethod {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectProperty> | null,\n): node is t.ObjectProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isRestElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RestElement> | null,\n): node is t.RestElement {\n  if (!node) return false;\n\n  if (node.type !== \"RestElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isReturnStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ReturnStatement> | null,\n): node is t.ReturnStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ReturnStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSequenceExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SequenceExpression> | null,\n): node is t.SequenceExpression {\n  if (!node) return false;\n\n  if (node.type !== \"SequenceExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isParenthesizedExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ParenthesizedExpression> | null,\n): node is t.ParenthesizedExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ParenthesizedExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSwitchCase(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SwitchCase> | null,\n): node is t.SwitchCase {\n  if (!node) return false;\n\n  if (node.type !== \"SwitchCase\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSwitchStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SwitchStatement> | null,\n): node is t.SwitchStatement {\n  if (!node) return false;\n\n  if (node.type !== \"SwitchStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isThisExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ThisExpression> | null,\n): node is t.ThisExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ThisExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isThrowStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ThrowStatement> | null,\n): node is t.ThrowStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ThrowStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTryStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TryStatement> | null,\n): node is t.TryStatement {\n  if (!node) return false;\n\n  if (node.type !== \"TryStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUnaryExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UnaryExpression> | null,\n): node is t.UnaryExpression {\n  if (!node) return false;\n\n  if (node.type !== \"UnaryExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUpdateExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UpdateExpression> | null,\n): node is t.UpdateExpression {\n  if (!node) return false;\n\n  if (node.type !== \"UpdateExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVariableDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.VariableDeclaration> | null,\n): node is t.VariableDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"VariableDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVariableDeclarator(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.VariableDeclarator> | null,\n): node is t.VariableDeclarator {\n  if (!node) return false;\n\n  if (node.type !== \"VariableDeclarator\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isWhileStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.WhileStatement> | null,\n): node is t.WhileStatement {\n  if (!node) return false;\n\n  if (node.type !== \"WhileStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isWithStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.WithStatement> | null,\n): node is t.WithStatement {\n  if (!node) return false;\n\n  if (node.type !== \"WithStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAssignmentPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AssignmentPattern> | null,\n): node is t.AssignmentPattern {\n  if (!node) return false;\n\n  if (node.type !== \"AssignmentPattern\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArrayPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrayPattern> | null,\n): node is t.ArrayPattern {\n  if (!node) return false;\n\n  if (node.type !== \"ArrayPattern\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArrowFunctionExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrowFunctionExpression> | null,\n): node is t.ArrowFunctionExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ArrowFunctionExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassBody> | null,\n): node is t.ClassBody {\n  if (!node) return false;\n\n  if (node.type !== \"ClassBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassExpression> | null,\n): node is t.ClassExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ClassExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassDeclaration> | null,\n): node is t.ClassDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ClassDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportAllDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportAllDeclaration> | null,\n): node is t.ExportAllDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ExportAllDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportDefaultDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportDefaultDeclaration> | null,\n): node is t.ExportDefaultDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ExportDefaultDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportNamedDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportNamedDeclaration> | null,\n): node is t.ExportNamedDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ExportNamedDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportSpecifier> | null,\n): node is t.ExportSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ExportSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForOfStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForOfStatement> | null,\n): node is t.ForOfStatement {\n  if (!node) return false;\n\n  if (node.type !== \"ForOfStatement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportDeclaration> | null,\n): node is t.ImportDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"ImportDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportDefaultSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportDefaultSpecifier> | null,\n): node is t.ImportDefaultSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ImportDefaultSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportNamespaceSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportNamespaceSpecifier> | null,\n): node is t.ImportNamespaceSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ImportNamespaceSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportSpecifier> | null,\n): node is t.ImportSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ImportSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportExpression> | null,\n): node is t.ImportExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ImportExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMetaProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.MetaProperty> | null,\n): node is t.MetaProperty {\n  if (!node) return false;\n\n  if (node.type !== \"MetaProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassMethod> | null,\n): node is t.ClassMethod {\n  if (!node) return false;\n\n  if (node.type !== \"ClassMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectPattern> | null,\n): node is t.ObjectPattern {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectPattern\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSpreadElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SpreadElement> | null,\n): node is t.SpreadElement {\n  if (!node) return false;\n\n  if (node.type !== \"SpreadElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSuper(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Super> | null,\n): node is t.Super {\n  if (!node) return false;\n\n  if (node.type !== \"Super\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTaggedTemplateExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TaggedTemplateExpression> | null,\n): node is t.TaggedTemplateExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TaggedTemplateExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTemplateElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TemplateElement> | null,\n): node is t.TemplateElement {\n  if (!node) return false;\n\n  if (node.type !== \"TemplateElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTemplateLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TemplateLiteral> | null,\n): node is t.TemplateLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"TemplateLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isYieldExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.YieldExpression> | null,\n): node is t.YieldExpression {\n  if (!node) return false;\n\n  if (node.type !== \"YieldExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAwaitExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AwaitExpression> | null,\n): node is t.AwaitExpression {\n  if (!node) return false;\n\n  if (node.type !== \"AwaitExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImport(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Import> | null,\n): node is t.Import {\n  if (!node) return false;\n\n  if (node.type !== \"Import\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBigIntLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BigIntLiteral> | null,\n): node is t.BigIntLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"BigIntLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportNamespaceSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportNamespaceSpecifier> | null,\n): node is t.ExportNamespaceSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ExportNamespaceSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOptionalMemberExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OptionalMemberExpression> | null,\n): node is t.OptionalMemberExpression {\n  if (!node) return false;\n\n  if (node.type !== \"OptionalMemberExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOptionalCallExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OptionalCallExpression> | null,\n): node is t.OptionalCallExpression {\n  if (!node) return false;\n\n  if (node.type !== \"OptionalCallExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassProperty> | null,\n): node is t.ClassProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ClassProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassAccessorProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassAccessorProperty> | null,\n): node is t.ClassAccessorProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ClassAccessorProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassPrivateProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassPrivateProperty> | null,\n): node is t.ClassPrivateProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ClassPrivateProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassPrivateMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassPrivateMethod> | null,\n): node is t.ClassPrivateMethod {\n  if (!node) return false;\n\n  if (node.type !== \"ClassPrivateMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPrivateName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PrivateName> | null,\n): node is t.PrivateName {\n  if (!node) return false;\n\n  if (node.type !== \"PrivateName\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStaticBlock(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StaticBlock> | null,\n): node is t.StaticBlock {\n  if (!node) return false;\n\n  if (node.type !== \"StaticBlock\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAnyTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.AnyTypeAnnotation> | null,\n): node is t.AnyTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"AnyTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArrayTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArrayTypeAnnotation> | null,\n): node is t.ArrayTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ArrayTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBooleanTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BooleanTypeAnnotation> | null,\n): node is t.BooleanTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"BooleanTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBooleanLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BooleanLiteralTypeAnnotation> | null,\n): node is t.BooleanLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"BooleanLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNullLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NullLiteralTypeAnnotation> | null,\n): node is t.NullLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NullLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClassImplements(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ClassImplements> | null,\n): node is t.ClassImplements {\n  if (!node) return false;\n\n  if (node.type !== \"ClassImplements\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareClass(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareClass> | null,\n): node is t.DeclareClass {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareClass\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareFunction> | null,\n): node is t.DeclareFunction {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareFunction\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareInterface(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareInterface> | null,\n): node is t.DeclareInterface {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareInterface\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareModule(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareModule> | null,\n): node is t.DeclareModule {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareModule\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareModuleExports(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareModuleExports> | null,\n): node is t.DeclareModuleExports {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareModuleExports\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareTypeAlias(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareTypeAlias> | null,\n): node is t.DeclareTypeAlias {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareTypeAlias\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareOpaqueType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareOpaqueType> | null,\n): node is t.DeclareOpaqueType {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareOpaqueType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareVariable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareVariable> | null,\n): node is t.DeclareVariable {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareVariable\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareExportDeclaration> | null,\n): node is t.DeclareExportDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareExportDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclareExportAllDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclareExportAllDeclaration> | null,\n): node is t.DeclareExportAllDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"DeclareExportAllDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclaredPredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DeclaredPredicate> | null,\n): node is t.DeclaredPredicate {\n  if (!node) return false;\n\n  if (node.type !== \"DeclaredPredicate\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExistsTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExistsTypeAnnotation> | null,\n): node is t.ExistsTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ExistsTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionTypeAnnotation> | null,\n): node is t.FunctionTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionTypeParam(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionTypeParam> | null,\n): node is t.FunctionTypeParam {\n  if (!node) return false;\n\n  if (node.type !== \"FunctionTypeParam\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isGenericTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.GenericTypeAnnotation> | null,\n): node is t.GenericTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"GenericTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInferredPredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InferredPredicate> | null,\n): node is t.InferredPredicate {\n  if (!node) return false;\n\n  if (node.type !== \"InferredPredicate\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterfaceExtends(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterfaceExtends> | null,\n): node is t.InterfaceExtends {\n  if (!node) return false;\n\n  if (node.type !== \"InterfaceExtends\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterfaceDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterfaceDeclaration> | null,\n): node is t.InterfaceDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"InterfaceDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isInterfaceTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.InterfaceTypeAnnotation> | null,\n): node is t.InterfaceTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"InterfaceTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIntersectionTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.IntersectionTypeAnnotation> | null,\n): node is t.IntersectionTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"IntersectionTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMixedTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.MixedTypeAnnotation> | null,\n): node is t.MixedTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"MixedTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEmptyTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EmptyTypeAnnotation> | null,\n): node is t.EmptyTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"EmptyTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNullableTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NullableTypeAnnotation> | null,\n): node is t.NullableTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NullableTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNumberLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumberLiteralTypeAnnotation> | null,\n): node is t.NumberLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NumberLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNumberTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumberTypeAnnotation> | null,\n): node is t.NumberTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"NumberTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeAnnotation> | null,\n): node is t.ObjectTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeInternalSlot(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeInternalSlot> | null,\n): node is t.ObjectTypeInternalSlot {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeInternalSlot\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeCallProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeCallProperty> | null,\n): node is t.ObjectTypeCallProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeCallProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeIndexer(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeIndexer> | null,\n): node is t.ObjectTypeIndexer {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeIndexer\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeProperty> | null,\n): node is t.ObjectTypeProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectTypeSpreadProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectTypeSpreadProperty> | null,\n): node is t.ObjectTypeSpreadProperty {\n  if (!node) return false;\n\n  if (node.type !== \"ObjectTypeSpreadProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOpaqueType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OpaqueType> | null,\n): node is t.OpaqueType {\n  if (!node) return false;\n\n  if (node.type !== \"OpaqueType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isQualifiedTypeIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.QualifiedTypeIdentifier> | null,\n): node is t.QualifiedTypeIdentifier {\n  if (!node) return false;\n\n  if (node.type !== \"QualifiedTypeIdentifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStringLiteralTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StringLiteralTypeAnnotation> | null,\n): node is t.StringLiteralTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"StringLiteralTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStringTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.StringTypeAnnotation> | null,\n): node is t.StringTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"StringTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isSymbolTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SymbolTypeAnnotation> | null,\n): node is t.SymbolTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"SymbolTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isThisTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ThisTypeAnnotation> | null,\n): node is t.ThisTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"ThisTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTupleTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TupleTypeAnnotation> | null,\n): node is t.TupleTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TupleTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeofTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeofTypeAnnotation> | null,\n): node is t.TypeofTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TypeofTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeAlias(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeAlias> | null,\n): node is t.TypeAlias {\n  if (!node) return false;\n\n  if (node.type !== \"TypeAlias\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeAnnotation> | null,\n): node is t.TypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeCastExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeCastExpression> | null,\n): node is t.TypeCastExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TypeCastExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeParameter(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeParameter> | null,\n): node is t.TypeParameter {\n  if (!node) return false;\n\n  if (node.type !== \"TypeParameter\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeParameterDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeParameterDeclaration> | null,\n): node is t.TypeParameterDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TypeParameterDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeParameterInstantiation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeParameterInstantiation> | null,\n): node is t.TypeParameterInstantiation {\n  if (!node) return false;\n\n  if (node.type !== \"TypeParameterInstantiation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUnionTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UnionTypeAnnotation> | null,\n): node is t.UnionTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"UnionTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVariance(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Variance> | null,\n): node is t.Variance {\n  if (!node) return false;\n\n  if (node.type !== \"Variance\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isVoidTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.VoidTypeAnnotation> | null,\n): node is t.VoidTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"VoidTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumDeclaration> | null,\n): node is t.EnumDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"EnumDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumBooleanBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumBooleanBody> | null,\n): node is t.EnumBooleanBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumBooleanBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumNumberBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumNumberBody> | null,\n): node is t.EnumNumberBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumNumberBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumStringBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumStringBody> | null,\n): node is t.EnumStringBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumStringBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumSymbolBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumSymbolBody> | null,\n): node is t.EnumSymbolBody {\n  if (!node) return false;\n\n  if (node.type !== \"EnumSymbolBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumBooleanMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumBooleanMember> | null,\n): node is t.EnumBooleanMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumBooleanMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumNumberMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumNumberMember> | null,\n): node is t.EnumNumberMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumNumberMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumStringMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumStringMember> | null,\n): node is t.EnumStringMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumStringMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumDefaultedMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumDefaultedMember> | null,\n): node is t.EnumDefaultedMember {\n  if (!node) return false;\n\n  if (node.type !== \"EnumDefaultedMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isIndexedAccessType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.IndexedAccessType> | null,\n): node is t.IndexedAccessType {\n  if (!node) return false;\n\n  if (node.type !== \"IndexedAccessType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isOptionalIndexedAccessType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.OptionalIndexedAccessType> | null,\n): node is t.OptionalIndexedAccessType {\n  if (!node) return false;\n\n  if (node.type !== \"OptionalIndexedAccessType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXAttribute(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXAttribute> | null,\n): node is t.JSXAttribute {\n  if (!node) return false;\n\n  if (node.type !== \"JSXAttribute\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXClosingElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXClosingElement> | null,\n): node is t.JSXClosingElement {\n  if (!node) return false;\n\n  if (node.type !== \"JSXClosingElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXElement> | null,\n): node is t.JSXElement {\n  if (!node) return false;\n\n  if (node.type !== \"JSXElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXEmptyExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXEmptyExpression> | null,\n): node is t.JSXEmptyExpression {\n  if (!node) return false;\n\n  if (node.type !== \"JSXEmptyExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXExpressionContainer(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXExpressionContainer> | null,\n): node is t.JSXExpressionContainer {\n  if (!node) return false;\n\n  if (node.type !== \"JSXExpressionContainer\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXSpreadChild(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXSpreadChild> | null,\n): node is t.JSXSpreadChild {\n  if (!node) return false;\n\n  if (node.type !== \"JSXSpreadChild\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXIdentifier> | null,\n): node is t.JSXIdentifier {\n  if (!node) return false;\n\n  if (node.type !== \"JSXIdentifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXMemberExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXMemberExpression> | null,\n): node is t.JSXMemberExpression {\n  if (!node) return false;\n\n  if (node.type !== \"JSXMemberExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXNamespacedName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXNamespacedName> | null,\n): node is t.JSXNamespacedName {\n  if (!node) return false;\n\n  if (node.type !== \"JSXNamespacedName\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXOpeningElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXOpeningElement> | null,\n): node is t.JSXOpeningElement {\n  if (!node) return false;\n\n  if (node.type !== \"JSXOpeningElement\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXSpreadAttribute(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXSpreadAttribute> | null,\n): node is t.JSXSpreadAttribute {\n  if (!node) return false;\n\n  if (node.type !== \"JSXSpreadAttribute\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXText(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXText> | null,\n): node is t.JSXText {\n  if (!node) return false;\n\n  if (node.type !== \"JSXText\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXFragment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXFragment> | null,\n): node is t.JSXFragment {\n  if (!node) return false;\n\n  if (node.type !== \"JSXFragment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXOpeningFragment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXOpeningFragment> | null,\n): node is t.JSXOpeningFragment {\n  if (!node) return false;\n\n  if (node.type !== \"JSXOpeningFragment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSXClosingFragment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSXClosingFragment> | null,\n): node is t.JSXClosingFragment {\n  if (!node) return false;\n\n  if (node.type !== \"JSXClosingFragment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isNoop(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Noop> | null,\n): node is t.Noop {\n  if (!node) return false;\n\n  if (node.type !== \"Noop\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPlaceholder(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Placeholder> | null,\n): node is t.Placeholder {\n  if (!node) return false;\n\n  if (node.type !== \"Placeholder\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isV8IntrinsicIdentifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.V8IntrinsicIdentifier> | null,\n): node is t.V8IntrinsicIdentifier {\n  if (!node) return false;\n\n  if (node.type !== \"V8IntrinsicIdentifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isArgumentPlaceholder(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ArgumentPlaceholder> | null,\n): node is t.ArgumentPlaceholder {\n  if (!node) return false;\n\n  if (node.type !== \"ArgumentPlaceholder\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBindExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BindExpression> | null,\n): node is t.BindExpression {\n  if (!node) return false;\n\n  if (node.type !== \"BindExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportAttribute(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportAttribute> | null,\n): node is t.ImportAttribute {\n  if (!node) return false;\n\n  if (node.type !== \"ImportAttribute\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDecorator(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Decorator> | null,\n): node is t.Decorator {\n  if (!node) return false;\n\n  if (node.type !== \"Decorator\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDoExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DoExpression> | null,\n): node is t.DoExpression {\n  if (!node) return false;\n\n  if (node.type !== \"DoExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportDefaultSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportDefaultSpecifier> | null,\n): node is t.ExportDefaultSpecifier {\n  if (!node) return false;\n\n  if (node.type !== \"ExportDefaultSpecifier\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isRecordExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RecordExpression> | null,\n): node is t.RecordExpression {\n  if (!node) return false;\n\n  if (node.type !== \"RecordExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTupleExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TupleExpression> | null,\n): node is t.TupleExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TupleExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDecimalLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.DecimalLiteral> | null,\n): node is t.DecimalLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"DecimalLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isModuleExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ModuleExpression> | null,\n): node is t.ModuleExpression {\n  if (!node) return false;\n\n  if (node.type !== \"ModuleExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTopicReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TopicReference> | null,\n): node is t.TopicReference {\n  if (!node) return false;\n\n  if (node.type !== \"TopicReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPipelineTopicExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PipelineTopicExpression> | null,\n): node is t.PipelineTopicExpression {\n  if (!node) return false;\n\n  if (node.type !== \"PipelineTopicExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPipelineBareFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PipelineBareFunction> | null,\n): node is t.PipelineBareFunction {\n  if (!node) return false;\n\n  if (node.type !== \"PipelineBareFunction\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPipelinePrimaryTopicReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PipelinePrimaryTopicReference> | null,\n): node is t.PipelinePrimaryTopicReference {\n  if (!node) return false;\n\n  if (node.type !== \"PipelinePrimaryTopicReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSParameterProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSParameterProperty> | null,\n): node is t.TSParameterProperty {\n  if (!node) return false;\n\n  if (node.type !== \"TSParameterProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSDeclareFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSDeclareFunction> | null,\n): node is t.TSDeclareFunction {\n  if (!node) return false;\n\n  if (node.type !== \"TSDeclareFunction\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSDeclareMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSDeclareMethod> | null,\n): node is t.TSDeclareMethod {\n  if (!node) return false;\n\n  if (node.type !== \"TSDeclareMethod\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSQualifiedName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSQualifiedName> | null,\n): node is t.TSQualifiedName {\n  if (!node) return false;\n\n  if (node.type !== \"TSQualifiedName\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSCallSignatureDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSCallSignatureDeclaration> | null,\n): node is t.TSCallSignatureDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSCallSignatureDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSConstructSignatureDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSConstructSignatureDeclaration> | null,\n): node is t.TSConstructSignatureDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSConstructSignatureDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSPropertySignature(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSPropertySignature> | null,\n): node is t.TSPropertySignature {\n  if (!node) return false;\n\n  if (node.type !== \"TSPropertySignature\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSMethodSignature(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSMethodSignature> | null,\n): node is t.TSMethodSignature {\n  if (!node) return false;\n\n  if (node.type !== \"TSMethodSignature\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIndexSignature(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIndexSignature> | null,\n): node is t.TSIndexSignature {\n  if (!node) return false;\n\n  if (node.type !== \"TSIndexSignature\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSAnyKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSAnyKeyword> | null,\n): node is t.TSAnyKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSAnyKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSBooleanKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSBooleanKeyword> | null,\n): node is t.TSBooleanKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSBooleanKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSBigIntKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSBigIntKeyword> | null,\n): node is t.TSBigIntKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSBigIntKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIntrinsicKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIntrinsicKeyword> | null,\n): node is t.TSIntrinsicKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSIntrinsicKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNeverKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNeverKeyword> | null,\n): node is t.TSNeverKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSNeverKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNullKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNullKeyword> | null,\n): node is t.TSNullKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSNullKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNumberKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNumberKeyword> | null,\n): node is t.TSNumberKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSNumberKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSObjectKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSObjectKeyword> | null,\n): node is t.TSObjectKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSObjectKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSStringKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSStringKeyword> | null,\n): node is t.TSStringKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSStringKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSSymbolKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSSymbolKeyword> | null,\n): node is t.TSSymbolKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSSymbolKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSUndefinedKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSUndefinedKeyword> | null,\n): node is t.TSUndefinedKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSUndefinedKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSUnknownKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSUnknownKeyword> | null,\n): node is t.TSUnknownKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSUnknownKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSVoidKeyword(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSVoidKeyword> | null,\n): node is t.TSVoidKeyword {\n  if (!node) return false;\n\n  if (node.type !== \"TSVoidKeyword\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSThisType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSThisType> | null,\n): node is t.TSThisType {\n  if (!node) return false;\n\n  if (node.type !== \"TSThisType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSFunctionType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSFunctionType> | null,\n): node is t.TSFunctionType {\n  if (!node) return false;\n\n  if (node.type !== \"TSFunctionType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSConstructorType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSConstructorType> | null,\n): node is t.TSConstructorType {\n  if (!node) return false;\n\n  if (node.type !== \"TSConstructorType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeReference> | null,\n): node is t.TSTypeReference {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypePredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypePredicate> | null,\n): node is t.TSTypePredicate {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypePredicate\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeQuery(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeQuery> | null,\n): node is t.TSTypeQuery {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeQuery\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeLiteral> | null,\n): node is t.TSTypeLiteral {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSArrayType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSArrayType> | null,\n): node is t.TSArrayType {\n  if (!node) return false;\n\n  if (node.type !== \"TSArrayType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTupleType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTupleType> | null,\n): node is t.TSTupleType {\n  if (!node) return false;\n\n  if (node.type !== \"TSTupleType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSOptionalType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSOptionalType> | null,\n): node is t.TSOptionalType {\n  if (!node) return false;\n\n  if (node.type !== \"TSOptionalType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSRestType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSRestType> | null,\n): node is t.TSRestType {\n  if (!node) return false;\n\n  if (node.type !== \"TSRestType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNamedTupleMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNamedTupleMember> | null,\n): node is t.TSNamedTupleMember {\n  if (!node) return false;\n\n  if (node.type !== \"TSNamedTupleMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSUnionType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSUnionType> | null,\n): node is t.TSUnionType {\n  if (!node) return false;\n\n  if (node.type !== \"TSUnionType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIntersectionType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIntersectionType> | null,\n): node is t.TSIntersectionType {\n  if (!node) return false;\n\n  if (node.type !== \"TSIntersectionType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSConditionalType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSConditionalType> | null,\n): node is t.TSConditionalType {\n  if (!node) return false;\n\n  if (node.type !== \"TSConditionalType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInferType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInferType> | null,\n): node is t.TSInferType {\n  if (!node) return false;\n\n  if (node.type !== \"TSInferType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSParenthesizedType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSParenthesizedType> | null,\n): node is t.TSParenthesizedType {\n  if (!node) return false;\n\n  if (node.type !== \"TSParenthesizedType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeOperator(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeOperator> | null,\n): node is t.TSTypeOperator {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeOperator\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSIndexedAccessType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSIndexedAccessType> | null,\n): node is t.TSIndexedAccessType {\n  if (!node) return false;\n\n  if (node.type !== \"TSIndexedAccessType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSMappedType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSMappedType> | null,\n): node is t.TSMappedType {\n  if (!node) return false;\n\n  if (node.type !== \"TSMappedType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTemplateLiteralType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTemplateLiteralType> | null,\n): node is t.TSTemplateLiteralType {\n  if (!node) return false;\n\n  if (node.type !== \"TSTemplateLiteralType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSLiteralType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSLiteralType> | null,\n): node is t.TSLiteralType {\n  if (!node) return false;\n\n  if (node.type !== \"TSLiteralType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSExpressionWithTypeArguments(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSExpressionWithTypeArguments> | null,\n): node is t.TSExpressionWithTypeArguments {\n  if (!node) return false;\n\n  if (node.type !== \"TSExpressionWithTypeArguments\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInterfaceDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInterfaceDeclaration> | null,\n): node is t.TSInterfaceDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSInterfaceDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInterfaceBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInterfaceBody> | null,\n): node is t.TSInterfaceBody {\n  if (!node) return false;\n\n  if (node.type !== \"TSInterfaceBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeAliasDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeAliasDeclaration> | null,\n): node is t.TSTypeAliasDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeAliasDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSInstantiationExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSInstantiationExpression> | null,\n): node is t.TSInstantiationExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSInstantiationExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSAsExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSAsExpression> | null,\n): node is t.TSAsExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSAsExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSSatisfiesExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSSatisfiesExpression> | null,\n): node is t.TSSatisfiesExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSSatisfiesExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeAssertion(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeAssertion> | null,\n): node is t.TSTypeAssertion {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeAssertion\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEnumBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEnumBody> | null,\n): node is t.TSEnumBody {\n  if (!node) return false;\n\n  if (node.type !== \"TSEnumBody\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEnumDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEnumDeclaration> | null,\n): node is t.TSEnumDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSEnumDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEnumMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEnumMember> | null,\n): node is t.TSEnumMember {\n  if (!node) return false;\n\n  if (node.type !== \"TSEnumMember\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSModuleDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSModuleDeclaration> | null,\n): node is t.TSModuleDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSModuleDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSModuleBlock(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSModuleBlock> | null,\n): node is t.TSModuleBlock {\n  if (!node) return false;\n\n  if (node.type !== \"TSModuleBlock\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSImportType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSImportType> | null,\n): node is t.TSImportType {\n  if (!node) return false;\n\n  if (node.type !== \"TSImportType\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSImportEqualsDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSImportEqualsDeclaration> | null,\n): node is t.TSImportEqualsDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSImportEqualsDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSExternalModuleReference(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSExternalModuleReference> | null,\n): node is t.TSExternalModuleReference {\n  if (!node) return false;\n\n  if (node.type !== \"TSExternalModuleReference\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNonNullExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNonNullExpression> | null,\n): node is t.TSNonNullExpression {\n  if (!node) return false;\n\n  if (node.type !== \"TSNonNullExpression\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSExportAssignment(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSExportAssignment> | null,\n): node is t.TSExportAssignment {\n  if (!node) return false;\n\n  if (node.type !== \"TSExportAssignment\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSNamespaceExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSNamespaceExportDeclaration> | null,\n): node is t.TSNamespaceExportDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSNamespaceExportDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeAnnotation> | null,\n): node is t.TSTypeAnnotation {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeAnnotation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeParameterInstantiation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeParameterInstantiation> | null,\n): node is t.TSTypeParameterInstantiation {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeParameterInstantiation\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeParameterDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeParameterDeclaration> | null,\n): node is t.TSTypeParameterDeclaration {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeParameterDeclaration\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeParameter(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeParameter> | null,\n): node is t.TSTypeParameter {\n  if (!node) return false;\n\n  if (node.type !== \"TSTypeParameter\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStandardized(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Standardized> | null,\n): node is t.Standardized {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ArrayExpression\":\n    case \"AssignmentExpression\":\n    case \"BinaryExpression\":\n    case \"InterpreterDirective\":\n    case \"Directive\":\n    case \"DirectiveLiteral\":\n    case \"BlockStatement\":\n    case \"BreakStatement\":\n    case \"CallExpression\":\n    case \"CatchClause\":\n    case \"ConditionalExpression\":\n    case \"ContinueStatement\":\n    case \"DebuggerStatement\":\n    case \"DoWhileStatement\":\n    case \"EmptyStatement\":\n    case \"ExpressionStatement\":\n    case \"File\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"Identifier\":\n    case \"IfStatement\":\n    case \"LabeledStatement\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"LogicalExpression\":\n    case \"MemberExpression\":\n    case \"NewExpression\":\n    case \"Program\":\n    case \"ObjectExpression\":\n    case \"ObjectMethod\":\n    case \"ObjectProperty\":\n    case \"RestElement\":\n    case \"ReturnStatement\":\n    case \"SequenceExpression\":\n    case \"ParenthesizedExpression\":\n    case \"SwitchCase\":\n    case \"SwitchStatement\":\n    case \"ThisExpression\":\n    case \"ThrowStatement\":\n    case \"TryStatement\":\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n    case \"VariableDeclaration\":\n    case \"VariableDeclarator\":\n    case \"WhileStatement\":\n    case \"WithStatement\":\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassBody\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ExportSpecifier\":\n    case \"ForOfStatement\":\n    case \"ImportDeclaration\":\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n    case \"ImportExpression\":\n    case \"MetaProperty\":\n    case \"ClassMethod\":\n    case \"ObjectPattern\":\n    case \"SpreadElement\":\n    case \"Super\":\n    case \"TaggedTemplateExpression\":\n    case \"TemplateElement\":\n    case \"TemplateLiteral\":\n    case \"YieldExpression\":\n    case \"AwaitExpression\":\n    case \"Import\":\n    case \"BigIntLiteral\":\n    case \"ExportNamespaceSpecifier\":\n    case \"OptionalMemberExpression\":\n    case \"OptionalCallExpression\":\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n    case \"PrivateName\":\n    case \"StaticBlock\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Identifier\":\n        case \"StringLiteral\":\n        case \"BlockStatement\":\n        case \"ClassBody\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExpression(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Expression> | null,\n): node is t.Expression {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ArrayExpression\":\n    case \"AssignmentExpression\":\n    case \"BinaryExpression\":\n    case \"CallExpression\":\n    case \"ConditionalExpression\":\n    case \"FunctionExpression\":\n    case \"Identifier\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"LogicalExpression\":\n    case \"MemberExpression\":\n    case \"NewExpression\":\n    case \"ObjectExpression\":\n    case \"SequenceExpression\":\n    case \"ParenthesizedExpression\":\n    case \"ThisExpression\":\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassExpression\":\n    case \"ImportExpression\":\n    case \"MetaProperty\":\n    case \"Super\":\n    case \"TaggedTemplateExpression\":\n    case \"TemplateLiteral\":\n    case \"YieldExpression\":\n    case \"AwaitExpression\":\n    case \"Import\":\n    case \"BigIntLiteral\":\n    case \"OptionalMemberExpression\":\n    case \"OptionalCallExpression\":\n    case \"TypeCastExpression\":\n    case \"JSXElement\":\n    case \"JSXFragment\":\n    case \"BindExpression\":\n    case \"DoExpression\":\n    case \"RecordExpression\":\n    case \"TupleExpression\":\n    case \"DecimalLiteral\":\n    case \"ModuleExpression\":\n    case \"TopicReference\":\n    case \"PipelineTopicExpression\":\n    case \"PipelineBareFunction\":\n    case \"PipelinePrimaryTopicReference\":\n    case \"TSInstantiationExpression\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSNonNullExpression\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Expression\":\n        case \"Identifier\":\n        case \"StringLiteral\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBinary(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Binary> | null,\n): node is t.Binary {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BinaryExpression\":\n    case \"LogicalExpression\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isScopable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Scopable> | null,\n): node is t.Scopable {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"CatchClause\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"Program\":\n    case \"ObjectMethod\":\n    case \"SwitchStatement\":\n    case \"WhileStatement\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n    case \"ForOfStatement\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"StaticBlock\":\n    case \"TSModuleBlock\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"BlockStatement\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBlockParent(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.BlockParent> | null,\n): node is t.BlockParent {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"CatchClause\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"Program\":\n    case \"ObjectMethod\":\n    case \"SwitchStatement\":\n    case \"WhileStatement\":\n    case \"ArrowFunctionExpression\":\n    case \"ForOfStatement\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"StaticBlock\":\n    case \"TSModuleBlock\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"BlockStatement\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isBlock(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Block> | null,\n): node is t.Block {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"Program\":\n    case \"TSModuleBlock\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"BlockStatement\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Statement> | null,\n): node is t.Statement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BlockStatement\":\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n    case \"DebuggerStatement\":\n    case \"DoWhileStatement\":\n    case \"EmptyStatement\":\n    case \"ExpressionStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"FunctionDeclaration\":\n    case \"IfStatement\":\n    case \"LabeledStatement\":\n    case \"ReturnStatement\":\n    case \"SwitchStatement\":\n    case \"ThrowStatement\":\n    case \"TryStatement\":\n    case \"VariableDeclaration\":\n    case \"WhileStatement\":\n    case \"WithStatement\":\n    case \"ClassDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ForOfStatement\":\n    case \"ImportDeclaration\":\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"InterfaceDeclaration\":\n    case \"OpaqueType\":\n    case \"TypeAlias\":\n    case \"EnumDeclaration\":\n    case \"TSDeclareFunction\":\n    case \"TSInterfaceDeclaration\":\n    case \"TSTypeAliasDeclaration\":\n    case \"TSEnumDeclaration\":\n    case \"TSModuleDeclaration\":\n    case \"TSImportEqualsDeclaration\":\n    case \"TSExportAssignment\":\n    case \"TSNamespaceExportDeclaration\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Statement\":\n        case \"Declaration\":\n        case \"BlockStatement\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTerminatorless(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Terminatorless> | null,\n): node is t.Terminatorless {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n    case \"ReturnStatement\":\n    case \"ThrowStatement\":\n    case \"YieldExpression\":\n    case \"AwaitExpression\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isCompletionStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.CompletionStatement> | null,\n): node is t.CompletionStatement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n    case \"ReturnStatement\":\n    case \"ThrowStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isConditional(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Conditional> | null,\n): node is t.Conditional {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLoop(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Loop> | null,\n): node is t.Loop {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"WhileStatement\":\n    case \"ForOfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isWhile(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.While> | null,\n): node is t.While {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DoWhileStatement\":\n    case \"WhileStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExpressionWrapper(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExpressionWrapper> | null,\n): node is t.ExpressionWrapper {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExpressionStatement\":\n    case \"ParenthesizedExpression\":\n    case \"TypeCastExpression\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFor(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.For> | null,\n): node is t.For {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ForInStatement\":\n    case \"ForStatement\":\n    case \"ForOfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isForXStatement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ForXStatement> | null,\n): node is t.ForXStatement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunction(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Function> | null,\n): node is t.Function {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ObjectMethod\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFunctionParent(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FunctionParent> | null,\n): node is t.FunctionParent {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"ObjectMethod\":\n    case \"ArrowFunctionExpression\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"StaticBlock\":\n    case \"TSModuleBlock\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPureish(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Pureish> | null,\n): node is t.Pureish {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"ArrowFunctionExpression\":\n    case \"BigIntLiteral\":\n    case \"DecimalLiteral\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"StringLiteral\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Declaration> | null,\n): node is t.Declaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"FunctionDeclaration\":\n    case \"VariableDeclaration\":\n    case \"ClassDeclaration\":\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ImportDeclaration\":\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"InterfaceDeclaration\":\n    case \"OpaqueType\":\n    case \"TypeAlias\":\n    case \"EnumDeclaration\":\n    case \"TSDeclareFunction\":\n    case \"TSInterfaceDeclaration\":\n    case \"TSTypeAliasDeclaration\":\n    case \"TSEnumDeclaration\":\n    case \"TSModuleDeclaration\":\n    case \"TSImportEqualsDeclaration\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"Declaration\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPatternLike(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.PatternLike> | null,\n): node is t.PatternLike {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Identifier\":\n    case \"RestElement\":\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ObjectPattern\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSNonNullExpression\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Pattern\":\n        case \"Identifier\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLVal(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.LVal> | null,\n): node is t.LVal {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Identifier\":\n    case \"MemberExpression\":\n    case \"RestElement\":\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ObjectPattern\":\n    case \"TSParameterProperty\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSNonNullExpression\":\n      break;\n    case \"Placeholder\":\n      switch (node.expectedNode) {\n        case \"Pattern\":\n        case \"Identifier\":\n          break;\n        default:\n          return false;\n      }\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSEntityName(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSEntityName> | null,\n): node is t.TSEntityName {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Identifier\":\n    case \"TSQualifiedName\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"Identifier\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Literal> | null,\n): node is t.Literal {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"RegExpLiteral\":\n    case \"TemplateLiteral\":\n    case \"BigIntLiteral\":\n    case \"DecimalLiteral\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"StringLiteral\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImmutable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Immutable> | null,\n): node is t.Immutable {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"NullLiteral\":\n    case \"BooleanLiteral\":\n    case \"BigIntLiteral\":\n    case \"JSXAttribute\":\n    case \"JSXClosingElement\":\n    case \"JSXElement\":\n    case \"JSXExpressionContainer\":\n    case \"JSXSpreadChild\":\n    case \"JSXOpeningElement\":\n    case \"JSXText\":\n    case \"JSXFragment\":\n    case \"JSXOpeningFragment\":\n    case \"JSXClosingFragment\":\n    case \"DecimalLiteral\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"StringLiteral\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUserWhitespacable(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UserWhitespacable> | null,\n): node is t.UserWhitespacable {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectMethod\":\n    case \"ObjectProperty\":\n    case \"ObjectTypeInternalSlot\":\n    case \"ObjectTypeCallProperty\":\n    case \"ObjectTypeIndexer\":\n    case \"ObjectTypeProperty\":\n    case \"ObjectTypeSpreadProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMethod(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Method> | null,\n): node is t.Method {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectMethod\":\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isObjectMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ObjectMember> | null,\n): node is t.ObjectMember {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectMethod\":\n    case \"ObjectProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Property> | null,\n): node is t.Property {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ObjectProperty\":\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n    case \"ClassPrivateProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isUnaryLike(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.UnaryLike> | null,\n): node is t.UnaryLike {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"UnaryExpression\":\n    case \"SpreadElement\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPattern(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Pattern> | null,\n): node is t.Pattern {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AssignmentPattern\":\n    case \"ArrayPattern\":\n    case \"ObjectPattern\":\n      break;\n    case \"Placeholder\":\n      if (node.expectedNode === \"Pattern\") break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isClass(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Class> | null,\n): node is t.Class {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isImportOrExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ImportOrExportDeclaration> | null,\n): node is t.ImportOrExportDeclaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n    case \"ImportDeclaration\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isExportDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ExportDeclaration> | null,\n): node is t.ExportDeclaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExportAllDeclaration\":\n    case \"ExportDefaultDeclaration\":\n    case \"ExportNamedDeclaration\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isModuleSpecifier(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ModuleSpecifier> | null,\n): node is t.ModuleSpecifier {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ExportSpecifier\":\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isAccessor(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Accessor> | null,\n): node is t.Accessor {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ClassAccessorProperty\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isPrivate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Private> | null,\n): node is t.Private {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n    case \"PrivateName\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlow(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Flow> | null,\n): node is t.Flow {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AnyTypeAnnotation\":\n    case \"ArrayTypeAnnotation\":\n    case \"BooleanTypeAnnotation\":\n    case \"BooleanLiteralTypeAnnotation\":\n    case \"NullLiteralTypeAnnotation\":\n    case \"ClassImplements\":\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"DeclaredPredicate\":\n    case \"ExistsTypeAnnotation\":\n    case \"FunctionTypeAnnotation\":\n    case \"FunctionTypeParam\":\n    case \"GenericTypeAnnotation\":\n    case \"InferredPredicate\":\n    case \"InterfaceExtends\":\n    case \"InterfaceDeclaration\":\n    case \"InterfaceTypeAnnotation\":\n    case \"IntersectionTypeAnnotation\":\n    case \"MixedTypeAnnotation\":\n    case \"EmptyTypeAnnotation\":\n    case \"NullableTypeAnnotation\":\n    case \"NumberLiteralTypeAnnotation\":\n    case \"NumberTypeAnnotation\":\n    case \"ObjectTypeAnnotation\":\n    case \"ObjectTypeInternalSlot\":\n    case \"ObjectTypeCallProperty\":\n    case \"ObjectTypeIndexer\":\n    case \"ObjectTypeProperty\":\n    case \"ObjectTypeSpreadProperty\":\n    case \"OpaqueType\":\n    case \"QualifiedTypeIdentifier\":\n    case \"StringLiteralTypeAnnotation\":\n    case \"StringTypeAnnotation\":\n    case \"SymbolTypeAnnotation\":\n    case \"ThisTypeAnnotation\":\n    case \"TupleTypeAnnotation\":\n    case \"TypeofTypeAnnotation\":\n    case \"TypeAlias\":\n    case \"TypeAnnotation\":\n    case \"TypeCastExpression\":\n    case \"TypeParameter\":\n    case \"TypeParameterDeclaration\":\n    case \"TypeParameterInstantiation\":\n    case \"UnionTypeAnnotation\":\n    case \"Variance\":\n    case \"VoidTypeAnnotation\":\n    case \"EnumDeclaration\":\n    case \"EnumBooleanBody\":\n    case \"EnumNumberBody\":\n    case \"EnumStringBody\":\n    case \"EnumSymbolBody\":\n    case \"EnumBooleanMember\":\n    case \"EnumNumberMember\":\n    case \"EnumStringMember\":\n    case \"EnumDefaultedMember\":\n    case \"IndexedAccessType\":\n    case \"OptionalIndexedAccessType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowType> | null,\n): node is t.FlowType {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AnyTypeAnnotation\":\n    case \"ArrayTypeAnnotation\":\n    case \"BooleanTypeAnnotation\":\n    case \"BooleanLiteralTypeAnnotation\":\n    case \"NullLiteralTypeAnnotation\":\n    case \"ExistsTypeAnnotation\":\n    case \"FunctionTypeAnnotation\":\n    case \"GenericTypeAnnotation\":\n    case \"InterfaceTypeAnnotation\":\n    case \"IntersectionTypeAnnotation\":\n    case \"MixedTypeAnnotation\":\n    case \"EmptyTypeAnnotation\":\n    case \"NullableTypeAnnotation\":\n    case \"NumberLiteralTypeAnnotation\":\n    case \"NumberTypeAnnotation\":\n    case \"ObjectTypeAnnotation\":\n    case \"StringLiteralTypeAnnotation\":\n    case \"StringTypeAnnotation\":\n    case \"SymbolTypeAnnotation\":\n    case \"ThisTypeAnnotation\":\n    case \"TupleTypeAnnotation\":\n    case \"TypeofTypeAnnotation\":\n    case \"UnionTypeAnnotation\":\n    case \"VoidTypeAnnotation\":\n    case \"IndexedAccessType\":\n    case \"OptionalIndexedAccessType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowBaseAnnotation(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowBaseAnnotation> | null,\n): node is t.FlowBaseAnnotation {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"AnyTypeAnnotation\":\n    case \"BooleanTypeAnnotation\":\n    case \"NullLiteralTypeAnnotation\":\n    case \"MixedTypeAnnotation\":\n    case \"EmptyTypeAnnotation\":\n    case \"NumberTypeAnnotation\":\n    case \"StringTypeAnnotation\":\n    case \"SymbolTypeAnnotation\":\n    case \"ThisTypeAnnotation\":\n    case \"VoidTypeAnnotation\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowDeclaration> | null,\n): node is t.FlowDeclaration {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DeclareClass\":\n    case \"DeclareFunction\":\n    case \"DeclareInterface\":\n    case \"DeclareModule\":\n    case \"DeclareModuleExports\":\n    case \"DeclareTypeAlias\":\n    case \"DeclareOpaqueType\":\n    case \"DeclareVariable\":\n    case \"DeclareExportDeclaration\":\n    case \"DeclareExportAllDeclaration\":\n    case \"InterfaceDeclaration\":\n    case \"OpaqueType\":\n    case \"TypeAlias\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isFlowPredicate(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.FlowPredicate> | null,\n): node is t.FlowPredicate {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"DeclaredPredicate\":\n    case \"InferredPredicate\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumBody(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumBody> | null,\n): node is t.EnumBody {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"EnumBooleanBody\":\n    case \"EnumNumberBody\":\n    case \"EnumStringBody\":\n    case \"EnumSymbolBody\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isEnumMember(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.EnumMember> | null,\n): node is t.EnumMember {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"EnumBooleanMember\":\n    case \"EnumNumberMember\":\n    case \"EnumStringMember\":\n    case \"EnumDefaultedMember\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isJSX(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.JSX> | null,\n): node is t.JSX {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"JSXAttribute\":\n    case \"JSXClosingElement\":\n    case \"JSXElement\":\n    case \"JSXEmptyExpression\":\n    case \"JSXExpressionContainer\":\n    case \"JSXSpreadChild\":\n    case \"JSXIdentifier\":\n    case \"JSXMemberExpression\":\n    case \"JSXNamespacedName\":\n    case \"JSXOpeningElement\":\n    case \"JSXSpreadAttribute\":\n    case \"JSXText\":\n    case \"JSXFragment\":\n    case \"JSXOpeningFragment\":\n    case \"JSXClosingFragment\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isMiscellaneous(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.Miscellaneous> | null,\n): node is t.Miscellaneous {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"Noop\":\n    case \"Placeholder\":\n    case \"V8IntrinsicIdentifier\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTypeScript(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TypeScript> | null,\n): node is t.TypeScript {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSParameterProperty\":\n    case \"TSDeclareFunction\":\n    case \"TSDeclareMethod\":\n    case \"TSQualifiedName\":\n    case \"TSCallSignatureDeclaration\":\n    case \"TSConstructSignatureDeclaration\":\n    case \"TSPropertySignature\":\n    case \"TSMethodSignature\":\n    case \"TSIndexSignature\":\n    case \"TSAnyKeyword\":\n    case \"TSBooleanKeyword\":\n    case \"TSBigIntKeyword\":\n    case \"TSIntrinsicKeyword\":\n    case \"TSNeverKeyword\":\n    case \"TSNullKeyword\":\n    case \"TSNumberKeyword\":\n    case \"TSObjectKeyword\":\n    case \"TSStringKeyword\":\n    case \"TSSymbolKeyword\":\n    case \"TSUndefinedKeyword\":\n    case \"TSUnknownKeyword\":\n    case \"TSVoidKeyword\":\n    case \"TSThisType\":\n    case \"TSFunctionType\":\n    case \"TSConstructorType\":\n    case \"TSTypeReference\":\n    case \"TSTypePredicate\":\n    case \"TSTypeQuery\":\n    case \"TSTypeLiteral\":\n    case \"TSArrayType\":\n    case \"TSTupleType\":\n    case \"TSOptionalType\":\n    case \"TSRestType\":\n    case \"TSNamedTupleMember\":\n    case \"TSUnionType\":\n    case \"TSIntersectionType\":\n    case \"TSConditionalType\":\n    case \"TSInferType\":\n    case \"TSParenthesizedType\":\n    case \"TSTypeOperator\":\n    case \"TSIndexedAccessType\":\n    case \"TSMappedType\":\n    case \"TSTemplateLiteralType\":\n    case \"TSLiteralType\":\n    case \"TSExpressionWithTypeArguments\":\n    case \"TSInterfaceDeclaration\":\n    case \"TSInterfaceBody\":\n    case \"TSTypeAliasDeclaration\":\n    case \"TSInstantiationExpression\":\n    case \"TSAsExpression\":\n    case \"TSSatisfiesExpression\":\n    case \"TSTypeAssertion\":\n    case \"TSEnumBody\":\n    case \"TSEnumDeclaration\":\n    case \"TSEnumMember\":\n    case \"TSModuleDeclaration\":\n    case \"TSModuleBlock\":\n    case \"TSImportType\":\n    case \"TSImportEqualsDeclaration\":\n    case \"TSExternalModuleReference\":\n    case \"TSNonNullExpression\":\n    case \"TSExportAssignment\":\n    case \"TSNamespaceExportDeclaration\":\n    case \"TSTypeAnnotation\":\n    case \"TSTypeParameterInstantiation\":\n    case \"TSTypeParameterDeclaration\":\n    case \"TSTypeParameter\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSTypeElement(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSTypeElement> | null,\n): node is t.TSTypeElement {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSCallSignatureDeclaration\":\n    case \"TSConstructSignatureDeclaration\":\n    case \"TSPropertySignature\":\n    case \"TSMethodSignature\":\n    case \"TSIndexSignature\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSType> | null,\n): node is t.TSType {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSAnyKeyword\":\n    case \"TSBooleanKeyword\":\n    case \"TSBigIntKeyword\":\n    case \"TSIntrinsicKeyword\":\n    case \"TSNeverKeyword\":\n    case \"TSNullKeyword\":\n    case \"TSNumberKeyword\":\n    case \"TSObjectKeyword\":\n    case \"TSStringKeyword\":\n    case \"TSSymbolKeyword\":\n    case \"TSUndefinedKeyword\":\n    case \"TSUnknownKeyword\":\n    case \"TSVoidKeyword\":\n    case \"TSThisType\":\n    case \"TSFunctionType\":\n    case \"TSConstructorType\":\n    case \"TSTypeReference\":\n    case \"TSTypePredicate\":\n    case \"TSTypeQuery\":\n    case \"TSTypeLiteral\":\n    case \"TSArrayType\":\n    case \"TSTupleType\":\n    case \"TSOptionalType\":\n    case \"TSRestType\":\n    case \"TSUnionType\":\n    case \"TSIntersectionType\":\n    case \"TSConditionalType\":\n    case \"TSInferType\":\n    case \"TSParenthesizedType\":\n    case \"TSTypeOperator\":\n    case \"TSIndexedAccessType\":\n    case \"TSMappedType\":\n    case \"TSTemplateLiteralType\":\n    case \"TSLiteralType\":\n    case \"TSExpressionWithTypeArguments\":\n    case \"TSImportType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\nexport function isTSBaseType(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.TSBaseType> | null,\n): node is t.TSBaseType {\n  if (!node) return false;\n\n  switch (node.type) {\n    case \"TSAnyKeyword\":\n    case \"TSBooleanKeyword\":\n    case \"TSBigIntKeyword\":\n    case \"TSIntrinsicKeyword\":\n    case \"TSNeverKeyword\":\n    case \"TSNullKeyword\":\n    case \"TSNumberKeyword\":\n    case \"TSObjectKeyword\":\n    case \"TSStringKeyword\":\n    case \"TSSymbolKeyword\":\n    case \"TSUndefinedKeyword\":\n    case \"TSUnknownKeyword\":\n    case \"TSVoidKeyword\":\n    case \"TSThisType\":\n    case \"TSTemplateLiteralType\":\n    case \"TSLiteralType\":\n      break;\n    default:\n      return false;\n  }\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isNumericLiteral`\n */\nexport function isNumberLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.NumberLiteral> | null,\n): boolean {\n  deprecationWarning(\"isNumberLiteral\", \"isNumericLiteral\");\n  if (!node) return false;\n\n  if (node.type !== \"NumberLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isRegExpLiteral`\n */\nexport function isRegexLiteral(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RegexLiteral> | null,\n): boolean {\n  deprecationWarning(\"isRegexLiteral\", \"isRegExpLiteral\");\n  if (!node) return false;\n\n  if (node.type !== \"RegexLiteral\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isRestElement`\n */\nexport function isRestProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.RestProperty> | null,\n): boolean {\n  deprecationWarning(\"isRestProperty\", \"isRestElement\");\n  if (!node) return false;\n\n  if (node.type !== \"RestProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isSpreadElement`\n */\nexport function isSpreadProperty(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.SpreadProperty> | null,\n): boolean {\n  deprecationWarning(\"isSpreadProperty\", \"isSpreadElement\");\n  if (!node) return false;\n\n  if (node.type !== \"SpreadProperty\") return false;\n\n  return opts == null || shallowEqual(node, opts);\n}\n/**\n * @deprecated Use `isImportOrExportDeclaration`\n */\nexport function isModuleDeclaration(\n  node: t.Node | null | undefined,\n  opts?: Opts<t.ModuleDeclaration> | null,\n): node is t.ImportOrExportDeclaration {\n  deprecationWarning(\"isModuleDeclaration\", \"isImportOrExportDeclaration\");\n  return isImportOrExportDeclaration(node, opts);\n}\n","import shallowEqual from \"../utils/shallowEqual.ts\";\nimport isType from \"./isType.ts\";\nimport isPlaceholderType from \"./isPlaceholderType.ts\";\nimport { FLIPPED_ALIAS_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function is<T extends t.Node[\"type\"]>(\n  type: T,\n  node: t.Node | null | undefined,\n  opts?: undefined,\n): node is Extract<t.Node, { type: T }>;\n\nexport default function is<\n  T extends t.Node[\"type\"],\n  P extends Extract<t.Node, { type: T }>,\n>(type: T, n: t.Node | null | undefined, required: Partial<P>): n is P;\n\nexport default function is<P extends t.Node>(\n  type: string,\n  node: t.Node | null | undefined,\n  opts: Partial<P>,\n): node is P;\n\nexport default function is(\n  type: string,\n  node: t.Node | null | undefined,\n  opts?: Partial<t.Node>,\n): node is t.Node;\n/**\n * Returns whether `node` is of given `type`.\n *\n * For better performance, use this instead of `is[Type]` when `type` is unknown.\n */\nexport default function is(\n  type: string,\n  node: t.Node | null | undefined,\n  opts?: Partial<t.Node>,\n): node is t.Node {\n  if (!node) return false;\n\n  const matches = isType(node.type, type);\n  if (!matches) {\n    if (!opts && node.type === \"Placeholder\" && type in FLIPPED_ALIAS_KEYS) {\n      // We can only return true if the placeholder doesn't replace a real node,\n      // but it replaces a category of nodes (an alias).\n      //\n      // t.is(\"Identifier\", node) gives some guarantees about node's shape, so we\n      // can't say that Placeholder(expectedNode: \"Identifier\") is an identifier\n      // because it doesn't have the same properties.\n      // On the other hand, t.is(\"Expression\", node) doesn't say anything about\n      // the shape of node because Expression can be many different nodes: we can,\n      // and should, safely report expression placeholders as Expressions.\n      return isPlaceholderType(node.expectedNode, type);\n    }\n    return false;\n  }\n\n  if (opts === undefined) {\n    return true;\n  } else {\n    return shallowEqual(node, opts);\n  }\n}\n","import getBindingIdentifiers from \"../retrievers/getBindingIdentifiers.ts\";\nimport type * as t from \"../index.ts\";\n/**\n * Check if the input `node` is a binding identifier.\n */\nexport default function isBinding(\n  node: t.Node,\n  parent: t.Node,\n  grandparent?: t.Node,\n): boolean {\n  if (\n    grandparent &&\n    node.type === \"Identifier\" &&\n    parent.type === \"ObjectProperty\" &&\n    grandparent.type === \"ObjectExpression\"\n  ) {\n    // We need to special-case this, because getBindingIdentifiers\n    // has an ObjectProperty->value entry for destructuring patterns.\n    return false;\n  }\n\n  const keys = getBindingIdentifiers.keys[parent.type];\n  if (keys) {\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const val =\n        // @ts-expect-error key must present in parent\n        parent[key];\n      if (Array.isArray(val)) {\n        if (val.includes(node)) return true;\n      } else {\n        if (val === node) return true;\n      }\n    }\n  }\n\n  return false;\n}\n","import {\n  isClassDeclaration,\n  isFunctionDeclaration,\n} from \"./generated/index.ts\";\nimport isLet from \"./isLet.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is block scoped.\n */\nexport default function isBlockScoped(node: t.Node): boolean {\n  return isFunctionDeclaration(node) || isClassDeclaration(node) || isLet(node);\n}\n","import isType from \"./isType.ts\";\nimport { isIdentifier } from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is definitely immutable.\n */\nexport default function isImmutable(node: t.Node): boolean {\n  if (isType(node.type, \"Immutable\")) return true;\n\n  if (isIdentifier(node)) {\n    if (node.name === \"undefined\") {\n      // immutable!\n      return true;\n    } else {\n      // no idea...\n      return false;\n    }\n  }\n\n  return false;\n}\n","import { isVariableDeclaration } from \"./generated/index.ts\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is a `let` variable declaration.\n */\nexport default function isLet(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node) &&\n    (node.kind !== \"var\" ||\n      // @ts-expect-error Fixme: document private properties\n      node[BLOCK_SCOPED_SYMBOL])\n  );\n}\n","import { VISITOR_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function isNode(node: any): node is t.Node {\n  return !!(node && VISITOR_KEYS[node.type]);\n}\n","import { NODE_FIELDS, VISITOR_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if two nodes are equivalent\n */\nexport default function isNodesEquivalent<T extends Partial<t.Node>>(\n  a: T,\n  b: any,\n): b is T {\n  if (\n    typeof a !== \"object\" ||\n    typeof b !== \"object\" ||\n    a == null ||\n    b == null\n  ) {\n    return a === b;\n  }\n\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  const fields = Object.keys(NODE_FIELDS[a.type] || a.type);\n  const visitorKeys = VISITOR_KEYS[a.type];\n\n  for (const field of fields) {\n    const val_a =\n      // @ts-expect-error field must present in a\n      a[field];\n    const val_b = b[field];\n    if (typeof val_a !== typeof val_b) {\n      return false;\n    }\n    if (val_a == null && val_b == null) {\n      continue;\n    } else if (val_a == null || val_b == null) {\n      return false;\n    }\n\n    if (Array.isArray(val_a)) {\n      if (!Array.isArray(val_b)) {\n        return false;\n      }\n      if (val_a.length !== val_b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < val_a.length; i++) {\n        if (!isNodesEquivalent(val_a[i], val_b[i])) {\n          return false;\n        }\n      }\n      continue;\n    }\n\n    if (typeof val_a === \"object\" && !visitorKeys?.includes(field)) {\n      for (const key of Object.keys(val_a)) {\n        if (val_a[key] !== val_b[key]) {\n          return false;\n        }\n      }\n      continue;\n    }\n\n    if (!isNodesEquivalent(val_a, val_b)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import { PLACEHOLDERS_ALIAS } from \"../definitions/index.ts\";\n\n/**\n * Test if a `placeholderType` is a `targetType` or if `targetType` is an alias of `placeholderType`.\n */\nexport default function isPlaceholderType(\n  placeholderType: string,\n  targetType: string,\n): boolean {\n  if (placeholderType === targetType) return true;\n\n  const aliases: Array<string> | undefined =\n    PLACEHOLDERS_ALIAS[placeholderType];\n  if (aliases) {\n    for (const alias of aliases) {\n      if (targetType === alias) return true;\n    }\n  }\n\n  return false;\n}\n","import type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is a reference to a bound variable.\n */\nexport default function isReferenced(\n  node: t.Node,\n  parent: t.Node,\n  grandparent?: t.Node,\n): boolean {\n  switch (parent.type) {\n    // yes: PARENT[NODE]\n    // yes: NODE.child\n    // no: parent.NODE\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    // no: let NODE = init;\n    // yes: let id = NODE;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n\n    // yes: () => NODE\n    // no: (NODE) => {}\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n\n    // no: class { #NODE; }\n    // no: class { get #NODE() {} }\n    // no: class { #NODE() {} }\n    // no: class { fn() { return this.#NODE; } }\n    case \"PrivateName\":\n      return false;\n\n    // no: class { NODE() {} }\n    // yes: class { [NODE]() {} }\n    // no: class { foo(NODE) {} }\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n\n    // yes: { [NODE]: \"\" }\n    // no: { NODE: \"\" }\n    // depends: { NODE }\n    // depends: { key: NODE }\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      // parent.value === node\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n    // no: class { NODE = value; }\n    // yes: class { [NODE] = value; }\n    // yes: class { key = NODE; }\n    case \"ClassProperty\":\n    case \"ClassAccessorProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n\n    // no: class NODE {}\n    // yes: class Foo extends NODE {}\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n\n    // yes: left = NODE;\n    // no: NODE = right;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n\n    // no: [NODE = foo] = [];\n    // yes: [foo = NODE] = [];\n    case \"AssignmentPattern\":\n      return parent.right === node;\n\n    // no: NODE: for (;;) {}\n    case \"LabeledStatement\":\n      return false;\n\n    // no: try {} catch (NODE) {}\n    case \"CatchClause\":\n      return false;\n\n    // no: function foo(...NODE) {}\n    case \"RestElement\":\n      return false;\n\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n\n    // no: function NODE() {}\n    // no: function foo(NODE) {}\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n\n    // no: export NODE from \"foo\";\n    // no: export * as NODE from \"foo\";\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n\n    // no: export { foo as NODE };\n    // yes: export { NODE as foo };\n    // no: export { NODE as foo } from \"foo\";\n    case \"ExportSpecifier\":\n      // @ts-expect-error todo(flow->ts): Property 'source' does not exist on type 'AnyTypeAnnotation'.\n      if (grandparent?.source) {\n        return false;\n      }\n      return parent.local === node;\n\n    // no: import NODE from \"foo\";\n    // no: import * as NODE from \"foo\";\n    // no: import { NODE as foo } from \"foo\";\n    // no: import { foo as NODE } from \"foo\";\n    // no: import NODE from \"bar\";\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n\n    // no: import \"foo\" assert { NODE: \"json\" }\n    case \"ImportAttribute\":\n      return false;\n\n    // no: <div NODE=\"foo\" />\n    case \"JSXAttribute\":\n      return false;\n\n    // no: [NODE] = [];\n    // no: ({ NODE }) = [];\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n\n    // no: new.NODE\n    // no: NODE.target\n    case \"MetaProperty\":\n      return false;\n\n    // yes: type X = { someProperty: NODE }\n    // no: type X = { NODE: OtherType }\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n\n    // yes: enum X { Foo = NODE }\n    // no: enum X { NODE }\n    case \"TSEnumMember\":\n      return parent.id !== node;\n\n    // yes: { [NODE]: value }\n    // no: { NODE: value }\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n\n      return true;\n  }\n\n  return true;\n}\n","import {\n  isFunction,\n  isCatchClause,\n  isBlockStatement,\n  isScopable,\n  isPattern,\n} from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is a scope.\n */\nexport default function isScope(node: t.Node, parent: t.Node): boolean {\n  // If a BlockStatement is an immediate descendent of a Function/CatchClause, it must be in the body.\n  // Hence we skipped the parentKey === \"params\" check\n  if (isBlockStatement(node) && (isFunction(parent) || isCatchClause(parent))) {\n    return false;\n  }\n\n  // If a Pattern is an immediate descendent of a Function/CatchClause, it must be in the params.\n  // Hence we skipped the parentKey === \"params\" check\n  if (isPattern(node) && (isFunction(parent) || isCatchClause(parent))) {\n    return true;\n  }\n\n  return isScopable(node);\n}\n","import { isIdentifier, isImportDefaultSpecifier } from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `specifier` is a `default` import or export.\n */\nexport default function isSpecifierDefault(\n  specifier: t.ModuleSpecifier,\n): boolean {\n  return (\n    isImportDefaultSpecifier(specifier) ||\n    // @ts-expect-error todo(flow->ts): stricter type for specifier\n    isIdentifier(specifier.imported || specifier.exported, {\n      name: \"default\",\n    })\n  );\n}\n","import { FLIPPED_ALIAS_KEYS, ALIAS_KEYS } from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function isType<T extends t.Node[\"type\"]>(\n  nodeType: string,\n  targetType: T,\n): nodeType is T;\n\nexport default function isType(\n  nodeType: string | null | undefined,\n  targetType: string,\n): boolean;\n\n/**\n * Test if a `nodeType` is a `targetType` or if `targetType` is an alias of `nodeType`.\n */\nexport default function isType(nodeType: string, targetType: string): boolean {\n  if (nodeType === targetType) return true;\n\n  // If nodeType is nullish, it can't be an alias of targetType.\n  if (nodeType == null) return false;\n\n  // This is a fast-path. If the test above failed, but an alias key is found, then the\n  // targetType was a primary node type, so there's no need to check the aliases.\n  // @ts-expect-error targetType may not index ALIAS_KEYS\n  if (ALIAS_KEYS[targetType]) return false;\n\n  const aliases: Array<string> | undefined = FLIPPED_ALIAS_KEYS[targetType];\n  if (aliases) {\n    if (aliases[0] === nodeType) return true;\n\n    for (const alias of aliases) {\n      if (nodeType === alias) return true;\n    }\n  }\n\n  return false;\n}\n","import isValidIdentifier from \"./isValidIdentifier.ts\";\n\nconst RESERVED_WORDS_ES3_ONLY: Set<string> = new Set([\n  \"abstract\",\n  \"boolean\",\n  \"byte\",\n  \"char\",\n  \"double\",\n  \"enum\",\n  \"final\",\n  \"float\",\n  \"goto\",\n  \"implements\",\n  \"int\",\n  \"interface\",\n  \"long\",\n  \"native\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"short\",\n  \"static\",\n  \"synchronized\",\n  \"throws\",\n  \"transient\",\n  \"volatile\",\n]);\n\n/**\n * Check if the input `name` is a valid identifier name according to the ES3 specification.\n *\n * Additional ES3 reserved words are\n */\nexport default function isValidES3Identifier(name: string): boolean {\n  return isValidIdentifier(name) && !RESERVED_WORDS_ES3_ONLY.has(name);\n}\n","import {\n  isIdentifierName,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\n/**\n * Check if the input `name` is a valid identifier name\n * and isn't a reserved word.\n */\nexport default function isValidIdentifier(\n  name: string,\n  reserved: boolean = true,\n): boolean {\n  if (typeof name !== \"string\") return false;\n\n  if (reserved) {\n    // \"await\" is invalid in module, valid in script; better be safe (see #4952)\n    if (isKeyword(name) || isStrictReservedWord(name, true)) {\n      return false;\n    }\n  }\n\n  return isIdentifierName(name);\n}\n","import { isVariableDeclaration } from \"./generated/index.ts\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Check if the input `node` is a variable declaration.\n */\nexport default function isVar(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node, { kind: \"var\" }) &&\n    !(\n      // @ts-expect-error document private properties\n      node[BLOCK_SCOPED_SYMBOL]\n    )\n  );\n}\n","import {\n  isIdentifier,\n  isMemberExpression,\n  isStringLiteral,\n  isThisExpression,\n} from \"./generated/index.ts\";\nimport type * as t from \"../index.ts\";\n\n/**\n * Determines whether or not the input node `member` matches the\n * input `match`.\n *\n * For example, given the match `React.createClass` it would match the\n * parsed nodes of `React.createClass` and `React[\"createClass\"]`.\n */\nexport default function matchesPattern(\n  member: t.Node | null | undefined,\n  match: string | string[],\n  allowPartial?: boolean,\n): boolean {\n  // not a member expression\n  if (!isMemberExpression(member)) return false;\n\n  const parts = Array.isArray(match) ? match : match.split(\".\");\n  const nodes = [];\n\n  let node;\n  for (node = member; isMemberExpression(node); node = node.object) {\n    nodes.push(node.property);\n  }\n  nodes.push(node);\n\n  if (nodes.length < parts.length) return false;\n  if (!allowPartial && nodes.length > parts.length) return false;\n\n  for (let i = 0, j = nodes.length - 1; i < parts.length; i++, j--) {\n    const node = nodes[j];\n    let value;\n    if (isIdentifier(node)) {\n      value = node.name;\n    } else if (isStringLiteral(node)) {\n      value = node.value;\n    } else if (isThisExpression(node)) {\n      value = \"this\";\n    } else {\n      return false;\n    }\n\n    if (parts[i] !== value) return false;\n  }\n\n  return true;\n}\n","export default function isCompatTag(tagName?: string): boolean {\n  // Must start with a lowercase ASCII letter\n  return !!tagName && /^[a-z]/.test(tagName);\n}\n","import buildMatchMemberExpression from \"../buildMatchMemberExpression.ts\";\n\nconst isReactComponent = buildMatchMemberExpression(\"React.Component\");\n\nexport default isReactComponent;\n","import {\n  NODE_FIELDS,\n  NODE_PARENT_VALIDATIONS,\n  type FieldOptions,\n} from \"../definitions/index.ts\";\nimport type * as t from \"../index.ts\";\n\nexport default function validate(\n  node: t.Node | undefined | null,\n  key: string,\n  val: unknown,\n): void {\n  if (!node) return;\n\n  const fields = NODE_FIELDS[node.type];\n  if (!fields) return;\n\n  const field = fields[key];\n  validateField(node, key, val, field);\n  validateChild(node, key, val);\n}\n\nexport function validateInternal(\n  field: FieldOptions,\n  node: t.Node | undefined | null,\n  key: string,\n  val: unknown,\n  maybeNode?: 1,\n): void {\n  if (!field?.validate) return;\n  if (field.optional && val == null) return;\n\n  field.validate(node, key, val);\n\n  if (maybeNode) {\n    const type = (val as t.Node).type;\n    if (type == null) return;\n    NODE_PARENT_VALIDATIONS[type]?.(node, key, val);\n  }\n}\n\nexport function validateField(\n  node: t.Node | undefined | null,\n  key: string,\n  val: unknown,\n  field: FieldOptions | undefined | null,\n): void {\n  if (!field?.validate) return;\n  if (field.optional && val == null) return;\n\n  field.validate(node, key, val);\n}\n\nexport function validateChild(\n  node: t.Node | undefined | null,\n  key: string,\n  val?: unknown,\n) {\n  const type = (val as t.Node)?.type;\n  if (type == null) return;\n  NODE_PARENT_VALIDATIONS[type]?.(node, key, val);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport const CHROME_WEBSTORE_EXTENSION_ID = 'fmkadmapgofadopljbjfkapdkoienihi';\nexport const INTERNAL_EXTENSION_ID = 'dnjnjgbfilfphmojnmhliehogmojhclc';\nexport const LOCAL_EXTENSION_ID = 'ikiahnapldjmdmpkmfhjdjilojjhgcbf';\n\n// Flip this flag to true to enable verbose console debug logging.\nexport const __DEBUG__ = false;\n\n// Flip this flag to true to enable performance.mark() and performance.measure() timings.\nexport const __PERFORMANCE_PROFILE__ = false;\n\nexport const TREE_OPERATION_ADD = 1;\nexport const TREE_OPERATION_REMOVE = 2;\nexport const TREE_OPERATION_REORDER_CHILDREN = 3;\nexport const TREE_OPERATION_UPDATE_TREE_BASE_DURATION = 4;\nexport const TREE_OPERATION_UPDATE_ERRORS_OR_WARNINGS = 5;\nexport const TREE_OPERATION_REMOVE_ROOT = 6;\nexport const TREE_OPERATION_SET_SUBTREE_MODE = 7;\n\nexport const PROFILING_FLAG_BASIC_SUPPORT = 0b01;\nexport const PROFILING_FLAG_TIMELINE_SUPPORT = 0b10;\n\nexport const LOCAL_STORAGE_DEFAULT_TAB_KEY = 'React::DevTools::defaultTab';\nexport const LOCAL_STORAGE_COMPONENT_FILTER_PREFERENCES_KEY =\n  'React::DevTools::componentFilters';\nexport const SESSION_STORAGE_LAST_SELECTION_KEY =\n  'React::DevTools::lastSelection';\nexport const LOCAL_STORAGE_OPEN_IN_EDITOR_URL =\n  'React::DevTools::openInEditorUrl';\nexport const LOCAL_STORAGE_OPEN_IN_EDITOR_URL_PRESET =\n  'React::DevTools::openInEditorUrlPreset';\nexport const LOCAL_STORAGE_PARSE_HOOK_NAMES_KEY =\n  'React::DevTools::parseHookNames';\nexport const SESSION_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY =\n  'React::DevTools::recordChangeDescriptions';\nexport const SESSION_STORAGE_RECORD_TIMELINE_KEY =\n  'React::DevTools::recordTimeline';\nexport const SESSION_STORAGE_RELOAD_AND_PROFILE_KEY =\n  'React::DevTools::reloadAndProfile';\nexport const LOCAL_STORAGE_BROWSER_THEME = 'React::DevTools::theme';\nexport const LOCAL_STORAGE_TRACE_UPDATES_ENABLED_KEY =\n  'React::DevTools::traceUpdatesEnabled';\nexport const LOCAL_STORAGE_SUPPORTS_PROFILING_KEY =\n  'React::DevTools::supportsProfiling';\n\nexport const PROFILER_EXPORT_VERSION = 5;\n\nexport const FIREFOX_CONSOLE_DIMMING_COLOR = 'color: rgba(124, 124, 124, 0.75)';\nexport const ANSI_STYLE_DIMMING_TEMPLATE = '\\x1b[2;38;2;124;124;124m%s\\x1b[0m';\nexport const ANSI_STYLE_DIMMING_TEMPLATE_WITH_COMPONENT_STACK =\n  '\\x1b[2;38;2;124;124;124m%s %o\\x1b[0m';\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n */\n\nimport {__PERFORMANCE_PROFILE__} from './constants';\n\nconst supportsUserTiming =\n  typeof performance !== 'undefined' &&\n  // $FlowFixMe[method-unbinding]\n  typeof performance.mark === 'function' &&\n  // $FlowFixMe[method-unbinding]\n  typeof performance.clearMarks === 'function';\n\nconst supportsPerformanceNow =\n  // $FlowFixMe[method-unbinding]\n  typeof performance !== 'undefined' && typeof performance.now === 'function';\n\nfunction mark(markName: string): void {\n  if (supportsUserTiming) {\n    performance.mark(markName + '-start');\n  }\n}\n\nfunction measure(markName: string): void {\n  if (supportsUserTiming) {\n    performance.mark(markName + '-end');\n    performance.measure(markName, markName + '-start', markName + '-end');\n    performance.clearMarks(markName + '-start');\n    performance.clearMarks(markName + '-end');\n  }\n}\n\nfunction now(): number {\n  if (supportsPerformanceNow) {\n    return performance.now();\n  }\n  return Date.now();\n}\n\nexport async function withAsyncPerfMeasurements<TReturn>(\n  markName: string,\n  callback: () => Promise<TReturn>,\n  onComplete?: number => void,\n): Promise<TReturn> {\n  const start = now();\n  if (__PERFORMANCE_PROFILE__) {\n    mark(markName);\n  }\n  const result = await callback();\n\n  if (__PERFORMANCE_PROFILE__) {\n    measure(markName);\n  }\n\n  if (onComplete != null) {\n    const duration = now() - start;\n    onComplete(duration);\n  }\n\n  return result;\n}\n\nexport function withSyncPerfMeasurements<TReturn>(\n  markName: string,\n  callback: () => TReturn,\n  onComplete?: number => void,\n): TReturn {\n  const start = now();\n  if (__PERFORMANCE_PROFILE__) {\n    mark(markName);\n  }\n  const result = callback();\n\n  if (__PERFORMANCE_PROFILE__) {\n    measure(markName);\n  }\n\n  if (onComplete != null) {\n    const duration = now() - start;\n    onComplete(duration);\n  }\n\n  return result;\n}\n\nexport function withCallbackPerfMeasurements<TReturn>(\n  markName: string,\n  callback: (done: () => void) => TReturn,\n  onComplete?: number => void,\n): TReturn {\n  const start = now();\n  if (__PERFORMANCE_PROFILE__) {\n    mark(markName);\n  }\n\n  const done = () => {\n    if (__PERFORMANCE_PROFILE__) {\n      measure(markName);\n    }\n\n    if (onComplete != null) {\n      const duration = now() - start;\n      onComplete(duration);\n    }\n  };\n  return callback(done);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {withSyncPerfMeasurements} from 'react-devtools-shared/src/PerformanceLoggingUtils';\nimport traverse from '@babel/traverse';\n\nimport type {HooksNode} from 'react-debug-tools/src/ReactDebugHooks';\n\n// Missing types in @babel/traverse\ntype NodePath = any;\ntype Node = any;\n// Missing types in @babel/types\ntype File = any;\n\nexport type Position = {\n  line: number,\n  column: number,\n};\n\nexport type SourceFileASTWithHookDetails = {\n  sourceFileAST: File,\n  line: number,\n  source: string,\n};\n\nexport const NO_HOOK_NAME = '<no-hook>';\n\nconst AST_NODE_TYPES = Object.freeze({\n  PROGRAM: 'Program',\n  CALL_EXPRESSION: 'CallExpression',\n  MEMBER_EXPRESSION: 'MemberExpression',\n  ARRAY_PATTERN: 'ArrayPattern',\n  IDENTIFIER: 'Identifier',\n  NUMERIC_LITERAL: 'NumericLiteral',\n  VARIABLE_DECLARATOR: 'VariableDeclarator',\n});\n\n// Check if line number obtained from source map and the line number in hook node match\nfunction checkNodeLocation(\n  path: NodePath,\n  line: number,\n  column?: number | null = null,\n): boolean {\n  const {start, end} = path.node.loc;\n\n  if (line !== start.line) {\n    return false;\n  }\n\n  if (column !== null) {\n    // Column numbers are represented differently between tools/engines.\n    // Error.prototype.stack columns are 1-based (like most IDEs) but ASTs are 0-based.\n    //\n    // In practice this will probably never matter,\n    // because this code matches the 1-based Error stack location for the hook Identifier (e.g. useState)\n    // with the larger 0-based VariableDeclarator (e.g. [foo, setFoo] = useState())\n    // so the ranges should always overlap.\n    //\n    // For more info see https://github.com/facebook/react/pull/21833#discussion_r666831276\n    column -= 1;\n    if (\n      (line === start.line && column < start.column) ||\n      (line === end.line && column > end.column)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n// Checks whether hookNode is a member of targetHookNode\nfunction filterMemberNodesOfTargetHook(\n  targetHookNode: NodePath,\n  hookNode: NodePath,\n): boolean {\n  const targetHookName = targetHookNode.node.id.name;\n  return (\n    targetHookName != null &&\n    (targetHookName ===\n      (hookNode.node.init.object && hookNode.node.init.object.name) ||\n      targetHookName === hookNode.node.init.name)\n  );\n}\n\n// Checks whether hook is the first member node of a state variable declaration node\nfunction filterMemberWithHookVariableName(hook: NodePath): boolean {\n  return (\n    hook.node.init.property.type === AST_NODE_TYPES.NUMERIC_LITERAL &&\n    hook.node.init.property.value === 0\n  );\n}\n\n// Returns all AST Nodes associated with 'potentialReactHookASTNode'\nfunction getFilteredHookASTNodes(\n  potentialReactHookASTNode: NodePath,\n  potentialHooksFound: Array<NodePath>,\n  source: string,\n): Array<NodePath> {\n  let nodesAssociatedWithReactHookASTNode: NodePath[] = [];\n  if (nodeContainsHookVariableName(potentialReactHookASTNode)) {\n    // made custom hooks to enter this, always\n    // Case 1.\n    // Directly usable Node -> const ref = useRef(null);\n    //                      -> const [tick, setTick] = useState(1);\n    // Case 2.\n    // Custom Hooks -> const someVariable = useSomeCustomHook();\n    //              -> const [someVariable, someFunction] = useAnotherCustomHook();\n    nodesAssociatedWithReactHookASTNode.unshift(potentialReactHookASTNode);\n  } else {\n    // Case 3.\n    // Indirectly usable Node -> const tickState = useState(1);\n    //                           [tick, setTick] = tickState;\n    //                        -> const tickState = useState(1);\n    //                           const tick = tickState[0];\n    //                           const setTick = tickState[1];\n    nodesAssociatedWithReactHookASTNode = potentialHooksFound.filter(hookNode =>\n      filterMemberNodesOfTargetHook(potentialReactHookASTNode, hookNode),\n    );\n  }\n  return nodesAssociatedWithReactHookASTNode;\n}\n\n// Returns Hook name\nexport function getHookName(\n  hook: HooksNode,\n  originalSourceAST: mixed,\n  originalSourceCode: string,\n  originalSourceLineNumber: number,\n  originalSourceColumnNumber: number,\n): string | null {\n  const hooksFromAST = withSyncPerfMeasurements(\n    'getPotentialHookDeclarationsFromAST(originalSourceAST)',\n    () => getPotentialHookDeclarationsFromAST(originalSourceAST),\n  );\n\n  let potentialReactHookASTNode = null;\n  if (originalSourceColumnNumber === 0) {\n    // This most likely indicates a source map type like 'cheap-module-source-map'\n    // that intentionally drops column numbers for compilation speed in DEV builds.\n    // In this case, we can assume there's probably only one hook per line (true in most cases)\n    // and just fail if we find more than one match.\n    const matchingNodes = hooksFromAST.filter(node => {\n      const nodeLocationCheck = checkNodeLocation(\n        node,\n        originalSourceLineNumber,\n      );\n\n      const hookDeclarationCheck = isConfirmedHookDeclaration(node);\n      return nodeLocationCheck && hookDeclarationCheck;\n    });\n\n    if (matchingNodes.length === 1) {\n      potentialReactHookASTNode = matchingNodes[0];\n    }\n  } else {\n    potentialReactHookASTNode = hooksFromAST.find(node => {\n      const nodeLocationCheck = checkNodeLocation(\n        node,\n        originalSourceLineNumber,\n        originalSourceColumnNumber,\n      );\n\n      const hookDeclarationCheck = isConfirmedHookDeclaration(node);\n      return nodeLocationCheck && hookDeclarationCheck;\n    });\n  }\n\n  if (!potentialReactHookASTNode) {\n    return null;\n  }\n\n  // nodesAssociatedWithReactHookASTNode could directly be used to obtain the hook variable name\n  // depending on the type of potentialReactHookASTNode\n  try {\n    const nodesAssociatedWithReactHookASTNode = withSyncPerfMeasurements(\n      'getFilteredHookASTNodes()',\n      () =>\n        getFilteredHookASTNodes(\n          potentialReactHookASTNode,\n          hooksFromAST,\n          originalSourceCode,\n        ),\n    );\n\n    const name = withSyncPerfMeasurements('getHookNameFromNode()', () =>\n      getHookNameFromNode(\n        hook,\n        nodesAssociatedWithReactHookASTNode,\n        potentialReactHookASTNode,\n      ),\n    );\n\n    return name;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nfunction getHookNameFromNode(\n  originalHook: HooksNode,\n  nodesAssociatedWithReactHookASTNode: NodePath[],\n  potentialReactHookASTNode: NodePath,\n): string | null {\n  let hookVariableName: string | null;\n  const isCustomHook = originalHook.id === null;\n\n  switch (nodesAssociatedWithReactHookASTNode.length) {\n    case 1:\n      // CASE 1A (nodesAssociatedWithReactHookASTNode[0] !== potentialReactHookASTNode):\n      // const flagState = useState(true); -> later referenced as\n      // const [flag, setFlag] = flagState;\n      //\n      // CASE 1B (nodesAssociatedWithReactHookASTNode[0] === potentialReactHookASTNode):\n      // const [flag, setFlag] = useState(true); -> we have access to the hook variable straight away\n      //\n      // CASE 1C (isCustomHook && nodesAssociatedWithReactHookASTNode[0] === potentialReactHookASTNode):\n      // const someVariable = useSomeCustomHook(); -> we have access to hook variable straight away\n      // const [someVariable, someFunction] = useAnotherCustomHook(); -> we ignore variable names in this case\n      //                                                                 as it is unclear what variable name to show\n      if (\n        isCustomHook &&\n        nodesAssociatedWithReactHookASTNode[0] === potentialReactHookASTNode\n      ) {\n        hookVariableName = getHookVariableName(\n          potentialReactHookASTNode,\n          isCustomHook,\n        );\n        break;\n      }\n      hookVariableName = getHookVariableName(\n        nodesAssociatedWithReactHookASTNode[0],\n      );\n      break;\n\n    case 2:\n      // const flagState = useState(true); -> later referenced as\n      // const flag = flagState[0];\n      // const setFlag = flagState[1];\n      nodesAssociatedWithReactHookASTNode =\n        nodesAssociatedWithReactHookASTNode.filter(hookPath =>\n          filterMemberWithHookVariableName(hookPath),\n        );\n\n      if (nodesAssociatedWithReactHookASTNode.length !== 1) {\n        // Something went wrong, only a single desirable hook should remain here\n        throw new Error(\"Couldn't isolate AST Node containing hook variable.\");\n      }\n      hookVariableName = getHookVariableName(\n        nodesAssociatedWithReactHookASTNode[0],\n      );\n      break;\n\n    default:\n      // Case 0:\n      // const flagState = useState(true); -> which is not accessed anywhere\n      //\n      // Case > 2 (fallback):\n      // const someState = React.useState(() => 0)\n      //\n      // const stateVariable = someState[0]\n      // const setStateVariable = someState[1]\n      //\n      // const [number2, setNumber2] = someState\n      //\n      // We assign the state variable for 'someState' to multiple variables,\n      // and hence cannot isolate a unique variable name. In such cases,\n      // default to showing 'someState'\n\n      hookVariableName = getHookVariableName(potentialReactHookASTNode);\n      break;\n  }\n\n  return hookVariableName;\n}\n\n// Extracts the variable name from hook node path\nfunction getHookVariableName(\n  hook: NodePath,\n  isCustomHook: boolean = false,\n): string | null {\n  const nodeType = hook.node.id.type;\n  switch (nodeType) {\n    case AST_NODE_TYPES.ARRAY_PATTERN:\n      return !isCustomHook ? hook.node.id.elements[0]?.name ?? null : null;\n\n    case AST_NODE_TYPES.IDENTIFIER:\n      return hook.node.id.name;\n\n    default:\n      return null;\n  }\n}\n\nfunction getPotentialHookDeclarationsFromAST(sourceAST: File): NodePath[] {\n  const potentialHooksFound: NodePath[] = [];\n  withSyncPerfMeasurements('traverse(sourceAST)', () =>\n    traverse(sourceAST, {\n      enter(path) {\n        if (path.isVariableDeclarator() && isPotentialHookDeclaration(path)) {\n          potentialHooksFound.push(path);\n        }\n      },\n    }),\n  );\n  return potentialHooksFound;\n}\n\n/**\n * This function traverses the sourceAST and returns a mapping\n * that maps locations in the source code to their corresponding\n * Hook name, if there is a relevant Hook name for that location.\n *\n * A location in the source code is represented by line and column\n * numbers as a Position object: { line, column }.\n *   - line is 1-indexed.\n *   - column is 0-indexed.\n *\n * A Hook name will be assigned to a Hook CallExpression if the\n * CallExpression is for a variable declaration (i.e. it returns\n * a value that is assigned to a variable), and if we can reliably\n * infer the correct name to use (see comments in the function body\n * for more details).\n *\n * The returned mapping is an array of locations and their assigned\n * names, sorted by location. Specifically, each entry in the array\n * contains a `name` and a `start` Position. The `name` of a given\n * entry is the \"assigned\" name in the source code until the `start`\n * of the **next** entry. This means that given the mapping, in order\n * to determine the Hook name assigned for a given source location, we\n * need to find the adjacent entries that most closely contain the given\n * location.\n *\n * E.g. for the following code:\n *\n * 1|  function Component() {\n * 2|    const [state, setState] = useState(0);\n * 3|                              ^---------^ -> Cols 28 - 38: Hook CallExpression\n * 4|\n * 5|    useEffect(() => {...}); -> call ignored since not declaring a variable\n * 6|\n * 7|    return (...);\n * 8|  }\n *\n * The returned \"mapping\" would be something like:\n *   [\n *     {name: '<no-hook>', start: {line: 1, column: 0}},\n *     {name: 'state', start: {line: 2, column: 28}},\n *     {name: '<no-hook>', start: {line: 2, column: 38}},\n *   ]\n *\n * Where the Hook name `state` (corresponding to the `state` variable)\n * is assigned to the location in the code for the CallExpression\n * representing the call to `useState(0)` (line 2, col 28-38).\n */\nexport function getHookNamesMappingFromAST(\n  sourceAST: File,\n): $ReadOnlyArray<{name: string, start: Position}> {\n  const hookStack: Array<{name: string, start: $FlowFixMe}> = [];\n  const hookNames = [];\n  const pushFrame = (name: string, node: Node) => {\n    const nameInfo = {name, start: {...node.loc.start}};\n    hookStack.unshift(nameInfo);\n    hookNames.push(nameInfo);\n  };\n  const popFrame = (node: Node) => {\n    hookStack.shift();\n    const top = hookStack[0];\n    if (top != null) {\n      hookNames.push({name: top.name, start: {...node.loc.end}});\n    }\n  };\n\n  traverse(sourceAST, {\n    [AST_NODE_TYPES.PROGRAM]: {\n      enter(path) {\n        pushFrame(NO_HOOK_NAME, path.node);\n      },\n      exit(path) {\n        popFrame(path.node);\n      },\n    },\n    [AST_NODE_TYPES.VARIABLE_DECLARATOR]: {\n      enter(path) {\n        // Check if this variable declaration corresponds to a variable\n        // declared by calling a Hook.\n        if (isConfirmedHookDeclaration(path)) {\n          const hookDeclaredVariableName = getHookVariableName(path);\n          if (!hookDeclaredVariableName) {\n            return;\n          }\n          const callExpressionNode = assertCallExpression(path.node.init);\n\n          // Check if this variable declaration corresponds to a call to a\n          // built-in Hook that returns a tuple (useState, useReducer,\n          // useTransition).\n          // If it doesn't, we immediately use the declared variable name\n          // as the Hook name. We do this because for any other Hooks that\n          // aren't the built-in Hooks that return a tuple, we can't reliably\n          // extract a Hook name from other variable declarations derived from\n          // this one, since we don't know which of the declared variables\n          // are the relevant ones to track and show in dev tools.\n          if (!isBuiltInHookThatReturnsTuple(path)) {\n            pushFrame(hookDeclaredVariableName, callExpressionNode);\n            return;\n          }\n\n          // Check if the variable declared by the Hook call is referenced\n          // anywhere else in the code. If not, we immediately use the\n          // declared variable name as the Hook name.\n          const referencePaths =\n            hookDeclaredVariableName != null\n              ? path.scope.bindings[hookDeclaredVariableName]?.referencePaths\n              : null;\n          if (referencePaths == null) {\n            pushFrame(hookDeclaredVariableName, callExpressionNode);\n            return;\n          }\n\n          // Check each reference to the variable declared by the Hook call,\n          // and for each, we do the following:\n          let declaredVariableName = null;\n          for (let i = 0; i <= referencePaths.length; i++) {\n            const referencePath = referencePaths[i];\n            if (declaredVariableName != null) {\n              break;\n            }\n\n            // 1. Check if the reference is contained within a VariableDeclarator\n            // Node. This will allow us to determine if the variable declared by\n            // the Hook call is being used to declare other variables.\n            let variableDeclaratorPath = referencePath;\n            while (\n              variableDeclaratorPath != null &&\n              variableDeclaratorPath.node.type !==\n                AST_NODE_TYPES.VARIABLE_DECLARATOR\n            ) {\n              variableDeclaratorPath = variableDeclaratorPath.parentPath;\n            }\n\n            // 2. If we find a VariableDeclarator containing the\n            // referenced variable, we extract the Hook name from the new\n            // variable declaration.\n            // E.g., a case like the following:\n            //    const countState = useState(0);\n            //    const count = countState[0];\n            //    const setCount = countState[1]\n            // Where the reference to `countState` is later referenced\n            // within a VariableDeclarator, so we can extract `count` as\n            // the Hook name.\n            const varDeclInit = variableDeclaratorPath?.node.init;\n            if (varDeclInit != null) {\n              switch (varDeclInit.type) {\n                case AST_NODE_TYPES.MEMBER_EXPRESSION: {\n                  // When encountering a MemberExpression inside the new\n                  // variable declaration, we only want to extract the variable\n                  // name if we're assigning the value of the first member,\n                  // which is handled by `filterMemberWithHookVariableName`.\n                  // E.g.\n                  //    const countState = useState(0);\n                  //    const count = countState[0];    -> extract the name from this reference\n                  //    const setCount = countState[1]; -> ignore this reference\n                  if (\n                    filterMemberWithHookVariableName(variableDeclaratorPath)\n                  ) {\n                    declaredVariableName = getHookVariableName(\n                      variableDeclaratorPath,\n                    );\n                  }\n                  break;\n                }\n                case AST_NODE_TYPES.IDENTIFIER: {\n                  declaredVariableName = getHookVariableName(\n                    variableDeclaratorPath,\n                  );\n                  break;\n                }\n                default:\n                  break;\n              }\n            }\n          }\n\n          // If we were able to extract a name from the new variable\n          // declaration, use it as the Hook name. Otherwise, use the\n          // original declared variable as the variable name.\n          if (declaredVariableName != null) {\n            pushFrame(declaredVariableName, callExpressionNode);\n          } else {\n            pushFrame(hookDeclaredVariableName, callExpressionNode);\n          }\n        }\n      },\n      exit(path) {\n        if (isConfirmedHookDeclaration(path)) {\n          const callExpressionNode = assertCallExpression(path.node.init);\n          popFrame(callExpressionNode);\n        }\n      },\n    },\n  });\n  return hookNames;\n}\n\n// Check if 'path' contains declaration of the form const X = useState(0);\nfunction isConfirmedHookDeclaration(path: NodePath): boolean {\n  const nodeInit = path.node.init;\n  if (nodeInit == null || nodeInit.type !== AST_NODE_TYPES.CALL_EXPRESSION) {\n    return false;\n  }\n  const callee = nodeInit.callee;\n  return isHook(callee);\n}\n\n// We consider hooks to be a hook name identifier or a member expression containing a hook name.\nfunction isHook(node: Node): boolean {\n  if (node.type === AST_NODE_TYPES.IDENTIFIER) {\n    return isHookName(node.name);\n  } else if (\n    node.type === AST_NODE_TYPES.MEMBER_EXPRESSION &&\n    !node.computed &&\n    isHook(node.property)\n  ) {\n    const obj = node.object;\n    const isPascalCaseNameSpace = /^[A-Z].*/;\n    return (\n      obj.type === AST_NODE_TYPES.IDENTIFIER &&\n      isPascalCaseNameSpace.test(obj.name)\n    );\n  } else {\n    // TODO Possibly handle inline require statements e.g. require(\"useStable\")(...)\n    // This does not seem like a high priority, since inline requires are probably\n    // not common and are also typically in compiled code rather than source code.\n\n    return false;\n  }\n}\n\n// Catch all identifiers that begin with \"use\"\n// followed by an uppercase Latin character to exclude identifiers like \"user\".\n// Copied from packages/eslint-plugin-react-hooks/src/RulesOfHooks\nfunction isHookName(name: string): boolean {\n  return /^use[A-Z0-9].*$/.test(name);\n}\n\n// Check if the AST Node COULD be a React Hook\nfunction isPotentialHookDeclaration(path: NodePath): boolean {\n  // The array potentialHooksFound will contain all potential hook declaration cases we support\n  const nodePathInit = path.node.init;\n  if (nodePathInit != null) {\n    if (nodePathInit.type === AST_NODE_TYPES.CALL_EXPRESSION) {\n      // CASE: CallExpression\n      // 1. const [count, setCount] = useState(0); -> destructured pattern\n      // 2. const [A, setA] = useState(0), const [B, setB] = useState(0); -> multiple inline declarations\n      // 3. const [\n      //      count,\n      //      setCount\n      //    ] = useState(0); -> multiline hook declaration\n      // 4. const ref = useRef(null); -> generic hooks\n      const callee = nodePathInit.callee;\n      return isHook(callee);\n    } else if (\n      nodePathInit.type === AST_NODE_TYPES.MEMBER_EXPRESSION ||\n      nodePathInit.type === AST_NODE_TYPES.IDENTIFIER\n    ) {\n      // CASE: MemberExpression\n      //    const countState = React.useState(0);\n      //    const count = countState[0];\n      //    const setCount = countState[1]; -> Accessing members following hook declaration\n\n      // CASE: Identifier\n      //    const countState = React.useState(0);\n      //    const [count, setCount] = countState; ->  destructuring syntax following hook declaration\n      return true;\n    }\n  }\n  return false;\n}\n\n/// Check whether 'node' is hook declaration of form useState(0); OR React.useState(0);\nfunction isReactFunction(node: Node, functionName: string): boolean {\n  return (\n    node.name === functionName ||\n    (node.type === 'MemberExpression' &&\n      node.object.name === 'React' &&\n      node.property.name === functionName)\n  );\n}\n\n// Check if 'path' is either State or Reducer hook\nfunction isBuiltInHookThatReturnsTuple(path: NodePath): boolean {\n  const callee = path.node.init.callee;\n  return (\n    isReactFunction(callee, 'useState') ||\n    isReactFunction(callee, 'useReducer') ||\n    isReactFunction(callee, 'useTransition')\n  );\n}\n\n// Check whether hookNode of a declaration contains obvious variable name\nfunction nodeContainsHookVariableName(hookNode: NodePath): boolean {\n  // We determine cases where variable names are obvious in declarations. Examples:\n  // const [tick, setTick] = useState(1); OR const ref = useRef(null);\n  // Here tick/ref are obvious hook variables in the hook declaration node itself\n  // 1. True for satisfying above cases\n  // 2. False for everything else. Examples:\n  //    const countState = React.useState(0);\n  //    const count = countState[0];\n  //    const setCount = countState[1]; -> not obvious, hook variable can't be determined\n  //                                       from the hook declaration node alone\n  // 3. For custom hooks we force pass true since we are only concerned with the AST node\n  //    regardless of how it is accessed in source code. (See: getHookVariableName)\n\n  const node = hookNode.node.id;\n  if (\n    node.type === AST_NODE_TYPES.ARRAY_PATTERN ||\n    (node.type === AST_NODE_TYPES.IDENTIFIER &&\n      !isBuiltInHookThatReturnsTuple(hookNode))\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction assertCallExpression(node: Node): Node {\n  if (node.type !== AST_NODE_TYPES.CALL_EXPRESSION) {\n    throw new Error('Expected a CallExpression node for a Hook declaration.');\n  }\n  return node;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ErrorStackParser from 'error-stack-parser';\nimport testErrorStack, {\n  SOURCE_STACK_FRAME_LINE_NUMBER,\n} from './ErrorTesterCompiled';\n\nlet sourceMapsAreAppliedToErrors: boolean | null = null;\n\n// Source maps are automatically applied to Error stack frames.\nexport function areSourceMapsAppliedToErrors(): boolean {\n  if (sourceMapsAreAppliedToErrors === null) {\n    try {\n      testErrorStack();\n      sourceMapsAreAppliedToErrors = false;\n    } catch (error) {\n      const parsed = ErrorStackParser.parse(error);\n      const topStackFrame = parsed[0];\n      const lineNumber = topStackFrame.lineNumber;\n      if (lineNumber === SOURCE_STACK_FRAME_LINE_NUMBER) {\n        sourceMapsAreAppliedToErrors = true;\n      }\n    }\n  }\n\n  return sourceMapsAreAppliedToErrors === true;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {__DEBUG__} from 'react-devtools-shared/src/constants';\n\nimport type {HooksTree} from 'react-debug-tools/src/ReactDebugHooks';\nimport type {Thenable, Wakeable} from 'shared/ReactTypes';\nimport type {\n  Element,\n  HookNames,\n  HookSourceLocationKey,\n} from 'react-devtools-shared/src/frontend/types';\nimport type {HookSource} from 'react-debug-tools/src/ReactDebugHooks';\nimport type {FetchFileWithCaching} from 'react-devtools-shared/src/devtools/views/Components/FetchFileWithCachingContext';\nimport {withCallbackPerfMeasurements} from './PerformanceLoggingUtils';\nimport {logEvent} from './Logger';\n\nconst TIMEOUT = 30000;\n\nconst Pending = 0;\nconst Resolved = 1;\nconst Rejected = 2;\n\ntype PendingRecord = {\n  status: 0,\n  value: Wakeable,\n};\n\ntype ResolvedRecord<T> = {\n  status: 1,\n  value: T,\n};\n\ntype RejectedRecord = {\n  status: 2,\n  value: null,\n};\n\ntype Record<T> = PendingRecord | ResolvedRecord<T> | RejectedRecord;\n\nfunction readRecord<T>(record: Record<T>): ResolvedRecord<T> | RejectedRecord {\n  if (record.status === Resolved) {\n    // This is just a type refinement.\n    return record;\n  } else if (record.status === Rejected) {\n    // This is just a type refinement.\n    return record;\n  } else {\n    throw record.value;\n  }\n}\n\ntype LoadHookNamesFunction = (\n  hookLog: HooksTree,\n  fetchFileWithCaching: FetchFileWithCaching | null,\n) => Thenable<HookNames>;\n\n// This is intentionally a module-level Map, rather than a React-managed one.\n// Otherwise, refreshing the inspected element cache would also clear this cache.\n// TODO Rethink this if the React API constraints change.\n// See https://github.com/reactwg/react-18/discussions/25#discussioncomment-980435\nlet map: WeakMap<Element, Record<HookNames>> = new WeakMap();\n\nexport function hasAlreadyLoadedHookNames(element: Element): boolean {\n  const record = map.get(element);\n  return record != null && record.status === Resolved;\n}\n\nexport function loadHookNames(\n  element: Element,\n  hooksTree: HooksTree,\n  loadHookNamesFunction: LoadHookNamesFunction,\n  fetchFileWithCaching: FetchFileWithCaching | null,\n): HookNames | null {\n  let record = map.get(element);\n\n  if (__DEBUG__) {\n    console.groupCollapsed('loadHookNames() record:');\n    console.log(record);\n    console.groupEnd();\n  }\n\n  if (!record) {\n    const callbacks = new Set<() => mixed>();\n    const wakeable: Wakeable = {\n      then(callback: () => mixed) {\n        callbacks.add(callback);\n      },\n\n      // Optional property used by Timeline:\n      displayName: `Loading hook names for ${element.displayName || 'Unknown'}`,\n    };\n\n    let timeoutID: $FlowFixMe | null;\n    let didTimeout = false;\n    let status = 'unknown';\n    let resolvedHookNames: HookNames | null = null;\n\n    const wake = () => {\n      if (timeoutID) {\n        clearTimeout(timeoutID);\n        timeoutID = null;\n      }\n\n      // This assumes they won't throw.\n      callbacks.forEach(callback => callback());\n      callbacks.clear();\n    };\n\n    const handleLoadComplete = (durationMs: number): void => {\n      // Log duration for parsing hook names\n      logEvent({\n        event_name: 'load-hook-names',\n        event_status: status,\n        duration_ms: durationMs,\n        inspected_element_display_name: element.displayName,\n        inspected_element_number_of_hooks: resolvedHookNames?.size ?? null,\n      });\n    };\n\n    const newRecord: Record<HookNames> = (record = {\n      status: Pending,\n      value: wakeable,\n    });\n\n    withCallbackPerfMeasurements(\n      'loadHookNames',\n      done => {\n        loadHookNamesFunction(hooksTree, fetchFileWithCaching).then(\n          function onSuccess(hookNames) {\n            if (didTimeout) {\n              return;\n            }\n\n            if (__DEBUG__) {\n              console.log('[hookNamesCache] onSuccess() hookNames:', hookNames);\n            }\n\n            if (hookNames) {\n              const resolvedRecord =\n                ((newRecord: any): ResolvedRecord<HookNames>);\n              resolvedRecord.status = Resolved;\n              resolvedRecord.value = hookNames;\n            } else {\n              const notFoundRecord = ((newRecord: any): RejectedRecord);\n              notFoundRecord.status = Rejected;\n              notFoundRecord.value = null;\n            }\n\n            status = 'success';\n            resolvedHookNames = hookNames;\n            done();\n            wake();\n          },\n          function onError(error) {\n            if (didTimeout) {\n              return;\n            }\n\n            if (__DEBUG__) {\n              console.log('[hookNamesCache] onError()');\n            }\n\n            console.error(error);\n\n            const thrownRecord = ((newRecord: any): RejectedRecord);\n            thrownRecord.status = Rejected;\n            thrownRecord.value = null;\n\n            status = 'error';\n            done();\n            wake();\n          },\n        );\n\n        // Eventually timeout and stop trying to load names.\n        timeoutID = setTimeout(function onTimeout() {\n          if (__DEBUG__) {\n            console.log('[hookNamesCache] onTimeout()');\n          }\n\n          timeoutID = null;\n\n          didTimeout = true;\n\n          const timedoutRecord = ((newRecord: any): RejectedRecord);\n          timedoutRecord.status = Rejected;\n          timedoutRecord.value = null;\n\n          status = 'timeout';\n          done();\n          wake();\n        }, TIMEOUT);\n      },\n      handleLoadComplete,\n    );\n    map.set(element, record);\n  }\n\n  const response = readRecord(record).value;\n  return response;\n}\n\nexport function getHookSourceLocationKey({\n  fileName,\n  lineNumber,\n  columnNumber,\n}: HookSource): HookSourceLocationKey {\n  if (fileName == null || lineNumber == null || columnNumber == null) {\n    throw Error('Hook source code location not found.');\n  }\n  return `${fileName}:${lineNumber}:${columnNumber}`;\n}\n\nexport function clearHookNamesCache(): void {\n  map = new WeakMap();\n}\n","export type SourceMapSegment =\n\t| [number]\n\t| [number, number, number, number]\n\t| [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nconst charToInteger: { [charCode: number]: number } = {};\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfor (let i = 0; i < chars.length; i++) {\n\tcharToInteger[chars.charCodeAt(i)] = i;\n}\n\nexport function decode(mappings: string): SourceMapMappings {\n\tconst decoded: SourceMapMappings = [];\n\tlet line: SourceMapLine = [];\n\tconst segment: SourceMapSegment = [\n\t\t0, // generated code column\n\t\t0, // source file index\n\t\t0, // source code line\n\t\t0, // source code column\n\t\t0, // name index\n\t];\n\n\tlet j = 0;\n\tfor (let i = 0, shift = 0, value = 0; i < mappings.length; i++) {\n\t\tconst c = mappings.charCodeAt(i);\n\n\t\tif (c === 44) { // \",\"\n\t\t\tsegmentify(line, segment, j);\n\t\t\tj = 0;\n\n\t\t} else if (c === 59) { // \";\"\n\t\t\tsegmentify(line, segment, j);\n\t\t\tj = 0;\n\t\t\tdecoded.push(line);\n\t\t\tline = [];\n\t\t\tsegment[0] = 0;\n\n\t\t} else {\n\t\t\tlet integer = charToInteger[c];\n\t\t\tif (integer === undefined) {\n\t\t\t\tthrow new Error('Invalid character (' + String.fromCharCode(c) + ')');\n\t\t\t}\n\n\t\t\tconst hasContinuationBit = integer & 32;\n\n\t\t\tinteger &= 31;\n\t\t\tvalue += integer << shift;\n\n\t\t\tif (hasContinuationBit) {\n\t\t\t\tshift += 5;\n\t\t\t} else {\n\t\t\t\tconst shouldNegate = value & 1;\n\t\t\t\tvalue >>>= 1;\n\n\t\t\t\tif (shouldNegate) {\n\t\t\t\t\tvalue = value === 0 ? -0x80000000 : -value;\n\t\t\t\t}\n\n\t\t\t\tsegment[j] += value;\n\t\t\t\tj++;\n\t\t\t\tvalue = shift = 0; // reset\n\t\t\t}\n\t\t}\n\t}\n\n\tsegmentify(line, segment, j);\n\tdecoded.push(line);\n\n\treturn decoded;\n}\n\nfunction segmentify(line: SourceMapSegment[], segment: SourceMapSegment, j: number) {\n\t// This looks ugly, but we're creating specialized arrays with a specific\n\t// length. This is much faster than creating a new array (which v8 expands to\n\t// a capacity of 17 after pushing the first item), or slicing out a subarray\n\t// (which is slow). Length 4 is assumed to be the most frequent, followed by\n\t// length 5 (since not everything will have an associated name), followed by\n\t// length 1 (it's probably rare for a source substring to not have an\n\t// associated segment data).\n\tif (j === 4) line.push([segment[0], segment[1], segment[2], segment[3]]);\n\telse if (j === 5) line.push([segment[0], segment[1], segment[2], segment[3], segment[4]]);\n\telse if (j === 1) line.push([segment[0]]);\n}\n\nexport function encode(decoded: SourceMapMappings): string {\n\tlet sourceFileIndex = 0;  // second field\n\tlet sourceCodeLine = 0;   // third field\n\tlet sourceCodeColumn = 0; // fourth field\n\tlet nameIndex = 0;        // fifth field\n\tlet mappings = '';\n\n\tfor (let i = 0; i < decoded.length; i++) {\n\t\tconst line = decoded[i];\n\t\tif (i > 0) mappings += ';';\n\t\tif (line.length === 0) continue;\n\n\t\tlet generatedCodeColumn = 0; // first field\n\n\t\tconst lineMappings: string[] = [];\n\n\t\tfor (const segment of line) {\n\t\t\tlet segmentMappings = encodeInteger(segment[0] - generatedCodeColumn);\n\t\t\tgeneratedCodeColumn = segment[0];\n\n\t\t\tif (segment.length > 1) {\n\t\t\t\tsegmentMappings +=\n\t\t\t\t\tencodeInteger(segment[1] - sourceFileIndex) +\n\t\t\t\t\tencodeInteger(segment[2] - sourceCodeLine) +\n\t\t\t\t\tencodeInteger(segment[3] - sourceCodeColumn);\n\n\t\t\t\tsourceFileIndex = segment[1];\n\t\t\t\tsourceCodeLine = segment[2];\n\t\t\t\tsourceCodeColumn = segment[3];\n\t\t\t}\n\n\t\t\tif (segment.length === 5) {\n\t\t\t\tsegmentMappings += encodeInteger(segment[4] - nameIndex);\n\t\t\t\tnameIndex = segment[4];\n\t\t\t}\n\n\t\t\tlineMappings.push(segmentMappings);\n\t\t}\n\n\t\tmappings += lineMappings.join(',');\n\t}\n\n\treturn mappings;\n}\n\nfunction encodeInteger(num: number): string {\n\tvar result = '';\n\tnum = num < 0 ? (-num << 1) | 1 : num << 1;\n\tdo {\n\t\tvar clamped = num & 31;\n\t\tnum >>>= 5;\n\t\tif (num > 0) {\n\t\t\tclamped |= 32;\n\t\t}\n\t\tresult += chars[clamped];\n\t} while (num > 0);\n\n\treturn result;\n}\n","/*\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n */\n\nimport type {\n  HookMap,\n  HookMapEntry,\n  HookMapLine,\n  HookMapMappings,\n} from './generateHookMap';\nimport type {Position} from './astUtils';\nimport {NO_HOOK_NAME} from './astUtils';\n\n/**\n * Finds the Hook name assigned to a given location in the source code,\n * and a HookMap extracted from an extended source map.\n * The given location must correspond to the location in the *original*\n * source code (i.e. *not* the generated one).\n *\n * Note that all locations in the source code are guaranteed to map\n * to a name, including a sentinel value that represents a missing\n * Hook name: '<no-hook>'.\n *\n * For more details on the format of the HookMap, see generateHookMap\n * and the tests for that function and this function.\n */\nexport function getHookNameForLocation(\n  location: Position,\n  hookMap: HookMap,\n): string | null {\n  const {names, mappings} = hookMap;\n\n  // The HookMap mappings are grouped by lines, so first we look up\n  // which line of mappings covers the target location.\n  // Note that we expect to find a line since all the locations in the\n  // source code are guaranteed to map to a name, including a '<no-hook>'\n  // name.\n  const foundLine = binSearch(location, mappings, compareLinePositions);\n  if (foundLine == null) {\n    throw new Error(\n      `Expected to find a line in the HookMap that covers the target location at line: ${location.line}, column: ${location.column}`,\n    );\n  }\n\n  let foundEntry;\n  const foundLineNumber = getLineNumberFromLine(foundLine);\n  // The line found in the mappings will never be larger than the target\n  // line, and vice-versa, so if the target line doesn't match the found\n  // line, we immediately know that it must correspond to the last mapping\n  // entry for that line.\n  if (foundLineNumber !== location.line) {\n    foundEntry = foundLine[foundLine.length - 1];\n  } else {\n    foundEntry = binSearch(location, foundLine, compareColumnPositions);\n  }\n\n  if (foundEntry == null) {\n    throw new Error(\n      `Expected to find a mapping in the HookMap that covers the target location at line: ${location.line}, column: ${location.column}`,\n    );\n  }\n\n  const foundNameIndex = getHookNameIndexFromEntry(foundEntry);\n  if (foundNameIndex == null) {\n    throw new Error(\n      `Expected to find a name index in the HookMap that covers the target location at line: ${location.line}, column: ${location.column}`,\n    );\n  }\n  const foundName = names[foundNameIndex];\n  if (foundName == null) {\n    throw new Error(\n      `Expected to find a name in the HookMap that covers the target location at line: ${location.line}, column: ${location.column}`,\n    );\n  }\n\n  if (foundName === NO_HOOK_NAME) {\n    return null;\n  }\n  return foundName;\n}\n\nfunction binSearch<T>(\n  location: Position,\n  items: T[],\n  compare: (\n    location: Position,\n    items: T[],\n    index: number,\n  ) => {index: number | null, direction: number},\n): T | null {\n  let count = items.length;\n  let index = 0;\n  let firstElementIndex = 0;\n  let step;\n\n  while (count > 0) {\n    index = firstElementIndex;\n    step = Math.floor(count / 2);\n    index += step;\n\n    const comparison = compare(location, items, index);\n    if (comparison.direction === 0) {\n      if (comparison.index == null) {\n        throw new Error('Expected an index when matching element is found.');\n      }\n      firstElementIndex = comparison.index;\n      break;\n    }\n\n    if (comparison.direction > 0) {\n      index++;\n      firstElementIndex = index;\n      count -= step + 1;\n    } else {\n      count = step;\n    }\n  }\n\n  return firstElementIndex != null ? items[firstElementIndex] : null;\n}\n\n/**\n * Compares the target line location to the current location\n * given by the provided index.\n *\n * If the target line location matches the current location, returns\n * the index of the matching line in the mappings. In order for a line\n * to match, the target line must match the line exactly, or be within\n * the line range of the current line entries and the adjacent line\n * entries.\n *\n * If the line doesn't match, returns the search direction for the\n * next step in the binary search.\n */\nfunction compareLinePositions(\n  location: Position,\n  mappings: HookMapMappings,\n  index: number,\n): {index: number | null, direction: number} {\n  const startIndex = index;\n  const start = mappings[startIndex];\n  if (start == null) {\n    throw new Error(`Unexpected line missing in HookMap at index ${index}.`);\n  }\n  const startLine = getLineNumberFromLine(start);\n\n  let endLine;\n  let endIndex = index + 1;\n  const end = mappings[endIndex];\n  if (end != null) {\n    endLine = getLineNumberFromLine(end);\n  } else {\n    endIndex = startIndex;\n    endLine = startLine;\n  }\n\n  // When the line matches exactly, return the matching index\n  if (startLine === location.line) {\n    return {index: startIndex, direction: 0};\n  }\n  if (endLine === location.line) {\n    return {index: endIndex, direction: 0};\n  }\n\n  // If we're at the end of the mappings, and the target line is greater\n  // than the current line, then this final line must cover the\n  // target location, so we return it.\n  if (location.line > endLine && end == null) {\n    return {index: endIndex, direction: 0};\n  }\n\n  // If the location is within the current line and the adjacent one,\n  // we know that the target location must be covered by the current line.\n  if (startLine < location.line && location.line < endLine) {\n    return {index: startIndex, direction: 0};\n  }\n\n  // Otherwise, return the next direction in the search.\n  return {index: null, direction: location.line - startLine};\n}\n\n/**\n * Compares the target column location to the current location\n * given by the provided index.\n *\n * If the target column location matches the current location, returns\n * the index of the matching entry in the mappings. In order for a column\n * to match, the target column must match the column exactly, or be within\n * the column range of the current entry and the adjacent entry.\n *\n * If the column doesn't match, returns the search direction for the\n * next step in the binary search.\n */\nfunction compareColumnPositions(\n  location: Position,\n  line: HookMapLine,\n  index: number,\n): {index: number | null, direction: number} {\n  const startIndex = index;\n  const start = line[index];\n  if (start == null) {\n    throw new Error(\n      `Unexpected mapping missing in HookMap line at index ${index}.`,\n    );\n  }\n  const startColumn = getColumnNumberFromEntry(start);\n\n  let endColumn;\n  let endIndex = index + 1;\n  const end = line[endIndex];\n  if (end != null) {\n    endColumn = getColumnNumberFromEntry(end);\n  } else {\n    endIndex = startIndex;\n    endColumn = startColumn;\n  }\n\n  // When the column matches exactly, return the matching index\n  if (startColumn === location.column) {\n    return {index: startIndex, direction: 0};\n  }\n  if (endColumn === location.column) {\n    return {index: endIndex, direction: 0};\n  }\n\n  // If we're at the end of the entries for this line, and the target\n  // column is greater than the current column, then this final entry\n  // must cover the target location, so we return it.\n  if (location.column > endColumn && end == null) {\n    return {index: endIndex, direction: 0};\n  }\n\n  // If the location is within the current column and the adjacent one,\n  // we know that the target location must be covered by the current entry.\n  if (startColumn < location.column && location.column < endColumn) {\n    return {index: startIndex, direction: 0};\n  }\n\n  // Otherwise, return the next direction in the search.\n  return {index: null, direction: location.column - startColumn};\n}\n\nfunction getLineNumberFromLine(line: HookMapLine): number {\n  return getLineNumberFromEntry(line[0]);\n}\n\nfunction getLineNumberFromEntry(entry: HookMapEntry): number {\n  const lineNumber = entry[0];\n  if (lineNumber == null) {\n    throw new Error('Unexpected line number missing in entry in HookMap');\n  }\n  return lineNumber;\n}\n\nfunction getColumnNumberFromEntry(entry: HookMapEntry): number {\n  const columnNumber = entry[1];\n  if (columnNumber == null) {\n    throw new Error('Unexpected column number missing in entry in HookMap');\n  }\n  return columnNumber;\n}\n\nfunction getHookNameIndexFromEntry(entry: HookMapEntry): number {\n  const hookNameIndex = entry[2];\n  if (hookNameIndex == null) {\n    throw new Error('Unexpected hook name index missing in entry in HookMap');\n  }\n  return hookNameIndex;\n}\n","/*\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n */\n\nimport type {Position} from './astUtils';\nimport type {\n  ReactSourceMetadata,\n  IndexSourceMap,\n  BasicSourceMap,\n  MixedSourceMap,\n} from './SourceMapTypes';\nimport type {HookMap} from './generateHookMap';\nimport * as util from 'source-map-js/lib/util';\nimport {decodeHookMap} from './generateHookMap';\nimport {getHookNameForLocation} from './getHookNameForLocation';\n\ntype MetadataMap = Map<string, ?ReactSourceMetadata>;\n\nconst HOOK_MAP_INDEX_IN_REACT_METADATA = 0;\nconst REACT_METADATA_INDEX_IN_FB_METADATA = 1;\nconst REACT_SOURCES_EXTENSION_KEY = 'x_react_sources';\nconst FB_SOURCES_EXTENSION_KEY = 'x_facebook_sources';\n\n/**\n * Extracted from the logic in source-map-js@0.6.2's SourceMapConsumer.\n * By default, source names are normalized using the same logic that the `source-map-js@0.6.2` package uses internally.\n * This is crucial for keeping the sources list in sync with a `SourceMapConsumer` instance.\n */\nfunction normalizeSourcePath(\n  sourceInput: string,\n  map: {+sourceRoot?: ?string, ...},\n): string {\n  const {sourceRoot} = map;\n  let source = sourceInput;\n\n  source = String(source);\n  // Some source maps produce relative source paths like \"./foo.js\" instead of\n  // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n  // See bugzil.la/1090768.\n  source = util.normalize(source);\n  // Always ensure that absolute sources are internally stored relative to\n  // the source root, if the source root is absolute. Not doing this would\n  // be particularly problematic when the source root is a prefix of the\n  // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n  source =\n    sourceRoot != null && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n      ? util.relative(sourceRoot, source)\n      : source;\n  return util.computeSourceURL(sourceRoot, source);\n}\n\n/**\n * Consumes the `x_react_sources` or  `x_facebook_sources` metadata field from a\n * source map and exposes ways to query the React DevTools specific metadata\n * included in those fields.\n */\nexport class SourceMapMetadataConsumer {\n  _sourceMap: MixedSourceMap;\n  _decodedHookMapCache: Map<string, HookMap>;\n  _metadataBySource: ?MetadataMap;\n\n  constructor(sourcemap: MixedSourceMap) {\n    this._sourceMap = sourcemap;\n    this._decodedHookMapCache = new Map();\n    this._metadataBySource = null;\n  }\n\n  /**\n   * Returns the Hook name assigned to a given location in the source code,\n   * and a HookMap extracted from an extended source map.\n   * See `getHookNameForLocation` for more details on implementation.\n   *\n   * When used with the `source-map` package, you'll first use\n   * `SourceMapConsumer#originalPositionFor` to retrieve a source location,\n   * then pass that location to `hookNameFor`.\n   */\n  hookNameFor({\n    line,\n    column,\n    source,\n  }: {\n    ...Position,\n    +source: ?string,\n  }): ?string {\n    if (source == null) {\n      return null;\n    }\n\n    const hookMap = this._getHookMapForSource(source);\n    if (hookMap == null) {\n      return null;\n    }\n\n    return getHookNameForLocation({line, column}, hookMap);\n  }\n\n  hasHookMap(source: ?string): boolean {\n    if (source == null) {\n      return false;\n    }\n    return this._getHookMapForSource(source) != null;\n  }\n\n  /**\n   * Prepares and caches a lookup table of metadata by source name.\n   */\n  _getMetadataBySource(): MetadataMap {\n    if (this._metadataBySource == null) {\n      this._metadataBySource = this._getMetadataObjectsBySourceNames(\n        this._sourceMap,\n      );\n    }\n\n    return this._metadataBySource;\n  }\n\n  /**\n   * Collects source metadata from the given map using the current source name\n   * normalization function. Handles both index maps (with sections) and plain\n   * maps.\n   *\n   * NOTE: If any sources are repeated in the map (which shouldn't usually happen,\n   * but is technically possible because of index maps) we only keep the\n   * metadata from the last occurrence of any given source.\n   */\n  _getMetadataObjectsBySourceNames(sourcemap: MixedSourceMap): MetadataMap {\n    if (sourcemap.mappings === undefined) {\n      const indexSourceMap: IndexSourceMap = sourcemap;\n      const metadataMap = new Map<string, ?ReactSourceMetadata>();\n      indexSourceMap.sections.forEach(section => {\n        const metadataMapForIndexMap = this._getMetadataObjectsBySourceNames(\n          section.map,\n        );\n        metadataMapForIndexMap.forEach((value, key) => {\n          metadataMap.set(key, value);\n        });\n      });\n      return metadataMap;\n    }\n\n    const metadataMap: MetadataMap = new Map();\n    const basicMap: BasicSourceMap = sourcemap;\n    const updateMap = (metadata: ReactSourceMetadata, sourceIndex: number) => {\n      let source = basicMap.sources[sourceIndex];\n      if (source != null) {\n        source = normalizeSourcePath(source, basicMap);\n        metadataMap.set(source, metadata);\n      }\n    };\n\n    if (\n      sourcemap.hasOwnProperty(REACT_SOURCES_EXTENSION_KEY) &&\n      sourcemap[REACT_SOURCES_EXTENSION_KEY] != null\n    ) {\n      const reactMetadataArray = sourcemap[REACT_SOURCES_EXTENSION_KEY];\n      reactMetadataArray.filter(Boolean).forEach(updateMap);\n    } else if (\n      sourcemap.hasOwnProperty(FB_SOURCES_EXTENSION_KEY) &&\n      sourcemap[FB_SOURCES_EXTENSION_KEY] != null\n    ) {\n      const fbMetadataArray = sourcemap[FB_SOURCES_EXTENSION_KEY];\n      if (fbMetadataArray != null) {\n        fbMetadataArray.forEach((fbMetadata, sourceIndex) => {\n          // When extending source maps with React metadata using the\n          // x_facebook_sources field, the position at index 1 on the\n          // metadata tuple is reserved for React metadata\n          const reactMetadata =\n            fbMetadata != null\n              ? fbMetadata[REACT_METADATA_INDEX_IN_FB_METADATA]\n              : null;\n          if (reactMetadata != null) {\n            updateMap(reactMetadata, sourceIndex);\n          }\n        });\n      }\n    }\n\n    return metadataMap;\n  }\n\n  /**\n   * Decodes the function name mappings for the given source if needed, and\n   * retrieves a sorted, searchable array of mappings.\n   */\n  _getHookMapForSource(source: string): ?HookMap {\n    if (this._decodedHookMapCache.has(source)) {\n      return this._decodedHookMapCache.get(source);\n    }\n    let hookMap = null;\n    const metadataBySource = this._getMetadataBySource();\n    const normalized = normalizeSourcePath(source, this._sourceMap);\n    const metadata = metadataBySource.get(normalized);\n    if (metadata != null) {\n      const encodedHookMap = metadata[HOOK_MAP_INDEX_IN_REACT_METADATA];\n      hookMap = encodedHookMap != null ? decodeHookMap(encodedHookMap) : null;\n    }\n    if (hookMap != null) {\n      this._decodedHookMapCache.set(source, hookMap);\n    }\n    return hookMap;\n  }\n}\n","/*\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {getHookNamesMappingFromAST} from './astUtils';\nimport {encode, decode} from 'sourcemap-codec';\n\n// Missing types in @babel/types\ntype File = any;\n\nexport type HookMap = {\n  names: $ReadOnlyArray<string>,\n  mappings: HookMapMappings,\n};\n\nexport type EncodedHookMap = {\n  names: $ReadOnlyArray<string>,\n  mappings: string,\n};\n\n// See generateHookMap below for more details on formatting\nexport type HookMapEntry = [\n  number, // 1-indexed line number\n  number, // 0-indexed column number\n  number, // 0-indexed index into names array\n  number, // TODO: filler number to support reusing encoding from `sourcemap-codec` (see TODO below)\n];\nexport type HookMapLine = HookMapEntry[];\nexport type HookMapMappings = HookMapLine[];\n\n/**\n * Given a parsed source code AST, returns a \"Hook Map\", which is a\n * mapping which maps locations in the source code to their to their\n * corresponding Hook name, if there is a relevant Hook name for that\n * location (see getHookNamesMappingFromAST for details on the\n * representation of the mapping).\n *\n * The format of the Hook Map follows a similar format as the `name`\n * and `mappings` fields in the Source Map spec, where `names` is an\n * array of strings, and `mappings` contains segments lines, columns,\n * and indices into the `names` array.\n *\n * E.g.:\n *   {\n *     names: [\"<no-hook>\", \"state\"],\n *     mappings: [\n *       [ -> line 1\n *         [1, 0, 0],  -> line, col, name index\n *       ],\n *       [ -> line 2\n *         [2, 5, 1],  -> line, col, name index\n *         [2, 15, 0],  -> line, col, name index\n *       ],\n *     ],\n *   }\n */\nexport function generateHookMap(sourceAST: File): HookMap {\n  const hookNamesMapping = getHookNamesMappingFromAST(sourceAST);\n  const namesMap: Map<string, number> = new Map();\n  const names = [];\n  const mappings: Array<HookMapLine> = [];\n\n  let currentLine: $FlowFixMe | null = null;\n  hookNamesMapping.forEach(({name, start}) => {\n    let nameIndex = namesMap.get(name);\n    if (nameIndex == null) {\n      names.push(name);\n      nameIndex = names.length - 1;\n      namesMap.set(name, nameIndex);\n    }\n\n    // TODO: We add a -1 at the end of the entry so we can later\n    // encode/decode the mappings by reusing the encode/decode functions\n    // from the `sourcemap-codec` library. This library expects segments\n    // of specific sizes (i.e. of size 4) in order to encode them correctly.\n    // In the future, when we implement our own encoding, we will not\n    // need this restriction and can remove the -1 at the end.\n    const entry = [start.line, start.column, nameIndex, -1];\n\n    if (currentLine !== start.line) {\n      currentLine = start.line;\n      mappings.push([entry]);\n    } else {\n      const current = mappings[mappings.length - 1];\n      current.push(entry);\n    }\n  });\n\n  return {names, mappings};\n}\n\n/**\n * Returns encoded version of a Hook Map that is returned\n * by generateHookMap.\n *\n * **NOTE:**\n * TODO: To encode the `mappings` in the Hook Map, we\n * reuse the encode function from the `sourcemap-codec`\n * library, which means that we are restricted to only\n * encoding segments of specific sizes.\n * Inside generateHookMap we make sure to build segments\n * of size 4.\n * In the future, when we implement our own encoding, we will not\n * need this restriction and can remove the -1 at the end.\n */\nexport function generateEncodedHookMap(sourceAST: File): EncodedHookMap {\n  const hookMap = generateHookMap(sourceAST);\n  const encoded = encode(hookMap.mappings);\n  return {\n    names: hookMap.names,\n    mappings: encoded,\n  };\n}\n\nexport function decodeHookMap(encodedHookMap: EncodedHookMap): HookMap {\n  return {\n    names: encodedHookMap.names,\n    mappings: decode(encodedHookMap.mappings),\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport {withSyncPerfMeasurements} from 'react-devtools-shared/src/PerformanceLoggingUtils';\nimport {decode} from 'sourcemap-codec';\n\nimport type {\n  IndexSourceMap,\n  IndexSourceMapSection,\n  BasicSourceMap,\n  MixedSourceMap,\n} from './SourceMapTypes';\n\ntype SearchPosition = {\n  columnNumber: number,\n  lineNumber: number,\n};\n\ntype ResultPosition = {\n  column: number,\n  line: number,\n  sourceContent: string | null,\n  sourceURL: string | null,\n};\n\nexport type SourceMapConsumerType = {\n  originalPositionFor: SearchPosition => ResultPosition,\n};\n\ntype Mappings = Array<Array<Array<number>>>;\n\nexport default function SourceMapConsumer(\n  sourceMapJSON: MixedSourceMap | IndexSourceMapSection,\n): SourceMapConsumerType {\n  if (sourceMapJSON.sections != null) {\n    return IndexedSourceMapConsumer(((sourceMapJSON: any): IndexSourceMap));\n  } else {\n    return BasicSourceMapConsumer(((sourceMapJSON: any): BasicSourceMap));\n  }\n}\n\nfunction BasicSourceMapConsumer(sourceMapJSON: BasicSourceMap) {\n  const decodedMappings: Mappings = withSyncPerfMeasurements(\n    'Decoding source map mappings with sourcemap-codec',\n    () => decode(sourceMapJSON.mappings),\n  );\n\n  function originalPositionFor({\n    columnNumber,\n    lineNumber,\n  }: SearchPosition): ResultPosition {\n    // Error.prototype.stack columns are 1-based (like most IDEs) but ASTs are 0-based.\n    const targetColumnNumber = columnNumber - 1;\n\n    const lineMappings = decodedMappings[lineNumber - 1];\n\n    let nearestEntry = null;\n\n    let startIndex = 0;\n    let stopIndex = lineMappings.length - 1;\n    let index = -1;\n    while (startIndex <= stopIndex) {\n      index = Math.floor((stopIndex + startIndex) / 2);\n      nearestEntry = lineMappings[index];\n\n      const currentColumn = nearestEntry[0];\n      if (currentColumn === targetColumnNumber) {\n        break;\n      } else {\n        if (currentColumn > targetColumnNumber) {\n          if (stopIndex - index > 0) {\n            stopIndex = index;\n          } else {\n            index = stopIndex;\n            break;\n          }\n        } else {\n          if (index - startIndex > 0) {\n            startIndex = index;\n          } else {\n            index = startIndex;\n            break;\n          }\n        }\n      }\n    }\n\n    // We have found either the exact element, or the next-closest element.\n    // However there may be more than one such element.\n    // Make sure we always return the smallest of these.\n    while (index > 0) {\n      const previousEntry = lineMappings[index - 1];\n      const currentColumn = previousEntry[0];\n      if (currentColumn !== targetColumnNumber) {\n        break;\n      }\n      index--;\n    }\n\n    if (nearestEntry == null) {\n      // TODO maybe fall back to the runtime source instead of throwing?\n      throw Error(\n        `Could not find runtime location for line:${lineNumber} and column:${columnNumber}`,\n      );\n    }\n\n    const sourceIndex = nearestEntry[1];\n    const sourceContent =\n      sourceMapJSON.sourcesContent != null\n        ? sourceMapJSON.sourcesContent[sourceIndex]\n        : null;\n    const sourceURL = sourceMapJSON.sources[sourceIndex] ?? null;\n    const line = nearestEntry[2] + 1;\n    const column = nearestEntry[3];\n\n    return {\n      column,\n      line,\n      sourceContent: ((sourceContent: any): string | null),\n      sourceURL: ((sourceURL: any): string | null),\n    };\n  }\n\n  return (({\n    originalPositionFor,\n  }: any): SourceMapConsumerType);\n}\n\ntype Section = {\n  +generatedColumn: number,\n  +generatedLine: number,\n  +map: MixedSourceMap,\n\n  // Lazily parsed only when/as the section is needed.\n  sourceMapConsumer: SourceMapConsumerType | null,\n};\n\nfunction IndexedSourceMapConsumer(sourceMapJSON: IndexSourceMap) {\n  let lastOffset = {\n    line: -1,\n    column: 0,\n  };\n\n  const sections: Array<Section> = sourceMapJSON.sections.map(section => {\n    const offset = section.offset;\n    const offsetLine = offset.line;\n    const offsetColumn = offset.column;\n\n    if (\n      offsetLine < lastOffset.line ||\n      (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)\n    ) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n\n    lastOffset = offset;\n\n    return {\n      // The offset fields are 0-based, but we use 1-based indices when encoding/decoding from VLQ.\n      generatedLine: offsetLine + 1,\n      generatedColumn: offsetColumn + 1,\n      map: section.map,\n      sourceMapConsumer: null,\n    };\n  });\n\n  function originalPositionFor({\n    columnNumber,\n    lineNumber,\n  }: SearchPosition): ResultPosition {\n    // Error.prototype.stack columns are 1-based (like most IDEs) but ASTs are 0-based.\n    const targetColumnNumber = columnNumber - 1;\n\n    let section = null;\n\n    let startIndex = 0;\n    let stopIndex = sections.length - 1;\n    let index = -1;\n    while (startIndex <= stopIndex) {\n      index = Math.floor((stopIndex + startIndex) / 2);\n      section = sections[index];\n\n      const currentLine = section.generatedLine;\n      if (currentLine === lineNumber) {\n        const currentColumn = section.generatedColumn;\n        if (currentColumn === lineNumber) {\n          break;\n        } else {\n          if (currentColumn > targetColumnNumber) {\n            if (stopIndex - index > 0) {\n              stopIndex = index;\n            } else {\n              index = stopIndex;\n              break;\n            }\n          } else {\n            if (index - startIndex > 0) {\n              startIndex = index;\n            } else {\n              index = startIndex;\n              break;\n            }\n          }\n        }\n      } else {\n        if (currentLine > lineNumber) {\n          if (stopIndex - index > 0) {\n            stopIndex = index;\n          } else {\n            index = stopIndex;\n            break;\n          }\n        } else {\n          if (index - startIndex > 0) {\n            startIndex = index;\n          } else {\n            index = startIndex;\n            break;\n          }\n        }\n      }\n    }\n\n    if (section == null) {\n      // TODO maybe fall back to the runtime source instead of throwing?\n      throw Error(\n        `Could not find matching section for line:${lineNumber} and column:${columnNumber}`,\n      );\n    }\n\n    if (section.sourceMapConsumer === null) {\n      // Lazily parse the section only when it's needed.\n      // $FlowFixMe[invalid-constructor] Flow no longer supports calling new on functions\n      section.sourceMapConsumer = new SourceMapConsumer(section.map);\n    }\n\n    return section.sourceMapConsumer.originalPositionFor({\n      columnNumber,\n      lineNumber,\n    });\n  }\n\n  return (({\n    originalPositionFor,\n  }: any): SourceMapConsumerType);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// For an overview of why the code in this file is structured this way,\n// refer to header comments in loadSourceAndMetadata.\n\nimport {parse} from '@babel/parser';\nimport LRU from 'lru-cache';\nimport {getHookName} from '../astUtils';\nimport {areSourceMapsAppliedToErrors} from '../ErrorTester';\nimport {__DEBUG__} from 'react-devtools-shared/src/constants';\nimport {getHookSourceLocationKey} from 'react-devtools-shared/src/hookNamesCache';\nimport {SourceMapMetadataConsumer} from '../SourceMapMetadataConsumer';\nimport {\n  withAsyncPerfMeasurements,\n  withSyncPerfMeasurements,\n} from 'react-devtools-shared/src/PerformanceLoggingUtils';\nimport SourceMapConsumer from '../SourceMapConsumer';\n\nimport type {SourceMapConsumerType} from '../SourceMapConsumer';\nimport type {\n  HooksList,\n  LocationKeyToHookSourceAndMetadata,\n} from './loadSourceAndMetadata';\nimport type {HookSource} from 'react-debug-tools/src/ReactDebugHooks';\nimport type {\n  HookNames,\n  LRUCache,\n} from 'react-devtools-shared/src/frontend/types';\n\ntype AST = mixed;\n\ntype HookParsedMetadata = {\n  // API for consuming metadfata present in extended source map.\n  metadataConsumer: SourceMapMetadataConsumer | null,\n\n  // AST for original source code; typically comes from a consumed source map.\n  originalSourceAST: AST | null,\n\n  // Source code (React components or custom hooks) containing primitive hook calls.\n  // If no source map has been provided, this code will be the same as runtimeSourceCode.\n  originalSourceCode: string | null,\n\n  // Original source URL if there is a source map, or the same as runtimeSourceURL.\n  originalSourceURL: string | null,\n\n  // Line number in original source code.\n  originalSourceLineNumber: number | null,\n\n  // Column number in original source code.\n  originalSourceColumnNumber: number | null,\n\n  // Alternate APIs from source-map for parsing source maps (if detected).\n  sourceMapConsumer: SourceMapConsumerType | null,\n};\n\ntype LocationKeyToHookParsedMetadata = Map<string, HookParsedMetadata>;\n\ntype CachedRuntimeCodeMetadata = {\n  metadataConsumer: SourceMapMetadataConsumer | null,\n  sourceMapConsumer: SourceMapConsumerType | null,\n};\n\nconst runtimeURLToMetadataCache: LRUCache<string, CachedRuntimeCodeMetadata> =\n  new LRU({max: 50});\n\ntype CachedSourceCodeMetadata = {\n  originalSourceAST: AST,\n  originalSourceCode: string,\n};\n\nconst originalURLToMetadataCache: LRUCache<string, CachedSourceCodeMetadata> =\n  new LRU({\n    max: 50,\n    dispose: (\n      originalSourceURL: string,\n      metadata: CachedSourceCodeMetadata,\n    ) => {\n      if (__DEBUG__) {\n        console.log(\n          `originalURLToMetadataCache.dispose() Evicting cached metadata for \"${originalSourceURL}\"`,\n        );\n      }\n    },\n  });\n\nexport async function parseSourceAndMetadata(\n  hooksList: HooksList,\n  locationKeyToHookSourceAndMetadata: LocationKeyToHookSourceAndMetadata,\n): Promise<HookNames | null> {\n  return withAsyncPerfMeasurements('parseSourceAndMetadata()', async () => {\n    const locationKeyToHookParsedMetadata = withSyncPerfMeasurements(\n      'initializeHookParsedMetadata',\n      () => initializeHookParsedMetadata(locationKeyToHookSourceAndMetadata),\n    );\n\n    withSyncPerfMeasurements('parseSourceMaps', () =>\n      parseSourceMaps(\n        locationKeyToHookSourceAndMetadata,\n        locationKeyToHookParsedMetadata,\n      ),\n    );\n\n    withSyncPerfMeasurements('parseSourceAST()', () =>\n      parseSourceAST(\n        locationKeyToHookSourceAndMetadata,\n        locationKeyToHookParsedMetadata,\n      ),\n    );\n\n    return withSyncPerfMeasurements('findHookNames()', () =>\n      findHookNames(hooksList, locationKeyToHookParsedMetadata),\n    );\n  });\n}\n\nfunction findHookNames(\n  hooksList: HooksList,\n  locationKeyToHookParsedMetadata: LocationKeyToHookParsedMetadata,\n): HookNames {\n  const map: HookNames = new Map();\n\n  hooksList.map(hook => {\n    // We already guard against a null HookSource in parseHookNames()\n    const hookSource = ((hook.hookSource: any): HookSource);\n    const fileName = hookSource.fileName;\n    if (!fileName) {\n      return null; // Should not be reachable.\n    }\n\n    const locationKey = getHookSourceLocationKey(hookSource);\n    const hookParsedMetadata = locationKeyToHookParsedMetadata.get(locationKey);\n    if (!hookParsedMetadata) {\n      return null; // Should not be reachable.\n    }\n\n    const {lineNumber, columnNumber} = hookSource;\n    if (!lineNumber || !columnNumber) {\n      return null; // Should not be reachable.\n    }\n\n    const {\n      originalSourceURL,\n      originalSourceColumnNumber,\n      originalSourceLineNumber,\n    } = hookParsedMetadata;\n\n    if (\n      originalSourceLineNumber == null ||\n      originalSourceColumnNumber == null ||\n      originalSourceURL == null\n    ) {\n      return null; // Should not be reachable.\n    }\n\n    let name;\n    const {metadataConsumer} = hookParsedMetadata;\n    if (metadataConsumer != null) {\n      name = withSyncPerfMeasurements('metadataConsumer.hookNameFor()', () =>\n        metadataConsumer.hookNameFor({\n          line: originalSourceLineNumber,\n          column: originalSourceColumnNumber,\n          source: originalSourceURL,\n        }),\n      );\n    }\n\n    if (name == null) {\n      name = withSyncPerfMeasurements('getHookName()', () =>\n        getHookName(\n          hook,\n          hookParsedMetadata.originalSourceAST,\n          ((hookParsedMetadata.originalSourceCode: any): string),\n          ((originalSourceLineNumber: any): number),\n          originalSourceColumnNumber,\n        ),\n      );\n    }\n\n    if (__DEBUG__) {\n      console.log(`findHookNames() Found name \"${name || '-'}\"`);\n    }\n\n    const key = getHookSourceLocationKey(hookSource);\n    map.set(key, name);\n  });\n\n  return map;\n}\n\nfunction initializeHookParsedMetadata(\n  locationKeyToHookSourceAndMetadata: LocationKeyToHookSourceAndMetadata,\n) {\n  // Create map of unique source locations (file names plus line and column numbers) to metadata about hooks.\n  const locationKeyToHookParsedMetadata: LocationKeyToHookParsedMetadata =\n    new Map();\n  locationKeyToHookSourceAndMetadata.forEach(\n    (hookSourceAndMetadata, locationKey) => {\n      const hookParsedMetadata: HookParsedMetadata = {\n        metadataConsumer: null,\n        originalSourceAST: null,\n        originalSourceCode: null,\n        originalSourceURL: null,\n        originalSourceLineNumber: null,\n        originalSourceColumnNumber: null,\n        sourceMapConsumer: null,\n      };\n\n      locationKeyToHookParsedMetadata.set(locationKey, hookParsedMetadata);\n    },\n  );\n\n  return locationKeyToHookParsedMetadata;\n}\n\nfunction parseSourceAST(\n  locationKeyToHookSourceAndMetadata: LocationKeyToHookSourceAndMetadata,\n  locationKeyToHookParsedMetadata: LocationKeyToHookParsedMetadata,\n): void {\n  locationKeyToHookSourceAndMetadata.forEach(\n    (hookSourceAndMetadata, locationKey) => {\n      const hookParsedMetadata =\n        locationKeyToHookParsedMetadata.get(locationKey);\n      if (hookParsedMetadata == null) {\n        throw Error(`Expected to find HookParsedMetadata for \"${locationKey}\"`);\n      }\n\n      if (hookParsedMetadata.originalSourceAST !== null) {\n        // Use cached metadata.\n        return;\n      }\n\n      if (\n        hookParsedMetadata.originalSourceURL != null &&\n        hookParsedMetadata.originalSourceCode != null &&\n        hookParsedMetadata.originalSourceColumnNumber != null &&\n        hookParsedMetadata.originalSourceLineNumber != null\n      ) {\n        // Use cached metadata.\n        return;\n      }\n\n      const {lineNumber, columnNumber} = hookSourceAndMetadata.hookSource;\n      if (lineNumber == null || columnNumber == null) {\n        throw Error('Hook source code location not found.');\n      }\n\n      const {metadataConsumer, sourceMapConsumer} = hookParsedMetadata;\n      const runtimeSourceCode =\n        ((hookSourceAndMetadata.runtimeSourceCode: any): string);\n      let hasHookMap = false;\n      let originalSourceURL;\n      let originalSourceCode;\n      let originalSourceColumnNumber;\n      let originalSourceLineNumber;\n      if (areSourceMapsAppliedToErrors() || sourceMapConsumer === null) {\n        // Either the current environment automatically applies source maps to errors,\n        // or the current code had no source map to begin with.\n        // Either way, we don't need to convert the Error stack frame locations.\n        originalSourceColumnNumber = columnNumber;\n        originalSourceLineNumber = lineNumber;\n        // There's no source map to parse here so we can just parse the original source itself.\n        originalSourceCode = runtimeSourceCode;\n        // TODO (named hooks) This mixes runtimeSourceURLs with source mapped URLs in the same cache key space.\n        // Namespace them?\n        originalSourceURL = hookSourceAndMetadata.runtimeSourceURL;\n      } else {\n        const {column, line, sourceContent, sourceURL} =\n          sourceMapConsumer.originalPositionFor({\n            columnNumber,\n            lineNumber,\n          });\n        if (sourceContent === null || sourceURL === null) {\n          throw Error(\n            `Could not find original source for line:${lineNumber} and column:${columnNumber}`,\n          );\n        }\n\n        originalSourceColumnNumber = column;\n        originalSourceLineNumber = line;\n        originalSourceCode = sourceContent;\n        originalSourceURL = sourceURL;\n      }\n\n      hookParsedMetadata.originalSourceCode = originalSourceCode;\n      hookParsedMetadata.originalSourceURL = originalSourceURL;\n      hookParsedMetadata.originalSourceLineNumber = originalSourceLineNumber;\n      hookParsedMetadata.originalSourceColumnNumber =\n        originalSourceColumnNumber;\n\n      if (\n        metadataConsumer != null &&\n        metadataConsumer.hasHookMap(originalSourceURL)\n      ) {\n        hasHookMap = true;\n      }\n\n      if (__DEBUG__) {\n        console.log(\n          `parseSourceAST() mapped line ${lineNumber}->${originalSourceLineNumber} and column ${columnNumber}->${originalSourceColumnNumber}`,\n        );\n      }\n\n      if (hasHookMap) {\n        if (__DEBUG__) {\n          console.log(\n            `parseSourceAST() Found hookMap and skipping parsing for \"${originalSourceURL}\"`,\n          );\n        }\n        // If there's a hook map present from an extended sourcemap then\n        // we don't need to parse the source files and instead can use the\n        // hook map to extract hook names.\n        return;\n      }\n\n      if (__DEBUG__) {\n        console.log(\n          `parseSourceAST() Did not find hook map for \"${originalSourceURL}\"`,\n        );\n      }\n\n      // The cache also serves to deduplicate parsing by URL in our loop over location keys.\n      // This may need to change if we switch to async parsing.\n      const sourceMetadata = originalURLToMetadataCache.get(originalSourceURL);\n      if (sourceMetadata != null) {\n        if (__DEBUG__) {\n          console.groupCollapsed(\n            `parseSourceAST() Found cached source metadata for \"${originalSourceURL}\"`,\n          );\n          console.log(sourceMetadata);\n          console.groupEnd();\n        }\n        hookParsedMetadata.originalSourceAST = sourceMetadata.originalSourceAST;\n        hookParsedMetadata.originalSourceCode =\n          sourceMetadata.originalSourceCode;\n      } else {\n        try {\n          // TypeScript is the most commonly used typed JS variant so let's default to it\n          // unless we detect explicit Flow usage via the \"@flow\" pragma.\n          const plugin =\n            originalSourceCode.indexOf('@flow') > 0 ? 'flow' : 'typescript';\n\n          // TODO (named hooks) This is probably where we should check max source length,\n          // rather than in loadSourceAndMetatada -> loadSourceFiles().\n          // TODO(#22319): Support source files that are html files with inline script tags.\n          const originalSourceAST = withSyncPerfMeasurements(\n            '[@babel/parser] parse(originalSourceCode)',\n            () =>\n              parse(originalSourceCode, {\n                sourceType: 'unambiguous',\n                plugins: ['jsx', plugin],\n              }),\n          );\n          hookParsedMetadata.originalSourceAST = originalSourceAST;\n\n          if (__DEBUG__) {\n            console.log(\n              `parseSourceAST() Caching source metadata for \"${originalSourceURL}\"`,\n            );\n          }\n\n          originalURLToMetadataCache.set(originalSourceURL, {\n            originalSourceAST,\n            originalSourceCode,\n          });\n        } catch (error) {\n          throw new Error(\n            `Failed to parse source file: ${originalSourceURL}\\n\\n` +\n              `Original error: ${error}`,\n          );\n        }\n      }\n    },\n  );\n}\n\nfunction parseSourceMaps(\n  locationKeyToHookSourceAndMetadata: LocationKeyToHookSourceAndMetadata,\n  locationKeyToHookParsedMetadata: LocationKeyToHookParsedMetadata,\n) {\n  locationKeyToHookSourceAndMetadata.forEach(\n    (hookSourceAndMetadata, locationKey) => {\n      const hookParsedMetadata =\n        locationKeyToHookParsedMetadata.get(locationKey);\n      if (hookParsedMetadata == null) {\n        throw Error(`Expected to find HookParsedMetadata for \"${locationKey}\"`);\n      }\n\n      const {runtimeSourceURL, sourceMapJSON} = hookSourceAndMetadata;\n\n      // If we've already loaded the source map info for this file,\n      // we can skip reloading it (and more importantly, re-parsing it).\n      const runtimeMetadata = runtimeURLToMetadataCache.get(runtimeSourceURL);\n      if (runtimeMetadata != null) {\n        if (__DEBUG__) {\n          console.groupCollapsed(\n            `parseHookNames() Found cached runtime metadata for file \"${runtimeSourceURL}\"`,\n          );\n          console.log(runtimeMetadata);\n          console.groupEnd();\n        }\n\n        hookParsedMetadata.metadataConsumer = runtimeMetadata.metadataConsumer;\n        hookParsedMetadata.sourceMapConsumer =\n          runtimeMetadata.sourceMapConsumer;\n      } else {\n        if (sourceMapJSON != null) {\n          const sourceMapConsumer = withSyncPerfMeasurements(\n            'new SourceMapConsumer(sourceMapJSON)',\n            () => SourceMapConsumer(sourceMapJSON),\n          );\n\n          const metadataConsumer = withSyncPerfMeasurements(\n            'new SourceMapMetadataConsumer(sourceMapJSON)',\n            () => new SourceMapMetadataConsumer(sourceMapJSON),\n          );\n\n          hookParsedMetadata.metadataConsumer = metadataConsumer;\n          hookParsedMetadata.sourceMapConsumer = sourceMapConsumer;\n\n          // Only set once to avoid triggering eviction/cleanup code.\n          runtimeURLToMetadataCache.set(runtimeSourceURL, {\n            metadataConsumer: metadataConsumer,\n            sourceMapConsumer: sourceMapConsumer,\n          });\n        }\n      }\n    },\n  );\n}\n\nexport function purgeCachedMetadata(): void {\n  originalURLToMetadataCache.reset();\n  runtimeURLToMetadataCache.reset();\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as parseSourceAndMetadataModule from './parseSourceAndMetadata';\n\nexport const parseSourceAndMetadata =\n  parseSourceAndMetadataModule.parseSourceAndMetadata;\nexport const purgeCachedMetadata =\n  parseSourceAndMetadataModule.purgeCachedMetadata;\n"],"names":["Object","defineProperty","exports","value","codeFrameColumns","rawLines","lineNumber","colNumber","opts","deprecationWarningShown","message","process","emitWarning","Error","name","console","warn","start","column","Math","max","line","_highlight","obj","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","NEWLINE","loc","highlighted","highlightCode","forceColor","shouldHighlight","chalk","getChalk","defs","gutter","grey","marker","red","bold","getDefs","maybeHighlight","chalkFn","string","lines","split","end","markerLines","source","startLoc","assign","endLoc","linesAbove","linesBelow","startLine","startColumn","endLine","endColumn","min","length","lineDiff","i","sourceLength","getMarkerLines","hasColumns","numberMaxWidth","String","frame","slice","map","index","number","hasMarker","lastMarkerLine","markerLine","Array","isArray","markerSpacing","replace","numberOfMarkers","repeat","join","reset","node","parent","scope","id","localBinding","t","isObjectProperty","isObjectMethod","kind","computed","isLiteral","isVariableDeclarator","isIdentifier","binding","getBinding","constant","cloneNode","NOT_LOCAL_BINDING","isAssignmentExpression","operator","left","isNullLiteral","isRegExpLiteral","pattern","flags","isTemplateLiteral","quasis","quasi","raw","undefined","getNameFromLiteralId","toBindingIdentifierName","identifier","state","method","selfReference","hasBinding","hasGlobal","isFunction","build","buildPropertyMethodAssignmentWrapper","generator","buildGeneratorPropertyMethodAssignmentWrapper","template","FUNCTION","FUNCTION_ID","FUNCTION_KEY","generateUidIdentifier","expression","params","callee","body","len","_helperGetFunctionArity","push","rename","getProgramParent","references","wrap","selfAssignment","outerDeclar","getBindingIdentifier","getOwnBinding","traverse","visitor","visit","_interopRequireDefault","_template","path","stop","createTemplateBuilder","formatter","defaultOpts","templateFnCache","templateAstCache","cachedOpts","_options","validate","tpl","args","extendedTrace","_string","merge","builder","_literal","ast","NO_PLACEHOLDER","placeholderPattern","fn","rootStack","error","stack","arg","err","program","statement","statements","smart","makeStatementFormatter","code","str","unwrap","stmt","assertExpressionStatement","formatters","_builder","_default","bind","metadata","names","nameSet","prefix","result","buildTemplateCode","Set","_parse","parser","placeholderWhitelist","concat","from","preserveComments","syntacticPlaceholders","placeholders","some","placeholder","isDuplicate","buildLiteralData","defaultReplacements","forEach","replacement","replacements","normalizeReplacements","keys","_populate","a","b","_ref","excluded","target","sourceKeys","indexOf","_objectWithoutPropertiesLoose","RegExp","reduce","acc","parserOpts","plugins","allowReturnOutsideFunction","allowSuperOutsideMethod","sourceType","_parser","parse","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isStringLiteral","test","type","expectedNode","isNewExpression","isCallExpression","isExpressionStatement","isStatement","resolve","resolveAncestors","add","placeholderName","reverse","stringLiteral","blockStatement","expressionStatement","emptyStatement","items","splice","applyReplacement","e","param","isAssignmentPattern","isRestElement","exportDeclaration","isExportDeclaration","isDefault","isExportDefaultDeclaration","declaration","isClassDeclaration","standaloneDeclaration","isFunctionDeclaration","isScope","needBindingRegistration","isFunctionExpression","isClassExpression","updatedDeclaration","variableDeclaration","variableDeclarator","updatedExportDeclaration","exportNamedDeclaration","exportSpecifier","insertAfter","replaceWith","registerDeclaration","bindingIdentifiers","getOuterBindingIdentifiers","specifiers","aliasDeclar","colorConvert","wrapAnsi16","offset","apply","arguments","wrapAnsi256","wrapAnsi16m","rgb","module","enumerable","codes","Map","styles","modifier","dim","italic","underline","inverse","hidden","strikethrough","color","black","green","yellow","blue","magenta","cyan","white","gray","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgColor","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","groupName","group","styleName","style","open","close","ansi2ansi","n","rgb2rgb","r","g","ansi","ansi256","ansi16m","suite","ansi16","escapeStringRegexp","ansiStyles","stdoutColor","isSimpleWindowsTerm","platform","env","TERM","toLowerCase","startsWith","levelMapping","skipModels","create","applyOptions","options","scLevel","level","enabled","Chalk","this","chalkTag","setPrototypeOf","constructor","closeRe","_styles","_empty","visible","model","toUpperCase","proto","defineProperties","applyStyle","self","hasGrey","__proto__","argsLen","originalDim","strings","parts","supportsColor","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","c","fromCharCode","parseInt","parseArguments","results","chunks","trim","matches","chunk","isNaN","match","m","escape","chr","Number","parseStyle","lastIndex","exec","buildStyle","layer","current","tmp","escapeChar","pop","errMsg","cssKeywords","reverseKeywords","convert","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","hcg","apple","h","l","delta","rdif","gdif","bdif","s","v","diff","diffc","k","reversed","currentClosestKeyword","x","y","currentClosestDistance","Infinity","distance","pow","z","t1","t2","t3","val","smin","lmin","hi","floor","f","p","q","sl","vmin","wh","bl","ratio","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","round","mult","rem","toString","substring","colorString","char","integer","hue","chroma","mg","pure","w","conversions","route","fromModel","routes","toModel","wrappedFn","conversion","wrapRounded","wrapRaw","link","to","wrapConversion","graph","cur","unshift","models","buildGraph","queue","adjacents","adjacent","deriveBFS","matchOperatorsRe","TypeError","os","hasFlag","getSupportLevel","stream","isTTY","osRelease","release","versions","sign","CI_NAME","TEAMCITY_VERSION","COLORTERM","version","TERM_PROGRAM_VERSION","TERM_PROGRAM","hasBasic","has256","has16m","translateLevel","FORCE_COLOR","stdout","stderr","beforeExpr","startsExpr","isLoop","TokenType","label","conf","rightAssociative","isAssign","postfix","binop","updateContext","keywords","createKeyword","token","createBinop","types","num","bigint","decimal","regexp","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","isWhitespace","Position","col","SourceLocation","filename","identifierName","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","getPluginOption","plugin","last","CommentsParser","addComment","comment","trailingComments","leadingComments","adjustCommentsAfterTrailingComma","elements","takeAllComments","lastElement","j","commentPreviousNode","newTrailingComments","leadingComment","processComment","commentStack","firstChild","lastChild","lastInStack","properties","innerComments","firstTrailingCommentIndex","findIndex","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","reasonCode","ParserError","getLocationForPosition","pos","lastTokStart","lastTokStartLoc","lastTokEnd","lastTokEndLoc","input","lineStart","getLineInfo","raise","raiseWithData","raiseOverwrite","_","errorRecovery","errors","_raise","data","errorTemplate","errorContext","isLookahead","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","readTmplToken","functionExpression","functionStatement","tt","context","exprAllowed","out","curContext","prevType","allowed","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","isIdentifierChar","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScope","allowSuper","currentThisScope","allowDirectSuper","inClass","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","enter","exit","declareName","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","Errors","checkLocalExport","FlowScope","declareFunctions","FlowScopeHandler","super","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","property","tc","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","isAsync","isGenerator","nonNull","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","PlaceHolderErrors","ClassNameIsRequired","option","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","estreeParseRegExpLiteral","regex","estreeParseLiteral","estreeParseBigIntLiteral","bigInt","BigInt","_unused","estreeParseDecimalLiteral","parseLiteral","directiveToStmt","directive","directiveLiteral","startNodeAt","extra","expressionValue","finishNodeAt","initFunction","checkDeclaration","getObjectOrClassMethodParams","isValidDirective","_stmt$expression$extr","parenthesized","stmtToDirective","addExtra","parseBlockBody","directiveStatements","directives","d","pushClassMethod","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parseExprAtom","refExpressionErrors","parseMaybePrivateName","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","isPrivateName","startPos","parseFunctionBody","allowExpression","isMethod","inClassScope","funcNode","startNode","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","isPattern","isAccessor","shorthand","parseObjectProperty","toAssignable","isLHS","toAssignableObjectExpressionProp","finishCallExpression","optional","_node$arguments$","attributes","toReferencedArguments","parseExport","exported","parseSubscript","base","noCalls","optionalChainMember","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","jsx","jsxReadToken","chunkStart","ch","charCodeAt","finishToken","getTokenFromCode","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","jsxReadString","quote","entity","count","substr","fromCodePoint","XHTMLEntities","jsxReadWord","jsxParseIdentifier","unexpected","next","jsxParseNamespacedName","eat","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","parseExpression","expect","jsxParseAttribute","argument","parseMaybeAssignAllowIn","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","flow","flowPragma","getScopeHandler","shouldParseTypes","shouldParseEnums","flowParseTypeInitialiser","tok","oldInType","inType","flowParseType","flowParsePredicate","moduloPos","expectContextual","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","flowParseFunctionTypeParams","rest","returnType","typeAnnotation","resetEndLocation","semicolon","BIND_FLAGS_FLOW_DECLARE_FN","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","hasModuleExport","bodyElement","isEsModuleType","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","topLevel","strict","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","refNeedsArrowPos","tryParse","failState","clone","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","checkParams","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","readWord1","fullWord","finishOp","isIteratorStart","isBinding","element","exprList","trailingCommaPos","toReferencedList","isParenthesizedExpr","_expr$extra","parseArrayLike","canBePattern","isTuple","maybeInArrowParameters","checkLVal","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyName","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","contextDescription","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewArguments","targs","parseArrowExpression","readToken_mult_modulo","hasFlowComment","nextToken","readToken_pipe_amp","parseTopLevel","file","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","parseBooleanLiteral","flowEnumMemberRaw","init","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","boolsLen","numsLen","strsLen","defaultedLen","nextTokenStart","afterNext","typescript","tsIsIdentifier","tsTokenCanFollowModifier","isLiteralPropertyName","tsNextTokenCanFollowModifier","tsParseModifier","allowedModifiers","tsTryParse","tsParseModifiers","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseIdentifierName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","isLineTerminator","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","firstParameter","tsParseTypeMember","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","keywordTypeFromName","lookaheadCharCode","parseMaybeUnary","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","kw","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","isConst","BIND_TS_ENUM","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","prodParam","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","res","tsTryParseAndCatch","tsTryParseDeclare","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","hasFollowingLineBreak","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsIsDeclarationStart","parseAssignableListItem","decorators","parseAccessModifier","elt","pp","parameter","bodilessType","isAmbientContext","registerFunctionStatementId","tsCheckForInvalidTypeCasts","isInParens","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","parseStatementContent","tsHasSomeModifiers","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","idx","inAbstractClass","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","resetStartLocation","parseClassPropertyAnnotation","definite","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","ct","_typeParameters","toAssignableParenthesizedExpression","_expr$extra2","parseMaybeDecoratorArguments","checkCommaAfterRest","readToken_lt_gt","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","shouldParseAsAmbientContext","getExpression","v8intrinsic","parseV8Intrinsic","v8IntrinsicStart","parsePlaceholder","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","expectPlugin","isUnparsedContextual","nextTokenStartSince","maybeParseExportDefaultSpecifier","checkExport","filter","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowImportExportEverywhere","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","ParserErrors","pushToken","checkKeywordEscapes","old","curr","codePointAtPos","cp","trail","setStrict","clear","skipSpace","pushComment","block","text","skipLineComment","startSkip","loop","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","readRegexp","width","readToken_caret","readToken_plus_min","size","readToken_eq_excl","readToken_question","next2","readRadixNumber","readString","readWord","escaped","charAt","content","mods","charCode","readInt","radix","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","_isDigit","prev","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","recordStrictModeErrors","underscorePos","parseFloat","readCodePoint","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","octalStr","octal","firstCode","escStart","identifierCheck","esc","keywordTypes","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","declarePrivateName","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","usePrivateName","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","recordDeclarationError","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","recordParenthesizedIdentifierError","recordAsyncArrowParametersError","validateAsPattern","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","expectOnePlugin","oldState","abortSignal","checkExpressionErrors","andThrow","shorthandAssign","doubleProto","initializeScopes","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","oldProdParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","ExpressionErrors","Node","range","NodeUtils","locationNode","unwrapParenthesizedExpression","LValParser","_node$extra3","_node$extra2","isLast","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","parseSpread","parseRestBinding","parseObjectLike","closeCharCode","allowEmpty","elts","parseDecorator","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","elem","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","parseMaybeAssignDisallowIn","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","checkExponentialAfterUnary","sawUnary","isAwait","isAwaitAllowed","parseAwait","parseModuleExpression","isDelete","parseUpdate","isAmbiguousAwait","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","parseNoCallExpr","tag","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","meta","parseMetaProperty","propertyName","SourceTypeModuleErrors","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","cooked","tail","curElt","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","_params","oldInPropertyName","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","withTopicForbiddingContext","outerContextSoloAwaitState","ret","revertScopes","parseProgram","loopLabel","switchLabel","loneSurrogate","StatementParser","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","isLetKeyword","nextCh","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","discriminant","cases","sawDefault","isCase","simple","handler","clause","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","isHangingStatement","requireId","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","isPrivate","isSimple","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","_member$decorators","SCOPE_CLASS","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","FUNC_STATEMENT","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isFrom","_declaration$extra","exportedName","nodes","surrogate","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","Parser","getOptions","pluginMap","pluginsMap","getParser","decoratorsBeforeExport","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","moduleError","_unused2","plural","ms","msAbs","isPlural","isFinite","long","abs","fmtShort","JSON","stringify","formatArgs","useColors","humanize","lastC","save","namespaces","storage","setItem","removeItem","load","getItem","DEBUG","window","__nwjs","navigator","userAgent","document","documentElement","WebkitAppearance","firebug","exception","table","$1","localStorage","localstorage","destroy","warned","colors","log","debug","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","Date","coerce","format","selectColor","extend","configurable","delimiter","newDebug","toNamespace","disable","skips","enable","browser","tty","util","inspectOpts","write","colorCode","hideDate","toISOString","Boolean","isatty","fd","deprecate","o","inspect","O","root","factory","define","StackFrame","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","stacktrace","parseOpera","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","sanitizedLine","location","locationParts","functionName","fileName","columnNumber","functionNameRegex","parseOpera9","parseOpera11","parseOpera10","lineRE","argsRaw","functionCall","shift","flag","argv","terminatorPos","matchToToken","closed","forOwn","isBuffer","Buffer","singleEscapes","regexSingleEscape","regexDigit","regexWhitelist","jsesc","increaseIndentation","oldIndent","indent","indentLevel","defaults","json","destination","quotes","compact","lowercaseHex","inline1","__inline1__","inline2","__inline2__","newLine","isEmpty","useBinNumbers","numbers","useOctNumbers","useDecNumbers","useHexNumbers","toJSON","isMap","isSet","array","isNumber","isObject","hexadecimal","character","es6","second","escapeEverything","minimal","longhand","isScriptContext","Yallist","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","doUse","hit","isStale","del","now","unshiftNode","maxAge","walker","removeNode","Entry","forEachStep","thisp","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","mL","allowStale","mA","lengthCalculator","lC","itemCount","rforEach","head","toArray","values","dump","dumpLru","item","peek","arr","expiresAt","prune","isColorSupported","replaceClose","nextIndex","createColors","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","Item","noop","nextTick","title","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","cwd","chdir","dir","umask","getArg","aArgs","aName","aDefaultValue","urlRegexp","dataUrlRegexp","urlParse","aUrl","scheme","auth","host","port","urlGenerate","aParsedUrl","url","normalize","aPath","isAbsolute","up","temp","aRoot","aPathUrl","aRootUrl","joined","relative","lastIndexOf","supportsNullProto","identity","isProtoString","strcmp","aStr1","aStr2","toSetString","aStr","fromSetString","compareByOriginalPositions","mappingA","mappingB","onlyCompareOriginal","cmp","originalLine","originalColumn","generatedColumn","generatedLine","compareByOriginalPositionsNoSource","compareByGeneratedPositionsDeflated","onlyCompareGenerated","compareByGeneratedPositionsDeflatedNoLine","compareByGeneratedPositionsInflated","parseSourceMapInput","computeSourceURL","sourceRoot","sourceURL","sourceMapURL","parsed","_capitalize","_getter","booleanProps","numericProps","stringProps","props","getArgs","setArgs","getEvalOrigin","evalOrigin","setEvalOrigin","getFileName","getLineNumber","getColumnNumber","getFunctionName","getIsEval","fromString","argsStartIndex","argsEndIndex","locationString","haveStream","streamIsTTY","position","terminatorPosition","pushNode","forEachReverse","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","sliceReverse","deleteCount","inserted","er","SPACES_RE","_map","_buf","_last","_queue","_position","_sourcePosition","_disallowedPop","_flush","trimRight","rawMappings","getRawMappings","writable","append","force","_append","_mark","_this$_map","mark","removeTrailingNewline","removeLastSemicolon","endsWith","suffix","hasContent","exactSource","_disallowPop","_normalizePosition","withSource","originalFilename","originalIdentifierName","targetObj","origLine","origColumn","origFilename","getCurrentColumn","getCurrentLine","File","print","Program","printInnerComments","printSequence","newline","BlockStatement","_node$directives","hasDirectives","rightBrace","Noop","Directive","DirectiveLiteral","getPossibleRaw","unescapedDoubleQuoteRE","unescapedSingleQuoteRE","InterpreterDirective","Placeholder","ClassExpression","ClassDeclaration","isExportNamedDeclaration","printJoin","space","printList","ClassBody","dedent","ClassProperty","tsPrintClassMemberModifiers","_variance","ClassPrivateProperty","ClassMethod","_classMethodHead","ClassPrivateMethod","_methodHead","StaticBlock","UnaryExpression","DoExpression","ParenthesizedExpression","UpdateExpression","startTerminatorless","endTerminatorless","ConditionalExpression","NewExpression","minified","isMemberExpression","SequenceExpression","ThisExpression","Super","Decorator","OptionalMemberExpression","OptionalCallExpression","CallExpression","Import","EmptyStatement","ExpressionStatement","AssignmentPattern","LogicalExpression","BinaryExpression","AssignmentExpression","parens","inForStatementInitCounter","needsParens","BindExpression","MemberExpression","MetaProperty","PrivateName","V8IntrinsicIdentifier","AwaitExpression","YieldExpression","buildYieldAwait","terminatorState","AnyTypeAnnotation","ArrayTypeAnnotation","BooleanTypeAnnotation","BooleanLiteralTypeAnnotation","NullLiteralTypeAnnotation","DeclareClass","isDeclareExportDeclaration","_interfaceish","DeclareFunction","InferredPredicate","DeclaredPredicate","DeclareInterface","InterfaceDeclaration","DeclareModule","DeclareModuleExports","DeclareTypeAlias","TypeAlias","DeclareOpaqueType","OpaqueType","DeclareVariable","DeclareExportDeclaration","FlowExportDeclaration","DeclareExportAllDeclaration","_modules","ExportAllDeclaration","EnumDeclaration","EnumBooleanBody","enumExplicitType","enumBody","EnumNumberBody","EnumStringBody","EnumSymbolBody","EnumDefaultedMember","EnumBooleanMember","enumInitializedMember","EnumNumberMember","EnumStringMember","ExistsTypeAnnotation","FunctionTypeAnnotation","FunctionTypeParam","GenericTypeAnnotation","ClassImplements","InterfaceExtends","InterfaceTypeAnnotation","IntersectionTypeAnnotation","separator","andSeparator","MixedTypeAnnotation","EmptyTypeAnnotation","NullableTypeAnnotation","NumberTypeAnnotation","StringTypeAnnotation","ThisTypeAnnotation","TupleTypeAnnotation","TypeofTypeAnnotation","TypeAnnotation","TypeParameterDeclaration","TypeParameterInstantiation","TypeParameter","ObjectTypeAnnotation","addNewlines","leading","ObjectTypeInternalSlot","ObjectTypeCallProperty","ObjectTypeIndexer","ObjectTypeProperty","ObjectTypeSpreadProperty","QualifiedTypeIdentifier","SymbolTypeAnnotation","UnionTypeAnnotation","orSeparator","TypeCastExpression","Variance","VoidTypeAnnotation","_types2","NumericLiteral","StringLiteral","hasExplicitType","declar","_templateLiterals","_expressions","_statements","_classes","_methods","_types","_flow","_base","_typescript","spaceSeparator","JSXAttribute","JSXIdentifier","JSXNamespacedName","JSXMemberExpression","JSXSpreadAttribute","JSXExpressionContainer","JSXSpreadChild","JSXText","JSXElement","child","JSXOpeningElement","JSXClosingElement","JSXEmptyExpression","JSXFragment","JSXOpeningFragment","JSXClosingFragment","_parameters","_param","_catchUp","_predicate","_functionHead","FunctionDeclaration","FunctionExpression","ArrowFunctionExpression","hasTypes","retainLines","ImportSpecifier","ImportDefaultSpecifier","ExportDefaultSpecifier","ExportSpecifier","ExportNamespaceSpecifier","printAssertions","ExportNamedDeclaration","ExportDeclaration","ExportDefaultDeclaration","ImportDeclaration","_node$attributes","isImportDefaultSpecifier","isImportNamespaceSpecifier","ImportAttribute","ImportNamespaceSpecifier","hasSpecial","isExportNamespaceSpecifier","WithStatement","printBlock","IfStatement","needsBlock","isIfStatement","getLastStatement","printAndIndentOnComments","ForStatement","WhileStatement","DoWhileStatement","LabeledStatement","TryStatement","handlers","CatchClause","SwitchStatement","cas","SwitchCase","DebuggerStatement","VariableDeclaration","hasInits","constDeclarationIndent","variableDeclarationIndent","VariableDeclarator","ThrowStatement","BreakStatement","ReturnStatement","ContinueStatement","ForOfStatement","ForInStatement","buildForXStatement","buildLabelStatement","isLabel","TaggedTemplateExpression","TemplateElement","isFirst","TemplateLiteral","Identifier","ArgumentPlaceholder","SpreadElement","RestElement","ObjectPattern","ObjectExpression","ObjectMethod","ObjectProperty","ArrayPattern","ArrayExpression","elems","RecordExpression","startToken","endToken","recordAndTupleSyntaxType","TupleExpression","RegExpLiteral","BooleanLiteral","NullLiteral","jsescOption","_jsesc","jsonCompatibleStrings","BigIntLiteral","DecimalLiteral","PipelineTopicExpression","PipelineBareFunction","PipelinePrimaryTopicReference","tokenIfPlusMinus","TSTypeAnnotation","TSTypeParameterDeclaration","TSTypeParameterInstantiation","TSTypeParameter","TSParameterProperty","TSDeclareFunction","TSDeclareMethod","TSQualifiedName","TSCallSignatureDeclaration","tsPrintSignatureDeclarationBase","TSConstructSignatureDeclaration","TSPropertySignature","tsPrintPropertyOrMethodName","TSMethodSignature","TSIndexSignature","TSAnyKeyword","TSBigIntKeyword","TSUnknownKeyword","TSNumberKeyword","TSObjectKeyword","TSBooleanKeyword","TSStringKeyword","TSSymbolKeyword","TSVoidKeyword","TSUndefinedKeyword","TSNullKeyword","TSNeverKeyword","TSIntrinsicKeyword","TSThisType","TSFunctionType","tsPrintFunctionOrConstructorType","TSConstructorType","TSTypeReference","TSTypePredicate","TSTypeQuery","TSTypeLiteral","tsPrintTypeLiteralOrInterfaceBody","tsPrintBraced","TSArrayType","TSTupleType","TSOptionalType","TSRestType","TSNamedTupleMember","TSUnionType","tsPrintUnionOrIntersectionType","TSIntersectionType","sep","TSConditionalType","TSInferType","TSParenthesizedType","TSTypeOperator","TSIndexedAccessType","TSMappedType","TSLiteralType","TSExpressionWithTypeArguments","TSInterfaceDeclaration","extendz","TSInterfaceBody","TSTypeAliasDeclaration","TSAsExpression","TSTypeAssertion","TSEnumDeclaration","TSEnumMember","TSModuleDeclaration","TSModuleBlock","TSImportType","TSImportEqualsDeclaration","TSExternalModuleReference","TSNonNullExpression","TSExportAssignment","TSNamespaceExportDeclaration","isField","Generator","generate","CodeGenerator","_sourceMap","_printer","auxiliaryCommentBefore","auxiliaryCommentAfter","shouldPrintComment","retainFunctionParens","concise","adjustMultilineComment","normalizeOptions","sourceMaps","_generator","needsWhitespace","needsWhitespaceBefore","needsWhitespaceAfter","printStack","isOrHasCallExpression","expandedParens","whitespace","expandAliases","func","aliases","FLIPPED_ALIAS_KEYS","alias","expandedWhitespaceNodes","expandedWhitespaceList","linesInfo","isArrayTypeAnnotation","isUnionTypeAnnotation","isIntersectionTypeAnnotation","isTypeAnnotation","isArrowFunctionExpression","hasPostfixPart","isClassExtendsClause","isFirstInStatement","considerArrow","Binary","isBinaryExpression","isUnaryLike","isAwaitExpression","isBinary","parentOp","parentPos","PRECEDENCE","nodeOp","nodePos","isLogicalExpression","isNullableTypeAnnotation","isTSArrayType","isTSOptionalType","isTSIntersectionType","isTSUnionType","isTSRestType","isForStatement","isThrowStatement","isReturnStatement","isWhileStatement","isForInStatement","isSwitchStatement","isYieldExpression","isConditionalExpression","considerDefaultExports","UnaryLike","isObjectPattern","in","instanceof","isOptionalMemberExpression","isOptionalCallExpression","isTaggedTemplateExpression","isTSNonNullExpression","isTSTypeAssertion","isTSAsExpression","isSequenceExpression","isConditional","crawl","hasCall","hasFunction","hasHelper","isHelper","isType","isObjectExpression","isArrayExpression","Literal","isBlockStatement","_parent$properties","_parent$properties2","_parent$callPropertie","_parent$properties3","_parent$callPropertie2","_parent$indexers","amounts","_buffer","generatorFunctions","SCIENTIFIC_NOTATION","ZERO_DECIMAL_INTEGER","NON_DECIMAL_LITERAL","PURE_ANNOTATION_RE","Printer","_printStack","_indent","_insideAux","_printedCommentStarts","_parenPushNewlineState","_noLineTerminator","_printAuxAfterOnNextUserNode","_printedComments","WeakSet","_endsWithInteger","_endsWithWord","_maybeAddAuxComment","_space","isInteger","_newline","_maybeAddParen","_maybeIndent","_getIndent","parenPushNewlineState","cha","chaPost","printed","oldConcise","_compact","printMethod","ReferenceError","oldInAux","_printLeadingComments","isProgram","isFile","_printTrailingComments","enteredPositionlessNode","_printAuxBeforeComment","_printAuxAfterComment","_printComment","rawValue","newlineOpts","_printNewline","isEmptyStatement","_printComments","_getComments","_node$innerComments","commaSeparator","skipNewLines","ignore","isBlockComment","printNewLines","_comment$loc","newlineRegex","indentSize","inlinePureAnnotation","_node$assertions","_cachedMap","_code","_opts","_rawMappings","SourceMapGenerator","setSourceContent","sourceFileName","mapping","addMapping","_lastGenLine","_lastSourceLine","_lastSourceColumn","generated","original","isSimpleProperty","BIND_NONE","_temp","moduloLoc","checksLoc","_i","_i2","_i3","_members$defaultedMem","_i4","_members$defaultedMem2","tsInDeclareContext","tsCheckLineTerminatorAndMatch","tokenType","isDeclareContext","callParseClassMember","oldIsDeclareContext","octalPositions","_expr$properties","_expr$elements","_node$arguments","innerParenStart","parenStart","nameHash","_Array$from","_this$state$labels","constructorAllowsSuper","hadStaticBlock","DuplicateStaticBlock","_node$specifiers","_i5","_node$declaration$dec","_i6","_node$properties","_i7","_node$elements","_this$stack","_Object$keys","clearPath","clearScope","_path","parentPath","shouldVisit","VISITOR_KEYS","listKey","container","maybeQueue","notPriority","trap","priorityQueue","visitMultiple","visitQueue","visitSingle","visited","resync","contexts","pushContext","popContext","getCode","getScope","addHelper","buildError","msg","_scope","_hub","visitors","_context","noScope","explode","hasDenylistedType","verify","cheap","traverseFast","skipKeys","clearNode","removeProperties","tree","hasType","denylistTypes","denylist","findParent","getFunctionParent","getStatementParent","getEarliestCommonAncestorFrom","paths","getDeepestCommonAncestorFrom","deepest","ancestries","earliest","ancestry","parentKey","lastCommonIndex","lastCommon","minDepth","depthLoop","shouldMatch","getAncestry","isAncestor","maybeDescendant","isDescendant","maybeAncestor","shareCommentsWithSiblings","trailing","getSibling","hasPrev","hasNext","addComments","_call","fns","then","_traverseFlags","isBlacklisted","isDenylisted","_this$opts$denylist","blacklist","shouldSkip","shouldStop","_index","skip","skipKey","_index2","SHOULD_SKIP","SHOULD_STOP","setScope","setContext","removed","_resyncParent","_resyncList","_resyncKey","setKey","inList","newContainer","_resyncRemoved","_markRemoved","setup","_this$node","requeue","pathToQueue","_getQueueContexts","toComputedKey","isProperty","ensureBlock","stringPath","returnStatement","arrowFunctionToShadowed","arrowFunctionToExpression","unwrapFunctionEnvironment","buildCodeFrameError","hoistFunctionEnvironment","allowInsertArrow","specCompliant","thisBinding","checkBinding","objectExpression","unshiftContainer","callExpression","hub","thisExpression","memberExpression","_helperFunctionName","fnPath","thisEnvFn","inConstructor","thisPaths","argumentsPaths","newTargetPaths","superProps","superCalls","Function","isJSXMemberExpression","isJSXOpeningElement","isSuper","ReferencedIdentifier","getScopeInformation","allSuperCalls","superBinding","argsBinding","arrowFunctionExpression","restElement","spreadElement","getSuperBinding","superCall","argumentsBinding","argumentsChild","argsRef","newTargetBinding","metaProperty","targetChild","targetRef","superProp","assignmentPath","generateDeclaredUidIdentifier","assignmentExpression","binaryExpression","isUpdateExpression","updateExpr","computedKey","numericLiteral","sequenceExpression","standardizeSuperProperty","isAssignment","isCall","propName","argsList","fnBody","valueIdent","getSuperPropBinding","hasSuperClass","supers","replaceWithMultiple","getThisBinding","thisChild","thisRef","isJSX","jsxIdentifier","cacheKey","getData","setData","evaluateTruthy","evaluate","confident","deoptPath","seen","evaluateCached","deopt","VALID_CALLEES","INVALID_METHODS","existing","resolved","exprs","isNumericLiteral","isBooleanLiteral","evaluateQuasis","testResult","isExpressionWrapper","isReferencedIdentifier","constantViolations","hasValue","NaN","isUnaryExpression","elemValue","isSpreadElement","wasConfident","leftConfident","rightConfident","_evaluate","getOpposite","getCompletionRecords","addCompletionRecords","isDoExpression","isWhile","isTryStatement","isCatchClause","isLastCaseWithConsequent","breakStatement","findBreak","prevSibling","getPrevSibling","remove","buildUndefinedNode","statementFinder","completionRecordForSwitch","getNextSibling","getAllNextSiblings","_key","sibling","siblings","getAllPrevSiblings","_getKey","_getPattern","getBindingIdentifiers","duplicates","getBindingIdentifierPaths","outerOnly","search","ids","isDeclaration","getOuterBindingIdentifierPaths","isLabeledStatement","_findBreak","_findBreak2","isBreakStatement","REMOVED","virtualTypes","_debug","_cache","NodePath_ancestry","NodePath_inference","NodePath_replacement","NodePath_evaluation","NodePath_conversion","NodePath_introspection","NodePath_context","NodePath_removal","NodePath_modification","NodePath_family","NodePath_comments","NodePath","targetNode","pathCheck","def","getPathLocation","TYPES","typeKey","virtualType","checkPath","getTypeAnnotation","_getTypeAnnotation","anyTypeAnnotation","_inferer","declarParent","stringTypeAnnotation","isForOfStatement","voidTypeAnnotation","inferer","inferers","validParent","isBaseType","baseName","soft","_isBaseType","couldBeBaseType","isAnyTypeAnnotation","type2","baseTypeStrictlyMatches","isFlowBaseAnnotation","isGenericType","genericName","isGenericTypeAnnotation","isStringTypeAnnotation","isNumberTypeAnnotation","isBooleanTypeAnnotation","isMixedTypeAnnotation","isEmptyTypeAnnotation","isVoidTypeAnnotation","isReferenced","functionConstantViolations","getConstantViolationsBefore","testType","getConditionalAnnotation","testConstantViolations","ifStatement","violation","isTSTypeAnnotation","createTSUnionType","createFlowUnionType","createUnionTypeAnnotation","getTypeAnnotationBindingConstantViolations","numberTypeAnnotation","violations","status","_guessExecutionStatusRelativeTo","inferAnnotationFromBinaryExpression","typeofPath","typePath","BOOLEAN_NUMBER_BINARY_OPERATORS","typeValue","createTypeAnnotationBasedOnTypeof","getParentConditionalPath","_type","genericTypeAnnotation","NUMBER_UNARY_OPERATORS","STRING_UNARY_OPERATORS","BOOLEAN_UNARY_OPERATORS","booleanTypeAnnotation","NUMBER_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","unionTypeAnnotation","argumentTypes","nullLiteralTypeAnnotation","isObjectKeys","arrayTypeAnnotation","isArrayFrom","isObjectValues","isObjectEntries","tupleTypeAnnotation","resolveCall","_infererReference","buildMatchMemberExpression","is","matchesPattern","allowPartial","isnt","equals","isNodeType","canHaveVariableDeclarationOrExpression","canSwapBetweenExpressionAndStatement","isCompletionRecord","allowInsideFunction","isStatementOrBlock","STATEMENT_OR_BLOCK_KEYS","referencesImport","moduleSource","importName","isImportDeclaration","isImportSpecifier","getSource","willIMaybeExecuteBefore","funcParent","getOuterFunction","_guessExecutionStatusRelativeToDifferentFunctions","commonPath","commonIndex","isExecutionUncertainInList","divergence","keyPosition","referencePaths","allStatus","executionOrderCheckedNodes","dangerous","_resolve","isTypeCastExpression","targetKey","targetName","isConstantExpression","isInStrictMode","isExecutionUncertain","maxIndex","referenceVisitor","react","isCompatTag","breakOnScopePaths","mutableBinding","bindings","scopes","attachAfter","isCompatibleScope","bindingIdentifierEquals","getCompatibleScopes","getAttachmentPath","_getAttachmentPath","targetScope","hasOwnBinding","getAttachmentParentForPath","violationPath","hasOwnParamBindings","getNextScopeAttachmentParent","bodies","_blockHoist","attachTo","uid","declarator","insertFn","attached","isJSXElement","hooks","isSwitchCase","isVariableDeclaration","ForAwaitStatement","NumericLiteralTypeAnnotation","ExistentialTypeParam","SpreadProperty","RestProperty","Flow","Pure","Generated","User","Var","BlockScoped","Referenced","Expression","Statement","BindingIdentifier","ReferencedMemberExpression","grandparent","isForXStatement","isBlockScoped","isVar","isUser","isPure","isFlow","insertBefore","_assertUnremoved","_verifyNodeList","replaceExpressionWithStatements","_containerInsertBefore","shouldInsertCurrentNode","_containerInsert","updateSiblingKeys","_containerInsertAfter","pushContainer","fromIndex","incrementBy","hoist","_hoister","_this$opts","_removeFromScope","_callRemovalHooks","_remove","removeBinding","_removalHooks","_replaceWith","inheritLeadingComments","inheritTrailingComments","replaceWithSourceString","nodePath","oldNode","inheritsComments","removeComments","toSequenceExpression","functionParent","isParentAsync","hoistVariablesVisitor","completionRecords","FUNCTION_TYPES","awaitExpression","replaceInline","referenced","clearValue","deoptValue","hasDeoptedValue","setValue","reassign","reference","dereference","_renamer","_binding","_globals","gatherNodeParts","isModuleDeclaration","isModuleSpecifier","collectorVisitor","For","FOR_INIT_KEYS","registerBinding","Declaration","ForXStatement","addGlobal","getBlockParent","assignments","Block","bodyPath","cached","inited","parentBlock","generateUid","toIdentifier","_generateUid","hasLabel","hasReference","uids","generateUidBasedOnNode","defaultName","generateUidIdentifierBasedOnNode","isThisExpression","maybeGenerateMemoised","dontPush","checkBlockScopedCollisions","oldName","newName","_renameFromMap","allowArrayLike","helperName","getLabel","registerLabel","unaryExpression","registerConstantViolation","bindingPath","declarators","globals","hasUid","constantsOnly","isClassBody","isPureish","removeData","programParent","crawling","ref","unique","blockHoist","dataKey","declarPath","isFunctionParent","isBlockParent","getAllBindings","getAllBindingsOfKind","previousPath","_previousPath","_this$getBinding","getOwnBindingIdentifier","noGlobals","parentHasBinding","contextVariables","_this$parent","moveBindingTo","info","removeOwnBinding","_this$getBinding2","builtin","_helperSplitExportDeclaration","renameVisitor","maybeConvertFromExportDeclaration","parentDeclar","maybeExportDeclar","maybeConvertFromClassFunctionDeclaration","maybeConvertFromClassFunctionExpression","states","wrapper","rootVisitor","visitorType","wrapWithStateOrWrapper","mergePair","_exploded","nodeType","shouldIgnoreKey","ensureEntranceObjects","ensureCallbackArrays","wrapCheck","deprecratedKey","DEPRECATED_KEYS","trace","_verified","validateVisitorMethods","visitorKey","oldVisitor","newVisitor","newFn","dest","src","hasNativeMap","ArraySet","_array","_set","fromArray","aArray","aAllowDuplicates","getOwnPropertyNames","sStr","aIdx","base64","encode","aValue","digit","encoded","vlq","toVLQSigned","VLQ_BASE","decode","aIndex","aOutParam","continuation","shifted","strLen","intToCharMap","recursiveSearch","aLow","aHigh","aNeedle","aHaystack","aCompare","aBias","mid","LEAST_UPPER_BOUND","GREATEST_LOWER_BOUND","MappingList","_sorted","unsortedForEach","aCallback","aThisArg","aMapping","lineA","lineB","columnA","columnB","sort","swap","ary","doQuickSort","comparator","low","high","random","pivot","binarySearch","base64VLQ","quickSort","SourceMapConsumer","aSourceMap","sourceMap","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","sources","sourcesContent","mappings","_version","_names","_sources","_mappings","Mapping","lastOffset","_sections","offsetLine","offsetColumn","generatedOffset","consumer","fromSourceMap","__generatedMappings","_parseMappings","__originalMappings","_charIsMappingSeparator","aSourceRoot","GENERATED_ORDER","ORIGINAL_ORDER","eachMapping","aContext","aOrder","_generatedMappings","_originalMappings","allGeneratedPositionsFor","needle","_findMapping","lastColumn","smc","_sourceRoot","_generateSourcesContent","_file","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","segment","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","originalMappings","aMappings","aLineName","aColumnName","aComparator","computeColumnSpans","nextMapping","lastGeneratedColumn","originalPositionFor","hasContentsOfAllSources","sc","sourceContentFor","aSource","nullOnMissing","fileUriAbsPath","generatedPositionFor","sectionIndex","section","bias","generatedPosition","sectionMappings","adjustedMapping","_skipValidation","_sourcesContents","aSourceMapConsumer","newMapping","sourceFile","_validateMapping","aSourceFile","aSourceContent","applySourceMap","aSourceMapPath","newSources","newNames","aGenerated","aOriginal","_serializeMappings","nameIdx","sourceIdx","previousGeneratedLine","aSources","REGEX_NEWLINE","isSourceNode","SourceNode","aLine","aColumn","aChunks","sourceContents","fromStringWithSourceMap","aGeneratedCode","aRelativePath","remainingLines","remainingLinesIndex","shiftNextLine","getNextLine","lastGeneratedLine","lastMapping","nextLine","addMappingWithCode","aChunk","prepend","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","walkSourceContents","toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","_picocolors","u","_colors","compose","pcWithForcedColor","getColors","fmt","highlight","initialPos","initialLineStart","initialCurLine","firstInvalidLoc","unterminated","isStringEnd","isAllowedNumericSeparatorSibling","strictNumericEscape","invalidEscapeSequence","bailOnError","isAllowedSibling","invalidDigit","unexpectedNumericSeparator","numericSeparatorInEscapeSequence","invalidCodePoint","_identifier","_keyword","capitalized","punctuator","tokenize","colorize","highlightTokens","_jsTokens","_helperValidatorIdentifier","sometimesKeywords","BRACKET","JSX_TAG","getTokenType","jsTokens","chalkWithForcedColor","isNode","_node$type","_isNode","deprecationWarning","_is","_deprecationWarning","flattened","removeTypeDuplicates","_removeTypeDuplicates","_lowercase","_uppercase","NODE_FIELDS","_arguments","_static","ClassAccessorProperty","_await","ImportExpression","IndexedAccessType","ModuleExpression","NumberLiteralTypeAnnotation","OptionalIndexedAccessType","regExpLiteral","StringLiteralTypeAnnotation","TSEnumBody","TSInstantiationExpression","TSSatisfiesExpression","TSTemplateLiteralType","_validate","utils","validateInternal","isJSXText","cleanJSXElementLiteralChild","isJSXExpressionContainer","isJSXEmptyExpression","_cleanJSXElementLiteralChild","typeAnnotations","tsUnionType","_cloneNode","deep","withoutLoc","cloneNodeInternal","hasOwn","cloneIfNode","commentsCache","cloneIfNodeOrArray","field","maybeCloneComments","_addComments","inherit","_inherit","inheritInnerComments","_inheritTrailingComments","_inheritLeadingComments","_inheritInnerComments","COMMENT_KEYS","IMPORTOREXPORTDECLARATION_TYPES","LOGICAL_OPERATORS","EQUALITY_BINARY_OPERATORS","COMPARISON_BINARY_OPERATORS","for","toBlock","_toBlock","gatherSequenceExpressions","declars","ensureLastUndefined","conditionalExpression","_getBindingIdentifiers","_productions","_toIdentifier","blockNodes","isValidIdentifier","_isValidIdentifier","_removePropertiesDeep","toKeyAlias","increment","MAX_SAFE_INTEGER","_gatherSequenceExpressions","newType","mustHaveId","valueToNode","booleanLiteral","nullLiteral","numerator","objectToString","isRegExp","arrayExpression","getPrototypeOf","isPlainObject","nodeKey","objectProperty","_helperStringParser","_utils","defineType","defineAliasedType","fields","arrayOf","assertNodeOrValueType","BABEL_TYPES_8_BREAKING","assertOneOf","ASSIGNMENT_OPERATORS","assertValueType","assertNodeType","BINARY_OPERATORS","inOp","oneOfNodeTypes","arrayOfType","validateArrayOfType","assertEach","each","functionCommon","functionTypeAnnotationCommon","functionDeclarationCommon","inherits","patternLikeCommon","nonComp","deprecatedAlias","normal","validator","UNARY_OPERATORS","UPDATE_OPERATORS","withoutInit","importAttributes","deprecated","validateOptional","validateType","sourced","sourceless","lval","phase","classMethodOrPropertyCommon","classMethodOrDeclareMethodCommon","access","assertShape","unterminatedCalled","readStringContents","assertOptionalChainStart","ModuleDeclaration","_core","defineInterfaceishType","isDeclareClass","validateOptionalType","_placeholders","_deprecatedAliases","DEPRECATED_ALIASES","PLACEHOLDERS","PLACEHOLDERS_ALIAS","Pattern","ALIAS_KEYS","PLACEHOLDERS_FLIPPED_ALIAS","bool","tSFunctionTypeAnnotationCommon","signatureDeclarationCommon","callConstructSignatureDeclaration","namedTypeElementCommon","tsKeywordTypes","fnOrCtrBase","unionOrIntersection","unaryOperator","TSTypeExpression","getType","validateChild","oneOfNodeOrValueTypes","oneOf","_current","shape","validateField","shapeOf","defined","_store$opts$inherits$","store","additional","typeNames","BUILDER_KEYS","NODE_PARENT_VALIDATIONS","childValidator","subkey","chainOf","validTypeOpts","validFieldKeys","_isReactComponent","_isCompatTag","_buildChildren","_assertNode","_exportNames","_createTypeAnnotationBasedOnTypeof","_createFlowUnionType","_createTSUnionType","_clone","_cloneDeep","_cloneDeepWithoutLoc","_cloneWithoutLoc","_addComment","_inheritsComments","_removeComments","_index3","_index4","_ensureBlock","_toBindingIdentifierName","_toComputedKey","_toExpression","_toKeyAlias","_toStatement","_valueToNode","_index5","_appendToMemberExpression","_inherits","_prependToMemberExpression","_removeProperties","_getAssignmentIdentifiers","_getOuterBindingIdentifiers","_getFunctionName","_traverse","_traverseFast","_shallowEqual","_isBinding","_isBlockScoped","_isImmutable","_isLet","_isNodesEquivalent","_isPlaceholderType","_isReferenced","_isScope","_isSpecifierDefault","_isType","_isValidES3Identifier","_isVar","_matchesPattern","_buildMatchMemberExpression","_index6","_toSequenceExpression","isReactComponent","buildChildren","nodesIn","generics","bases","typeGroups","getQualifiedName","baseType","INHERIT_KEYS","CLEAR_KEYS","CLEAR_KEYS_PLUS_COMMENTS","symbols","getOwnPropertySymbols","sym","isTSAnyKeyword","isTSBaseType","typeArgumentsKey","isTSTypeReference","existingTypeArguments","newBindingsOnly","isExportAllDeclaration","originalNode","getObjectMemberKey","traverseSimpleImpl","subNode","warnings","internal","stackTraceLimit","prepareStackTrace","stackTrace","shortStackTrace","captureShortStackTrace","lastNonEmptyLine","isFirstLine","isLastLine","isLastNonEmptyLine","trimmedLine","actual","expected","shallowEqual","isImportOrExportDeclaration","isPlaceholderType","BLOCK_SCOPED_SYMBOL","isNodesEquivalent","visitorKeys","val_a","val_b","placeholderType","targetType","isScopable","RESERVED_WORDS_ES3_ONLY","reserved","isIdentifierName","tagName","maybeNode","_NODE_PARENT_VALIDATI","_NODE_PARENT_VALIDATI2","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","getter","definition","nmd","__PERFORMANCE_PROFILE__","supportsUserTiming","performance","clearMarks","supportsPerformanceNow","markName","measure","withSyncPerfMeasurements","onComplete","AST_NODE_TYPES","PROGRAM","CALL_EXPRESSION","MEMBER_EXPRESSION","ARRAY_PATTERN","IDENTIFIER","NUMERIC_LITERAL","VARIABLE_DECLARATOR","checkNodeLocation","getFilteredHookASTNodes","potentialReactHookASTNode","potentialHooksFound","nodesAssociatedWithReactHookASTNode","hookNode","isReactFunction","isBuiltInHookThatReturnsTuple","nodeContainsHookVariableName","targetHookNode","targetHookName","filterMemberNodesOfTargetHook","getHookName","hook","originalSourceAST","originalSourceCode","originalSourceLineNumber","originalSourceColumnNumber","hooksFromAST","sourceAST","nodePathInit","isHook","isPotentialHookDeclaration","getPotentialHookDeclarationsFromAST","matchingNodes","nodeLocationCheck","hookDeclarationCheck","isConfirmedHookDeclaration","originalHook","hookVariableName","isCustomHook","getHookVariableName","hookPath","filterMemberWithHookVariableName","getHookNameFromNode","nodeInit","isPascalCaseNameSpace","sourceMapsAreAppliedToErrors","getHookSourceLocationKey","charToInteger","chars","decoded","segmentify","hasContinuationBit","shouldNegate","binSearch","compare","step","firstElementIndex","comparison","direction","compareLinePositions","startIndex","getLineNumberFromLine","endIndex","compareColumnPositions","getColumnNumberFromEntry","entry","getLineNumberFromEntry","REACT_SOURCES_EXTENSION_KEY","FB_SOURCES_EXTENSION_KEY","normalizeSourcePath","sourceInput","SourceMapMetadataConsumer","sourcemap","_decodedHookMapCache","_metadataBySource","hookNameFor","hookMap","_getHookMapForSource","foundLine","foundEntry","foundNameIndex","hookNameIndex","getHookNameIndexFromEntry","foundName","getHookNameForLocation","hasHookMap","_getMetadataBySource","_getMetadataObjectsBySourceNames","indexSourceMap","metadataMap","basicMap","updateMap","sourceIndex","fbMetadataArray","fbMetadata","reactMetadata","metadataBySource","normalized","encodedHookMap","decodeHookMap","sourceMapJSON","sourceMapConsumer","targetColumnNumber","stopIndex","currentLine","currentColumn","decodedMappings","lineMappings","nearestEntry","runtimeURLToMetadataCache","LRU","originalURLToMetadataCache","originalSourceURL","parseSourceAndMetadata","hooksList","locationKeyToHookSourceAndMetadata","locationKeyToHookParsedMetadata","hookSourceAndMetadata","locationKey","hookParsedMetadata","metadataConsumer","initializeHookParsedMetadata","runtimeSourceURL","runtimeMetadata","parseSourceMaps","hookSource","runtimeSourceCode","testErrorStack","ErrorStackParser","SOURCE_STACK_FRAME_LINE_NUMBER","areSourceMapsAppliedToErrors","sourceMetadata","parseSourceAST","findHookNames","withAsyncPerfMeasurements","purgeCachedMetadata"],"sourceRoot":""}